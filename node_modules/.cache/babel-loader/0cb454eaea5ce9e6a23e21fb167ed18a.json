{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Map\\\\filtersDefaultTest.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { AppContext } from \"../../AppContext\"; /// test filters\n\nlet defaultTypeName = [\"typeName\", [\"OIL AND GAS\", \"OIL\"]];\nlet defaultStatusName = [\"statusName\", [\"ACTIVE\", \"PERMIT\"]];\nlet defaultTypeName2 = [\"typeName\", [\"OIL\", \"GAS\"]];\nlet defaultStatusName2 = [\"statusName\", [\"PERMIT\"]];\n;\nlet defaultTypeName3 = [\"typeName\", [\"GAS\"]];\nlet defaultStatusName3 = [\"statusName\", [\"ACTIVE\"]];\nlet defaultFiltersWellStatus = [\"filterWellStatus\", [\"match\", [\"get\", \"wellStatus\"], defaultStatusName[1], true, false]];\nlet defaultFiltersWellType = [\"filterWellType\", [\"match\", [\"get\", \"wellType\"], defaultTypeName[1], true, false]];\nlet defaultFiltersWellStatus2 = [\"filterWellStatus\", [\"match\", [\"get\", \"wellStatus\"], defaultStatusName2[1], true, false]];\nlet defaultFiltersWellType2 = [\"filterWellType\", [\"match\", [\"get\", \"wellType\"], defaultTypeName2[1], true, false]];\nlet defaultFiltersWellStatus3 = [\"filterWellStatus\", [\"match\", [\"get\", \"wellStatus\"], defaultStatusName3[1], true, false]];\nlet defaultFiltersWellType3 = [\"filterWellType\", [\"match\", [\"get\", \"wellType\"], defaultTypeName3[1], true, false]];\nconst test1 = [{\n  name: \"Test 1 Default Filters\",\n  filters: [defaultFiltersWellStatus, defaultFiltersWellType],\n  types: [defaultTypeName, defaultStatusName],\n  on: false,\n  default: false\n}];\nconst test2 = [{\n  name: \"Test 2  Default Filters\",\n  filters: [defaultFiltersWellStatus2, defaultFiltersWellType2],\n  types: [defaultTypeName2, defaultStatusName2],\n  on: false,\n  default: false\n}];\nconst test3 = [{\n  name: \"Test 3 Default Filters\",\n  filters: [defaultFiltersWellStatus3, defaultFiltersWellType3],\n  types: [defaultTypeName3, defaultStatusName3],\n  on: false,\n  default: false\n}]; //// end of test filters\n\nexport default function DefaultFiltersTest() {\n  const [stateApp, setStateApp] = useContext(AppContext);\n  useEffect(() => {\n    // funtion to set the filters up\n    const setFilters = () => {\n      // local none state variables\n      let filters = [];\n      let updateFilters;\n      let filtersOnOffObj = {};\n      let filtersDefaultsOnOffObj = {};\n      let saved;\n\n      if (stateApp.filtersMockDb) {\n        // stateApp.filtersMockDb is where we store new filtes array modified\n        // in filterDefault file updates delete & updated\n        saved = stateApp.filtersMockDb;\n      }\n\n      if (stateApp.filtersAdd) {\n        //when a new filter combo is saved stateApp.filtersAdd is where its stored\n        // we add it to the filters array \n        let newFilter = stateApp.filtersAdd;\n        filters.push(newFilter);\n      } // check if save exsist other wise add test filters\n\n\n      saved && saved.length > 0 ? updateFilters = saved : filters.push(test1, test2, test3); // loop below takes the lenght of the filters array and creates \n      // 2 object with the name and false value to creat the state in \n      // filter default for the filter list display checkbox and switch\n\n      for (let index = 0; index < filters.length; index++) {\n        const element = filters[index];\n        let formatElement = element[0].name.split(\" \").join(\"\");\n        filtersOnOffObj[formatElement] = false;\n        filtersDefaultsOnOffObj[formatElement] = false;\n      } // condition to see what to pass as an update to the filters in state nav context\n\n\n      if (updateFilters && updateFilters.length > 0) {\n        setStateApp(state => ({ ...state,\n          filters: updateFilters,\n          filtersOnOff: filtersOnOffObj,\n          filtersDefaultOnoff: filtersDefaultsOnOffObj\n        }));\n      } else {\n        setStateApp(state => ({ ...state,\n          filters: filters,\n          filtersOnOff: filtersOnOffObj,\n          filtersDefaultOnoff: filtersDefaultsOnOffObj\n        }));\n      }\n    }; // flag to run the function \n\n\n    if (stateApp.user.authToken) {\n      setFilters();\n    } // Do not include setStateApp in the dependency array it will break\n\n  }, [stateApp.filtersAdd, stateApp.filtersMockDb, stateApp.user.authToken]);\n  return (\n    /*#__PURE__*/\n    /// empty div rendered on the map so it triggers the useEffect above\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 3\n      }\n    })\n  );\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Map/filtersDefaultTest.js"],"names":["React","useContext","useEffect","AppContext","defaultTypeName","defaultStatusName","defaultTypeName2","defaultStatusName2","defaultTypeName3","defaultStatusName3","defaultFiltersWellStatus","defaultFiltersWellType","defaultFiltersWellStatus2","defaultFiltersWellType2","defaultFiltersWellStatus3","defaultFiltersWellType3","test1","name","filters","types","on","default","test2","test3","DefaultFiltersTest","stateApp","setStateApp","setFilters","updateFilters","filtersOnOffObj","filtersDefaultsOnOffObj","saved","filtersMockDb","filtersAdd","newFilter","push","length","index","element","formatElement","split","join","state","filtersOnOff","filtersDefaultOnoff","user","authToken"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react';\r\nimport { AppContext } from \"../../AppContext\";\r\n/// test filters\r\nlet defaultTypeName = [\"typeName\",[\"OIL AND GAS\", \"OIL\"]];\r\nlet defaultStatusName = [\"statusName\",[\"ACTIVE\", \"PERMIT\"]];\r\nlet defaultTypeName2 = [\"typeName\",[\"OIL\", \"GAS\"]];\r\nlet defaultStatusName2 = [\"statusName\",[\"PERMIT\"]];;\r\nlet defaultTypeName3 = [\"typeName\",[\"GAS\"]];\r\nlet defaultStatusName3 = [\"statusName\",[\"ACTIVE\"]];\r\n\r\nlet defaultFiltersWellStatus = [\"filterWellStatus\",[\r\n  \"match\",\r\n  [\"get\", \"wellStatus\"],\r\n  defaultStatusName[1],\r\n  true,\r\n  false,\r\n]]\r\nlet defaultFiltersWellType = [\"filterWellType\",[\r\n  \"match\",\r\n  [\"get\", \"wellType\"],\r\n  defaultTypeName[1],\r\n  true,\r\n  false,\r\n]];\r\nlet defaultFiltersWellStatus2 = [\"filterWellStatus\",[\r\n  \"match\",\r\n  [\"get\", \"wellStatus\"],\r\n  defaultStatusName2[1],\r\n  true,\r\n  false,\r\n]]\r\n  let defaultFiltersWellType2 = [\"filterWellType\",[\r\n    \"match\",\r\n    [\"get\", \"wellType\"],\r\n    defaultTypeName2[1],\r\n    true,\r\n    false,\r\n  ]];\r\n  let defaultFiltersWellStatus3 = [\"filterWellStatus\",[\r\n    \"match\",\r\n    [\"get\", \"wellStatus\"],\r\n    defaultStatusName3[1],\r\n    true,\r\n    false,\r\n  ]]\r\n  let defaultFiltersWellType3 = [\"filterWellType\",[\r\n    \"match\",\r\n    [\"get\", \"wellType\"],\r\n    defaultTypeName3[1],\r\n    true,\r\n    false,\r\n  ]];\r\nconst test1 = [\r\n  {\r\n    name: \"Test 1 Default Filters\",\r\n    filters: [defaultFiltersWellStatus, defaultFiltersWellType],\r\n    types:[defaultTypeName, defaultStatusName],\r\n    on: false,\r\n    default: false,\r\n  },\r\n];\r\n\r\nconst test2 = [\r\n    {\r\n      name: \"Test 2  Default Filters\",\r\n      filters: [defaultFiltersWellStatus2, defaultFiltersWellType2],\r\n      types:[defaultTypeName2, defaultStatusName2],\r\n      on: false,\r\n      default: false,\r\n    },\r\n];\r\n\r\nconst test3 = [\r\n    {\r\n      name: \"Test 3 Default Filters\",\r\n      filters: [defaultFiltersWellStatus3, defaultFiltersWellType3],\r\n      types:[defaultTypeName3, defaultStatusName3],\r\n      on: false,\r\n      default: false,\r\n    },\r\n];\r\n//// end of test filters\r\nexport default function DefaultFiltersTest() {\r\n    const [stateApp, setStateApp] = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n      // funtion to set the filters up\r\n      const setFilters = () => {\r\n          // local none state variables\r\n          let filters = [];\r\n          let updateFilters;\r\n          let filtersOnOffObj= {};\r\n          let filtersDefaultsOnOffObj = {};\r\n          let saved;\r\n          if (stateApp.filtersMockDb) {\r\n            // stateApp.filtersMockDb is where we store new filtes array modified\r\n            // in filterDefault file updates delete & updated\r\n            saved = stateApp.filtersMockDb;\r\n          }\r\n          if (stateApp.filtersAdd) {\r\n            //when a new filter combo is saved stateApp.filtersAdd is where its stored\r\n            // we add it to the filters array \r\n            let newFilter = stateApp.filtersAdd;\r\n            filters.push(newFilter)\r\n          }\r\n          // check if save exsist other wise add test filters\r\n          saved && saved.length > 0 ? updateFilters = saved : filters.push(test1,test2,test3);\r\n          // loop below takes the lenght of the filters array and creates \r\n          // 2 object with the name and false value to creat the state in \r\n          // filter default for the filter list display checkbox and switch\r\n          for (let index = 0; index < filters.length; index++) {\r\n            const element = filters[index];\r\n            let formatElement = element[0].name.split(\" \").join(\"\")\r\n            filtersOnOffObj[formatElement] =  false;\r\n            filtersDefaultsOnOffObj[formatElement] =  false;\r\n          }\r\n          // condition to see what to pass as an update to the filters in state nav context\r\n          if (updateFilters && updateFilters.length > 0) {\r\n            setStateApp((state) => ({\r\n              ...state,\r\n              filters:  updateFilters ,\r\n              filtersOnOff: filtersOnOffObj,\r\n              filtersDefaultOnoff: filtersDefaultsOnOffObj\r\n              }))\r\n          } else {\r\n            setStateApp((state) => ({\r\n              ...state,\r\n              filters:  filters ,\r\n              filtersOnOff: filtersOnOffObj,\r\n              filtersDefaultOnoff: filtersDefaultsOnOffObj\r\n              }))\r\n          }\r\n      }\r\n      // flag to run the function \r\n      if (stateApp.user.authToken) {\r\n        setFilters()\r\n      }\r\n      // Do not include setStateApp in the dependency array it will break\r\n    },[stateApp.filtersAdd, stateApp.filtersMockDb, stateApp.user.authToken])\r\n\r\n  return (\r\n    /// empty div rendered on the map so it triggers the useEffect above\r\n  <div></div>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}