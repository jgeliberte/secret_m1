{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterFromGeo.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavigationContext } from \"../NavigationContext\";\nimport { AppContext } from \"../../../AppContext\";\nimport FilterStateName from \"./FilterStateName\";\nimport FilterCountyName from \"./FilterCountyName\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FilterGrid from \"./FilterGrid12345\";\nimport FilterFromDrawing from \"./FilterFromDrawing\";\nimport FilterBasin from \"./FilterBasin\";\nimport FilterAOI from \"./FilterAOI\";\nimport FilterParcel from \"./FilterParcel\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\nimport { WELLSMINMAXLATLONG } from \"../../../graphQL/useQueryWellsMinMaxLatLong\";\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\nexport default function FilterFromGeo() {\n  const classes = useStyles();\n  const [, setStateApp] = useContext(AppContext);\n  const [stateNav, setStateNav] = useContext(NavigationContext);\n  const [getWellsMinMaxLatLong, {\n    data\n  }] = useLazyQuery(WELLSMINMAXLATLONG);\n  useEffect(() => {\n    //// Geo Filter Builder ////\n    if (stateNav.stateName || stateNav.countyName || stateNav.GrId1 || stateNav.GrId2 || stateNav.GrId3 || stateNav.GrId4 || stateNav.GrId5) {\n      let filter = [\"all\"];\n      if (stateNav.stateName) filter.push([\"match\", [\"get\", \"state\"], stateNav.stateName, true, false]);\n      if (stateNav.countyName) filter.push([\"match\", [\"get\", \"county\"], stateNav.countyName, true, false]);\n      if (stateNav.GrId1) filter.push([\"match\", [\"get\", \"grid1\"], stateNav.GrId1, true, false]);\n      if (stateNav.GrId2) filter.push([\"match\", [\"get\", \"grid2\"], stateNav.GrId2, true, false]);\n      if (stateNav.GrId3) filter.push([\"match\", [\"get\", \"grid3\"], stateNav.GrId3, true, false]);\n      if (stateNav.GrId4) filter.push([\"match\", [\"get\", \"grid4\"], stateNav.GrId4, true, false]);\n      if (stateNav.GrId5) filter.push([\"match\", [\"get\", \"grid5\"], stateNav.GrId5, true, false]);\n      setStateNav(stateNav => ({ ...stateNav,\n        filterGeography: filter\n      }));\n    } else {\n      setStateNav(stateNav => ({ ...stateNav,\n        filterGeography: null\n      }));\n    }\n  }, [stateNav.stateName, stateNav.countyName, stateNav.GrId1, stateNav.GrId2, stateNav.GrId3, stateNav.GrId4, stateNav.GrId5]);\n  useEffect(() => {\n    //// Geo Filter Fit Bounds ////\n    if (stateNav.stateName || stateNav.countyName || stateNav.GrId1 || stateNav.GrId2 || stateNav.GrId3 || stateNav.GrId4 || stateNav.GrId5) {\n      let whereFields = {};\n      if (stateNav.stateName) whereFields.State = stateNav.stateName;\n      if (stateNav.countyName) whereFields.County = stateNav.countyName;\n      if (stateNav.GrId1) whereFields.GrId1 = stateNav.GrId1;\n      if (stateNav.GrId2) whereFields.GrId2 = stateNav.GrId2;\n      if (stateNav.GrId3) whereFields.GrId3 = stateNav.GrId3;\n      if (stateNav.GrId4) whereFields.GrId4 = stateNav.GrId4;\n      if (stateNav.GrId5) whereFields.GrId5 = stateNav.GrId5; ///////////Getting Geo Filters Bounds//////////\n\n      getWellsMinMaxLatLong({\n        variables: {\n          whereFields\n        }\n      });\n    } else {\n      setStateApp(stateApp => ({ ...stateApp,\n        fitBounds: null\n      }));\n    }\n  }, [stateNav.stateName, stateNav.countyName, stateNav.GrId1, stateNav.GrId2, stateNav.GrId3, stateNav.GrId4, stateNav.GrId5]);\n  useEffect(() => {\n    if (data) {\n      if (data.wellsMinMaxLatLong && data.wellsMinMaxLatLong.length > 0 && data.wellsMinMaxLatLong[0].maxLat && data.wellsMinMaxLatLong[0].minLat && data.wellsMinMaxLatLong[0].maxLong && data.wellsMinMaxLatLong[0].minLong) {\n        ///////////Setting Geo Filters Bounds////////\n        setStateApp(stateApp => ({ ...stateApp,\n          fitBounds: data.wellsMinMaxLatLong[0]\n        }));\n      } else {\n        setStateApp(stateApp => ({ ...stateApp,\n          fitBounds: null\n        }));\n      }\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 2,\n    style: {\n      padding: \"8px\",\n      width: \"100%\",\n      margin: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterFromDrawing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterAOI, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterParcel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterBasin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterStateName, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterCountyName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  })), stateNav.stateName === \"TX\" && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FilterGrid, {\n    gridNumber: 1,\n    label: \"Survey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterGrid, {\n    gridNumber: 2,\n    label: stateNav.stateName === \"TX\" ? \"Block\" : \"Township\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterGrid, {\n    gridNumber: 3,\n    label: stateNav.stateName === \"TX\" ? \"Section\" : \"Range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterGrid, {\n    gridNumber: 4,\n    label: stateNav.stateName === \"TX\" ? \"Abstract\" : \"Section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  })), stateNav.stateName === \"TX\" && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FilterGrid, {\n    gridNumber: 5,\n    label: \"Alternate Survey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterFromGeo.js"],"names":["React","useState","useContext","useEffect","makeStyles","NavigationContext","AppContext","FilterStateName","FilterCountyName","Grid","FilterGrid","FilterFromDrawing","FilterBasin","FilterAOI","FilterParcel","useLazyQuery","WELLSMINMAXLATLONG","useStyles","theme","gridItem","display","flexDirection","FilterFromGeo","classes","setStateApp","stateNav","setStateNav","getWellsMinMaxLatLong","data","stateName","countyName","GrId1","GrId2","GrId3","GrId4","GrId5","filter","push","filterGeography","whereFields","State","County","variables","stateApp","fitBounds","wellsMinMaxLatLong","length","maxLat","minLat","maxLong","minLong","padding","width","margin"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport FilterStateName from \"./FilterStateName\";\r\nimport FilterCountyName from \"./FilterCountyName\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FilterGrid from \"./FilterGrid12345\";\r\nimport FilterFromDrawing from \"./FilterFromDrawing\";\r\nimport FilterBasin from \"./FilterBasin\";\r\nimport FilterAOI from \"./FilterAOI\";\r\nimport FilterParcel from \"./FilterParcel\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { WELLSMINMAXLATLONG } from \"../../../graphQL/useQueryWellsMinMaxLatLong\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nexport default function FilterFromGeo() {\r\n  const classes = useStyles();\r\n  const [, setStateApp] = useContext(AppContext);\r\n  const [stateNav, setStateNav] = useContext(NavigationContext);\r\n  const [getWellsMinMaxLatLong, { data }] = useLazyQuery(WELLSMINMAXLATLONG);\r\n\r\n  useEffect(() => {\r\n    //// Geo Filter Builder ////\r\n    if (\r\n      stateNav.stateName ||\r\n      stateNav.countyName ||\r\n      stateNav.GrId1 ||\r\n      stateNav.GrId2 ||\r\n      stateNav.GrId3 ||\r\n      stateNav.GrId4 ||\r\n      stateNav.GrId5\r\n    ) {\r\n      let filter = [\"all\"];\r\n\r\n      if (stateNav.stateName)\r\n        filter.push([\r\n          \"match\",\r\n          [\"get\", \"state\"],\r\n          stateNav.stateName,\r\n          true,\r\n          false,\r\n        ]);\r\n\r\n      if (stateNav.countyName)\r\n        filter.push([\r\n          \"match\",\r\n          [\"get\", \"county\"],\r\n          stateNav.countyName,\r\n          true,\r\n          false,\r\n        ]);\r\n\r\n      if (stateNav.GrId1)\r\n        filter.push([\"match\", [\"get\", \"grid1\"], stateNav.GrId1, true, false]);\r\n\r\n      if (stateNav.GrId2)\r\n        filter.push([\"match\", [\"get\", \"grid2\"], stateNav.GrId2, true, false]);\r\n\r\n      if (stateNav.GrId3)\r\n        filter.push([\"match\", [\"get\", \"grid3\"], stateNav.GrId3, true, false]);\r\n\r\n      if (stateNav.GrId4)\r\n        filter.push([\"match\", [\"get\", \"grid4\"], stateNav.GrId4, true, false]);\r\n\r\n      if (stateNav.GrId5)\r\n        filter.push([\"match\", [\"get\", \"grid5\"], stateNav.GrId5, true, false]);\r\n\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        filterGeography: filter,\r\n      }));\r\n    } else {\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        filterGeography: null,\r\n      }));\r\n    }\r\n  }, [\r\n    stateNav.stateName,\r\n    stateNav.countyName,\r\n    stateNav.GrId1,\r\n    stateNav.GrId2,\r\n    stateNav.GrId3,\r\n    stateNav.GrId4,\r\n    stateNav.GrId5,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    //// Geo Filter Fit Bounds ////\r\n    if (\r\n      stateNav.stateName ||\r\n      stateNav.countyName ||\r\n      stateNav.GrId1 ||\r\n      stateNav.GrId2 ||\r\n      stateNav.GrId3 ||\r\n      stateNav.GrId4 ||\r\n      stateNav.GrId5\r\n    ) {\r\n      let whereFields = {};\r\n\r\n      if (stateNav.stateName) whereFields.State = stateNav.stateName;\r\n\r\n      if (stateNav.countyName) whereFields.County = stateNav.countyName;\r\n\r\n      if (stateNav.GrId1) whereFields.GrId1 = stateNav.GrId1;\r\n\r\n      if (stateNav.GrId2) whereFields.GrId2 = stateNav.GrId2;\r\n\r\n      if (stateNav.GrId3) whereFields.GrId3 = stateNav.GrId3;\r\n\r\n      if (stateNav.GrId4) whereFields.GrId4 = stateNav.GrId4;\r\n\r\n      if (stateNav.GrId5) whereFields.GrId5 = stateNav.GrId5;\r\n\r\n      ///////////Getting Geo Filters Bounds//////////\r\n      getWellsMinMaxLatLong({\r\n        variables: {\r\n          whereFields,\r\n        },\r\n      });\r\n    } else {\r\n      setStateApp((stateApp) => ({\r\n        ...stateApp,\r\n        fitBounds: null,\r\n      }));\r\n    }\r\n  }, [\r\n    stateNav.stateName,\r\n    stateNav.countyName,\r\n    stateNav.GrId1,\r\n    stateNav.GrId2,\r\n    stateNav.GrId3,\r\n    stateNav.GrId4,\r\n    stateNav.GrId5,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (\r\n        data.wellsMinMaxLatLong &&\r\n        data.wellsMinMaxLatLong.length > 0 &&\r\n        data.wellsMinMaxLatLong[0].maxLat &&\r\n        data.wellsMinMaxLatLong[0].minLat &&\r\n        data.wellsMinMaxLatLong[0].maxLong &&\r\n        data.wellsMinMaxLatLong[0].minLong\r\n      ) {\r\n        ///////////Setting Geo Filters Bounds////////\r\n        setStateApp((stateApp) => ({\r\n          ...stateApp,\r\n          fitBounds: data.wellsMinMaxLatLong[0],\r\n        }));\r\n      } else {\r\n        setStateApp((stateApp) => ({\r\n          ...stateApp,\r\n          fitBounds: null,\r\n        }));\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      spacing={2}\r\n      style={{ padding: \"8px\", width: \"100%\", margin: \"0\" }}\r\n    >\r\n      <Grid item sm={12}>\r\n        <FilterFromDrawing />\r\n      </Grid>\r\n      <Grid item sm={12} className={classes.gridItem}>\r\n        <FilterAOI />\r\n      </Grid>\r\n      <Grid item sm={12} className={classes.gridItem}>\r\n        <FilterParcel />\r\n      </Grid>\r\n      <Grid item sm={12} className={classes.gridItem}>\r\n        <FilterBasin />\r\n      </Grid>\r\n      <Grid item sm={12} className={classes.gridItem}>\r\n        <FilterStateName style={{ margin: 0 }} />\r\n      </Grid>\r\n      <Grid item sm={12} className={classes.gridItem}>\r\n        <FilterCountyName />\r\n      </Grid>\r\n      {stateNav.stateName === \"TX\" && (\r\n        <Grid item sm={12} className={classes.gridItem}>\r\n          <FilterGrid gridNumber={1} label=\"Survey\" />\r\n        </Grid>\r\n      )}\r\n      <Grid item sm={12} className={classes.gridItem}>\r\n        <FilterGrid\r\n          gridNumber={2}\r\n          label={stateNav.stateName === \"TX\" ? \"Block\" : \"Township\"}\r\n        />\r\n      </Grid>\r\n      <Grid item sm={12} className={classes.gridItem}>\r\n        <FilterGrid\r\n          gridNumber={3}\r\n          label={stateNav.stateName === \"TX\" ? \"Section\" : \"Range\"}\r\n        />\r\n      </Grid>\r\n      <Grid item sm={12} className={classes.gridItem}>\r\n        <FilterGrid\r\n          gridNumber={4}\r\n          label={stateNav.stateName === \"TX\" ? \"Abstract\" : \"Section\"}\r\n        />\r\n      </Grid>\r\n      {stateNav.stateName === \"TX\" && (\r\n        <Grid item sm={12} className={classes.gridItem}>\r\n          <FilterGrid gridNumber={5} label=\"Alternate Survey\" />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}