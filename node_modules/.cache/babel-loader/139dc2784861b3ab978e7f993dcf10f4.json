{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterOwnerAppraisalValue.js\";\nimport React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { NavigationContext } from \"../NavigationContext\"; // import FilterOwnerCount from \"./FilterOwnerCount\";\n// import FilterOwnerInterestSum from \"./FilterOwnerInterestSum\";\n\nconst useStyles = makeStyles(theme => ({}));\nconst interestList = [\"ROYALTY INTEREST\", \"OVERRIDE ROYALTY\", \"WORKING INTEREST\", \"PRODUCTION PAYMENT\"];\nconst ownerTypesList = [\"RELIGIOUS INSTITUTIONS\", \"GOVERNMENTAL BODIES\", \"NON PROFITS\", \"TRUSTS\", \"CORPORATIONS\", \"EDUCATIONAL INSTITUTIONS\", \"INDIVIDUALS\", \"UNKNOWN\"];\nconst appraisalList = [\"$0 - $1000\", \"$1000 - $10,000\", \"$10,000 - $25,000\", \"$25,000+\"];\nexport default function FilterOwnerAppraisalValue() {\n  const classes = useStyles();\n  const [stateNav, setStateNav] = useContext(NavigationContext);\n  const [appraisalName, setAppraisalName] = useState(stateNav.appraisalName ? stateNav.appraisalName : []);\n  const [appraisals, setAppraisals] = useState(appraisalList);\n\n  const setFilterAppraisal = appraisalName => {\n    let filter;\n    let filters = [];\n    let check;\n\n    if (appraisalName) {\n      check = appraisalName.map(val => val);\n      check.forEach(option => {\n        if (option === \"$0 - $1000\") {\n          filters.push([\"get\", \"ownerAppraisalLess1k\"]);\n        }\n\n        if (option === \"$1000 - $10,000\") {\n          filters.push([\"get\", \"ownerAppraisal1to10k\"]);\n        }\n\n        if (option === \"$10,000 - $25,000\") {\n          filters.push([\"get\", \"ownerAppraisal10to25k\"]);\n        }\n\n        if (option === \"$25,000+\") {\n          filters.push([\"get\", \"ownerAppraisalOver25k\"]);\n        }\n      });\n\n      if (filters && filters.length > 0) {\n        filters.unshift(\"any\");\n        filter = filters;\n        setStateNav(stateNav => ({ ...stateNav,\n          filterOwnerAppraisals: filter\n        }));\n      } else {\n        filter = null;\n        setStateNav(stateNav => ({ ...stateNav,\n          filterOwnerAppraisals: filter\n        }));\n      }\n    }\n  };\n\n  const handleChangeAppraisal = event => {\n    setAppraisalName(event);\n    setFilterAppraisal(event);\n    setStateNav(stateNav => ({ ...stateNav,\n      appraisalName: event\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    ChipProps: {\n      color: \"secondary\"\n    },\n    defaultValue: appraisalName,\n    onChange: (event, newValue) => {\n      handleChangeAppraisal(newValue);\n    },\n    multiple: true,\n    options: appraisals.map(option => option),\n    renderInput: params => /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      label: \"Owner Tax Appraisals\",\n      placeholder: \"\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }))),\n    disableListWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterOwnerAppraisalValue.js"],"names":["React","useState","useContext","makeStyles","Autocomplete","TextField","NavigationContext","useStyles","theme","interestList","ownerTypesList","appraisalList","FilterOwnerAppraisalValue","classes","stateNav","setStateNav","appraisalName","setAppraisalName","appraisals","setAppraisals","setFilterAppraisal","filter","filters","check","map","val","forEach","option","push","length","unshift","filterOwnerAppraisals","handleChangeAppraisal","event","color","newValue","params"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\n// import FilterOwnerCount from \"./FilterOwnerCount\";\r\n// import FilterOwnerInterestSum from \"./FilterOwnerInterestSum\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst interestList = [\r\n  \"ROYALTY INTEREST\",\r\n  \"OVERRIDE ROYALTY\",\r\n  \"WORKING INTEREST\",\r\n  \"PRODUCTION PAYMENT\",\r\n];\r\n\r\nconst ownerTypesList = [\r\n  \"RELIGIOUS INSTITUTIONS\",\r\n  \"GOVERNMENTAL BODIES\",\r\n  \"NON PROFITS\",\r\n  \"TRUSTS\",\r\n  \"CORPORATIONS\",\r\n  \"EDUCATIONAL INSTITUTIONS\",\r\n  \"INDIVIDUALS\",\r\n  \"UNKNOWN\",\r\n];\r\n\r\nconst appraisalList = [\r\n  \"$0 - $1000\",\r\n  \"$1000 - $10,000\",\r\n  \"$10,000 - $25,000\",\r\n  \"$25,000+\",\r\n];\r\n\r\nexport default function FilterOwnerAppraisalValue() {\r\n  const classes = useStyles();\r\n  const [stateNav, setStateNav] = useContext(NavigationContext);\r\n  const [appraisalName, setAppraisalName] = useState(\r\n    stateNav.appraisalName ? stateNav.appraisalName : []\r\n  );\r\n  const [appraisals, setAppraisals] = useState(appraisalList);\r\n\r\n  const setFilterAppraisal = (appraisalName) => {\r\n    let filter;\r\n    let filters = [];\r\n    let check;\r\n    if (appraisalName) {\r\n      check = appraisalName.map((val) => val);\r\n      check.forEach((option) => {\r\n        if (option === \"$0 - $1000\") {\r\n          filters.push([\"get\", \"ownerAppraisalLess1k\"]);\r\n        }\r\n        if (option === \"$1000 - $10,000\") {\r\n          filters.push([\"get\", \"ownerAppraisal1to10k\"]);\r\n        }\r\n        if (option === \"$10,000 - $25,000\") {\r\n          filters.push([\"get\", \"ownerAppraisal10to25k\"]);\r\n        }\r\n        if (option === \"$25,000+\") {\r\n          filters.push([\"get\", \"ownerAppraisalOver25k\"]);\r\n        }\r\n      });\r\n      if (filters && filters.length > 0) {\r\n        filters.unshift(\"any\");\r\n        filter = filters;\r\n        setStateNav((stateNav) => ({\r\n          ...stateNav,\r\n          filterOwnerAppraisals: filter,\r\n        }));\r\n      } else {\r\n        filter = null;\r\n        setStateNav((stateNav) => ({\r\n          ...stateNav,\r\n          filterOwnerAppraisals: filter,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChangeAppraisal = (event) => {\r\n    setAppraisalName(event);\r\n    setFilterAppraisal(event);\r\n    setStateNav((stateNav) => ({\r\n      ...stateNav,\r\n      appraisalName: event,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Autocomplete\r\n      ChipProps={{ color: \"secondary\" }}\r\n      defaultValue={appraisalName}\r\n      onChange={(event, newValue) => {\r\n        handleChangeAppraisal(newValue);\r\n      }}\r\n      multiple\r\n      options={appraisals.map((option) => option)}\r\n      renderInput={(params) => (\r\n        <form autoComplete=\"off\">\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"Owner Tax Appraisals\"\r\n            placeholder=\"\"\r\n            fullWidth={true}\r\n          />\r\n        </form>\r\n      )}\r\n      disableListWrap\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}