{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterOwnerCount.js\";\nimport React, { useState, useContext, useCallback, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport NumberFormat from \"react-number-format\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NavigationContext } from \"../NavigationContext\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormLabel } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OwnershipIcon from \"../../Shared/svgIcons/ownership\";\nconst useStyles = makeStyles({\n  divBordersMinMax: {\n    display: \"flow-root\",\n    padding: \"3.5px 15px 5.5px 15px\",\n    border: \"1px solid #C4C4C4\",\n    borderRadius: \"4px\",\n    \"&:hover\": {\n      border: \"1px solid black\"\n    }\n  },\n  divBordersSwitch: {\n    textAlign: \"center\",\n    padding: \"3px 15px\",\n    border: \"1px solid #C4C4C4\",\n    borderRadius: \"4px\",\n    \"&:hover\": {\n      border: \"1px solid black\"\n    }\n  },\n  input: {\n    marginLeft: \"30px\",\n    width: \"160px\",\n    float: \"right\",\n    \"& input\": {\n      color: \"#17AADD\"\n    }\n  },\n  inputLabel: {\n    position: \"relative\",\n    top: \"11.5px\"\n  },\n  IconButton: {\n    marginRight: \"10px\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      cursor: \"context-menu\"\n    }\n  },\n  ownersToggle: {\n    // marginLeft: \"20px\",\n    marginRight: \"50px\"\n  }\n});\nexport default function FilterOwnerCount() {\n  const classes = useStyles();\n  const [stateNav, setStateNav] = useContext(NavigationContext);\n  const [valueMinDisplay, setValueMinDisplay] = useState(\"\");\n  const [valueMaxDisplay, setValueMaxDisplay] = useState(\"\");\n  const [noOwners, setNoOwners] = useState(false);\n  const [owners, setOwners] = useState(false);\n  const [ownerCountWell, setOwnerCountWell] = useState(stateNav.ownerCountWell ? stateNav.ownerCountWell : []);\n  const setFilter = useCallback(() => {\n    let filter;\n    let min = parseInt(valueMinDisplay);\n    let max = parseInt(valueMaxDisplay);\n\n    if (!min && !max) {\n      filter = null;\n    }\n\n    if (!min && max) {\n      filter = [\"all\", [\"<=\", [\"get\", \"ownerCount\"], max]];\n      console.log(\"add filter\", filter);\n    } else if (min && !max) {\n      filter = [\"all\", [\">=\", [\"get\", \"ownerCount\"], min]];\n      console.log(\"add filter\", filter);\n    } else if (min && max) {\n      filter = [\"all\", [\">=\", [\"get\", \"ownerCount\"], min], [\"<=\", [\"get\", \"ownerCount\"], max]];\n      console.log(\"add filter\", filter);\n    } else {\n      filter = null;\n    }\n\n    setStateNav(stateNav => ({ ...stateNav,\n      filterOwnerCount: filter\n    }));\n  }, [setStateNav, valueMaxDisplay, valueMinDisplay]);\n  useEffect(() => {\n    const recall = () => {\n      let checkStateNav = stateNav.filterOwnerCount;\n\n      if (!valueMinDisplay && !valueMaxDisplay) {\n        if (checkStateNav && checkStateNav.length === 3) {\n          const recallMin = checkStateNav[1][2];\n          const recallMax = checkStateNav[2][2];\n          setValueMinDisplay(recallMin);\n          setValueMaxDisplay(recallMax);\n        }\n      }\n\n      if (!valueMaxDisplay) {\n        if (checkStateNav && checkStateNav[1][0] === \"<=\") {\n          const recallMax = checkStateNav[1][2];\n          setValueMaxDisplay(recallMax);\n        }\n      }\n\n      if (!valueMinDisplay) {\n        if (checkStateNav && checkStateNav[1][0] === \">=\") {\n          const recallMin = checkStateNav[1][2];\n          setValueMinDisplay(recallMin);\n        }\n      }\n    };\n\n    recall();\n    return () => {\n      recall();\n    };\n  }, [stateNav, valueMaxDisplay, valueMinDisplay]);\n  useEffect(() => {\n    if (stateNav.ownerCountWell) {\n      setFilter();\n    }\n  }, [setFilter, stateNav.ownerCountWell]);\n\n  const handleChangeMin = event => {\n    setValueMinDisplay(event.target.value.replace(/,/g, \"\"));\n    setOwnerCountWell(event.target.id);\n    setStateNav(stateNav => ({ ...stateNav,\n      ownerCountWell: event.target.id\n    }));\n\n    if (event.target.value === \"\") {\n      setStateNav(stateNav => ({ ...stateNav,\n        filterOwnerCount: null\n      }));\n    }\n  };\n\n  const handleChangeMax = event => {\n    setValueMaxDisplay(event.target.value.replace(/,/g, \"\"));\n    setOwnerCountWell(event.target.id);\n    setStateNav(stateNav => ({ ...stateNav,\n      ownerCountWell: event.target.id\n    }));\n\n    if (event.target.value === \"\") {\n      setStateNav(stateNav => ({ ...stateNav,\n        filterOwnerCount: null\n      }));\n    }\n  };\n\n  const allowNumbersOnly = e => {\n    let code = e.which ? e.which : e.keyCode;\n\n    if (code > 31 && (code < 48 || code > 57)) {\n      e.preventDefault();\n    }\n  }; // const toggleNoOwners = () => {\n  //   setNoOwners((noOwners) => !noOwners);\n  // };\n\n\n  const toggleOwners = () => {\n    // setOwners((owners) => !owners);\n    if (stateNav.filterHasOwnerCount) setStateNav(stateNav => ({ ...stateNav,\n      filterHasOwnerCount: null\n    }));else setStateNav(stateNav => ({ ...stateNav,\n      filterHasOwnerCount: [\"any\", [\"==\", [\"get\", \"hasOwner\"], true]]\n    }));\n  }; // useEffect(() => {\n  //   let filter;\n  //   if (noOwners) {\n  //     filter = [\"any\", [\"==\", [\"get\", \"hasOwner\"], false]];\n  //   } else {\n  //     filter = null;\n  //   }\n  //   setStateNav((stateNav) => ({\n  //     ...stateNav,\n  //     filterNoOwnerCount: filter,\n  //   }));\n  // }, [noOwners, setStateNav]);\n  // useEffect(() => {\n  //   let filter;\n  //   if (owners) {\n  //     filter = [\"any\", [\"==\", [\"get\", \"hasOwner\"], true]];\n  //   } else {\n  //     filter = null;\n  //   }\n  //   setStateNav((stateNav) => ({\n  //     ...stateNav,\n  //     filterHasOwnerCount: filter,\n  //   }));\n  // }, [noOwners, owners, setStateNav]);\n  // useEffect(() => {\n  //   if (stateNav.filterHasOwnerCount && stateNav.filterHasOwnerCount.length > 1) {\n  //     setOwners(true);\n  //   }\n  // }, [stateNav.filterHasOwnerCount]);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divBordersMinMax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    className: classes.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, \"Owner Count\"), /*#__PURE__*/React.createElement(NumberFormat, {\n    id: \"OwnerCountMax\",\n    value: valueMaxDisplay,\n    onChange: handleChangeMax,\n    thousandSeparator: true,\n    customInput: TextField,\n    className: classes.input,\n    \"aria-labelledby\": \"range-number\",\n    type: \"text\",\n    label: \"Max\",\n    size: \"small\",\n    onKeyPress: e => allowNumbersOnly(e),\n    InputProps: {\n      inputProps: {\n        min: 0,\n        max: Number.MAX_SAFE_INTEGER\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(NumberFormat, {\n    id: \"OwnerCountMin\",\n    value: valueMinDisplay,\n    onChange: handleChangeMin,\n    thousandSeparator: true,\n    customInput: TextField,\n    className: classes.input,\n    \"aria-labelledby\": \"range-number\",\n    type: \"text\",\n    label: \"Min\",\n    size: \"small\",\n    onKeyPress: e => allowNumbersOnly(e),\n    InputProps: {\n      inputProps: {\n        min: 0,\n        max: Number.MAX_SAFE_INTEGER - 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divBordersSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.IconButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(OwnershipIcon, {\n    color: \"#808080\",\n    opacity: \"1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormLabel, {\n    style: {\n      verticalAlign: \"middle\",\n      paddingRight: \"60px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, \"Wells With Owners\"), /*#__PURE__*/React.createElement(Switch, {\n    className: classes.ownersToggle,\n    checked: stateNav.filterHasOwnerCount ? true : false,\n    onChange: toggleOwners,\n    color: \"secondary\",\n    name: \"checked\",\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterOwnerCount.js"],"names":["React","useState","useContext","useCallback","useEffect","makeStyles","TextField","NumberFormat","Switch","NavigationContext","Grid","FormLabel","IconButton","OwnershipIcon","useStyles","divBordersMinMax","display","padding","border","borderRadius","divBordersSwitch","textAlign","input","marginLeft","width","float","color","inputLabel","position","top","marginRight","backgroundColor","cursor","ownersToggle","FilterOwnerCount","classes","stateNav","setStateNav","valueMinDisplay","setValueMinDisplay","valueMaxDisplay","setValueMaxDisplay","noOwners","setNoOwners","owners","setOwners","ownerCountWell","setOwnerCountWell","setFilter","filter","min","parseInt","max","console","log","filterOwnerCount","recall","checkStateNav","length","recallMin","recallMax","handleChangeMin","event","target","value","replace","id","handleChangeMax","allowNumbersOnly","e","code","which","keyCode","preventDefault","toggleOwners","filterHasOwnerCount","inputProps","Number","MAX_SAFE_INTEGER","verticalAlign","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useCallback, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { FormLabel } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OwnershipIcon from \"../../Shared/svgIcons/ownership\";\r\n\r\nconst useStyles = makeStyles({\r\n  divBordersMinMax: {\r\n    display: \"flow-root\",\r\n    padding: \"3.5px 15px 5.5px 15px\",\r\n    border: \"1px solid #C4C4C4\",\r\n    borderRadius: \"4px\",\r\n    \"&:hover\": {\r\n      border: \"1px solid black\",\r\n    },\r\n  },\r\n  divBordersSwitch: {\r\n    textAlign: \"center\",\r\n    padding: \"3px 15px\",\r\n    border: \"1px solid #C4C4C4\",\r\n    borderRadius: \"4px\",\r\n    \"&:hover\": {\r\n      border: \"1px solid black\",\r\n    },\r\n  },\r\n  input: {\r\n    marginLeft: \"30px\",\r\n    width: \"160px\",\r\n    float: \"right\",\r\n    \"& input\": { color: \"#17AADD\" },\r\n  },\r\n  inputLabel: {\r\n    position: \"relative\",\r\n    top: \"11.5px\",\r\n  },\r\n  IconButton: {\r\n    marginRight: \"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      cursor: \"context-menu\",\r\n    },\r\n  },\r\n  ownersToggle: {\r\n    // marginLeft: \"20px\",\r\n    marginRight: \"50px\",\r\n  },\r\n});\r\n\r\nexport default function FilterOwnerCount() {\r\n  const classes = useStyles();\r\n  const [stateNav, setStateNav] = useContext(NavigationContext);\r\n  const [valueMinDisplay, setValueMinDisplay] = useState(\"\");\r\n  const [valueMaxDisplay, setValueMaxDisplay] = useState(\"\");\r\n  const [noOwners, setNoOwners] = useState(false);\r\n  const [owners, setOwners] = useState(false);\r\n  const [ownerCountWell, setOwnerCountWell] = useState(\r\n    stateNav.ownerCountWell ? stateNav.ownerCountWell : []\r\n  );\r\n\r\n  const setFilter = useCallback(() => {\r\n    let filter;\r\n    let min = parseInt(valueMinDisplay);\r\n    let max = parseInt(valueMaxDisplay);\r\n    if (!min && !max) {\r\n      filter = null;\r\n    }\r\n    if (!min && max) {\r\n      filter = [\"all\", [\"<=\", [\"get\", \"ownerCount\"], max]];\r\n      console.log(\"add filter\", filter);\r\n    } else if (min && !max) {\r\n      filter = [\"all\", [\">=\", [\"get\", \"ownerCount\"], min]];\r\n      console.log(\"add filter\", filter);\r\n    } else if (min && max) {\r\n      filter = [\r\n        \"all\",\r\n        [\">=\", [\"get\", \"ownerCount\"], min],\r\n        [\"<=\", [\"get\", \"ownerCount\"], max],\r\n      ];\r\n      console.log(\"add filter\", filter);\r\n    } else {\r\n      filter = null;\r\n    }\r\n\r\n    setStateNav((stateNav) => ({\r\n      ...stateNav,\r\n      filterOwnerCount: filter,\r\n    }));\r\n  }, [setStateNav, valueMaxDisplay, valueMinDisplay]);\r\n\r\n  useEffect(() => {\r\n    const recall = () => {\r\n      let checkStateNav = stateNav.filterOwnerCount;\r\n      if (!valueMinDisplay && !valueMaxDisplay) {\r\n        if (checkStateNav && checkStateNav.length === 3) {\r\n          const recallMin = checkStateNav[1][2];\r\n          const recallMax = checkStateNav[2][2];\r\n          setValueMinDisplay(recallMin);\r\n          setValueMaxDisplay(recallMax);\r\n        }\r\n      }\r\n      if (!valueMaxDisplay) {\r\n        if (checkStateNav && checkStateNav[1][0] === \"<=\") {\r\n          const recallMax = checkStateNav[1][2];\r\n          setValueMaxDisplay(recallMax);\r\n        }\r\n      }\r\n      if (!valueMinDisplay) {\r\n        if (checkStateNav && checkStateNav[1][0] === \">=\") {\r\n          const recallMin = checkStateNav[1][2];\r\n          setValueMinDisplay(recallMin);\r\n        }\r\n      }\r\n    };\r\n    recall();\r\n    return () => {\r\n      recall();\r\n    };\r\n  }, [stateNav, valueMaxDisplay, valueMinDisplay]);\r\n\r\n  useEffect(() => {\r\n    if (stateNav.ownerCountWell) {\r\n      setFilter();\r\n    }\r\n  }, [setFilter, stateNav.ownerCountWell]);\r\n\r\n  const handleChangeMin = (event) => {\r\n    setValueMinDisplay(event.target.value.replace(/,/g, \"\"));\r\n    setOwnerCountWell(event.target.id);\r\n    setStateNav((stateNav) => ({\r\n      ...stateNav,\r\n      ownerCountWell: event.target.id,\r\n    }));\r\n    if (event.target.value === \"\") {\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        filterOwnerCount: null,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleChangeMax = (event) => {\r\n    setValueMaxDisplay(event.target.value.replace(/,/g, \"\"));\r\n    setOwnerCountWell(event.target.id);\r\n    setStateNav((stateNav) => ({\r\n      ...stateNav,\r\n      ownerCountWell: event.target.id,\r\n    }));\r\n    if (event.target.value === \"\") {\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        filterOwnerCount: null,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const allowNumbersOnly = (e) => {\r\n    let code = e.which ? e.which : e.keyCode;\r\n    if (code > 31 && (code < 48 || code > 57)) {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  // const toggleNoOwners = () => {\r\n  //   setNoOwners((noOwners) => !noOwners);\r\n  // };\r\n\r\n  const toggleOwners = () => {\r\n    // setOwners((owners) => !owners);\r\n    if (stateNav.filterHasOwnerCount)\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        filterHasOwnerCount: null,\r\n      }));\r\n    else\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        filterHasOwnerCount: [\"any\", [\"==\", [\"get\", \"hasOwner\"], true]],\r\n      }));\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   let filter;\r\n  //   if (noOwners) {\r\n  //     filter = [\"any\", [\"==\", [\"get\", \"hasOwner\"], false]];\r\n  //   } else {\r\n  //     filter = null;\r\n  //   }\r\n  //   setStateNav((stateNav) => ({\r\n  //     ...stateNav,\r\n  //     filterNoOwnerCount: filter,\r\n  //   }));\r\n  // }, [noOwners, setStateNav]);\r\n\r\n  // useEffect(() => {\r\n  //   let filter;\r\n  //   if (owners) {\r\n  //     filter = [\"any\", [\"==\", [\"get\", \"hasOwner\"], true]];\r\n  //   } else {\r\n  //     filter = null;\r\n  //   }\r\n  //   setStateNav((stateNav) => ({\r\n  //     ...stateNav,\r\n  //     filterHasOwnerCount: filter,\r\n  //   }));\r\n  // }, [noOwners, owners, setStateNav]);\r\n\r\n  // useEffect(() => {\r\n  //   if (stateNav.filterHasOwnerCount && stateNav.filterHasOwnerCount.length > 1) {\r\n  //     setOwners(true);\r\n  //   }\r\n  // }, [stateNav.filterHasOwnerCount]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* TEMPORARY COMMENT OUT \r\n      FEATURE WORKS AND HELPS WITH M1 LOCAL DEBUGGING\r\n      <div className={classes.noOwners}>\r\n        <Typography\r\n          className={classes.inputLabel}\r\n          htmlFor=\"select-multiple-chip1\"\r\n        >\r\n          Wells With Owners\r\n        </Typography>\r\n        <Switch\r\n          className={classes.noOwnersToggle}\r\n          checked={owners}\r\n          onChange={toggleOwners}\r\n          color=\"primary\"\r\n          name=\"checked\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n      </div> */}\r\n\r\n      <Grid item sm={12}>\r\n        <div className={classes.divBordersMinMax}>\r\n          <FormLabel className={classes.inputLabel}>Owner Count</FormLabel>\r\n          <NumberFormat\r\n            id=\"OwnerCountMax\"\r\n            value={valueMaxDisplay}\r\n            onChange={handleChangeMax}\r\n            thousandSeparator={true}\r\n            customInput={TextField}\r\n            className={classes.input}\r\n            aria-labelledby=\"range-number\"\r\n            type=\"text\"\r\n            label=\"Max\"\r\n            size=\"small\"\r\n            onKeyPress={(e) => allowNumbersOnly(e)}\r\n            InputProps={{\r\n              inputProps: {\r\n                min: 0,\r\n                max: Number.MAX_SAFE_INTEGER,\r\n              },\r\n            }}\r\n          />\r\n          <NumberFormat\r\n            id=\"OwnerCountMin\"\r\n            value={valueMinDisplay}\r\n            onChange={handleChangeMin}\r\n            thousandSeparator={true}\r\n            customInput={TextField}\r\n            className={classes.input}\r\n            aria-labelledby=\"range-number\"\r\n            type=\"text\"\r\n            label=\"Min\"\r\n            size=\"small\"\r\n            onKeyPress={(e) => allowNumbersOnly(e)}\r\n            InputProps={{\r\n              inputProps: {\r\n                min: 0,\r\n                max: Number.MAX_SAFE_INTEGER - 1,\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item sm={12}>\r\n        <div className={classes.divBordersSwitch}>\r\n          <IconButton className={classes.IconButton}>\r\n            <OwnershipIcon color=\"#808080\" opacity=\"1.0\" />\r\n          </IconButton>\r\n          <FormLabel style={{ verticalAlign: \"middle\", paddingRight: \"60px\" }}>\r\n            Wells With Owners\r\n          </FormLabel>\r\n          <Switch\r\n            className={classes.ownersToggle}\r\n            checked={stateNav.filterHasOwnerCount ? true : false}\r\n            onChange={toggleOwners}\r\n            color=\"secondary\"\r\n            name=\"checked\"\r\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}