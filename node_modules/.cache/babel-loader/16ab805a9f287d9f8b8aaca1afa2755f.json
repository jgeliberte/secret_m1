{"ast":null,"code":"import { __read } from \"tslib\";\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nexport default function CellAction(_a) {\n  var icon = _a.icon,\n      actions = _a.actions,\n      callback = _a.callback,\n      isFirst = _a.isFirst;\n\n  var _b = __read(useState(false), 2),\n      isOpen = _b[0],\n      setIsOpen = _b[1];\n\n  var cellActionClasses = classNames('rdg-cell-action', {\n    'rdg-cell-action-last': isFirst\n  });\n  var actionButtonClasses = classNames('rdg-cell-action-button', {\n    'rdg-cell-action-button-toggled': isOpen\n  });\n\n  function onActionIconClick() {\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    if (actions && actions.length > 0) {\n      setIsOpen(!isOpen);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: cellActionClasses,\n    onMouseLeave: function () {\n      return setIsOpen(false);\n    }\n  }, React.createElement(\"div\", {\n    className: actionButtonClasses,\n    onClick: onActionIconClick\n  }, icon), isOpen && actions && actions.length && React.createElement(\"div\", {\n    className: \"rdg-cell-action-menu\"\n  }, actions.map(function (action, index) {\n    return React.createElement(\"span\", {\n      key: index,\n      onClick: action.callback\n    }, action.text);\n  })));\n}","map":{"version":3,"sources":["../../src/Cell/CellAction.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AACA,OAAO,UAAP,MAAuB,YAAvB;AAQA,eAAc,SAAU,UAAV,CAAqB,EAArB,EAA0E;MAAnD,IAAA,GAAA,EAAA,CAAA,I;MAAM,OAAA,GAAA,EAAA,CAAA,O;MAAS,QAAA,GAAA,EAAA,CAAA,Q;MAAU,OAAA,GAAA,EAAA,CAAA,O;;AACtD,MAAA,EAAA,GAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA;AAAA,MAAC,MAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAS,SAAA,GAAA,EAAA,CAAA,CAAA,CAAT;;AAEN,MAAM,iBAAiB,GAAG,UAAU,CAAC,iBAAD,EAAoB;AACtD,4BAAwB;AAD8B,GAApB,CAApC;AAIA,MAAM,mBAAmB,GAAG,UAAU,CAAC,wBAAD,EAA2B;AAC/D,sCAAkC;AAD6B,GAA3B,CAAtC;;AAIA,WAAS,iBAAT,GAA0B;AACxB,QAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC,MAAA,QAAQ;AACT;;AAED,QAAI,OAAO,IAAI,OAAO,CAAC,MAAR,GAAiB,CAAhC,EAAmC;AACjC,MAAA,SAAS,CAAC,CAAC,MAAF,CAAT;AACD;AACF;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAmC,IAAA,YAAY,EAAE,YAAA;AAAM,aAAA,SAAS,CAAT,KAAS,CAAT;AAAgB;AAAvE,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAqC,IAAA,OAAO,EAAE;AAA9C,GAAA,EACG,IADH,CADF,EAKI,MAAM,IAAI,OAAV,IAAqB,OAAO,CAAC,MAA7B,IACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACG,OAAO,CAAC,GAAR,CAAY,UAAC,MAAD,EAAS,KAAT,EAAc;AAAK,WAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,GAAG,EAAE,KAAX;AAAkB,MAAA,OAAO,EAAE,MAAM,CAAC;AAAlC,KAAA,EAA6C,MAAM,CAAnD,IAAA,CAAA;AAAgE,GAA/F,CADH,CANN,CADF;AAaD","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { CellActionButton } from '../common/types';\n\nexport interface CellActionProps extends CellActionButton {\n  isFirst: boolean;\n}\n\nexport default function CellAction({ icon, actions, callback, isFirst }: CellActionProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const cellActionClasses = classNames('rdg-cell-action', {\n    'rdg-cell-action-last': isFirst\n  });\n\n  const actionButtonClasses = classNames('rdg-cell-action-button', {\n    'rdg-cell-action-button-toggled': isOpen\n  });\n\n  function onActionIconClick() {\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    if (actions && actions.length > 0) {\n      setIsOpen(!isOpen);\n    }\n  }\n\n  return (\n    <div className={cellActionClasses} onMouseLeave={() => setIsOpen(false)}>\n      <div className={actionButtonClasses} onClick={onActionIconClick}>\n        {icon}\n      </div>\n      {\n        isOpen && actions && actions.length && (\n          <div className=\"rdg-cell-action-menu\">\n            {actions.map((action, index) => <span key={index} onClick={action.callback}>{action.text}</span>)}\n          </div>\n        )}\n    </div>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}