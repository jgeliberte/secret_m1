{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar doubleClickZoom = {\n  enable: function enable(ctx) {\n    setTimeout(function () {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return; // Now check initial state wasn't false (we leave it disabled if so)\n\n      if (!ctx._ctx.store.getInitialConfigValue(\"doubleClickZoom\")) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable: function disable(ctx) {\n    setTimeout(function () {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return; // Always disable here, as it's necessary in some cases.\n\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  }\n};\nvar DrawRectangle = {\n  // When the mode starts this function will be called.\n  onSetup: function onSetup(opts) {\n    var rectangle = this.newFeature({\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Polygon\",\n        coordinates: [[]]\n      }\n    });\n    this.addFeature(rectangle);\n    this.clearSelectedFeatures();\n    doubleClickZoom.disable(this);\n    this.updateUIClasses({\n      mouse: \"add\"\n    });\n    this.setActionableState({\n      trash: true\n    });\n    return {\n      rectangle: rectangle\n    };\n  },\n  // support mobile taps\n  onTap: function onTap(state, e) {\n    // emulate 'move mouse' to update feature coords\n    if (state.startPoint) this.onMouseMove(state, e); // emulate onClick\n\n    this.onClick(state, e);\n  },\n  // Whenever a user clicks on the map, Draw will call `onClick`\n  onClick: function onClick(state, e) {\n    // if state.startPoint exist, means its second click\n    //change to  simple_select mode\n    if (state.startPoint && state.startPoint[0] !== e.lngLat.lng && state.startPoint[1] !== e.lngLat.lat) {\n      this.updateUIClasses({\n        mouse: \"pointer\"\n      });\n      state.endPoint = [e.lngLat.lng, e.lngLat.lat];\n      this.changeMode(\"simple_select\", {\n        featuresId: state.rectangle.id\n      });\n    } // on first click, save clicked point coords as starting for  rectangle\n\n\n    var startPoint = [e.lngLat.lng, e.lngLat.lat];\n    state.startPoint = startPoint;\n  },\n  onMouseMove: function onMouseMove(state, e) {\n    // if startPoint, update the feature coordinates, using the bounding box concept\n    // we are simply using the startingPoint coordinates and the current Mouse Position\n    // coordinates to calculate the bounding box on the fly, which will be our rectangle\n    if (state.startPoint) {\n      state.rectangle.updateCoordinate(\"0.0\", state.startPoint[0], state.startPoint[1]); //minX, minY - the starting point\n\n      state.rectangle.updateCoordinate(\"0.1\", e.lngLat.lng, state.startPoint[1]); // maxX, minY\n\n      state.rectangle.updateCoordinate(\"0.2\", e.lngLat.lng, e.lngLat.lat); // maxX, maxY\n\n      state.rectangle.updateCoordinate(\"0.3\", state.startPoint[0], e.lngLat.lat); // minX,maxY\n\n      state.rectangle.updateCoordinate(\"0.4\", state.startPoint[0], state.startPoint[1]); //minX,minY - ending point (equals to starting point)\n    }\n  },\n  // Whenever a user clicks on a key while focused on the map, it will be sent here\n  onKeyUp: function onKeyUp(state, e) {\n    if (e.keyCode === 27) return this.changeMode(\"simple_select\");\n  },\n  onStop: function onStop(state) {\n    doubleClickZoom.enable(this);\n    this.updateUIClasses({\n      mouse: \"none\"\n    });\n    this.activateUIButton(); // check to see if we've deleted this feature\n\n    if (this.getFeature(state.rectangle.id) === undefined) return; //remove last added coordinate\n\n    state.rectangle.removeCoordinate(\"0.4\");\n\n    if (state.rectangle.isValid()) {\n      this.map.fire(\"draw.create\", {\n        features: [state.rectangle.toGeoJSON()]\n      });\n    } else {\n      this.deleteFeature([state.rectangle.id], {\n        silent: true\n      });\n      this.changeMode(\"simple_select\", {}, {\n        silent: true\n      });\n    }\n  },\n  toDisplayFeatures: function toDisplayFeatures(state, geojson, display) {\n    var isActivePolygon = geojson.properties.id === state.rectangle.id;\n    geojson.properties.active = isActivePolygon ? \"true\" : \"false\";\n    if (!isActivePolygon) return display(geojson); // Only render the rectangular polygon if it has the starting point\n\n    if (!state.startPoint) return;\n    return display(geojson);\n  },\n  onTrash: function onTrash(state) {\n    this.deleteFeature([state.rectangle.id], {\n      silent: true\n    });\n    this.changeMode(\"simple_select\");\n  }\n};\nexports.default = DrawRectangle;","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/node_modules/mapbox-gl-draw-rectangle-mode/dist/index.js"],"names":["Object","defineProperty","exports","value","doubleClickZoom","enable","ctx","setTimeout","map","_ctx","store","getInitialConfigValue","disable","DrawRectangle","onSetup","opts","rectangle","newFeature","type","properties","geometry","coordinates","addFeature","clearSelectedFeatures","updateUIClasses","mouse","setActionableState","trash","onTap","state","e","startPoint","onMouseMove","onClick","lngLat","lng","lat","endPoint","changeMode","featuresId","id","updateCoordinate","onKeyUp","keyCode","onStop","activateUIButton","getFeature","undefined","removeCoordinate","isValid","fire","features","toGeoJSON","deleteFeature","silent","toDisplayFeatures","geojson","display","isActivePolygon","active","onTrash","default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar doubleClickZoom = {\n  enable: function enable(ctx) {\n    setTimeout(function () {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue(\"doubleClickZoom\")) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable: function disable(ctx) {\n    setTimeout(function () {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  }\n};\n\nvar DrawRectangle = {\n  // When the mode starts this function will be called.\n  onSetup: function onSetup(opts) {\n    var rectangle = this.newFeature({\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Polygon\",\n        coordinates: [[]]\n      }\n    });\n    this.addFeature(rectangle);\n    this.clearSelectedFeatures();\n    doubleClickZoom.disable(this);\n    this.updateUIClasses({ mouse: \"add\" });\n    this.setActionableState({\n      trash: true\n    });\n    return {\n      rectangle: rectangle\n    };\n  },\n  // support mobile taps\n  onTap: function onTap(state, e) {\n    // emulate 'move mouse' to update feature coords\n    if (state.startPoint) this.onMouseMove(state, e);\n    // emulate onClick\n    this.onClick(state, e);\n  },\n  // Whenever a user clicks on the map, Draw will call `onClick`\n  onClick: function onClick(state, e) {\n    // if state.startPoint exist, means its second click\n    //change to  simple_select mode\n    if (state.startPoint && state.startPoint[0] !== e.lngLat.lng && state.startPoint[1] !== e.lngLat.lat) {\n      this.updateUIClasses({ mouse: \"pointer\" });\n      state.endPoint = [e.lngLat.lng, e.lngLat.lat];\n      this.changeMode(\"simple_select\", { featuresId: state.rectangle.id });\n    }\n    // on first click, save clicked point coords as starting for  rectangle\n    var startPoint = [e.lngLat.lng, e.lngLat.lat];\n    state.startPoint = startPoint;\n  },\n  onMouseMove: function onMouseMove(state, e) {\n    // if startPoint, update the feature coordinates, using the bounding box concept\n    // we are simply using the startingPoint coordinates and the current Mouse Position\n    // coordinates to calculate the bounding box on the fly, which will be our rectangle\n    if (state.startPoint) {\n      state.rectangle.updateCoordinate(\"0.0\", state.startPoint[0], state.startPoint[1]); //minX, minY - the starting point\n      state.rectangle.updateCoordinate(\"0.1\", e.lngLat.lng, state.startPoint[1]); // maxX, minY\n      state.rectangle.updateCoordinate(\"0.2\", e.lngLat.lng, e.lngLat.lat); // maxX, maxY\n      state.rectangle.updateCoordinate(\"0.3\", state.startPoint[0], e.lngLat.lat); // minX,maxY\n      state.rectangle.updateCoordinate(\"0.4\", state.startPoint[0], state.startPoint[1]); //minX,minY - ending point (equals to starting point)\n    }\n  },\n  // Whenever a user clicks on a key while focused on the map, it will be sent here\n  onKeyUp: function onKeyUp(state, e) {\n    if (e.keyCode === 27) return this.changeMode(\"simple_select\");\n  },\n  onStop: function onStop(state) {\n    doubleClickZoom.enable(this);\n    this.updateUIClasses({ mouse: \"none\" });\n    this.activateUIButton();\n\n    // check to see if we've deleted this feature\n    if (this.getFeature(state.rectangle.id) === undefined) return;\n\n    //remove last added coordinate\n    state.rectangle.removeCoordinate(\"0.4\");\n    if (state.rectangle.isValid()) {\n      this.map.fire(\"draw.create\", {\n        features: [state.rectangle.toGeoJSON()]\n      });\n    } else {\n      this.deleteFeature([state.rectangle.id], { silent: true });\n      this.changeMode(\"simple_select\", {}, { silent: true });\n    }\n  },\n  toDisplayFeatures: function toDisplayFeatures(state, geojson, display) {\n    var isActivePolygon = geojson.properties.id === state.rectangle.id;\n    geojson.properties.active = isActivePolygon ? \"true\" : \"false\";\n    if (!isActivePolygon) return display(geojson);\n\n    // Only render the rectangular polygon if it has the starting point\n    if (!state.startPoint) return;\n    return display(geojson);\n  },\n  onTrash: function onTrash(state) {\n    this.deleteFeature([state.rectangle.id], { silent: true });\n    this.changeMode(\"simple_select\");\n  }\n};\n\nexports.default = DrawRectangle;"]},"metadata":{},"sourceType":"script"}