{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Transact\\\\Transact.js\";\n////////////////////////////////////////////////////////////////////////////////\n//////////react-trello info: https://github.com/rcdexta/react-trello  //////////\n////////////////////////////////////////////////////////////////////////////////\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport { AppContext } from \"../../AppContext\";\nimport Board from \"react-trello\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TransactContext } from \"./TransactContext\";\nimport { TRANSACTIONDATA } from \"../../graphQL/useQueryTransactionData\";\nimport { UPDATETRANSACTION } from \"../../graphQL/useMutationUpdateTransaction\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"./components/dialog\";\nconst data_file = {\n  lanes: [{\n    id: \"lane1\",\n    title: \"Offers in Progress\",\n    cards: [{\n      id: \"Card1\",\n      title: \"THORNTON, CHARLES T\",\n      description: \"API: 4230130541\\nWell Name: CHRISTOPHER -38- 4\\nNRI: 0.017857\\nTax Value: $10,860\",\n      label: \"$103,100\"\n    }]\n  }, {\n    id: \"lane2\",\n    title: \"Offer Sent to Owner\",\n    cards: [// {\n      //   id: \"Card3\",\n      //   title: \"SMITH, JAMES E\",\n      //   description:\n      //     \"Location: WARD, TX\\nRoyalty: 20%\\nAcreage: 4.83 NMA (7.728 NRA)\\nPrice Per NMA: $15,000\",\n      //   label: \"$115,900\",\n      // },\n      // {\n      //   id: \"Card2\",\n      //   title: \"CHRISTOPHER, EDITH\",\n      //   description:\n      //     \"API: 4230130541\\nWell Name: CHRISTOPHER -38- 4\\nNRI: 0.005952\\nTax Value: $3,620\",\n      //   label: \"$54,739\",\n      // },\n    ]\n  }, {\n    id: \"lane3\",\n    title: \"Accepted - Due Diligence\",\n    cards: [{\n      id: \"Card4\",\n      title: \"JONES, MICHAEL F\",\n      description: \"Location: UPTON, TX\\nRoyalty: 12.5%\\nAcreage: 10.2 NMA (10.2 NRA)\\nPrice Per NMA: $32,000\",\n      label: \"$326,400\"\n    }]\n  }, {\n    id: \"lane4\",\n    title: \"Deal Closed\",\n    cards: [{\n      id: \"Card5\",\n      title: \"MOUSSEAU, VICKI L\",\n      description: \"Location: LEA, NM\\nRoyalty: 18.75%\\nAcreage: 6.7 NMA (10.05 NRA)\\nPrice Per NMA: $18,000\",\n      label: \"$180,900\"\n    }, {\n      id: \"Card6\",\n      title: \"CANON, MICHAEL J\",\n      description: \"Location: REEVES, TX\\nRoyalty: 15.625%\\nAcreage: 43 NMA (53.75 NRA)\\nPrice Per NMA: $32,000\",\n      label: \"$571,094\"\n    }]\n  }, {\n    id: \"lane5\",\n    title: \"Offer Rejected\",\n    cards: [{\n      id: \"Card7\",\n      title: \"SCARBOROUGH, KATHRYN\",\n      description: \"Location: LOVING, TX\\nRoyalty: 12.5%\\nAcreage: 3 NMA (3 NRA)\\nPrice Per NMA: $19,000\",\n      label: \"$57,000\"\n    }, {\n      id: \"Card8\",\n      title: \"TRAYLOR, MARY ELIZABETH\",\n      description: \"API: 4230133032\\nWell Name: PISTOL 24-24 2H\\nNRI: 0.046743\\nTax Value: $215,690\",\n      label: \"$943,291\"\n    }, {\n      id: \"Card9\",\n      title: \"KING, JACOB B\",\n      description: \"Location: REEVES, TX\\nRoyalty: 20%\\nAcreage: 150 NMA (240 NRA)\\nPrice Per NMA: $9,500\",\n      label: \"$2,280,000\"\n    }]\n  }]\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100%\",\n    backgroundColor: \"#efefef\"\n  },\n  list: {\n    overflowX: \"auto !important\",\n    height: \"100%\"\n  }\n}));\nexport default function Transact() {\n  const classes = useStyles(); // const [stateTransact, setStateTransact] = useContext(TransactContext);\n\n  const [stateApp, setStateApp] = useContext(AppContext);\n  const [transactData, setTransactData] = useState();\n  const [id, setId] = useState();\n  const [getTransactionData, {\n    loading,\n    data\n  }] = useLazyQuery(TRANSACTIONDATA);\n  const [updateTransaction] = useMutation(UPDATETRANSACTION);\n  useEffect(() => {\n    if (stateApp.user && stateApp.user.mongoId) {\n      getTransactionData({\n        variables: {\n          userId: stateApp.user.mongoId\n        }\n      });\n    }\n  }, [stateApp.user]);\n\n  const getTitle = laneID => {\n    switch (laneID) {\n      case \"lane1\":\n        return \"Offer Preperation\";\n\n      case \"lane2\":\n        return \"Offer Extended\";\n\n      case \"lane3\":\n        return \"Accepted - Due Diligence\";\n\n      case \"lane4\":\n        return \"Deal Closed\";\n\n      case \"lane5\":\n        return \"Offer Rejected\";\n\n      default:\n        return \"Offer Preperation\";\n    }\n  };\n\n  const getLanesWithFixedTitles = lanes => {\n    return lanes.map(lane => {\n      let title = getTitle(lane.id);\n      return { ...lane,\n        title\n      };\n    });\n  };\n\n  useEffect(() => {\n    if (data && data.transactionData && data.transactionData.allData && data.transactionData.allData.lanes) {\n      setTransactData({ ...data.transactionData.allData,\n        lanes: getLanesWithFixedTitles(data.transactionData.allData.lanes)\n      });\n      setId(data.transactionData._id);\n    }\n  }, [loading, data]);\n\n  const handleDataChange = newData => {\n    updateTransaction({\n      variables: {\n        transactionId: id,\n        transaction: {\n          allData: newData,\n          user: stateApp.user.mongoId\n        }\n      },\n      refetchQueries: [\"getTransactionData\"],\n      awaitRefetchQueries: true\n    });\n  };\n\n  const handleCardClick = (cardId, metadata, laneId) => {\n    setStateApp(stateApp => ({ ...stateApp,\n      dealDialog: true,\n      activeDeal: {\n        cardId,\n        laneId\n      }\n    }));\n  };\n\n  return !loading && data && transactData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    transactData: transactData,\n    handleDataChange: handleDataChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Board, {\n    className: classes.list,\n    style: {\n      backgroundColor: \"#efefef\"\n    },\n    data: transactData,\n    draggable: true,\n    laneDraggable: false,\n    cardDraggable: true,\n    collapsibleLanes: true,\n    editable: false,\n    canAddLanes: false,\n    editLaneTitle: false,\n    hideCardDeleteIcon: false,\n    onDataChange: handleDataChange,\n    onCardClick: handleCardClick //onCardAdd = {handleCardAdd}\n    //onCardDelete = {handleCardDelete}\n    // handleDragStart = {}\n    // handleDragEnd={}\n    // handleLaneDragStart\n    // onDataChange\n    // onCardAdd\n    // onBeforeCardDelete\n    // onCardDelete\n    // onCardMoveAcrossLanes\n    // onLaneAdd\n    // onLaneDelete\n    // onLaneUpdate\n    // onLaneClick\n    // onLaneScroll\n    //onCardMoveAcrossLanes\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 80,\n    disableShrink: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Transact/Transact.js"],"names":["React","useContext","useState","useEffect","useMutation","useLazyQuery","AppContext","Board","makeStyles","TransactContext","TRANSACTIONDATA","UPDATETRANSACTION","CircularProgress","Button","Dialog","data_file","lanes","id","title","cards","description","label","useStyles","theme","root","height","backgroundColor","list","overflowX","Transact","classes","stateApp","setStateApp","transactData","setTransactData","setId","getTransactionData","loading","data","updateTransaction","user","mongoId","variables","userId","getTitle","laneID","getLanesWithFixedTitles","map","lane","transactionData","allData","_id","handleDataChange","newData","transactionId","transaction","refetchQueries","awaitRefetchQueries","handleCardClick","cardId","metadata","laneId","dealDialog","activeDeal"],"mappings":"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","sourcesContent":["////////////////////////////////////////////////////////////////////////////////\r\n//////////react-trello info: https://github.com/rcdexta/react-trello  //////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { AppContext } from \"../../AppContext\";\r\nimport Board from \"react-trello\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TransactContext } from \"./TransactContext\";\r\nimport { TRANSACTIONDATA } from \"../../graphQL/useQueryTransactionData\";\r\nimport { UPDATETRANSACTION } from \"../../graphQL/useMutationUpdateTransaction\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"./components/dialog\";\r\n\r\nconst data_file = {\r\n  lanes: [\r\n    {\r\n      id: \"lane1\",\r\n      title: \"Offers in Progress\",\r\n      cards: [\r\n        {\r\n          id: \"Card1\",\r\n          title: \"THORNTON, CHARLES T\",\r\n          description:\r\n            \"API: 4230130541\\nWell Name: CHRISTOPHER -38- 4\\nNRI: 0.017857\\nTax Value: $10,860\",\r\n          label: \"$103,100\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"lane2\",\r\n      title: \"Offer Sent to Owner\",\r\n      cards: [\r\n        // {\r\n        //   id: \"Card3\",\r\n        //   title: \"SMITH, JAMES E\",\r\n        //   description:\r\n        //     \"Location: WARD, TX\\nRoyalty: 20%\\nAcreage: 4.83 NMA (7.728 NRA)\\nPrice Per NMA: $15,000\",\r\n        //   label: \"$115,900\",\r\n        // },\r\n        // {\r\n        //   id: \"Card2\",\r\n        //   title: \"CHRISTOPHER, EDITH\",\r\n        //   description:\r\n        //     \"API: 4230130541\\nWell Name: CHRISTOPHER -38- 4\\nNRI: 0.005952\\nTax Value: $3,620\",\r\n        //   label: \"$54,739\",\r\n        // },\r\n      ],\r\n    },\r\n    {\r\n      id: \"lane3\",\r\n      title: \"Accepted - Due Diligence\",\r\n      cards: [\r\n        {\r\n          id: \"Card4\",\r\n          title: \"JONES, MICHAEL F\",\r\n          description:\r\n            \"Location: UPTON, TX\\nRoyalty: 12.5%\\nAcreage: 10.2 NMA (10.2 NRA)\\nPrice Per NMA: $32,000\",\r\n          label: \"$326,400\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"lane4\",\r\n      title: \"Deal Closed\",\r\n      cards: [\r\n        {\r\n          id: \"Card5\",\r\n          title: \"MOUSSEAU, VICKI L\",\r\n          description:\r\n            \"Location: LEA, NM\\nRoyalty: 18.75%\\nAcreage: 6.7 NMA (10.05 NRA)\\nPrice Per NMA: $18,000\",\r\n          label: \"$180,900\",\r\n        },\r\n        {\r\n          id: \"Card6\",\r\n          title: \"CANON, MICHAEL J\",\r\n          description:\r\n            \"Location: REEVES, TX\\nRoyalty: 15.625%\\nAcreage: 43 NMA (53.75 NRA)\\nPrice Per NMA: $32,000\",\r\n          label: \"$571,094\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"lane5\",\r\n      title: \"Offer Rejected\",\r\n\r\n      cards: [\r\n        {\r\n          id: \"Card7\",\r\n          title: \"SCARBOROUGH, KATHRYN\",\r\n          description:\r\n            \"Location: LOVING, TX\\nRoyalty: 12.5%\\nAcreage: 3 NMA (3 NRA)\\nPrice Per NMA: $19,000\",\r\n          label: \"$57,000\",\r\n        },\r\n        {\r\n          id: \"Card8\",\r\n          title: \"TRAYLOR, MARY ELIZABETH\",\r\n          description:\r\n            \"API: 4230133032\\nWell Name: PISTOL 24-24 2H\\nNRI: 0.046743\\nTax Value: $215,690\",\r\n          label: \"$943,291\",\r\n        },\r\n        {\r\n          id: \"Card9\",\r\n          title: \"KING, JACOB B\",\r\n          description:\r\n            \"Location: REEVES, TX\\nRoyalty: 20%\\nAcreage: 150 NMA (240 NRA)\\nPrice Per NMA: $9,500\",\r\n          label: \"$2,280,000\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    backgroundColor: \"#efefef\",\r\n  },\r\n  list: {\r\n    overflowX: \"auto !important\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function Transact() {\r\n  const classes = useStyles();\r\n  // const [stateTransact, setStateTransact] = useContext(TransactContext);\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n  const [transactData, setTransactData] = useState();\r\n  const [id, setId] = useState();\r\n\r\n  const [getTransactionData, { loading, data }] = useLazyQuery(TRANSACTIONDATA);\r\n  const [updateTransaction] = useMutation(UPDATETRANSACTION);\r\n\r\n  useEffect(() => {\r\n    if (stateApp.user && stateApp.user.mongoId) {\r\n      getTransactionData({\r\n        variables: {\r\n          userId: stateApp.user.mongoId,\r\n        },\r\n      });\r\n    }\r\n  }, [stateApp.user]);\r\n\r\n  const getTitle = (laneID) => {\r\n    switch (laneID) {\r\n      case \"lane1\":\r\n        return \"Offer Preperation\";\r\n      case \"lane2\":\r\n        return \"Offer Extended\";\r\n      case \"lane3\":\r\n        return \"Accepted - Due Diligence\";\r\n      case \"lane4\":\r\n        return \"Deal Closed\";\r\n      case \"lane5\":\r\n        return \"Offer Rejected\";\r\n      default:\r\n        return \"Offer Preperation\";\r\n    }\r\n  };\r\n\r\n  const getLanesWithFixedTitles = (lanes) => {\r\n    return lanes.map((lane) => {\r\n      let title = getTitle(lane.id);\r\n      return { ...lane, title };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      data &&\r\n      data.transactionData &&\r\n      data.transactionData.allData &&\r\n      data.transactionData.allData.lanes\r\n    ) {\r\n      setTransactData({\r\n        ...data.transactionData.allData,\r\n        lanes: getLanesWithFixedTitles(data.transactionData.allData.lanes),\r\n      });\r\n      setId(data.transactionData._id);\r\n    }\r\n  }, [loading, data]);\r\n\r\n  const handleDataChange = (newData) => {\r\n    updateTransaction({\r\n      variables: {\r\n        transactionId: id,\r\n        transaction: { allData: newData, user: stateApp.user.mongoId },\r\n      },\r\n      refetchQueries: [\"getTransactionData\"],\r\n      awaitRefetchQueries: true,\r\n    });\r\n  };\r\n\r\n  const handleCardClick = (cardId, metadata, laneId) => {\r\n    setStateApp((stateApp) => ({\r\n      ...stateApp,\r\n      dealDialog: true,\r\n      activeDeal: {\r\n        cardId,\r\n        laneId,\r\n      },\r\n    }));\r\n  };\r\n\r\n  return !loading && data && transactData ? (\r\n    <div className={classes.root}>\r\n      <Dialog transactData={transactData} handleDataChange={handleDataChange} />\r\n      <Board\r\n        className={classes.list}\r\n        style={{ backgroundColor: \"#efefef\" }}\r\n        data={transactData}\r\n        draggable={true}\r\n        laneDraggable={false}\r\n        cardDraggable={true}\r\n        collapsibleLanes={true}\r\n        editable={false}\r\n        canAddLanes={false}\r\n        editLaneTitle={false}\r\n        hideCardDeleteIcon={false}\r\n        onDataChange={handleDataChange}\r\n        onCardClick={handleCardClick}\r\n\r\n        //onCardAdd = {handleCardAdd}\r\n        //onCardDelete = {handleCardDelete}\r\n        // handleDragStart = {}\r\n        // handleDragEnd={}\r\n        // handleLaneDragStart\r\n        // onDataChange\r\n        // onCardAdd\r\n        // onBeforeCardDelete\r\n        // onCardDelete\r\n        // onCardMoveAcrossLanes\r\n        // onLaneAdd\r\n        // onLaneDelete\r\n        // onLaneUpdate\r\n        // onLaneClick\r\n        // onLaneScroll\r\n        //onCardMoveAcrossLanes\r\n      />\r\n    </div>\r\n  ) : (\r\n    <CircularProgress size={80} disableShrink color=\"secondary\" />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}