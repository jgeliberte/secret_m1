{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterFormTags.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavigationContext } from \"../NavigationContext\";\nimport FilterTags from \"./FilterTags\";\nimport FilterTrackedOwners from \"./FilterTrackedOwners\";\nimport FilterTrackedWells from \"./FilterTrackedWells\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\nimport { AppContext } from \"../../../AppContext\";\nimport { WELLSQUERY } from \"../../../graphQL/useQueryWells\";\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\nexport default function FilterFormProduction() {\n  const classes = useStyles();\n  const [stateNav, setStateNav] = useContext(NavigationContext);\n  const [stateApp, setStateApp] = useContext(AppContext);\n  const [getWells, {\n    data: dataWells\n  }] = useLazyQuery(WELLSQUERY);\n  useEffect(() => {\n    let filter;\n\n    if (stateNav.wellsIdsFromTags && stateNav.wellsIdsFromTags.length > 0) {\n      let IdsArray = [];\n\n      for (let i = 0; i < stateNav.wellsIdsFromTags.length; i++) {\n        if (IdsArray.indexOf(stateNav.wellsIdsFromTags[i]) === -1) IdsArray.push(stateNav.wellsIdsFromTags[i]);\n      }\n\n      filter = [\"match\", [\"get\", \"id\"], IdsArray, true, false];\n      getWells({\n        variables: {\n          wellIdArray: IdsArray,\n          authToken: stateApp.user.authToken\n        }\n      });\n    } else {\n      filter = null;\n    }\n\n    setStateNav(stateNav => ({ ...stateNav,\n      filterTags: filter\n    }));\n  }, [stateNav.wellsIdsFromTags]);\n  useEffect(() => {\n    if (dataWells && dataWells.wells && dataWells.wells.results && dataWells.wells.results.length !== 0) {\n      console.log(\"wells data from tags filter\", dataWells.wells.results);\n      setStateApp(stateApp => ({ ...stateApp,\n        wellListFromTagsFilter: dataWells.wells.results\n      }));\n      stateApp.activateUserDefinedLayers(5); // stateApp.deactivateWellLayer();\n    }\n  }, [dataWells]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 2,\n    style: {\n      padding: \"8px\",\n      width: \"100%\",\n      margin: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterTags, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterTrackedWells, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterTrackedOwners, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterFormTags.js"],"names":["React","useContext","useEffect","makeStyles","NavigationContext","FilterTags","FilterTrackedOwners","FilterTrackedWells","Grid","useLazyQuery","AppContext","WELLSQUERY","useStyles","theme","gridItem","display","flexDirection","FilterFormProduction","classes","stateNav","setStateNav","stateApp","setStateApp","getWells","data","dataWells","filter","wellsIdsFromTags","length","IdsArray","i","indexOf","push","variables","wellIdArray","authToken","user","filterTags","wells","results","console","log","wellListFromTagsFilter","activateUserDefinedLayers","padding","width","margin"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\nimport FilterTags from \"./FilterTags\";\r\nimport FilterTrackedOwners from \"./FilterTrackedOwners\";\r\nimport FilterTrackedWells from \"./FilterTrackedWells\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport { WELLSQUERY } from \"../../../graphQL/useQueryWells\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nexport default function FilterFormProduction() {\r\n  const classes = useStyles();\r\n  const [stateNav, setStateNav] = useContext(NavigationContext);\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n\r\n  const [getWells, { data: dataWells }] = useLazyQuery(WELLSQUERY);\r\n\r\n  useEffect(() => {\r\n    let filter;\r\n\r\n    if (stateNav.wellsIdsFromTags && stateNav.wellsIdsFromTags.length > 0) {\r\n      let IdsArray = [];\r\n      for (let i = 0; i < stateNav.wellsIdsFromTags.length; i++) {\r\n        if (IdsArray.indexOf(stateNav.wellsIdsFromTags[i]) === -1)\r\n          IdsArray.push(stateNav.wellsIdsFromTags[i]);\r\n      }\r\n\r\n      filter = [\"match\", [\"get\", \"id\"], IdsArray, true, false];\r\n\r\n      getWells({\r\n        variables: {\r\n          wellIdArray: IdsArray,\r\n          authToken: stateApp.user.authToken,\r\n        },\r\n      });\r\n    } else {\r\n      filter = null;\r\n    }\r\n\r\n    setStateNav((stateNav) => ({ ...stateNav, filterTags: filter }));\r\n  }, [stateNav.wellsIdsFromTags]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      dataWells &&\r\n      dataWells.wells &&\r\n      dataWells.wells.results &&\r\n      dataWells.wells.results.length !== 0\r\n    ) {\r\n      console.log(\"wells data from tags filter\", dataWells.wells.results);\r\n\r\n      setStateApp((stateApp) => ({\r\n        ...stateApp,\r\n        wellListFromTagsFilter: dataWells.wells.results,\r\n      }));\r\n      stateApp.activateUserDefinedLayers(5);\r\n      // stateApp.deactivateWellLayer();\r\n    }\r\n  }, [dataWells]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      spacing={2}\r\n      style={{ padding: \"8px\", width: \"100%\", margin: \"0\" }}\r\n    >\r\n      <Grid item sm={12} className={classes.gridItem}>\r\n        <FilterTags />\r\n      </Grid>\r\n      <Grid item sm={6} className={classes.gridItem}>\r\n        <FilterTrackedWells />\r\n      </Grid>\r\n      <Grid item sm={6} className={classes.gridItem}>\r\n        <FilterTrackedOwners />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}