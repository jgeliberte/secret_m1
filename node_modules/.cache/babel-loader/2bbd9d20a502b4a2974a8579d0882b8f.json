{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Dashboard\\\\components\\\\TwitterCard.js\";\nimport { Grid } from \"@material-ui/core\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DragIndicatorOutlinedIcon from \"@material-ui/icons/DragIndicatorOutlined\";\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { sortableHandle } from \"react-sortable-hoc\";\nimport { DashboardContext } from \"../DashboardContext\";\nimport TwitterWidget from \"./TwitterWidget\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    padding: \"8px 8px 0 8px\",\n    backgroundColor: '#011133',\n    color: 'white'\n  },\n  boldtxt: {\n    fontWeight: \"bold\"\n  },\n  search: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"calc(100% + 32px)\",\n    transform: \"scale(0.8)\",\n    marginLeft: \"-16px\",\n    marginBottom: \"-8px\"\n  },\n  input: {\n    marginLeft: \"8px\",\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  }\n}));\nconst DragHandle = sortableHandle(() => /*#__PURE__*/React.createElement(IconButton, {\n  \"aria-label\": \"drag\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(DragIndicatorOutlinedIcon, {\n  fontSize: \"default\",\n  htmlColor: \"#fff\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n})));\n\nconst TwitterCard = () => {\n  const classes = useStyles();\n  const [stateDashboard, setStateDashboard] = useContext(DashboardContext);\n  const [name, setName] = useState(\"\");\n  const [timeOut, setTime] = useState(null);\n\n  const debounceFunc = (func, time) => {\n    clearTimeout(timeOut);\n    return setTime(setTimeout(func, time));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const thandleRegex = /^[A-Za-z0-9_]{1,15}$/;\n\n    if (thandleRegex.test(name)) {\n      return setStateDashboard({ ...stateDashboard,\n        userhandle: name\n      });\n    }\n\n    if (name.trim() == \"\") {\n      return setStateDashboard({ ...stateDashboard,\n        userhandle: \"m1neraltech\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.header,\n    action: /*#__PURE__*/React.createElement(DragHandle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }),\n    title: `Twitter`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    component: \"form\",\n    variant: \"outlined\",\n    elevation: 0,\n    className: classes.search,\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    className: classes.input,\n    placeholder: \"Search @username\",\n    value: name,\n    onChange: ({\n      target\n    }) => setName(target.value),\n    inputProps: {\n      \"aria-label\": \"search twitter username\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    type: \"submit\",\n    className: classes.iconButton,\n    \"aria-label\": \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TwitterWidget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TwitterCard;","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Dashboard/components/TwitterCard.js"],"names":["Grid","CardHeader","IconButton","makeStyles","TextField","DragIndicatorOutlinedIcon","React","Fragment","useContext","useEffect","useState","sortableHandle","DashboardContext","TwitterWidget","SearchIcon","Paper","InputBase","useStyles","theme","header","padding","backgroundColor","color","boldtxt","fontWeight","search","display","alignItems","width","transform","marginLeft","marginBottom","input","flex","iconButton","DragHandle","TwitterCard","classes","stateDashboard","setStateDashboard","name","setName","timeOut","setTime","debounceFunc","func","time","clearTimeout","setTimeout","onSubmit","e","preventDefault","thandleRegex","test","userhandle","trim","target","value"],"mappings":"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","sourcesContent":["import { Grid } from \"@material-ui/core\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DragIndicatorOutlinedIcon from \"@material-ui/icons/DragIndicatorOutlined\";\r\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { sortableHandle } from \"react-sortable-hoc\";\r\nimport { DashboardContext } from \"../DashboardContext\";\r\nimport TwitterWidget from \"./TwitterWidget\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: \"8px 8px 0 8px\",\r\n    backgroundColor:'#011133',\r\n    color: 'white'\r\n  },\r\n  boldtxt: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  search: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"calc(100% + 32px)\",\r\n    transform: \"scale(0.8)\",\r\n    marginLeft: \"-16px\",\r\n    marginBottom: \"-8px\",\r\n  },\r\n  input: {\r\n    marginLeft: \"8px\",\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <IconButton aria-label=\"drag\">\r\n    <DragIndicatorOutlinedIcon fontSize=\"default\" htmlColor=\"#fff\" />\r\n  </IconButton>\r\n));\r\n\r\nconst TwitterCard = () => {\r\n  const classes = useStyles();\r\n  const [stateDashboard, setStateDashboard] = useContext(DashboardContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [timeOut, setTime] = useState(null);\r\n\r\n  const debounceFunc = (func, time) => {\r\n    clearTimeout(timeOut);\r\n    return setTime(setTimeout(func, time));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const thandleRegex = /^[A-Za-z0-9_]{1,15}$/;\r\n    if (thandleRegex.test(name)) {\r\n      return setStateDashboard({ ...stateDashboard, userhandle: name });\r\n    }\r\n    if (name.trim() == \"\") {\r\n      return setStateDashboard({\r\n        ...stateDashboard,\r\n        userhandle: \"m1neraltech\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <CardHeader\r\n        className={classes.header}\r\n        action={<DragHandle />}\r\n        title={`Twitter`}\r\n      />\r\n      <Paper\r\n        component=\"form\"\r\n        variant=\"outlined\"\r\n        elevation={0}\r\n        className={classes.search}\r\n        onSubmit={(e) => onSubmit(e)}\r\n      >\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Search @username\"\r\n          value={name}\r\n          onChange={({ target }) => setName(target.value)}\r\n          inputProps={{ \"aria-label\": \"search twitter username\" }}\r\n        />\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      <TwitterWidget />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TwitterCard;\r\n"]},"metadata":{},"sourceType":"module"}