{"ast":null,"code":"/*! @azure/msal-browser v2.0.0 2020-07-21 */\n'use strict';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n/*! @azure/msal-common v1.0.0 2020-07-21 */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\n\nvar extendStatics$1 = function (d, b) {\n  extendStatics$1 = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics$1(d, b);\n};\n\nfunction __extends$1(d, b) {\n  extendStatics$1(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign$1 = function () {\n  __assign$1 = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign$1.apply(this, arguments);\n};\n\nfunction __awaiter$1(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator$1(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nfunction __spreadArrays$1() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\n\nvar AuthErrorMessage = {\n  unexpectedError: {\n    code: \"unexpected_error\",\n    desc: \"Unexpected error in authentication.\"\n  }\n};\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\n\nvar AuthError =\n/** @class */\nfunction (_super) {\n  __extends$1(AuthError, _super);\n\n  function AuthError(errorCode, errorMessage) {\n    var _this = this;\n\n    var errorString = errorMessage ? errorCode + \": \" + errorMessage : errorCode;\n    _this = _super.call(this, errorString) || this;\n    Object.setPrototypeOf(_this, AuthError.prototype);\n    _this.errorCode = errorCode;\n    _this.errorMessage = errorMessage;\n    _this.name = \"AuthError\";\n    return _this;\n  }\n  /**\r\n   * Creates an error that is thrown when something unexpected happens in the library.\r\n   * @param errDesc\r\n   */\n\n\n  AuthError.createUnexpectedError = function (errDesc) {\n    return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\n  };\n\n  return AuthError;\n}(Error);\n\nvar name = \"@azure/msal-common\";\nvar author = {\n  name: \"Microsoft\",\n  email: \"nugetaad@microsoft.com\",\n  url: \"https://www.microsoft.com\"\n};\nvar license = \"MIT\";\nvar repository = {\n  type: \"git\",\n  url: \"https://github.com/AzureAD/microsoft-authentication-library-for-js.git\"\n};\nvar version = \"1.0.0\";\nvar description = \"Microsoft Authentication Library for js\";\nvar keywords = [\"implicit\", \"authorization code\", \"PKCE\", \"js\", \"AAD\", \"msal\", \"oauth\"];\nvar main = \"./dist/index.js\";\nvar module = \"./dist/index.es.js\";\nvar types = \"./dist/src/index.d.ts\";\nvar browserslist = [\"last 1 version\", \"> 1%\", \"maintained node versions\", \"not dead\"];\nvar engines = {\n  node: \">=0.8.0\"\n};\nvar directories = {\n  test: \"test\"\n};\nvar files = [\"dist\"];\nvar scripts = {\n  clean: \"shx rm -rf dist lib\",\n  \"clean:coverage\": \"rimraf ../../.nyc_output/*\",\n  doc: \"npm run doc:generate && npm run doc:deploy\",\n  \"doc:generate\": \"typedoc --mode modules --excludePrivate --excludeProtected --excludeNotExported --out ./ref ./src/ --gitRevision dev\",\n  \"doc:deploy\": \"gh-pages -d ref -a -e ref/msal-common\",\n  lint: \"eslint src --ext .ts\",\n  test: \"mocha\",\n  \"test:coverage\": \"nyc --reporter=text mocha --exit\",\n  \"test:coverage:only\": \"npm run clean:coverage && npm run test:coverage\",\n  \"build:modules\": \"rollup -c\",\n  \"build:modules:watch\": \"rollup -cw\",\n  build: \"npm run clean && npm run lint && npm run build:modules\",\n  prepack: \"npm run build\"\n};\nvar devDependencies = {\n  \"@babel/core\": \"^7.7.2\",\n  \"@babel/plugin-proposal-class-properties\": \"^7.7.0\",\n  \"@babel/plugin-proposal-object-rest-spread\": \"^7.6.2\",\n  \"@babel/polyfill\": \"^7.7.0\",\n  \"@babel/preset-env\": \"^7.7.1\",\n  \"@babel/preset-typescript\": \"^7.7.2\",\n  \"@babel/register\": \"^7.7.0\",\n  \"@istanbuljs/nyc-config-babel\": \"^2.1.1\",\n  \"@rollup/plugin-json\": \"^4.0.0\",\n  \"@types/chai\": \"^4.2.5\",\n  \"@types/chai-as-promised\": \"^7.1.2\",\n  \"@types/debug\": \"^4.1.5\",\n  \"@types/mocha\": \"^5.2.7\",\n  \"@types/sinon\": \"^7.5.0\",\n  \"@typescript-eslint/eslint-plugin\": \"^2.4.0\",\n  \"@typescript-eslint/eslint-plugin-tslint\": \"^2.4.0\",\n  \"@typescript-eslint/parser\": \"^2.4.0\",\n  \"babel-plugin-istanbul\": \"^5.2.0\",\n  chai: \"^4.2.0\",\n  \"chai-as-promised\": \"^7.1.1\",\n  eslint: \"^6.5.1\",\n  \"gh-pages\": \"^3.1.0\",\n  husky: \"^3.0.9\",\n  mocha: \"^6.2.2\",\n  nyc: \"^14.1.1\",\n  rimraf: \"^3.0.2\",\n  rollup: \"^1.24.0\",\n  \"rollup-plugin-typescript2\": \"^0.24.3\",\n  \"rollup-plugin-uglify\": \"^6.0.4\",\n  shx: \"^0.3.2\",\n  sinon: \"^7.5.0\",\n  tslib: \"^1.10.0\",\n  tslint: \"^5.20.0\",\n  typedoc: \"^0.17.8\",\n  typescript: \"^3.7.5\"\n};\nvar dependencies = {\n  debug: \"^4.1.1\"\n};\nvar pkg = {\n  name: name,\n  author: author,\n  license: license,\n  repository: repository,\n  version: version,\n  description: description,\n  keywords: keywords,\n  main: main,\n  module: module,\n  types: types,\n  browserslist: browserslist,\n  engines: engines,\n  directories: directories,\n  files: files,\n  scripts: scripts,\n  devDependencies: devDependencies,\n  dependencies: dependencies\n};\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\nvar ClientAuthErrorMessage = {\n  clientInfoDecodingError: {\n    code: \"client_info_decoding_error\",\n    desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\n  },\n  clientInfoEmptyError: {\n    code: \"client_info_empty_error\",\n    desc: \"The client info was empty. Please review the trace to determine the root cause.\"\n  },\n  idTokenParsingError: {\n    code: \"id_token_parsing_error\",\n    desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\n  },\n  nullOrEmptyIdToken: {\n    code: \"null_or_empty_id_token\",\n    desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\n  },\n  endpointResolutionError: {\n    code: \"endpoints_resolution_error\",\n    desc: \"Error: could not resolve endpoints. Please check network and try again.\"\n  },\n  invalidAuthorityType: {\n    code: \"invalid_authority_type\",\n    desc: \"The given authority is not a valid type of authority supported by MSAL. Please review the trace to determine the root cause.\"\n  },\n  hashNotDeserialized: {\n    code: \"hash_not_deserialized\",\n    desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\n  },\n  blankGuidGenerated: {\n    code: \"blank_guid_generated\",\n    desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\n  },\n  invalidStateError: {\n    code: \"invalid_state\",\n    desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\n  },\n  stateMismatchError: {\n    code: \"state_mismatch\",\n    desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\n  },\n  nonceMismatchError: {\n    code: \"nonce_mismatch\",\n    desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\n  },\n  accountMismatchError: {\n    code: \"account_mismatch\",\n    desc: \"The cached account and account which made the token request do not match.\"\n  },\n  invalidIdToken: {\n    code: \"invalid_id_token\",\n    desc: \"Invalid ID token format.\"\n  },\n  noTokensFoundError: {\n    code: \"no_tokens_found\",\n    desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\n  },\n  cacheParseError: {\n    code: \"cache_parse_error\",\n    desc: \"Could not parse cache key.\"\n  },\n  userLoginRequiredError: {\n    code: \"user_login_error\",\n    desc: \"User login is required.\"\n  },\n  multipleMatchingTokens: {\n    code: \"multiple_matching_tokens\",\n    desc: \"The cache contains multiple tokens satisfying the requirements. \" + \"Call AcquireToken again providing more requirements such as authority or account.\"\n  },\n  multipleMatchingAccounts: {\n    code: \"multiple_matching_accounts\",\n    desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\n  },\n  tokenRequestCannotBeMade: {\n    code: \"request_cannot_be_made\",\n    desc: \"Token request cannot be made without authorization code or refresh token.\"\n  },\n  appendEmptyScopeError: {\n    code: \"cannot_append_empty_scope\",\n    desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\n  },\n  removeEmptyScopeError: {\n    code: \"cannot_remove_empty_scope\",\n    desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\n  },\n  appendScopeSetError: {\n    code: \"cannot_append_scopeset\",\n    desc: \"Cannot append ScopeSet due to error.\"\n  },\n  emptyInputScopeSetError: {\n    code: \"empty_input_scopeset\",\n    desc: \"Empty input ScopeSet cannot be processed.\"\n  },\n  DeviceCodePollingCancelled: {\n    code: \"device_code_polling_cancelled\",\n    desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\n  },\n  DeviceCodeExpired: {\n    code: \"device_code_expired\",\n    desc: \"Device code is expired.\"\n  },\n  NoAccountInSilentRequest: {\n    code: \"no_account_in_silent_request\",\n    desc: \"Please pass an account object, silent flow is not supported without account information\"\n  },\n  invalidCacheRecord: {\n    code: \"invalid_cache_record\",\n    desc: \"Cache record object was null or undefined.\"\n  },\n  invalidCacheEnvironment: {\n    code: \"invalid_cache_environment\",\n    desc: \"Invalid environment when attempting to create cache entry\"\n  },\n  noAccountFound: {\n    code: \"no_account_found\",\n    desc: \"No account found in cache for given key.\"\n  },\n  CachePluginError: {\n    code: \"no cache plugin set on CacheManager\",\n    desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\n  },\n  noCryptoObj: {\n    code: \"no_crypto_object\",\n    desc: \"No crypto object detected. This is required for the following operation: \"\n  },\n  invalidCacheType: {\n    code: \"invalid_cache_type\",\n    desc: \"Invalid cache type\"\n  },\n  unexpectedAccountType: {\n    code: \"unexpected_account_type\",\n    desc: \"Unexpected account type.\"\n  },\n  unexpectedCredentialType: {\n    code: \"unexpected_credential_type\",\n    desc: \"Unexpected credential type.\"\n  }\n};\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\n\nvar ClientAuthError =\n/** @class */\nfunction (_super) {\n  __extends$1(ClientAuthError, _super);\n\n  function ClientAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"ClientAuthError\";\n    Object.setPrototypeOf(_this, ClientAuthError.prototype);\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when client info object doesn't decode correctly.\r\n   * @param caughtError\r\n   */\n\n\n  ClientAuthError.createClientInfoDecodingError = function (caughtError) {\n    return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\n  };\n  /**\r\n   * Creates an error thrown if the client info is empty.\r\n   * @param rawClientInfo\r\n   */\n\n\n  ClientAuthError.createClientInfoEmptyError = function (rawClientInfo) {\n    return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, ClientAuthErrorMessage.clientInfoEmptyError.desc + \" Given Object: \" + rawClientInfo);\n  };\n  /**\r\n   * Creates an error thrown when the id token extraction errors out.\r\n   * @param err\r\n   */\n\n\n  ClientAuthError.createIdTokenParsingError = function (caughtExtractionError) {\n    return new ClientAuthError(ClientAuthErrorMessage.idTokenParsingError.code, ClientAuthErrorMessage.idTokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\n  };\n  /**\r\n   * Creates an error thrown when the id token string is null or empty.\r\n   * @param invalidRawTokenString\r\n   */\n\n\n  ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\n    return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\n  };\n  /**\r\n   * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n   */\n\n\n  ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\n    return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown if authority type is not valid.\r\n   * @param invalidAuthorityError\r\n   */\n\n\n  ClientAuthError.createInvalidAuthorityTypeError = function (givenUrl) {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidAuthorityType.code, ClientAuthErrorMessage.invalidAuthorityType.desc + \" Given Url: \" + givenUrl);\n  };\n  /**\r\n   * Creates an error thrown when the hash cannot be deserialized.\r\n   * @param invalidAuthorityError\r\n   */\n\n\n  ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\n    return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\n  };\n  /**\r\n   * Creates an error thrown when the state cannot be parsed.\r\n   * @param invalidState\r\n   */\n\n\n  ClientAuthError.createInvalidStateError = function (invalidState, errorString) {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" Invalid State: \" + invalidState + \", Root Err: \" + errorString);\n  };\n  /**\r\n   * Creates an error thrown when two states do not match.\r\n   */\n\n\n  ClientAuthError.createStateMismatchError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the nonce does not match.\r\n   */\n\n\n  ClientAuthError.createNonceMismatchError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the cached account and response account do not match.\r\n   */\n\n\n  ClientAuthError.createAccountMismatchError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.accountMismatchError.code, ClientAuthErrorMessage.accountMismatchError.desc);\n  };\n  /**\r\n   * Throws error if idToken is not correctly formed\r\n   * @param idToken\r\n   */\n\n\n  ClientAuthError.createInvalidIdTokenError = function (idToken) {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + JSON.stringify(idToken));\n  };\n  /**\r\n   * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n   */\n\n\n  ClientAuthError.createNoTokensFoundError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.noTokensFoundError.code, ClientAuthErrorMessage.noTokensFoundError.desc);\n  };\n  /**\r\n   * Creates an error in cache parsing.\r\n   */\n\n\n  ClientAuthError.createCacheParseError = function (cacheKey) {\n    return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, ClientAuthErrorMessage.cacheParseError.desc + \" Cache key: \" + cacheKey);\n  };\n  /**\r\n   * Throws error when renewing token without login.\r\n   */\n\n\n  ClientAuthError.createUserLoginRequiredError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\n  };\n  /**\r\n   * Throws error when multiple tokens are in cache for the given scope.\r\n   * @param scope\r\n   */\n\n\n  ClientAuthError.createMultipleMatchingTokensInCacheError = function (scope) {\n    return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\n  };\n  /**\r\n   * Throws error when multiple tokens are in cache for the given scope.\r\n   * @param scope\r\n   */\n\n\n  ClientAuthError.createMultipleMatchingAccountsInCacheError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code, ClientAuthErrorMessage.multipleMatchingAccounts.desc);\n  };\n  /**\r\n   * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n   */\n\n\n  ClientAuthError.createTokenRequestCannotBeMadeError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\n  };\n  /**\r\n   * Throws error when attempting to append a null, undefined or empty scope to a set\r\n   * @param givenScope\r\n   */\n\n\n  ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\n    return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\n  };\n  /**\r\n   * Throws error when attempting to append a null, undefined or empty scope to a set\r\n   * @param givenScope\r\n   */\n\n\n  ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\n    return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\n  };\n  /**\r\n   * Throws error when attempting to append null or empty ScopeSet.\r\n   * @param appendError\r\n   */\n\n\n  ClientAuthError.createAppendScopeSetError = function (appendError) {\n    return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\n  };\n  /**\r\n   * Throws error if ScopeSet is null or undefined.\r\n   * @param givenScopeSet\r\n   */\n\n\n  ClientAuthError.createEmptyInputScopeSetError = function (givenScopeSet) {\n    return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, ClientAuthErrorMessage.emptyInputScopeSetError.desc + \" Given ScopeSet: \" + givenScopeSet);\n  };\n  /**\r\n   * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\r\n   */\n\n\n  ClientAuthError.createDeviceCodeCancelledError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, \"\" + ClientAuthErrorMessage.DeviceCodePollingCancelled.desc);\n  };\n  /**\r\n   * Throws error if device code is expired\r\n   */\n\n\n  ClientAuthError.createDeviceCodeExpiredError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, \"\" + ClientAuthErrorMessage.DeviceCodeExpired.desc);\n  };\n  /**\r\n   * Throws error when silent requests are made without an account object\r\n   */\n\n\n  ClientAuthError.createNoAccountInSilentRequestError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, \"\" + ClientAuthErrorMessage.NoAccountInSilentRequest.desc);\n  };\n  /**\r\n   * Throws error when cache record is null or undefined.\r\n   */\n\n\n  ClientAuthError.createNullOrUndefinedCacheRecord = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\n  };\n  /**\r\n   * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\r\n   */\n\n\n  ClientAuthError.createInvalidCacheEnvironmentError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\n  };\n  /**\r\n   * Throws error when account is not found in cache.\r\n   */\n\n\n  ClientAuthError.createNoAccountFoundError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\n  };\n  /**\r\n   * Throws error if ICachePlugin not set on CacheManager.\r\n   */\n\n\n  ClientAuthError.createCachePluginError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, \"\" + ClientAuthErrorMessage.CachePluginError.desc);\n  };\n  /**\r\n   * Throws error if crypto object not found.\r\n   * @param operationName\r\n   */\n\n\n  ClientAuthError.createNoCryptoObjectError = function (operationName) {\n    return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, \"\" + ClientAuthErrorMessage.noCryptoObj.desc + operationName);\n  };\n  /**\r\n  * Throws error if cache type is invalid.\r\n  */\n\n\n  ClientAuthError.createInvalidCacheTypeError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, \"\" + ClientAuthErrorMessage.invalidCacheType.desc);\n  };\n  /**\r\n  * Throws error if unexpected account type.\r\n  */\n\n\n  ClientAuthError.createUnexpectedAccountTypeError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, \"\" + ClientAuthErrorMessage.unexpectedAccountType.desc);\n  };\n  /**\r\n  * Throws error if unexpected credential type.\r\n  */\n\n\n  ClientAuthError.createUnexpectedCredentialTypeError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, \"\" + ClientAuthErrorMessage.unexpectedCredentialType.desc);\n  };\n\n  return ClientAuthError;\n}(AuthError);\n/**\r\n * @hidden\r\n */\n\n\nvar StringUtils =\n/** @class */\nfunction () {\n  function StringUtils() {}\n  /**\r\n   * decode a JWT\r\n   *\r\n   * @param jwtToken\r\n   */\n\n\n  StringUtils.decodeJwt = function (jwtToken) {\n    if (StringUtils.isEmpty(jwtToken)) {\n      throw ClientAuthError.createIdTokenNullOrEmptyError(jwtToken);\n    }\n\n    var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n    var matches = idTokenPartsRegex.exec(jwtToken);\n\n    if (!matches || matches.length < 4) {\n      throw ClientAuthError.createIdTokenParsingError(\"Given token is malformed: \" + JSON.stringify(jwtToken));\n    }\n\n    var crackedToken = {\n      header: matches[1],\n      JWSPayload: matches[2],\n      JWSSig: matches[3]\n    };\n    return crackedToken;\n  };\n  /**\r\n   * Check if a string is empty.\r\n   *\r\n   * @param str\r\n   */\n\n\n  StringUtils.isEmpty = function (str) {\n    return typeof str === \"undefined\" || !str || 0 === str.length;\n  };\n\n  StringUtils.startsWith = function (str, search) {\n    return str.indexOf(search) === 0;\n  };\n\n  StringUtils.endsWith = function (str, search) {\n    return str.length >= search.length && str.lastIndexOf(search) === str.length - search.length;\n  };\n  /**\r\n   * Parses string into an object.\r\n   *\r\n   * @param query\r\n   */\n\n\n  StringUtils.queryStringToObject = function (query) {\n    var match; // Regex for replacing addition symbol with a space\n\n    var pl = /\\+/g;\n    var search = /([^&=]+)=([^&]*)/g;\n\n    var decode = function (s) {\n      return decodeURIComponent(decodeURIComponent(s.replace(pl, \" \")));\n    };\n\n    var obj = {};\n    match = search.exec(query);\n\n    while (match) {\n      obj[decode(match[1])] = decode(match[2]);\n      match = search.exec(query);\n    }\n\n    return obj;\n  };\n  /**\r\n   * Trims entries in an array.\r\n   *\r\n   * @param arr\r\n   */\n\n\n  StringUtils.trimArrayEntries = function (arr) {\n    return arr.map(function (entry) {\n      return entry.trim();\n    });\n  };\n  /**\r\n   * Removes empty strings from array\r\n   * @param arr\r\n   */\n\n\n  StringUtils.removeEmptyStringsFromArray = function (arr) {\n    return arr.filter(function (entry) {\n      return !StringUtils.isEmpty(entry);\n    });\n  };\n\n  return StringUtils;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Log message level.\r\n */\n\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n  LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\n  LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n  LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n})(LogLevel || (LogLevel = {}));\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\n\n\nvar Logger =\n/** @class */\nfunction () {\n  function Logger(loggerOptions) {\n    // Current log level, defaults to info.\n    this.level = LogLevel.Info;\n\n    if (loggerOptions) {\n      this.localCallback = loggerOptions.loggerCallback;\n      this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled;\n      this.level = loggerOptions.logLevel;\n    }\n  }\n  /**\r\n   * Log message with required options.\r\n   */\n\n\n  Logger.prototype.logMessage = function (logMessage, options) {\n    if (options.logLevel > this.level || !this.piiLoggingEnabled && options.containsPii) {\n      return;\n    }\n\n    var timestamp = new Date().toUTCString();\n    var logHeader = StringUtils.isEmpty(this.correlationId) ? \"[\" + timestamp + \"] : \" : \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\n    var log = logHeader + \" : \" + pkg.version + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage; // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\n\n    this.executeCallback(options.logLevel, log, options.containsPii);\n  };\n  /**\r\n   * Execute callback with message.\r\n   */\n\n\n  Logger.prototype.executeCallback = function (level, message, containsPii) {\n    if (this.localCallback) {\n      this.localCallback(level, message, containsPii);\n    }\n  };\n  /**\r\n   * Logs error messages.\r\n   */\n\n\n  Logger.prototype.error = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Error,\n      containsPii: false,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs error messages with PII.\r\n   */\n\n\n  Logger.prototype.errorPii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Error,\n      containsPii: true,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs warning messages.\r\n   */\n\n\n  Logger.prototype.warning = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Warning,\n      containsPii: false,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs warning messages with PII.\r\n   */\n\n\n  Logger.prototype.warningPii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Warning,\n      containsPii: true,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs info messages.\r\n   */\n\n\n  Logger.prototype.info = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Info,\n      containsPii: false,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs info messages with PII.\r\n   */\n\n\n  Logger.prototype.infoPii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Info,\n      containsPii: true,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs verbose messages.\r\n   */\n\n\n  Logger.prototype.verbose = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Verbose,\n      containsPii: false,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs verbose messages with PII.\r\n   */\n\n\n  Logger.prototype.verbosePii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Verbose,\n      containsPii: true,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Returns whether PII Logging is enabled or not.\r\n   */\n\n\n  Logger.prototype.isPiiLoggingEnabled = function () {\n    return this.piiLoggingEnabled || false;\n  };\n\n  return Logger;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n\nvar Constants = {\n  LIBRARY_NAME: \"MSAL.JS\",\n  SKU: \"msal.js.common\",\n  // Prefix for all library cache entries\n  CACHE_PREFIX: \"msal\",\n  // default authority\n  DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n  DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n  // ADFS String\n  ADFS: \"adfs\",\n  // Default AAD Instance Discovery Endpoint\n  AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n  // Resource delimiter - used for certain cache entries\n  RESOURCE_DELIM: \"|\",\n  // Placeholder for non-existent account ids/objects\n  NO_ACCOUNT: \"NO_ACCOUNT\",\n  // Claims\n  CLAIMS: \"claims\",\n  // Consumer UTID\n  CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n  // Default scopes\n  OPENID_SCOPE: \"openid\",\n  PROFILE_SCOPE: \"profile\",\n  OFFLINE_ACCESS_SCOPE: \"offline_access\",\n  // Default response type for authorization code flow\n  CODE_RESPONSE_TYPE: \"code\",\n  CODE_GRANT_TYPE: \"authorization_code\",\n  RT_GRANT_TYPE: \"refresh_token\",\n  FRAGMENT_RESPONSE_MODE: \"fragment\",\n  S256_CODE_CHALLENGE_METHOD: \"S256\",\n  URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n  AUTHORIZATION_PENDING: \"authorization_pending\",\n  NOT_DEFINED: \"not_defined\"\n};\n/**\r\n * Request header names\r\n */\n\nvar HeaderNames;\n\n(function (HeaderNames) {\n  HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\n})(HeaderNames || (HeaderNames = {}));\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\n\n\nvar PersistentCacheKeys;\n\n(function (PersistentCacheKeys) {\n  PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\n  PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\n  PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\n  PersistentCacheKeys[\"ERROR\"] = \"error\";\n  PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\n/**\r\n * String constants related to AAD Authority\r\n */\n\n\nvar AADAuthorityConstants;\n\n(function (AADAuthorityConstants) {\n  AADAuthorityConstants[\"COMMON\"] = \"common\";\n  AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\n  AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\n\n\nvar AADServerParamKeys;\n\n(function (AADServerParamKeys) {\n  AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\n  AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\n  AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\n  AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\n  AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\n  AADServerParamKeys[\"CLAIMS\"] = \"claims\";\n  AADServerParamKeys[\"SCOPE\"] = \"scope\";\n  AADServerParamKeys[\"ERROR\"] = \"error\";\n  AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\n  AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\n  AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\n  AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\n  AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\n  AADServerParamKeys[\"STATE\"] = \"state\";\n  AADServerParamKeys[\"NONCE\"] = \"nonce\";\n  AADServerParamKeys[\"PROMPT\"] = \"prompt\";\n  AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\n  AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\n  AADServerParamKeys[\"CODE\"] = \"code\";\n  AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\n  AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\n  AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\n  AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\n  AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\n  AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\n  AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\n  AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\n  AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\n  AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\n})(AADServerParamKeys || (AADServerParamKeys = {}));\n/**\r\n * IdToken claim string constants\r\n */\n\n\nvar IdTokenClaimName;\n\n(function (IdTokenClaimName) {\n  IdTokenClaimName[\"ISSUER\"] = \"iss\";\n  IdTokenClaimName[\"OBJID\"] = \"oid\";\n  IdTokenClaimName[\"SUBJECT\"] = \"sub\";\n  IdTokenClaimName[\"TENANTID\"] = \"tid\";\n  IdTokenClaimName[\"VERSION\"] = \"ver\";\n  IdTokenClaimName[\"PREF_USERNAME\"] = \"preferred_username\";\n  IdTokenClaimName[\"NAME\"] = \"name\";\n  IdTokenClaimName[\"NONCE\"] = \"nonce\";\n  IdTokenClaimName[\"EXPIRATION\"] = \"exp\";\n  IdTokenClaimName[\"HOME_OBJID\"] = \"home_oid\";\n  IdTokenClaimName[\"SESSIONID\"] = \"sid\";\n  IdTokenClaimName[\"CLOUD_INSTANCE_HOSTNAME\"] = \"cloud_instance_host_name\";\n})(IdTokenClaimName || (IdTokenClaimName = {}));\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\n\n\nvar PromptValue = {\n  LOGIN: \"login\",\n  SELECT_ACCOUNT: \"select_account\",\n  CONSENT: \"consent\",\n  NONE: \"none\"\n};\n/**\r\n * SSO Types - generated to populate hints\r\n */\n\nvar SSOTypes;\n\n(function (SSOTypes) {\n  SSOTypes[\"ACCOUNT\"] = \"account\";\n  SSOTypes[\"SID\"] = \"sid\";\n  SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\n  SSOTypes[\"ID_TOKEN\"] = \"id_token\";\n  SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\n  SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\n  SSOTypes[\"CONSUMERS\"] = \"consumers\";\n  SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\n  SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\n})(SSOTypes || (SSOTypes = {}));\n/**\r\n * Disallowed extra query parameters.\r\n */\n\n\nvar BlacklistedEQParams = [SSOTypes.SID, SSOTypes.LOGIN_HINT];\n/**\r\n * allowed values for codeVerifier\r\n */\n\nvar CodeChallengeMethodValues = {\n  PLAIN: \"plain\",\n  S256: \"S256\"\n};\n/**\r\n * allowed values for response_mode\r\n */\n\nvar ResponseMode;\n\n(function (ResponseMode) {\n  ResponseMode[\"QUERY\"] = \"query\";\n  ResponseMode[\"FRAGMENT\"] = \"fragment\";\n  ResponseMode[\"FORM_POST\"] = \"form_post\";\n})(ResponseMode || (ResponseMode = {}));\n/**\r\n * allowed grant_type\r\n */\n\n\nvar GrantType;\n\n(function (GrantType) {\n  GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\n  GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\n  GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\n  GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\n  GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\n  GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\n})(GrantType || (GrantType = {}));\n/**\r\n * Account types in Cache\r\n */\n\n\nvar CacheAccountType;\n\n(function (CacheAccountType) {\n  CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\n  CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\n  CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\n  CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\n})(CacheAccountType || (CacheAccountType = {}));\n/**\r\n * Separators used in cache\r\n */\n\n\nvar Separators;\n\n(function (Separators) {\n  Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\n  Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\n})(Separators || (Separators = {}));\n/**\r\n * Credentail Type stored in the cache\r\n */\n\n\nvar CredentialType;\n\n(function (CredentialType) {\n  CredentialType[\"ID_TOKEN\"] = \"IdToken\";\n  CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\n  CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\n})(CredentialType || (CredentialType = {}));\n/**\r\n * Credentail Type stored in the cache\r\n */\n\n\nvar CacheSchemaType;\n\n(function (CacheSchemaType) {\n  CacheSchemaType[\"ACCOUNT\"] = \"Account\";\n  CacheSchemaType[\"CREDENTIAL\"] = \"Credential\";\n  CacheSchemaType[\"APP_META_DATA\"] = \"AppMetadata\";\n  CacheSchemaType[\"TEMPORARY\"] = \"TempCache\";\n})(CacheSchemaType || (CacheSchemaType = {}));\n/**\r\n * Combine all cache types\r\n */\n\n\nvar CacheType;\n\n(function (CacheType) {\n  CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\n  CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\n  CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\n  CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\n  CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\n  CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\n  CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\n  CacheType[CacheType[\"APP_META_DATA\"] = 3001] = \"APP_META_DATA\";\n})(CacheType || (CacheType = {}));\n/**\r\n * More Cache related constants\r\n */\n\n\nvar APP_META_DATA = \"appmetadata\";\nvar ClientInfo = \"client_info\";\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\n\nvar CredentialEntity =\n/** @class */\nfunction () {\n  function CredentialEntity() {}\n  /**\r\n   * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n   */\n\n\n  CredentialEntity.prototype.generateAccountId = function () {\n    return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\n  };\n  /**\r\n   * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n   */\n\n\n  CredentialEntity.prototype.generateCredentialId = function () {\n    return CredentialEntity.generateCredentialIdForCacheKey(this.credentialType, this.clientId, this.realm, this.familyId);\n  };\n  /**\r\n   * Generate target key component as per schema: <target>\r\n   */\n\n\n  CredentialEntity.prototype.generateTarget = function () {\n    return CredentialEntity.generateTargetForCacheKey(this.target);\n  };\n  /**\r\n   * generates credential key\r\n   */\n\n\n  CredentialEntity.prototype.generateCredentialKey = function () {\n    return CredentialEntity.generateCredentialCacheKey(this.homeAccountId, this.environment, this.credentialType, this.clientId, this.realm, this.target, this.familyId);\n  };\n  /**\r\n   * returns the type of the cache (in this case credential)\r\n   */\n\n\n  CredentialEntity.prototype.generateType = function () {\n    switch (this.credentialType) {\n      case CredentialType.ID_TOKEN:\n        return CacheType.ID_TOKEN;\n\n      case CredentialType.ACCESS_TOKEN:\n        return CacheType.ACCESS_TOKEN;\n\n      case CredentialType.REFRESH_TOKEN:\n        return CacheType.REFRESH_TOKEN;\n\n      default:\n        {\n          throw ClientAuthError.createUnexpectedCredentialTypeError();\n        }\n    }\n  };\n  /**\r\n   * helper function to return `CredentialType`\r\n   * @param key\r\n   */\n\n\n  CredentialEntity.getCredentialType = function (key) {\n    if (key.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) !== -1) {\n      return CredentialType.ACCESS_TOKEN;\n    } else if (key.indexOf(CredentialType.ID_TOKEN.toLowerCase()) !== -1) {\n      return CredentialType.ID_TOKEN;\n    } else if (key.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) !== -1) {\n      return CredentialType.REFRESH_TOKEN;\n    }\n\n    return Constants.NOT_DEFINED;\n  };\n  /**\r\n   * generates credential key\r\n   */\n\n\n  CredentialEntity.generateCredentialCacheKey = function (homeAccountId, environment, credentialType, clientId, realm, target, familyId) {\n    var credentialKey = [this.generateAccountIdForCacheKey(homeAccountId, environment), this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId), this.generateTargetForCacheKey(target)];\n    return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n  };\n  /**\r\n   * generates Account Id for keys\r\n   * @param homeAccountId\r\n   * @param environment\r\n   */\n\n\n  CredentialEntity.generateAccountIdForCacheKey = function (homeAccountId, environment) {\n    var accountId = [homeAccountId, environment];\n    return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n  };\n  /**\r\n   * Generates Credential Id for keys\r\n   * @param credentialType\r\n   * @param realm\r\n   * @param clientId\r\n   * @param familyId\r\n   */\n\n\n  CredentialEntity.generateCredentialIdForCacheKey = function (credentialType, clientId, realm, familyId) {\n    var clientOrFamilyId = credentialType === CredentialType.REFRESH_TOKEN ? familyId || clientId : clientId;\n    var credentialId = [credentialType, clientOrFamilyId, realm || \"\"];\n    return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n  };\n  /**\r\n   * Generate target key component as per schema: <target>\r\n   */\n\n\n  CredentialEntity.generateTargetForCacheKey = function (scopes) {\n    return (scopes || \"\").toLowerCase();\n  };\n\n  return CredentialEntity;\n}();\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\n\n\nvar ClientConfigurationErrorMessage = {\n  redirectUriNotSet: {\n    code: \"redirect_uri_empty\",\n    desc: \"A redirect URI is required for all calls, and none has been set.\"\n  },\n  postLogoutUriNotSet: {\n    code: \"post_logout_uri_empty\",\n    desc: \"A post logout redirect has not been set.\"\n  },\n  claimsRequestParsingError: {\n    code: \"claims_request_parsing_error\",\n    desc: \"Could not parse the given claims request object.\"\n  },\n  authorityUriInsecure: {\n    code: \"authority_uri_insecure\",\n    desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\n  },\n  urlParseError: {\n    code: \"url_parse_error\",\n    desc: \"URL could not be parsed into appropriate segments.\"\n  },\n  urlEmptyError: {\n    code: \"empty_url_error\",\n    desc: \"URL was empty or null.\"\n  },\n  emptyScopesError: {\n    code: \"empty_input_scopes_error\",\n    desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\n  },\n  nonArrayScopesError: {\n    code: \"nonarray_input_scopes_error\",\n    desc: \"Scopes cannot be passed as non-array.\"\n  },\n  clientIdSingleScopeError: {\n    code: \"clientid_input_scopes_error\",\n    desc: \"Client ID can only be provided as a single scope.\"\n  },\n  invalidPrompt: {\n    code: \"invalid_prompt_value\",\n    desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'.  Please see here for valid configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\n  },\n  tokenRequestEmptyError: {\n    code: \"token_request_empty\",\n    desc: \"Token request was empty and not found in cache.\"\n  },\n  logoutRequestEmptyError: {\n    code: \"logout_request_empty\",\n    desc: \"The logout request was null or undefined.\"\n  },\n  invalidCodeChallengeMethod: {\n    code: \"invalid_code_challenge_method\",\n    desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\n  },\n  invalidCodeChallengeParams: {\n    code: \"pkce_params_missing\",\n    desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\n  },\n  knownAuthoritiesAndCloudDiscoveryMetadata: {\n    code: \"invalid_known_authorities\",\n    desc: \"knownAuthorities and cloudDiscoveryMetadata cannot both be provided. Please provide cloudDiscoveryMetadata object for AAD, knownAuthorities otherwise.\"\n  },\n  invalidCloudDiscoveryMetadata: {\n    code: \"invalid_cloud_discovery_metadata\",\n    desc: \"Invalid cloudDiscoveryMetadata provided. Must be a JSON object containing tenant_discovery_endpoint and metadata fields\"\n  },\n  untrustedAuthority: {\n    code: \"untrusted_authority\",\n    desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\n  }\n};\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\n\nvar ClientConfigurationError =\n/** @class */\nfunction (_super) {\n  __extends$1(ClientConfigurationError, _super);\n\n  function ClientConfigurationError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"ClientConfigurationError\";\n    Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n   */\n\n\n  ClientConfigurationError.createRedirectUriEmptyError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n   */\n\n\n  ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the claims request could not be successfully parsed\r\n   */\n\n\n  ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\n  };\n  /**\r\n   * Creates an error thrown if authority uri is given an insecure protocol.\r\n   * @param urlString\r\n   */\n\n\n  ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\n  };\n  /**\r\n   * Creates an error thrown if URL string does not parse into separate segments.\r\n   * @param urlString\r\n   */\n\n\n  ClientConfigurationError.createUrlParseError = function (urlParseError) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\n  };\n  /**\r\n   * Creates an error thrown if URL string is empty or null.\r\n   * @param urlString\r\n   */\n\n\n  ClientConfigurationError.createUrlEmptyError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\n  };\n  /**\r\n   * Error thrown when scopes are not an array\r\n   * @param inputScopes\r\n   */\n\n\n  ClientConfigurationError.createScopesNonArrayError = function (inputScopes) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopesError.code, ClientConfigurationErrorMessage.nonArrayScopesError.desc + \" Given Scopes: \" + inputScopes);\n  };\n  /**\r\n   * Error thrown when scopes are empty.\r\n   * @param scopesValue\r\n   */\n\n\n  ClientConfigurationError.createEmptyScopesArrayError = function (inputScopes) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, ClientConfigurationErrorMessage.emptyScopesError.desc + \" Given Scopes: \" + inputScopes);\n  };\n  /**\r\n   * Error thrown when client id scope is not provided as single scope.\r\n   * @param inputScopes\r\n   */\n\n\n  ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\n  };\n  /**\r\n   * Error thrown when prompt is not an allowed type.\r\n   * @param promptValue\r\n   */\n\n\n  ClientConfigurationError.createInvalidPromptError = function (promptValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\n  };\n  /**\r\n   * Throws error when token request is empty and nothing cached in storage.\r\n   */\n\n\n  ClientConfigurationError.createEmptyLogoutRequestError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\n  };\n  /**\r\n   * Throws error when token request is empty and nothing cached in storage.\r\n   */\n\n\n  ClientConfigurationError.createEmptyTokenRequestError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\n  };\n  /**\r\n   * Throws error when an invalid code_challenge_method is passed by the user\r\n   */\n\n\n  ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\n  };\n  /**\r\n   * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n   */\n\n\n  ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\n  };\n  /**\r\n   * Throws an error when the user passes both knownAuthorities and cloudDiscoveryMetadata\r\n   */\n\n\n  ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.desc);\n  };\n  /**\r\n   * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n   */\n\n\n  ClientConfigurationError.createInvalidCloudDiscoveryMetadataError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\n  };\n  /**\r\n   * Throws error when provided authority is not a member of the trusted host list\r\n   */\n\n\n  ClientConfigurationError.createUntrustedAuthorityError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\n  };\n\n  return ClientConfigurationError;\n}(ClientAuthError);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\n\n\nvar ScopeSet =\n/** @class */\nfunction () {\n  function ScopeSet(inputScopes) {\n    var _this = this; // Filter empty string and null/undefined array items\n\n\n    var scopeArr = inputScopes ? StringUtils.trimArrayEntries(__spreadArrays$1(inputScopes)) : [];\n    var filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : []; // Validate and filter scopes (validate function throws if validation fails)\n\n    this.validateInputScopes(filteredInput);\n    this.scopes = new Set(); // Iterator in constructor not supported by IE11\n\n    filteredInput.forEach(function (scope) {\n      return _this.scopes.add(scope);\n    });\n  }\n  /**\r\n   * Factory method to create ScopeSet from space-delimited string\r\n   * @param inputScopeString\r\n   * @param appClientId\r\n   * @param scopesRequired\r\n  */\n\n\n  ScopeSet.fromString = function (inputScopeString) {\n    inputScopeString = inputScopeString || \"\";\n    var inputScopes = inputScopeString.split(\" \");\n    return new ScopeSet(inputScopes);\n  };\n  /**\r\n   * Used to validate the scopes input parameter requested  by the developer.\r\n   * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n   * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n  */\n\n\n  ScopeSet.prototype.validateInputScopes = function (inputScopes) {\n    // Check if scopes are required but not given or is an empty array\n    if (!inputScopes || inputScopes.length < 1) {\n      throw ClientConfigurationError.createEmptyScopesArrayError(inputScopes);\n    }\n  };\n  /**\r\n   * Check if a given scope is present in this set of scopes.\r\n   * @param scope\r\n   */\n\n\n  ScopeSet.prototype.containsScope = function (scope) {\n    return !StringUtils.isEmpty(scope) ? this.scopes.has(scope) : false;\n  };\n  /**\r\n   * Check if a set of scopes is present in this set of scopes.\r\n   * @param scopeSet\r\n   */\n\n\n  ScopeSet.prototype.containsScopeSet = function (scopeSet) {\n    var _this = this;\n\n    if (!scopeSet) {\n      return false;\n    }\n\n    return this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) {\n      return _this.containsScope(scope);\n    });\n  };\n  /**\r\n   * Appends single scope if passed\r\n   * @param newScope\r\n   */\n\n\n  ScopeSet.prototype.appendScope = function (newScope) {\n    if (!StringUtils.isEmpty(newScope)) {\n      this.scopes.add(newScope.trim());\n    }\n  };\n  /**\r\n   * Appends multiple scopes if passed\r\n   * @param newScopes\r\n   */\n\n\n  ScopeSet.prototype.appendScopes = function (newScopes) {\n    var _this = this;\n\n    try {\n      newScopes.forEach(function (newScope) {\n        return _this.appendScope(newScope);\n      });\n    } catch (e) {\n      throw ClientAuthError.createAppendScopeSetError(e);\n    }\n  };\n  /**\r\n   * Removes element from set of scopes.\r\n   * @param scope\r\n   */\n\n\n  ScopeSet.prototype.removeScope = function (scope) {\n    if (StringUtils.isEmpty(scope)) {\n      throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\n    }\n\n    this.scopes.delete(scope.trim());\n  };\n  /**\r\n   * Combines an array of scopes with the current set of scopes.\r\n   * @param otherScopes\r\n   */\n\n\n  ScopeSet.prototype.unionScopeSets = function (otherScopes) {\n    if (!otherScopes) {\n      throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\n    }\n\n    var unionScopes = new Set(); // Iterator in constructor not supported in IE11\n\n    otherScopes.scopes.forEach(function (scope) {\n      return unionScopes.add(scope);\n    });\n    this.scopes.forEach(function (scope) {\n      return unionScopes.add(scope);\n    });\n    return unionScopes;\n  };\n  /**\r\n   * Check if scopes intersect between this set and another.\r\n   * @param otherScopes\r\n   */\n\n\n  ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\n    if (!otherScopes) {\n      throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\n    }\n\n    var unionScopes = this.unionScopeSets(otherScopes); // Do not allow offline_access to be the only intersecting scope\n\n    var sizeOtherScopes = otherScopes.getScopeCount();\n    var sizeThisScopes = this.getScopeCount();\n    var sizeUnionScopes = unionScopes.size;\n    return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n  };\n  /**\r\n   * Returns size of set of scopes.\r\n   */\n\n\n  ScopeSet.prototype.getScopeCount = function () {\n    return this.scopes.size;\n  };\n  /**\r\n   * Returns the scopes as an array of string values\r\n   */\n\n\n  ScopeSet.prototype.asArray = function () {\n    var array = [];\n    this.scopes.forEach(function (val) {\n      return array.push(val);\n    });\n    return array;\n  };\n  /**\r\n   * Prints scopes into a space-delimited string\r\n   */\n\n\n  ScopeSet.prototype.printScopes = function () {\n    if (this.scopes) {\n      var scopeArr = this.asArray();\n      return scopeArr.join(\" \");\n    }\n\n    return \"\";\n  };\n  /**\r\n   * Prints scopes into a space-delimited lower-case string (used for caching)\r\n   */\n\n\n  ScopeSet.prototype.printScopesLowerCase = function () {\n    return this.printScopes().toLowerCase();\n  };\n\n  return ScopeSet;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Function to build a client info object\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\n\n\nfunction buildClientInfo(rawClientInfo, crypto) {\n  if (StringUtils.isEmpty(rawClientInfo)) {\n    throw ClientAuthError.createClientInfoEmptyError(rawClientInfo);\n  }\n\n  try {\n    var decodedClientInfo = crypto.base64Decode(rawClientInfo);\n    return JSON.parse(decodedClientInfo);\n  } catch (e) {\n    throw ClientAuthError.createClientInfoDecodingError(e);\n  }\n}\n\nvar TrustedAuthority =\n/** @class */\nfunction () {\n  function TrustedAuthority() {}\n  /**\r\n   * Set the CloudDiscoveryMetadata object from knownAuthorities or cloudDiscoveryMetadata passed into the app config\r\n   * @param knownAuthorities\r\n   * @param cloudDiscoveryMetadata\r\n   */\n\n\n  TrustedAuthority.setTrustedAuthoritiesFromConfig = function (knownAuthorities, cloudDiscoveryMetadata) {\n    if (!this.getTrustedHostList().length) {\n      if (knownAuthorities.length > 0 && !StringUtils.isEmpty(cloudDiscoveryMetadata)) {\n        throw ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError();\n      }\n\n      this.createCloudDiscoveryMetadataFromKnownAuthorities(knownAuthorities);\n\n      try {\n        if (cloudDiscoveryMetadata) {\n          var parsedMetadata = JSON.parse(cloudDiscoveryMetadata);\n          this.saveCloudDiscoveryMetadata(parsedMetadata.metadata);\n        }\n      } catch (e) {\n        throw ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\n      }\n    }\n  };\n  /**\r\n   * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n   * @param networkInterface\r\n   */\n\n\n  TrustedAuthority.setTrustedAuthoritiesFromNetwork = function (authorityToVerify, networkInterface) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var instanceDiscoveryEndpoint, response, metadata, e_1, host;\n      return __generator$1(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            instanceDiscoveryEndpoint = \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + authorityToVerify.urlString + \"oauth2/v2.0/authorize\";\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint)];\n\n          case 2:\n            response = _a.sent();\n            metadata = response.body.metadata;\n            this.saveCloudDiscoveryMetadata(metadata);\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent();\n            return [2\n            /*return*/\n            ];\n\n          case 4:\n            host = authorityToVerify.getUrlComponents().HostNameAndPort;\n\n            if (this.getTrustedHostList().length > 0 && !this.IsInTrustedHostList(host)) {\n              // Custom Domain scenario, host is trusted because Instance Discovery call succeeded \n              this.createCloudDiscoveryMetadataFromKnownAuthorities([host]);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param metadata\r\n   */\n\n\n  TrustedAuthority.saveCloudDiscoveryMetadata = function (metadata) {\n    metadata.forEach(function (entry) {\n      var authorities = entry.aliases;\n      authorities.forEach(function (authority) {\n        TrustedAuthority.TrustedHostList[authority.toLowerCase()] = entry;\n      });\n    });\n  };\n  /**\r\n   * Create a generic metadata object for each host passed to knownAuthorities.\r\n   * This is mostly useful for B2C or ADFS scenarios\r\n   * @param knownAuthorities\r\n   */\n\n\n  TrustedAuthority.createCloudDiscoveryMetadataFromKnownAuthorities = function (knownAuthorities) {\n    var _this = this;\n\n    knownAuthorities.forEach(function (authority) {\n      _this.TrustedHostList[authority.toLowerCase()] = {\n        preferred_cache: authority.toLowerCase(),\n        preferred_network: authority.toLowerCase(),\n        aliases: [authority.toLowerCase()]\n      };\n    });\n  };\n\n  TrustedAuthority.getTrustedHostList = function () {\n    return Object.keys(this.TrustedHostList);\n  };\n  /**\r\n   * Get metadata for the provided host\r\n   * @param host\r\n   */\n\n\n  TrustedAuthority.getCloudDiscoveryMetadata = function (host) {\n    return this.TrustedHostList[host.toLowerCase()] || null;\n  };\n  /**\r\n   * Checks to see if the host is in a list of trusted hosts\r\n   * @param host\r\n   */\n\n\n  TrustedAuthority.IsInTrustedHostList = function (host) {\n    return Object.keys(this.TrustedHostList).indexOf(host.toLowerCase()) > -1;\n  };\n\n  TrustedAuthority.TrustedHostList = {};\n  return TrustedAuthority;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      clientInfo: Full base64 encoded client info received from ESTS\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n * }\r\n */\n\n\nvar AccountEntity =\n/** @class */\nfunction () {\n  function AccountEntity() {}\n  /**\r\n   * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n   */\n\n\n  AccountEntity.prototype.generateAccountId = function () {\n    var accountId = [this.homeAccountId, this.environment];\n    return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n  };\n  /**\r\n   * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n   */\n\n\n  AccountEntity.prototype.generateAccountKey = function () {\n    return AccountEntity.generateAccountCacheKey({\n      homeAccountId: this.homeAccountId,\n      environment: this.environment,\n      tenantId: this.realm,\n      username: this.username\n    });\n  };\n  /**\r\n   * returns the type of the cache (in this case account)\r\n   */\n\n\n  AccountEntity.prototype.generateType = function () {\n    switch (this.authorityType) {\n      case CacheAccountType.ADFS_ACCOUNT_TYPE:\n        return CacheType.ADFS;\n\n      case CacheAccountType.MSAV1_ACCOUNT_TYPE:\n        return CacheType.MSA;\n\n      case CacheAccountType.MSSTS_ACCOUNT_TYPE:\n        return CacheType.MSSTS;\n\n      case CacheAccountType.GENERIC_ACCOUNT_TYPE:\n        return CacheType.GENERIC;\n\n      default:\n        {\n          throw ClientAuthError.createUnexpectedAccountTypeError();\n        }\n    }\n  };\n  /**\r\n   * Returns the AccountInfo interface for this account.\r\n   */\n\n\n  AccountEntity.prototype.getAccountInfo = function () {\n    return {\n      homeAccountId: this.homeAccountId,\n      environment: this.environment,\n      tenantId: this.realm,\n      username: this.username\n    };\n  };\n  /**\r\n   * Generates account key from interface\r\n   * @param accountInterface\r\n   */\n\n\n  AccountEntity.generateAccountCacheKey = function (accountInterface) {\n    var accountKey = [accountInterface.homeAccountId, accountInterface.environment || \"\", accountInterface.tenantId || \"\"];\n    return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n  };\n  /**\r\n   * Build Account cache from IdToken, clientInfo and authority/policy\r\n   * @param clientInfo\r\n   * @param authority\r\n   * @param idToken\r\n   * @param policy\r\n   */\n\n\n  AccountEntity.createAccount = function (clientInfo, authority, idToken, crypto) {\n    var account = new AccountEntity();\n    account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n    account.clientInfo = clientInfo;\n    var clientInfoObj = buildClientInfo(clientInfo, crypto);\n    account.homeAccountId = \"\" + clientInfoObj.uid + Separators.CLIENT_INFO_SEPARATOR + clientInfoObj.utid;\n    var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\n    var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\n\n    if (StringUtils.isEmpty(env)) {\n      throw ClientAuthError.createInvalidCacheEnvironmentError();\n    }\n\n    account.environment = env;\n    account.realm = idToken.claims.tid;\n\n    if (idToken) {\n      // How do you account for MSA CID here?\n      var localAccountId = !StringUtils.isEmpty(idToken.claims.oid) ? idToken.claims.oid : idToken.claims.sid;\n      account.localAccountId = localAccountId;\n      account.username = idToken.claims.preferred_username;\n      account.name = idToken.claims.name;\n    }\n\n    return account;\n  };\n  /**\r\n   * Build ADFS account type\r\n   * @param authority\r\n   * @param idToken\r\n   */\n\n\n  AccountEntity.createADFSAccount = function (authority, idToken) {\n    var account = new AccountEntity();\n    account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\n    account.homeAccountId = idToken.claims.sub;\n    var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\n    var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\n\n    if (StringUtils.isEmpty(env)) {\n      throw ClientAuthError.createInvalidCacheEnvironmentError();\n    }\n\n    account.environment = env;\n    account.username = idToken.claims.upn; // add uniqueName to claims\n    // account.name = idToken.claims.uniqueName;\n\n    return account;\n  };\n\n  return AccountEntity;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n */\n\n\nvar CacheManager =\n/** @class */\nfunction () {\n  function CacheManager() {}\n  /**\r\n   * Returns all accounts in cache\r\n   */\n\n\n  CacheManager.prototype.getAllAccounts = function () {\n    var currentAccounts = this.getAccountsFilteredBy();\n    var accountValues = Object.keys(currentAccounts).map(function (accountKey) {\n      return currentAccounts[accountKey];\n    });\n    var numAccounts = accountValues.length;\n\n    if (numAccounts < 1) {\n      return null;\n    } else {\n      var allAccounts = accountValues.map(function (value) {\n        var accountObj = new AccountEntity();\n        accountObj = CacheManager.toObject(accountObj, value);\n        return accountObj.getAccountInfo();\n      });\n      return allAccounts;\n    }\n  };\n  /**\r\n   * saves a cache record\r\n   * @param cacheRecord\r\n   */\n\n\n  CacheManager.prototype.saveCacheRecord = function (cacheRecord) {\n    if (!cacheRecord) {\n      throw ClientAuthError.createNullOrUndefinedCacheRecord();\n    }\n\n    if (!!cacheRecord.account) {\n      this.saveAccount(cacheRecord.account);\n    }\n\n    if (!!cacheRecord.idToken) {\n      this.saveCredential(cacheRecord.idToken);\n    }\n\n    if (!!cacheRecord.accessToken) {\n      this.saveAccessToken(cacheRecord.accessToken);\n    }\n\n    if (!!cacheRecord.refreshToken) {\n      this.saveCredential(cacheRecord.refreshToken);\n    }\n  };\n  /**\r\n   * saves account into cache\r\n   * @param account\r\n   */\n\n\n  CacheManager.prototype.saveAccount = function (account) {\n    var key = account.generateAccountKey();\n    this.setItem(key, account, CacheSchemaType.ACCOUNT);\n  };\n  /**\r\n   * saves credential - accessToken, idToken or refreshToken into cache\r\n   * @param credential\r\n   */\n\n\n  CacheManager.prototype.saveCredential = function (credential) {\n    var key = credential.generateCredentialKey();\n    this.setItem(key, credential, CacheSchemaType.CREDENTIAL);\n  };\n  /**\r\n   * saves access token credential\r\n   * @param credential\r\n   */\n\n\n  CacheManager.prototype.saveAccessToken = function (credential) {\n    var _this = this;\n\n    var currentTokenCache = this.getCredentialsFilteredBy({\n      clientId: credential.clientId,\n      credentialType: CredentialType.ACCESS_TOKEN,\n      environment: credential.environment,\n      homeAccountId: credential.homeAccountId,\n      realm: credential.realm\n    });\n    var currentScopes = ScopeSet.fromString(credential.target);\n    var currentAccessTokens = Object.keys(currentTokenCache.accessTokens).map(function (key) {\n      return currentTokenCache.accessTokens[key];\n    });\n\n    if (currentAccessTokens) {\n      currentAccessTokens.forEach(function (tokenEntity) {\n        var tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n\n        if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n          _this.removeCredential(tokenEntity);\n        }\n      });\n    }\n\n    this.saveCredential(credential);\n  };\n  /**\r\n   * Given account key retrieve an account\r\n   * @param key\r\n   */\n\n\n  CacheManager.prototype.getAccount = function (key) {\n    var account = this.getItem(key, CacheSchemaType.ACCOUNT);\n    return account;\n  };\n  /**\r\n   * retrieve a credential - accessToken, idToken or refreshToken; given the cache key\r\n   * @param key\r\n   */\n\n\n  CacheManager.prototype.getCredential = function (key) {\n    return this.getItem(key, CacheSchemaType.CREDENTIAL);\n  };\n  /**\r\n   * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n   * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n   * @param homeAccountId\r\n   * @param environment\r\n   * @param realm\r\n   */\n\n\n  CacheManager.prototype.getAccountsFilteredBy = function (accountFilter) {\n    return this.getAccountsFilteredByInternal(accountFilter ? accountFilter.homeAccountId : \"\", accountFilter ? accountFilter.environment : \"\", accountFilter ? accountFilter.realm : \"\");\n  };\n  /**\r\n   * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n   * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n   * @param homeAccountId\r\n   * @param environment\r\n   * @param realm\r\n   */\n\n\n  CacheManager.prototype.getAccountsFilteredByInternal = function (homeAccountId, environment, realm) {\n    var _this = this;\n\n    var allCacheKeys = this.getKeys();\n    var matchingAccounts = {};\n    allCacheKeys.forEach(function (cacheKey) {\n      var entity = _this.getAccountEntity(cacheKey);\n\n      if (!entity) {\n        return null;\n      }\n\n      if (!StringUtils.isEmpty(homeAccountId) && !_this.matchHomeAccountId(entity, homeAccountId)) {\n        return;\n      }\n\n      if (!StringUtils.isEmpty(environment) && !_this.matchEnvironment(entity, environment)) {\n        return;\n      }\n\n      if (!StringUtils.isEmpty(realm) && !_this.matchRealm(entity, realm)) {\n        return;\n      }\n\n      matchingAccounts[cacheKey] = entity;\n    });\n    return matchingAccounts;\n  };\n  /**\r\n   * retrieve credentails matching all provided filters; if no filter is set, get all credentials\r\n   * @param homeAccountId\r\n   * @param environment\r\n   * @param credentialType\r\n   * @param clientId\r\n   * @param realm\r\n   * @param target\r\n   */\n\n\n  CacheManager.prototype.getCredentialsFilteredBy = function (filter) {\n    return this.getCredentialsFilteredByInternal(filter.homeAccountId, filter.environment, filter.credentialType, filter.clientId, filter.realm, filter.target);\n  };\n  /**\r\n   * Support function to help match credentials\r\n   * @param homeAccountId\r\n   * @param environment\r\n   * @param credentialType\r\n   * @param clientId\r\n   * @param realm\r\n   * @param target\r\n   */\n\n\n  CacheManager.prototype.getCredentialsFilteredByInternal = function (homeAccountId, environment, credentialType, clientId, realm, target) {\n    var _this = this;\n\n    var allCacheKeys = this.getKeys();\n    var matchingCredentials = {\n      idTokens: {},\n      accessTokens: {},\n      refreshTokens: {}\n    };\n    allCacheKeys.forEach(function (cacheKey) {\n      var entity; // don't parse any non-credential type cache entities\n\n      var credType = CredentialEntity.getCredentialType(cacheKey);\n\n      if (credType === Constants.NOT_DEFINED) {\n        return;\n      } // Attempt retrieval\n\n\n      try {\n        entity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\n      } catch (e) {\n        return;\n      }\n\n      if (!StringUtils.isEmpty(homeAccountId) && !_this.matchHomeAccountId(entity, homeAccountId)) {\n        return;\n      }\n\n      if (!StringUtils.isEmpty(environment) && !_this.matchEnvironment(entity, environment)) {\n        return;\n      }\n\n      if (!StringUtils.isEmpty(realm) && !_this.matchRealm(entity, realm)) {\n        return;\n      }\n\n      if (!StringUtils.isEmpty(credentialType) && !_this.matchCredentialType(entity, credentialType)) {\n        return;\n      }\n\n      if (!StringUtils.isEmpty(clientId) && !_this.matchClientId(entity, clientId)) {\n        return;\n      } // idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n      // TODO: Add case for target specific refresh tokens\n\n\n      if (!StringUtils.isEmpty(target) && !_this.matchTarget(entity, target)) {\n        return;\n      }\n\n      switch (credType) {\n        case CredentialType.ID_TOKEN:\n          matchingCredentials.idTokens[cacheKey] = entity;\n          break;\n\n        case CredentialType.ACCESS_TOKEN:\n          matchingCredentials.accessTokens[cacheKey] = entity;\n          break;\n\n        case CredentialType.REFRESH_TOKEN:\n          matchingCredentials.refreshTokens[cacheKey] = entity;\n          break;\n      }\n    });\n    return matchingCredentials;\n  };\n  /**\r\n   * Removes all app metadata objects from cache.\r\n   */\n\n\n  CacheManager.prototype.removeAppMetadata = function () {\n    var _this = this;\n\n    var allCacheKeys = this.getKeys();\n    allCacheKeys.forEach(function (cacheKey) {\n      if (_this.isAppMetadata(cacheKey)) {\n        _this.removeItem(cacheKey, CacheSchemaType.APP_META_DATA);\n      }\n    });\n    return true;\n  };\n  /**\r\n   * Removes all accounts and related tokens from cache.\r\n   */\n\n\n  CacheManager.prototype.removeAllAccounts = function () {\n    var _this = this;\n\n    var allCacheKeys = this.getKeys();\n    allCacheKeys.forEach(function (cacheKey) {\n      var entity = _this.getAccountEntity(cacheKey);\n\n      if (!entity) {\n        return;\n      }\n\n      _this.removeAccount(cacheKey);\n    });\n    return true;\n  };\n  /**\r\n   * returns a boolean if the given account is removed\r\n   * @param account\r\n   */\n\n\n  CacheManager.prototype.removeAccount = function (accountKey) {\n    var account = this.getAccount(accountKey);\n\n    if (!account) {\n      throw ClientAuthError.createNoAccountFoundError();\n    }\n\n    return this.removeAccountContext(account) && this.removeItem(accountKey, CacheSchemaType.ACCOUNT);\n  };\n  /**\r\n   * returns a boolean if the given account is removed\r\n   * @param account\r\n   */\n\n\n  CacheManager.prototype.removeAccountContext = function (account) {\n    var _this = this;\n\n    var allCacheKeys = this.getKeys();\n    var accountId = account.generateAccountId();\n    allCacheKeys.forEach(function (cacheKey) {\n      // don't parse any non-credential type cache entities\n      if (CredentialEntity.getCredentialType(cacheKey) === Constants.NOT_DEFINED) {\n        return;\n      }\n\n      var cacheEntity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\n\n      if (!!cacheEntity && accountId === cacheEntity.generateAccountId()) {\n        _this.removeCredential(cacheEntity);\n      }\n    });\n    return true;\n  };\n  /**\r\n   * returns a boolean if the given credential is removed\r\n   * @param credential\r\n   */\n\n\n  CacheManager.prototype.removeCredential = function (credential) {\n    var key = credential.generateCredentialKey();\n    return this.removeItem(key, CacheSchemaType.CREDENTIAL);\n  };\n  /**\r\n   *\r\n   * @param value\r\n   * @param homeAccountId\r\n   */\n\n\n  CacheManager.prototype.matchHomeAccountId = function (entity, homeAccountId) {\n    return entity.homeAccountId && homeAccountId === entity.homeAccountId;\n  };\n  /**\r\n   *\r\n   * @param value\r\n   * @param environment\r\n   */\n\n\n  CacheManager.prototype.matchEnvironment = function (entity, environment) {\n    var cloudMetadata = TrustedAuthority.getCloudDiscoveryMetadata(environment);\n\n    if (cloudMetadata && cloudMetadata.aliases.indexOf(entity.environment) > -1) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\r\n   *\r\n   * @param entity\r\n   * @param credentialType\r\n   */\n\n\n  CacheManager.prototype.matchCredentialType = function (entity, credentialType) {\n    return entity.credentialType && credentialType.toLowerCase() === entity.credentialType.toLowerCase();\n  };\n  /**\r\n   *\r\n   * @param entity\r\n   * @param clientId\r\n   */\n\n\n  CacheManager.prototype.matchClientId = function (entity, clientId) {\n    return entity.clientId && clientId === entity.clientId;\n  };\n  /**\r\n   *\r\n   * @param entity\r\n   * @param realm\r\n   */\n\n\n  CacheManager.prototype.matchRealm = function (entity, realm) {\n    return entity.realm && realm === entity.realm;\n  };\n  /**\r\n   * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n   * @param entity\r\n   * @param target\r\n   */\n\n\n  CacheManager.prototype.matchTarget = function (entity, target) {\n    if (entity.credentialType !== CredentialType.ACCESS_TOKEN || StringUtils.isEmpty(entity.target)) {\n      return false;\n    }\n\n    var entityScopeSet = ScopeSet.fromString(entity.target);\n    var requestTargetScopeSet = ScopeSet.fromString(target);\n    return entityScopeSet.containsScopeSet(requestTargetScopeSet);\n  };\n  /**\r\n   * Returns a valid AccountEntity if key and object contain correct values, null otherwise.\r\n   * @param key\r\n   */\n\n\n  CacheManager.prototype.getAccountEntity = function (key) {\n    // don't parse any non-account type cache entities\n    if (CredentialEntity.getCredentialType(key) !== Constants.NOT_DEFINED || this.isAppMetadata(key)) {\n      return null;\n    } // Attempt retrieval\n\n\n    var entity;\n\n    try {\n      entity = this.getItem(key, CacheSchemaType.ACCOUNT);\n    } catch (e) {\n      return null;\n    } // Authority type is required for accounts, return if it is not available (not an account entity)\n\n\n    if (!entity || StringUtils.isEmpty(entity.authorityType)) {\n      return null;\n    }\n\n    return entity;\n  };\n  /**\r\n   * returns if a given cache entity is of the type appmetadata\r\n   * @param key\r\n   */\n\n\n  CacheManager.prototype.isAppMetadata = function (key) {\n    return key.indexOf(APP_META_DATA) !== -1;\n  };\n  /**\r\n   * Helper to convert serialized data to object\r\n   * @param obj\r\n   * @param json\r\n   */\n\n\n  CacheManager.toObject = function (obj, json) {\n    for (var propertyName in json) {\n      obj[propertyName] = json[propertyName];\n    }\n\n    return obj;\n  };\n\n  return CacheManager;\n}();\n\nvar DefaultStorageClass =\n/** @class */\nfunction (_super) {\n  __extends$1(DefaultStorageClass, _super);\n\n  function DefaultStorageClass() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DefaultStorageClass.prototype.setItem = function () {\n    var notImplErr = \"Storage interface - setItem() has not been implemented for the cacheStorage interface.\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  };\n\n  DefaultStorageClass.prototype.getItem = function () {\n    var notImplErr = \"Storage interface - getItem() has not been implemented for the cacheStorage interface.\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  };\n\n  DefaultStorageClass.prototype.removeItem = function () {\n    var notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  };\n\n  DefaultStorageClass.prototype.containsKey = function () {\n    var notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  };\n\n  DefaultStorageClass.prototype.getKeys = function () {\n    var notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  };\n\n  DefaultStorageClass.prototype.clear = function () {\n    var notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  };\n\n  return DefaultStorageClass;\n}(CacheManager);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n// Token renewal offset default in seconds\n\n\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\nvar DEFAULT_AUTH_OPTIONS = {\n  clientId: \"\",\n  authority: null,\n  knownAuthorities: [],\n  cloudDiscoveryMetadata: \"\"\n};\nvar DEFAULT_SYSTEM_OPTIONS = {\n  tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC\n};\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\n  loggerCallback: function () {// allow users to not set loggerCallback\n  },\n  piiLoggingEnabled: false,\n  logLevel: LogLevel.Info\n};\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\n  sendGetRequestAsync: function () {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator$1(this, function (_a) {\n        notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  },\n  sendPostRequestAsync: function () {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator$1(this, function (_a) {\n        notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  }\n};\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\n  createNewGuid: function () {\n    var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  },\n  base64Decode: function () {\n    var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  },\n  base64Encode: function () {\n    var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  },\n  generatePkceCodes: function () {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator$1(this, function (_a) {\n        notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  }\n};\nvar DEFAULT_LIBRARY_INFO = {\n  sku: Constants.SKU,\n  version: version,\n  cpu: \"\",\n  os: \"\"\n};\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\n\nfunction buildClientConfiguration(_a) {\n  var userAuthOptions = _a.authOptions,\n      userSystemOptions = _a.systemOptions,\n      userLoggerOption = _a.loggerOptions,\n      storageImplementation = _a.storageInterface,\n      networkImplementation = _a.networkInterface,\n      cryptoImplementation = _a.cryptoInterface,\n      libraryInfo = _a.libraryInfo;\n  return {\n    authOptions: __assign$1(__assign$1({}, DEFAULT_AUTH_OPTIONS), userAuthOptions),\n    systemOptions: __assign$1(__assign$1({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\n    loggerOptions: __assign$1(__assign$1({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption),\n    storageInterface: storageImplementation || new DefaultStorageClass(),\n    networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n    cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n    libraryInfo: __assign$1(__assign$1({}, DEFAULT_LIBRARY_INFO), libraryInfo)\n  };\n}\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n */\n\n\nvar BaseClient =\n/** @class */\nfunction () {\n  function BaseClient(configuration) {\n    // Set the configuration\n    this.config = buildClientConfiguration(configuration); // Initialize the logger\n\n    this.logger = new Logger(this.config.loggerOptions); // Initialize crypto\n\n    this.cryptoUtils = this.config.cryptoInterface; // Initialize storage interface\n\n    this.cacheManager = this.config.storageInterface; // Set the network interface\n\n    this.networkClient = this.config.networkInterface;\n    TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.authOptions.knownAuthorities, this.config.authOptions.cloudDiscoveryMetadata);\n    this.authority = this.config.authOptions.authority;\n  }\n  /**\r\n   * Creates default headers for requests to token endpoint\r\n   */\n\n\n  BaseClient.prototype.createDefaultTokenRequestHeaders = function () {\n    var headers = this.createDefaultLibraryHeaders();\n    headers.set(HeaderNames.CONTENT_TYPE, Constants.URL_FORM_CONTENT_TYPE);\n    return headers;\n  };\n  /**\r\n   * addLibraryData\r\n   */\n\n\n  BaseClient.prototype.createDefaultLibraryHeaders = function () {\n    var headers = new Map(); // client info headers\n\n    headers.set(\"\" + AADServerParamKeys.X_CLIENT_SKU, this.config.libraryInfo.sku);\n    headers.set(\"\" + AADServerParamKeys.X_CLIENT_VER, this.config.libraryInfo.version);\n    headers.set(\"\" + AADServerParamKeys.X_CLIENT_OS, this.config.libraryInfo.os);\n    headers.set(\"\" + AADServerParamKeys.X_CLIENT_CPU, this.config.libraryInfo.cpu);\n    return headers;\n  };\n  /**\r\n   * Http post to token endpoint\r\n   * @param tokenEndpoint\r\n   * @param queryString\r\n   * @param headers\r\n   */\n\n\n  BaseClient.prototype.executePostToTokenEndpoint = function (tokenEndpoint, queryString, headers) {\n    return this.networkClient.sendPostRequestAsync(tokenEndpoint, {\n      body: queryString,\n      headers: headers\n    });\n  };\n\n  return BaseClient;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\n\n\nvar RequestValidator =\n/** @class */\nfunction () {\n  function RequestValidator() {}\n  /**\r\n   * Utility to check if the `redirectUri` in the request is a non-null value\r\n   * @param redirectUri\r\n   */\n\n\n  RequestValidator.validateRedirectUri = function (redirectUri) {\n    if (StringUtils.isEmpty(redirectUri)) {\n      throw ClientConfigurationError.createRedirectUriEmptyError();\n    }\n  };\n  /**\r\n   * Utility to validate prompt sent by the user in the request\r\n   * @param prompt\r\n   */\n\n\n  RequestValidator.validatePrompt = function (prompt) {\n    if ([PromptValue.LOGIN, PromptValue.SELECT_ACCOUNT, PromptValue.CONSENT, PromptValue.NONE].indexOf(prompt) < 0) {\n      throw ClientConfigurationError.createInvalidPromptError(prompt);\n    }\n  };\n  /**\r\n   * Utility to validate code_challenge and code_challenge_method\r\n   * @param codeChallenge\r\n   * @param codeChallengeMethod\r\n   */\n\n\n  RequestValidator.validateCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\n    if (StringUtils.isEmpty(codeChallenge) || StringUtils.isEmpty(codeChallengeMethod)) {\n      throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\n    } else {\n      this.validateCodeChallengeMethod(codeChallengeMethod);\n    }\n  };\n  /**\r\n   * Utility to validate code_challenge_method\r\n   * @param codeChallengeMethod\r\n   */\n\n\n  RequestValidator.validateCodeChallengeMethod = function (codeChallengeMethod) {\n    if ([CodeChallengeMethodValues.PLAIN, CodeChallengeMethodValues.S256].indexOf(codeChallengeMethod) < 0) {\n      throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\n    }\n  };\n  /**\r\n   * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n   * @param request\r\n   */\n\n\n  RequestValidator.sanitizeEQParams = function (eQParams, queryParams) {\n    if (!eQParams) {\n      return null;\n    } // Remove any query parameters already included in SSO params\n\n\n    queryParams.forEach(function (value, key) {\n      if (eQParams[key]) {\n        delete eQParams[key];\n      }\n    });\n    return eQParams;\n  };\n\n  return RequestValidator;\n}();\n/*\r\n* Copyright (c) Microsoft Corporation. All rights reserved.\r\n* Licensed under the MIT License.\r\n*/\n\n\nvar RequestParameterBuilder =\n/** @class */\nfunction () {\n  function RequestParameterBuilder() {\n    this.parameters = new Map();\n  }\n  /**\r\n   * add response_type = code\r\n   */\n\n\n  RequestParameterBuilder.prototype.addResponseTypeCode = function () {\n    this.parameters.set(AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\n  };\n  /**\r\n   * add response_mode. defaults to query.\r\n   * @param responseMode\r\n   */\n\n\n  RequestParameterBuilder.prototype.addResponseMode = function (responseMode) {\n    this.parameters.set(AADServerParamKeys.RESPONSE_MODE, encodeURIComponent(responseMode ? responseMode : ResponseMode.QUERY));\n  };\n  /**\r\n   * add scopes\r\n   * @param scopeSet\r\n   */\n\n\n  RequestParameterBuilder.prototype.addScopes = function (scopeSet) {\n    this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\n  };\n  /**\r\n   * add clientId\r\n   * @param clientId\r\n   */\n\n\n  RequestParameterBuilder.prototype.addClientId = function (clientId) {\n    this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\n  };\n  /**\r\n   * add redirect_uri\r\n   * @param redirectUri\r\n   */\n\n\n  RequestParameterBuilder.prototype.addRedirectUri = function (redirectUri) {\n    RequestValidator.validateRedirectUri(redirectUri);\n    this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\n  };\n  /**\r\n   * add domain_hint\r\n   * @param domainHint\r\n   */\n\n\n  RequestParameterBuilder.prototype.addDomainHint = function (domainHint) {\n    this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\n  };\n  /**\r\n   * add login_hint\r\n   * @param loginHint\r\n   */\n\n\n  RequestParameterBuilder.prototype.addLoginHint = function (loginHint) {\n    this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\n  };\n  /**\r\n   * add claims\r\n   * @param claims\r\n   */\n\n\n  RequestParameterBuilder.prototype.addClaims = function (claims) {\n    this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(claims));\n  };\n  /**\r\n   * add correlationId\r\n   * @param correlationId\r\n   */\n\n\n  RequestParameterBuilder.prototype.addCorrelationId = function (correlationId) {\n    this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\n  };\n  /**\r\n   * add library info query params\r\n   * @param libraryInfo\r\n   */\n\n\n  RequestParameterBuilder.prototype.addLibraryInfo = function (libraryInfo) {\n    // Telemetry Info\n    this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n    this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\n    this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n    this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\n  };\n  /**\r\n   * add prompt\r\n   * @param prompt\r\n   */\n\n\n  RequestParameterBuilder.prototype.addPrompt = function (prompt) {\n    RequestValidator.validatePrompt(prompt);\n    this.parameters.set(\"\" + AADServerParamKeys.PROMPT, encodeURIComponent(prompt));\n  };\n  /**\r\n   * add state\r\n   * @param state\r\n   */\n\n\n  RequestParameterBuilder.prototype.addState = function (state) {\n    if (!StringUtils.isEmpty(state)) {\n      this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\n    }\n  };\n  /**\r\n   * add nonce\r\n   * @param nonce\r\n   */\n\n\n  RequestParameterBuilder.prototype.addNonce = function (nonce) {\n    this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\n  };\n  /**\r\n   * add code_challenge and code_challenge_method\r\n   * - throw if either of them are not passed\r\n   * @param codeChallenge\r\n   * @param codeChallengeMethod\r\n   */\n\n\n  RequestParameterBuilder.prototype.addCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\n    RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\n\n    if (codeChallenge && codeChallengeMethod) {\n      this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\n      this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\n    } else {\n      throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\n    }\n  };\n  /**\r\n   * add the `authorization_code` passed by the user to exchange for a token\r\n   * @param code\r\n   */\n\n\n  RequestParameterBuilder.prototype.addAuthorizationCode = function (code) {\n    this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\n  };\n  /**\r\n   * add the `authorization_code` passed by the user to exchange for a token\r\n   * @param code\r\n   */\n\n\n  RequestParameterBuilder.prototype.addDeviceCode = function (code) {\n    this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\n  };\n  /**\r\n   * add the `refreshToken` passed by the user\r\n   * @param refreshToken\r\n   */\n\n\n  RequestParameterBuilder.prototype.addRefreshToken = function (refreshToken) {\n    this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\n  };\n  /**\r\n   * add the `code_verifier` passed by the user to exchange for a token\r\n   * @param codeVerifier\r\n   */\n\n\n  RequestParameterBuilder.prototype.addCodeVerifier = function (codeVerifier) {\n    this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\n  };\n  /**\r\n   * add client_secret\r\n   * @param clientSecret\r\n   */\n  // TODO uncomment when confidential client flow is added.\n  // addClientSecret(clientSecret: string): void {\n  //     params.set(`${AADServerParamKeys.CLIENT_SECRET}`, clientSecret);\n  // }\n\n  /**\r\n   * add grant type\r\n   * @param grantType\r\n   */\n\n\n  RequestParameterBuilder.prototype.addGrantType = function (grantType) {\n    this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\n  };\n  /**\r\n   * add client info\r\n   *\r\n   */\n\n\n  RequestParameterBuilder.prototype.addClientInfo = function () {\n    this.parameters.set(ClientInfo, \"1\");\n  };\n  /**\r\n   * add extraQueryParams\r\n   * @param eQparams\r\n   */\n\n\n  RequestParameterBuilder.prototype.addExtraQueryParameters = function (eQparams) {\n    var _this = this;\n\n    RequestValidator.sanitizeEQParams(eQparams, this.parameters);\n    Object.keys(eQparams).forEach(function (key) {\n      _this.parameters.set(key, eQparams[key]);\n    });\n  };\n  /**\r\n   * Utility to create a URL from the params map\r\n   */\n\n\n  RequestParameterBuilder.prototype.createQueryString = function () {\n    var queryParameterArray = new Array();\n    this.parameters.forEach(function (value, key) {\n      queryParameterArray.push(key + \"=\" + value);\n    });\n    return queryParameterArray.join(\"&\");\n  };\n\n  return RequestParameterBuilder;\n}();\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\n\n\nvar ServerError =\n/** @class */\nfunction (_super) {\n  __extends$1(ServerError, _super);\n\n  function ServerError(errorCode, errorMessage, subError) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"ServerError\";\n    _this.subError = subError;\n    Object.setPrototypeOf(_this, ServerError.prototype);\n    return _this;\n  }\n\n  return ServerError;\n}(AuthError);\n/**\r\n * Id Token representation class. Parses id token string and generates claims object.\r\n */\n\n\nvar IdToken =\n/** @class */\nfunction () {\n  function IdToken(rawIdToken, crypto) {\n    if (StringUtils.isEmpty(rawIdToken)) {\n      throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\n    }\n\n    this.rawIdToken = rawIdToken;\n    this.claims = IdToken.extractIdToken(rawIdToken, crypto);\n  }\n  /**\r\n   * Extract IdToken by decoding the RAWIdToken\r\n   *\r\n   * @param encodedIdToken\r\n   */\n\n\n  IdToken.extractIdToken = function (encodedIdToken, crypto) {\n    // id token will be decoded to get the username\n    var decodedToken = StringUtils.decodeJwt(encodedIdToken);\n\n    if (!decodedToken) {\n      return null;\n    }\n\n    try {\n      var base64IdTokenPayload = decodedToken.JWSPayload; // base64Decode() should throw an error if there is an issue\n\n      var base64Decoded = crypto.base64Decode(base64IdTokenPayload);\n      return JSON.parse(base64Decoded);\n    } catch (err) {\n      throw ClientAuthError.createIdTokenParsingError(err);\n    }\n  };\n\n  return IdToken;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Utility class which exposes functions for managing date and time operations.\r\n */\n\n\nvar TimeUtils =\n/** @class */\nfunction () {\n  function TimeUtils() {}\n  /**\r\n   * return the current time in Unix time (seconds).\r\n   */\n\n\n  TimeUtils.nowSeconds = function () {\n    // Date.getTime() returns in milliseconds.\n    return Math.round(new Date().getTime() / 1000.0);\n  };\n\n  return TimeUtils;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Authority types supported by MSAL.\r\n */\n\n\nvar AuthorityType;\n\n(function (AuthorityType) {\n  AuthorityType[AuthorityType[\"Default\"] = 0] = \"Default\";\n  AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\n})(AuthorityType || (AuthorityType = {}));\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * ID_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n * }\r\n */\n\n\nvar IdTokenEntity =\n/** @class */\nfunction (_super) {\n  __extends$1(IdTokenEntity, _super);\n\n  function IdTokenEntity() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Create IdTokenEntity\r\n   * @param homeAccountId\r\n   * @param authenticationResult\r\n   * @param clientId\r\n   * @param authority\r\n   */\n\n\n  IdTokenEntity.createIdTokenEntity = function (homeAccountId, environment, idToken, clientId, tenantId) {\n    var idTokenEntity = new IdTokenEntity();\n    idTokenEntity.credentialType = CredentialType.ID_TOKEN;\n    idTokenEntity.homeAccountId = homeAccountId;\n    idTokenEntity.environment = environment;\n    idTokenEntity.clientId = clientId;\n    idTokenEntity.secret = idToken;\n    idTokenEntity.realm = tenantId;\n    return idTokenEntity;\n  };\n\n  return IdTokenEntity;\n}(CredentialEntity);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * ACCESS_TOKEN Credential Type\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n *      cachedAt: Absolute device time when entry was created in the cache.\r\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\r\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\r\n *      keyId: used for POP and SSH tokenTypes\r\n *      tokenType: Type of the token issued. Usually \"Bearer\"\r\n * }\r\n */\n\n\nvar AccessTokenEntity =\n/** @class */\nfunction (_super) {\n  __extends$1(AccessTokenEntity, _super);\n\n  function AccessTokenEntity() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Create AccessTokenEntity\r\n   * @param homeAccountId\r\n   * @param environment\r\n   * @param accessToken\r\n   * @param clientId\r\n   * @param tenantId\r\n   * @param scopes\r\n   * @param expiresOn\r\n   * @param extExpiresOn\r\n   */\n\n\n  AccessTokenEntity.createAccessTokenEntity = function (homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn) {\n    var atEntity = new AccessTokenEntity();\n    atEntity.homeAccountId = homeAccountId;\n    atEntity.credentialType = CredentialType.ACCESS_TOKEN;\n    atEntity.secret = accessToken;\n    var currentTime = TimeUtils.nowSeconds();\n    atEntity.cachedAt = currentTime.toString(); // Token expiry time.\n    // This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\n\n    atEntity.expiresOn = expiresOn.toString();\n    atEntity.extendedExpiresOn = extExpiresOn.toString();\n    atEntity.environment = environment;\n    atEntity.clientId = clientId;\n    atEntity.realm = tenantId;\n    atEntity.target = scopes;\n    return atEntity;\n  };\n\n  return AccessTokenEntity;\n}(CredentialEntity);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * REFRESH_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\r\n *\r\n * Value:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\n\n\nvar RefreshTokenEntity =\n/** @class */\nfunction (_super) {\n  __extends$1(RefreshTokenEntity, _super);\n\n  function RefreshTokenEntity() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Create RefreshTokenEntity\r\n   * @param homeAccountId\r\n   * @param authenticationResult\r\n   * @param clientId\r\n   * @param authority\r\n   */\n\n\n  RefreshTokenEntity.createRefreshTokenEntity = function (homeAccountId, environment, refreshToken, clientId, familyId) {\n    var rtEntity = new RefreshTokenEntity();\n    rtEntity.clientId = clientId;\n    rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\n    rtEntity.environment = environment;\n    rtEntity.homeAccountId = homeAccountId;\n    rtEntity.secret = refreshToken;\n    if (familyId) rtEntity.familyId = familyId;\n    return rtEntity;\n  };\n\n  return RefreshTokenEntity;\n}(CredentialEntity);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\n\nvar InteractionRequiredAuthErrorMessage = [\"interaction_required\", \"consent_required\", \"login_required\"];\nvar InteractionRequiredAuthSubErrorMessage = [\"message_only\", \"additional_action\", \"basic_action\", \"user_password_expired\", \"consent_required\"];\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\n\nvar InteractionRequiredAuthError =\n/** @class */\nfunction (_super) {\n  __extends$1(InteractionRequiredAuthError, _super);\n\n  function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\n    var _this = _super.call(this, errorCode, errorMessage, subError) || this;\n\n    _this.name = \"InteractionRequiredAuthError\";\n    Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\n    return _this;\n  }\n\n  InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\n    var isInteractionRequiredErrorCode = !StringUtils.isEmpty(errorCode) && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\n    var isInteractionRequiredSubError = !StringUtils.isEmpty(subError) && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    var isInteractionRequiredErrorDesc = !StringUtils.isEmpty(errorString) && InteractionRequiredAuthErrorMessage.some(function (irErrorCode) {\n      return errorString.indexOf(irErrorCode) > -1;\n    });\n    return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n  };\n\n  return InteractionRequiredAuthError;\n}(ServerError);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n\nvar CacheRecord =\n/** @class */\nfunction () {\n  function CacheRecord(accountEntity, idTokenEntity, accessTokenEntity, refreshTokenEntity) {\n    this.account = accountEntity;\n    this.idToken = idTokenEntity;\n    this.accessToken = accessTokenEntity;\n    this.refreshToken = refreshTokenEntity;\n  }\n\n  return CacheRecord;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\n\n\nvar ProtocolUtils =\n/** @class */\nfunction () {\n  function ProtocolUtils() {}\n  /**\r\n   * Appends user state with random guid, or returns random guid.\r\n   * @param userState\r\n   * @param randomGuid\r\n   */\n\n\n  ProtocolUtils.setRequestState = function (userState, cryptoObj) {\n    var libraryState = ProtocolUtils.generateLibraryState(cryptoObj);\n    return !StringUtils.isEmpty(userState) ? \"\" + libraryState + Constants.RESOURCE_DELIM + userState : libraryState;\n  };\n  /**\r\n   * Generates the state value used by the library.\r\n   * @param randomGuid\r\n   * @param cryptoObj\r\n   */\n\n\n  ProtocolUtils.generateLibraryState = function (cryptoObj) {\n    if (!cryptoObj) {\n      throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\n    } // Create a state object containing a unique id and the timestamp of the request creation\n\n\n    var stateObj = {\n      id: cryptoObj.createNewGuid(),\n      ts: TimeUtils.nowSeconds()\n    };\n    var stateString = JSON.stringify(stateObj);\n    return cryptoObj.base64Encode(stateString);\n  };\n  /**\r\n   * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n   * @param state\r\n   * @param cryptoObj\r\n   */\n\n\n  ProtocolUtils.parseRequestState = function (state, cryptoObj) {\n    if (!cryptoObj) {\n      throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\n    }\n\n    if (StringUtils.isEmpty(state)) {\n      throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\n    }\n\n    try {\n      // Split the state between library state and user passed state and decode them separately\n      var splitState = decodeURIComponent(state).split(Constants.RESOURCE_DELIM);\n      var libraryState = splitState[0];\n      var userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : \"\";\n      var libraryStateString = cryptoObj.base64Decode(libraryState);\n      var libraryStateObj = JSON.parse(libraryStateString);\n      return {\n        userRequestState: !StringUtils.isEmpty(userState) ? userState : \"\",\n        libraryState: libraryStateObj\n      };\n    } catch (e) {\n      throw ClientAuthError.createInvalidStateError(state, e);\n    }\n  };\n\n  return ProtocolUtils;\n}();\n/**\r\n * Class that handles response parsing.\r\n */\n\n\nvar ResponseHandler =\n/** @class */\nfunction () {\n  function ResponseHandler(clientId, cacheStorage, cryptoObj, logger) {\n    this.clientId = clientId;\n    this.cacheStorage = cacheStorage;\n    this.cryptoObj = cryptoObj;\n    this.logger = logger;\n  }\n  /**\r\n   * Function which validates server authorization code response.\r\n   * @param serverResponseHash\r\n   * @param cachedState\r\n   * @param cryptoObj\r\n   */\n\n\n  ResponseHandler.prototype.validateServerAuthorizationCodeResponse = function (serverResponseHash, cachedState, cryptoObj) {\n    if (serverResponseHash.state !== cachedState) {\n      throw ClientAuthError.createStateMismatchError();\n    } // Check for error\n\n\n    if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\n      if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\n        throw new InteractionRequiredAuthError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\n      }\n\n      throw new ServerError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\n    }\n\n    if (serverResponseHash.client_info) {\n      buildClientInfo(serverResponseHash.client_info, cryptoObj);\n    }\n  };\n  /**\r\n   * Function which validates server authorization token response.\r\n   * @param serverResponse\r\n   */\n\n\n  ResponseHandler.prototype.validateTokenResponse = function (serverResponse) {\n    // Check for error\n    if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\n      if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n        throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\n      }\n\n      var errString = serverResponse.error_codes + \" - [\" + serverResponse.timestamp + \"]: \" + serverResponse.error_description + \" - Correlation ID: \" + serverResponse.correlation_id + \" - Trace ID: \" + serverResponse.trace_id;\n      throw new ServerError(serverResponse.error, errString);\n    } // generate homeAccountId\n\n\n    if (serverResponse.client_info) {\n      this.clientInfo = buildClientInfo(serverResponse.client_info, this.cryptoObj);\n\n      if (!StringUtils.isEmpty(this.clientInfo.uid) && !StringUtils.isEmpty(this.clientInfo.utid)) {\n        this.homeAccountIdentifier = this.clientInfo.uid + \".\" + this.clientInfo.utid;\n      }\n    }\n  };\n  /**\r\n   * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n   * @param serverTokenResponse\r\n   * @param authority\r\n   */\n\n\n  ResponseHandler.prototype.handleServerTokenResponse = function (serverTokenResponse, authority, cachedNonce, cachedState) {\n    // create an idToken object (not entity)\n    var idTokenObj = new IdToken(serverTokenResponse.id_token, this.cryptoObj); // token nonce check (TODO: Add a warning if no nonce is given?)\n\n    if (!StringUtils.isEmpty(cachedNonce)) {\n      if (idTokenObj.claims.nonce !== cachedNonce) {\n        throw ClientAuthError.createNonceMismatchError();\n      }\n    } // save the response tokens\n\n\n    var requestStateObj = null;\n\n    if (!StringUtils.isEmpty(cachedState)) {\n      requestStateObj = ProtocolUtils.parseRequestState(cachedState, this.cryptoObj);\n    }\n\n    var cacheRecord = this.generateCacheRecord(serverTokenResponse, idTokenObj, authority, requestStateObj && requestStateObj.libraryState);\n    this.cacheStorage.saveCacheRecord(cacheRecord);\n    return ResponseHandler.generateAuthenticationResult(cacheRecord, idTokenObj, false, requestStateObj ? requestStateObj.userRequestState : null);\n  };\n  /**\r\n   * Generates CacheRecord\r\n   * @param serverTokenResponse\r\n   * @param idTokenObj\r\n   * @param authority\r\n   */\n\n\n  ResponseHandler.prototype.generateCacheRecord = function (serverTokenResponse, idTokenObj, authority, libraryState) {\n    // Account\n    var cachedAccount = this.generateAccountEntity(serverTokenResponse, idTokenObj, authority);\n    var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\n    var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\n\n    if (StringUtils.isEmpty(env)) {\n      throw ClientAuthError.createInvalidCacheEnvironmentError();\n    } // IdToken\n\n\n    var cachedIdToken = null;\n\n    if (!StringUtils.isEmpty(serverTokenResponse.id_token)) {\n      cachedIdToken = IdTokenEntity.createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, idTokenObj.claims.tid);\n    } // AccessToken\n\n\n    var cachedAccessToken = null;\n\n    if (!StringUtils.isEmpty(serverTokenResponse.access_token)) {\n      var responseScopes = ScopeSet.fromString(serverTokenResponse.scope); // Expiration calculation\n\n      var currentTime = TimeUtils.nowSeconds(); // If the request timestamp was sent in the library state, use that timestamp to calculate expiration. Otherwise, use current time.\n\n      var timestamp = libraryState ? libraryState.ts : currentTime;\n      var tokenExpirationSeconds = timestamp + serverTokenResponse.expires_in;\n      var extendedTokenExpirationSeconds = tokenExpirationSeconds + serverTokenResponse.ext_expires_in;\n      cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, idTokenObj.claims.tid, responseScopes.printScopesLowerCase(), tokenExpirationSeconds, extendedTokenExpirationSeconds);\n    } // refreshToken\n\n\n    var cachedRefreshToken = null;\n\n    if (!StringUtils.isEmpty(serverTokenResponse.refresh_token)) {\n      cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci);\n    }\n\n    return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken);\n  };\n  /**\r\n   * Generate Account\r\n   * @param serverTokenResponse\r\n   * @param idToken\r\n   * @param authority\r\n   */\n\n\n  ResponseHandler.prototype.generateAccountEntity = function (serverTokenResponse, idToken, authority) {\n    var authorityType = authority.authorityType;\n\n    if (StringUtils.isEmpty(serverTokenResponse.client_info)) {\n      throw ClientAuthError.createClientInfoEmptyError(serverTokenResponse.client_info);\n    }\n\n    return authorityType === AuthorityType.Adfs ? AccountEntity.createADFSAccount(authority, idToken) : AccountEntity.createAccount(serverTokenResponse.client_info, authority, idToken, this.cryptoObj);\n  };\n  /**\r\n   * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n   *\r\n   * Optionally takes a state string that is set as-is in the response.\r\n   *\r\n   * @param cacheRecord\r\n   * @param idTokenObj\r\n   * @param fromTokenCache\r\n   * @param stateString\r\n   */\n\n\n  ResponseHandler.generateAuthenticationResult = function (cacheRecord, idTokenObj, fromTokenCache, stateString) {\n    var accessToken = \"\";\n    var responseScopes = [];\n    var expiresOn = null;\n    var extExpiresOn = null;\n    var familyId = null;\n\n    if (cacheRecord.accessToken) {\n      accessToken = cacheRecord.accessToken.secret;\n      responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n      expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n      extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n    }\n\n    if (cacheRecord.refreshToken) {\n      familyId = cacheRecord.refreshToken.familyId || null;\n    }\n\n    return {\n      uniqueId: idTokenObj.claims.oid || idTokenObj.claims.sub,\n      tenantId: idTokenObj.claims.tid,\n      scopes: responseScopes,\n      account: cacheRecord.account.getAccountInfo(),\n      idToken: idTokenObj.rawIdToken,\n      idTokenClaims: idTokenObj.claims,\n      accessToken: accessToken,\n      fromCache: fromTokenCache,\n      expiresOn: expiresOn,\n      extExpiresOn: extExpiresOn,\n      familyId: familyId,\n      state: stateString || \"\"\n    };\n  };\n\n  return ResponseHandler;\n}();\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\n\n\nvar UrlString =\n/** @class */\nfunction () {\n  function UrlString(url) {\n    this._urlString = url;\n\n    if (!StringUtils.isEmpty(this._urlString) && StringUtils.isEmpty(this.getHash())) {\n      this._urlString = this.canonicalizeUri(url);\n    } else if (StringUtils.isEmpty(this._urlString)) {\n      // Throws error if url is empty\n      throw ClientConfigurationError.createUrlEmptyError();\n    }\n  }\n\n  Object.defineProperty(UrlString.prototype, \"urlString\", {\n    get: function () {\n      return this._urlString;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Ensure urls are lower case and end with a / character.\r\n   * @param url\r\n   */\n\n  UrlString.prototype.canonicalizeUri = function (url) {\n    if (url) {\n      url = url.toLowerCase();\n    }\n\n    if (url && !StringUtils.endsWith(url, \"/\")) {\n      url += \"/\";\n    }\n\n    return url;\n  };\n  /**\r\n   * Throws if urlString passed is not a valid authority URI string.\r\n   */\n\n\n  UrlString.prototype.validateAsUri = function () {\n    // Attempts to parse url for uri components\n    var components;\n\n    try {\n      components = this.getUrlComponents();\n    } catch (e) {\n      throw ClientConfigurationError.createUrlParseError(e);\n    } // Throw error if URI or path segments are not parseable.\n\n\n    if (!components.HostNameAndPort || !components.PathSegments || components.PathSegments.length < 1) {\n      throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\n    } // Throw error if uri is insecure.\n\n\n    if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\n      throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\n    }\n  };\n  /**\r\n   * Function to remove query string params from url. Returns the new url.\r\n   * @param url\r\n   * @param name\r\n   */\n\n\n  UrlString.prototype.urlRemoveQueryStringParameter = function (name) {\n    var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\n    this._urlString = this.urlString.replace(regex, \"\"); // name=value&\n\n    regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\n    this._urlString = this.urlString.replace(regex, \"\"); // name=value\n\n    regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\n    this._urlString = this.urlString.replace(regex, \"\");\n    return this.urlString;\n  };\n\n  UrlString.removeHashFromUrl = function (url) {\n    return url.split(\"#\")[0];\n  };\n  /**\r\n   * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n   * @param href The url\r\n   * @param tenantId The tenant id to replace\r\n   */\n\n\n  UrlString.prototype.replaceTenantPath = function (tenantId) {\n    var urlObject = this.getUrlComponents();\n    var pathArray = urlObject.PathSegments;\n\n    if (tenantId && pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)) {\n      pathArray[0] = tenantId;\n    }\n\n    return UrlString.constructAuthorityUriFromObject(urlObject);\n  };\n  /**\r\n   * Returns the anchor part(#) of the URL\r\n   */\n\n\n  UrlString.prototype.getHash = function () {\n    var hashIndex1 = this.urlString.indexOf(\"#\");\n    var hashIndex2 = this.urlString.indexOf(\"#/\");\n\n    if (hashIndex2 > -1) {\n      return this.urlString.substring(hashIndex2 + 2);\n    } else if (hashIndex1 > -1) {\n      return this.urlString.substring(hashIndex1 + 1);\n    }\n\n    return \"\";\n  };\n  /**\r\n   * Returns deserialized portion of URL hash\r\n   */\n\n\n  UrlString.prototype.getDeserializedHash = function () {\n    var hash = this.getHash();\n    var deserializedHash = StringUtils.queryStringToObject(hash);\n\n    if (!deserializedHash) {\n      throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\n    }\n\n    return deserializedHash;\n  };\n  /**\r\n   * Parses out the components from a url string.\r\n   * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n   */\n\n\n  UrlString.prototype.getUrlComponents = function () {\n    // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n    var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"); // If url string does not match regEx, we throw an error\n\n    var match = this.urlString.match(regEx);\n\n    if (!match) {\n      throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\n    } // Url component object\n\n\n    var urlComponents = {\n      Protocol: match[1],\n      HostNameAndPort: match[4],\n      AbsolutePath: match[5]\n    };\n    var pathSegments = urlComponents.AbsolutePath.split(\"/\");\n    pathSegments = pathSegments.filter(function (val) {\n      return val && val.length > 0;\n    }); // remove empty elements\n\n    urlComponents.PathSegments = pathSegments;\n    return urlComponents;\n  };\n\n  UrlString.constructAuthorityUriFromObject = function (urlObject) {\n    return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\n  };\n  /**\r\n   * Check if the hash of the URL string contains known properties\r\n   */\n\n\n  UrlString.hashContainsKnownProperties = function (url) {\n    if (StringUtils.isEmpty(url)) {\n      return false;\n    }\n\n    var urlString = new UrlString(url);\n    var parameters = urlString.getDeserializedHash();\n    return !!(parameters.code || parameters.error_description || parameters.error || parameters.state);\n  };\n\n  return UrlString;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Oauth2.0 Authorization Code client\r\n */\n\n\nvar AuthorizationCodeClient =\n/** @class */\nfunction (_super) {\n  __extends$1(AuthorizationCodeClient, _super);\n\n  function AuthorizationCodeClient(configuration) {\n    return _super.call(this, configuration) || this;\n  }\n  /**\r\n   * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n   * application. The URL target the /authorize endpoint of the authority configured in the\r\n   * application object.\r\n   *\r\n   * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n   * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n   * acquireToken(AuthorizationCodeRequest)\r\n   * @param request\r\n   */\n\n\n  AuthorizationCodeClient.prototype.getAuthCodeUrl = function (request) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var queryString;\n      return __generator$1(this, function (_a) {\n        queryString = this.createAuthCodeUrlQueryString(request);\n        return [2\n        /*return*/\n        , this.authority.authorizationEndpoint + \"?\" + queryString];\n      });\n    });\n  };\n  /**\r\n   * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n   * authorization_code_grant\r\n   * @param request\r\n   */\n\n\n  AuthorizationCodeClient.prototype.acquireToken = function (request, cachedNonce, cachedState) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var response, responseHandler, tokenResponse;\n      return __generator$1(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.info(\"in acquireToken call\"); // If no code response is given, we cannot acquire a token.\n\n            if (!request || StringUtils.isEmpty(request.code)) {\n              throw ClientAuthError.createTokenRequestCannotBeMadeError();\n            }\n\n            return [4\n            /*yield*/\n            , this.executeTokenRequest(this.authority, request)];\n\n          case 1:\n            response = _a.sent();\n            responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger); // Validate response. This function throws a server error if an error is returned by the server.\n\n            responseHandler.validateTokenResponse(response.body);\n            tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority, cachedNonce, cachedState);\n            return [2\n            /*return*/\n            , tokenResponse];\n        }\n      });\n    });\n  };\n  /**\r\n   * Handles the hash fragment response from public client code request. Returns a code response used by\r\n   * the client to exchange for a token in acquireToken.\r\n   * @param hashFragment\r\n   */\n\n\n  AuthorizationCodeClient.prototype.handleFragmentResponse = function (hashFragment, cachedState) {\n    // Handle responses.\n    var responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger); // Deserialize hash fragment response parameters.\n\n    var hashUrlString = new UrlString(hashFragment);\n    var serverParams = hashUrlString.getDeserializedHash(); // Get code response\n\n    responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\n    return serverParams.code;\n  };\n  /**\r\n   * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n   * Default behaviour is to redirect the user to `window.location.href`.\r\n   * @param authorityUri\r\n   */\n\n\n  AuthorizationCodeClient.prototype.getLogoutUri = function (logoutRequest) {\n    // Throw error if logoutRequest is null/undefined\n    if (!logoutRequest) {\n      throw ClientConfigurationError.createEmptyLogoutRequestError();\n    }\n\n    if (logoutRequest.account) {\n      // Clear given account.\n      this.cacheManager.removeAccount(AccountEntity.generateAccountCacheKey(logoutRequest.account));\n    } else {\n      // Clear all accounts and tokens\n      this.cacheManager.clear();\n    } // Get postLogoutRedirectUri.\n\n\n    var postLogoutUriParam = logoutRequest.postLogoutRedirectUri ? \"?\" + AADServerParamKeys.POST_LOGOUT_URI + \"=\" + encodeURIComponent(logoutRequest.postLogoutRedirectUri) : \"\";\n    var correlationIdParam = logoutRequest.correlationId ? \"&\" + AADServerParamKeys.CLIENT_REQUEST_ID + \"=\" + encodeURIComponent(logoutRequest.correlationId) : \"\"; // Construct logout URI.\n\n    var logoutUri = \"\" + this.authority.endSessionEndpoint + postLogoutUriParam + correlationIdParam;\n    return logoutUri;\n  };\n  /**\r\n   * Executes POST request to token endpoint\r\n   * @param authority\r\n   * @param request\r\n   */\n\n\n  AuthorizationCodeClient.prototype.executeTokenRequest = function (authority, request) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var requestBody, headers;\n      return __generator$1(this, function (_a) {\n        requestBody = this.createTokenRequestBody(request);\n        headers = this.createDefaultTokenRequestHeaders();\n        return [2\n        /*return*/\n        , this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\n      });\n    });\n  };\n  /**\r\n   * Generates a map for all the params to be sent to the service\r\n   * @param request\r\n   */\n\n\n  AuthorizationCodeClient.prototype.createTokenRequestBody = function (request) {\n    var parameterBuilder = new RequestParameterBuilder();\n    parameterBuilder.addClientId(this.config.authOptions.clientId); // validate the redirectUri (to be a non null value)\n\n    parameterBuilder.addRedirectUri(request.redirectUri);\n    var scopeSet = new ScopeSet(request.scopes || []);\n    parameterBuilder.addScopes(scopeSet); // add code: user set, not validated\n\n    parameterBuilder.addAuthorizationCode(request.code); // add code_verifier if passed\n\n    if (request.codeVerifier) {\n      parameterBuilder.addCodeVerifier(request.codeVerifier);\n    }\n\n    parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\n    parameterBuilder.addClientInfo();\n    var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n    parameterBuilder.addCorrelationId(correlationId);\n    return parameterBuilder.createQueryString();\n  };\n  /**\r\n   * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n   * @param request\r\n   */\n\n\n  AuthorizationCodeClient.prototype.createAuthCodeUrlQueryString = function (request) {\n    var parameterBuilder = new RequestParameterBuilder();\n    parameterBuilder.addClientId(this.config.authOptions.clientId);\n    var scopeSet = new ScopeSet(request.scopes || []);\n\n    if (request.extraScopesToConsent) {\n      scopeSet.appendScopes(request.extraScopesToConsent);\n    }\n\n    parameterBuilder.addScopes(scopeSet); // validate the redirectUri (to be a non null value)\n\n    parameterBuilder.addRedirectUri(request.redirectUri); // generate the correlationId if not set by the user and add\n\n    var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n    parameterBuilder.addCorrelationId(correlationId); // add response_mode. If not passed in it defaults to query.\n\n    parameterBuilder.addResponseMode(request.responseMode); // add response_type = code\n\n    parameterBuilder.addResponseTypeCode(); // add library info parameters\n\n    parameterBuilder.addLibraryInfo(this.config.libraryInfo); // add client_info=1\n\n    parameterBuilder.addClientInfo();\n\n    if (request.codeChallenge) {\n      parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\n    }\n\n    if (request.prompt) {\n      parameterBuilder.addPrompt(request.prompt);\n    }\n\n    if (request.loginHint) {\n      parameterBuilder.addLoginHint(request.loginHint);\n    }\n\n    if (request.domainHint) {\n      parameterBuilder.addDomainHint(request.domainHint);\n    }\n\n    if (request.nonce) {\n      parameterBuilder.addNonce(request.nonce);\n    }\n\n    if (request.state) {\n      parameterBuilder.addState(request.state);\n    }\n\n    if (request.claims) {\n      parameterBuilder.addClaims(request.claims);\n    }\n\n    if (request.extraQueryParameters) {\n      parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n    }\n\n    return parameterBuilder.createQueryString();\n  };\n\n  return AuthorizationCodeClient;\n}(BaseClient);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * OAuth2.0 Device code client\r\n */\n\n\nvar DeviceCodeClient =\n/** @class */\nfunction (_super) {\n  __extends$1(DeviceCodeClient, _super);\n\n  function DeviceCodeClient(configuration) {\n    return _super.call(this, configuration) || this;\n  }\n  /**\r\n   * Gets device code from device code endpoint, calls back to with device code response, and\r\n   * polls token endpoint to exchange device code for tokens\r\n   * @param request\r\n   */\n\n\n  DeviceCodeClient.prototype.acquireToken = function (request) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var deviceCodeResponse, response, responseHandler, tokenResponse;\n      return __generator$1(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getDeviceCode(request)];\n\n          case 1:\n            deviceCodeResponse = _a.sent();\n            request.deviceCodeCallback(deviceCodeResponse);\n            return [4\n            /*yield*/\n            , this.acquireTokenWithDeviceCode(request, deviceCodeResponse)];\n\n          case 2:\n            response = _a.sent();\n            responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger); // Validate response. This function throws a server error if an error is returned by the server.\n\n            responseHandler.validateTokenResponse(response);\n            tokenResponse = responseHandler.handleServerTokenResponse(response, this.authority);\n            return [2\n            /*return*/\n            , tokenResponse];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates device code request and executes http GET\r\n   * @param request\r\n   */\n\n\n  DeviceCodeClient.prototype.getDeviceCode = function (request) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var queryString, headers;\n      return __generator$1(this, function (_a) {\n        queryString = this.createQueryString(request);\n        headers = this.createDefaultLibraryHeaders();\n        return [2\n        /*return*/\n        , this.executePostRequestToDeviceCodeEndpoint(this.authority.deviceCodeEndpoint, queryString, headers)];\n      });\n    });\n  };\n  /**\r\n   * Executes POST request to device code endpoint\r\n   * @param deviceCodeEndpoint\r\n   * @param queryString\r\n   * @param headers\r\n   */\n\n\n  DeviceCodeClient.prototype.executePostRequestToDeviceCodeEndpoint = function (deviceCodeEndpoint, queryString, headers) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var _a, userCode, deviceCode, verificationUri, expiresIn, interval, message;\n\n      return __generator$1(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.networkClient.sendPostRequestAsync(deviceCodeEndpoint, {\n              body: queryString,\n              headers: headers\n            })];\n\n          case 1:\n            _a = _b.sent().body, userCode = _a.user_code, deviceCode = _a.device_code, verificationUri = _a.verification_uri, expiresIn = _a.expires_in, interval = _a.interval, message = _a.message;\n            return [2\n            /*return*/\n            , {\n              userCode: userCode,\n              deviceCode: deviceCode,\n              verificationUri: verificationUri,\n              expiresIn: expiresIn,\n              interval: interval,\n              message: message\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Create device code endpoint query parameters and returns string\r\n   */\n\n\n  DeviceCodeClient.prototype.createQueryString = function (request) {\n    var parameterBuilder = new RequestParameterBuilder();\n    var scopeSet = new ScopeSet(request.scopes || []);\n    parameterBuilder.addScopes(scopeSet);\n    parameterBuilder.addClientId(this.config.authOptions.clientId);\n    return parameterBuilder.createQueryString();\n  };\n  /**\r\n   * Creates token request with device code response and polls token endpoint at interval set by the device code\r\n   * response\r\n   * @param request\r\n   * @param deviceCodeResponse\r\n   */\n\n\n  DeviceCodeClient.prototype.acquireTokenWithDeviceCode = function (request, deviceCodeResponse) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var requestBody, headers, deviceCodeExpirationTime, pollingIntervalMilli;\n\n      var _this = this;\n\n      return __generator$1(this, function (_a) {\n        requestBody = this.createTokenRequestBody(request, deviceCodeResponse);\n        headers = this.createDefaultTokenRequestHeaders();\n        deviceCodeExpirationTime = TimeUtils.nowSeconds() + deviceCodeResponse.expiresIn;\n        pollingIntervalMilli = deviceCodeResponse.interval * 1000; // Poll token endpoint while (device code is not expired AND operation has not been cancelled by\n        // setting CancellationToken.cancel = true). POST request is sent at interval set by pollingIntervalMilli\n\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var intervalId = setInterval(function () {\n            return __awaiter$1(_this, void 0, void 0, function () {\n              var response, error_1;\n              return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    _a.trys.push([0, 5,, 6]);\n\n                    if (!request.cancel) return [3\n                    /*break*/\n                    , 1];\n                    this.logger.error(\"Token request cancelled by setting DeviceCodeRequest.cancel = true\");\n                    clearInterval(intervalId);\n                    reject(ClientAuthError.createDeviceCodeCancelledError());\n                    return [3\n                    /*break*/\n                    , 4];\n\n                  case 1:\n                    if (!(TimeUtils.nowSeconds() > deviceCodeExpirationTime)) return [3\n                    /*break*/\n                    , 2];\n                    this.logger.error(\"Device code expired. Expiration time of device code was \" + deviceCodeExpirationTime);\n                    clearInterval(intervalId);\n                    reject(ClientAuthError.createDeviceCodeExpiredError());\n                    return [3\n                    /*break*/\n                    , 4];\n\n                  case 2:\n                    return [4\n                    /*yield*/\n                    , this.executePostToTokenEndpoint(this.authority.tokenEndpoint, requestBody, headers)];\n\n                  case 3:\n                    response = _a.sent();\n\n                    if (response.body && response.body.error == Constants.AUTHORIZATION_PENDING) {\n                      // user authorization is pending. Sleep for polling interval and try again\n                      this.logger.info(response.body.error_description);\n                    } else {\n                      clearInterval(intervalId);\n                      resolve(response.body);\n                    }\n\n                    _a.label = 4;\n\n                  case 4:\n                    return [3\n                    /*break*/\n                    , 6];\n\n                  case 5:\n                    error_1 = _a.sent();\n                    clearInterval(intervalId);\n                    reject(error_1);\n                    return [3\n                    /*break*/\n                    , 6];\n\n                  case 6:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          }, pollingIntervalMilli);\n        })];\n      });\n    });\n  };\n  /**\r\n   * Creates query parameters and converts to string.\r\n   * @param request\r\n   * @param deviceCodeResponse\r\n   */\n\n\n  DeviceCodeClient.prototype.createTokenRequestBody = function (request, deviceCodeResponse) {\n    var requestParameters = new RequestParameterBuilder();\n    var scopeSet = new ScopeSet(request.scopes || []);\n    requestParameters.addScopes(scopeSet);\n    requestParameters.addClientId(this.config.authOptions.clientId);\n    requestParameters.addGrantType(GrantType.DEVICE_CODE_GRANT);\n    requestParameters.addDeviceCode(deviceCodeResponse.deviceCode);\n    var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n    requestParameters.addCorrelationId(correlationId);\n    requestParameters.addClientInfo();\n    return requestParameters.createQueryString();\n  };\n\n  return DeviceCodeClient;\n}(BaseClient);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * OAuth2.0 refresh token client\r\n */\n\n\nvar RefreshTokenClient =\n/** @class */\nfunction (_super) {\n  __extends$1(RefreshTokenClient, _super);\n\n  function RefreshTokenClient(configuration) {\n    return _super.call(this, configuration) || this;\n  }\n\n  RefreshTokenClient.prototype.acquireToken = function (request) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var response, responseHandler, tokenResponse;\n      return __generator$1(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.executeTokenRequest(request, this.authority)];\n\n          case 1:\n            response = _a.sent();\n            responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\n            responseHandler.validateTokenResponse(response.body);\n            tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority);\n            return [2\n            /*return*/\n            , tokenResponse];\n        }\n      });\n    });\n  };\n\n  RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var requestBody, headers;\n      return __generator$1(this, function (_a) {\n        requestBody = this.createTokenRequestBody(request);\n        headers = this.createDefaultTokenRequestHeaders();\n        return [2\n        /*return*/\n        , this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\n      });\n    });\n  };\n\n  RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\n    var parameterBuilder = new RequestParameterBuilder();\n    parameterBuilder.addClientId(this.config.authOptions.clientId);\n    var scopeSet = new ScopeSet(request.scopes || []);\n    parameterBuilder.addScopes(scopeSet);\n    parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n    parameterBuilder.addClientInfo();\n    var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n    parameterBuilder.addCorrelationId(correlationId);\n    parameterBuilder.addRefreshToken(request.refreshToken);\n    return parameterBuilder.createQueryString();\n  };\n\n  return RefreshTokenClient;\n}(BaseClient);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n\nvar SilentFlowClient =\n/** @class */\nfunction (_super) {\n  __extends$1(SilentFlowClient, _super);\n\n  function SilentFlowClient(configuration) {\n    return _super.call(this, configuration) || this;\n  }\n  /**\r\n   * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n   * the given token and returns the renewed token\r\n   * @param request\r\n   */\n\n\n  SilentFlowClient.prototype.acquireToken = function (request) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var requestScopes, accountKey, cachedAccount, homeAccountId, environment, cachedAccessToken, cachedRefreshToken, refreshTokenClient, refreshTokenRequest, cachedIdToken, idTokenObj;\n      return __generator$1(this, function (_a) {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n          throw ClientConfigurationError.createEmptyTokenRequestError();\n        } // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n\n\n        if (!request.account) {\n          throw ClientAuthError.createNoAccountInSilentRequestError();\n        }\n\n        requestScopes = new ScopeSet(request.scopes || []);\n        accountKey = AccountEntity.generateAccountCacheKey(request.account);\n        cachedAccount = this.cacheManager.getAccount(accountKey);\n        homeAccountId = cachedAccount.homeAccountId;\n        environment = cachedAccount.environment;\n        cachedAccessToken = this.readAccessTokenFromCache(homeAccountId, environment, requestScopes, cachedAccount.realm);\n        cachedRefreshToken = this.readRefreshTokenFromCache(homeAccountId, environment); // Check if refresh is forced, or if tokens are expired. If neither are true, return a token response with the found token entry.\n\n        if (request.forceRefresh || !cachedAccessToken || this.isTokenExpired(cachedAccessToken.expiresOn)) {\n          // no refresh Token\n          if (!cachedRefreshToken) {\n            throw ClientAuthError.createNoTokensFoundError();\n          }\n\n          refreshTokenClient = new RefreshTokenClient(this.config);\n          refreshTokenRequest = __assign$1(__assign$1({}, request), {\n            refreshToken: cachedRefreshToken.secret\n          });\n          return [2\n          /*return*/\n          , refreshTokenClient.acquireToken(refreshTokenRequest)];\n        }\n\n        cachedIdToken = this.readIdTokenFromCache(homeAccountId, environment, cachedAccount.realm);\n        idTokenObj = new IdToken(cachedIdToken.secret, this.config.cryptoInterface);\n        return [2\n        /*return*/\n        , ResponseHandler.generateAuthenticationResult({\n          account: cachedAccount,\n          accessToken: cachedAccessToken,\n          idToken: cachedIdToken,\n          refreshToken: cachedRefreshToken\n        }, idTokenObj, true)];\n      });\n    });\n  };\n  /**\r\n   * fetches idToken from cache if present\r\n   * @param request\r\n   */\n\n\n  SilentFlowClient.prototype.readIdTokenFromCache = function (homeAccountId, environment, inputRealm) {\n    var idTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.ID_TOKEN, this.config.authOptions.clientId, inputRealm);\n    return this.cacheManager.getCredential(idTokenKey);\n  };\n  /**\r\n   * fetches accessToken from cache if present\r\n   * @param request\r\n   * @param scopes\r\n   */\n\n\n  SilentFlowClient.prototype.readAccessTokenFromCache = function (homeAccountId, environment, scopes, inputRealm) {\n    var accessTokenFilter = {\n      homeAccountId: homeAccountId,\n      environment: environment,\n      credentialType: CredentialType.ACCESS_TOKEN,\n      clientId: this.config.authOptions.clientId,\n      realm: inputRealm,\n      target: scopes.printScopesLowerCase()\n    };\n    var credentialCache = this.cacheManager.getCredentialsFilteredBy(accessTokenFilter);\n    var accessTokens = Object.keys(credentialCache.accessTokens).map(function (key) {\n      return credentialCache.accessTokens[key];\n    });\n    if (accessTokens.length > 1) ;else if (accessTokens.length < 1) {\n      return null;\n    }\n    return accessTokens[0];\n  };\n  /**\r\n   * fetches refreshToken from cache if present\r\n   * @param request\r\n   */\n\n\n  SilentFlowClient.prototype.readRefreshTokenFromCache = function (homeAccountId, environment) {\n    var refreshTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.REFRESH_TOKEN, this.config.authOptions.clientId);\n    return this.cacheManager.getCredential(refreshTokenKey);\n  };\n  /**\r\n   * check if a token is expired based on given UTC time in seconds.\r\n   * @param expiresOn\r\n   */\n\n\n  SilentFlowClient.prototype.isTokenExpired = function (expiresOn) {\n    // check for access token expiry\n    var expirationSec = Number(expiresOn) || 0;\n    var offsetCurrentTimeSec = TimeUtils.nowSeconds() + this.config.systemOptions.tokenRenewalOffsetSeconds; // If current time + offset is greater than token expiration time, then token is expired.\n\n    return offsetCurrentTimeSec > expirationSec;\n  };\n\n  return SilentFlowClient;\n}(BaseClient);\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n */\n\n\nvar Authority =\n/** @class */\nfunction () {\n  function Authority(authority, networkInterface) {\n    this.canonicalAuthority = authority;\n\n    this._canonicalAuthority.validateAsUri();\n\n    this.networkInterface = networkInterface;\n  }\n\n  Object.defineProperty(Authority.prototype, \"authorityType\", {\n    // See above for AuthorityType\n    get: function () {\n      var pathSegments = this.canonicalAuthorityUrlComponents.PathSegments;\n\n      if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS) {\n        return AuthorityType.Adfs;\n      }\n\n      return AuthorityType.Default;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Authority.prototype, \"canonicalAuthority\", {\n    /**\r\n     * A URL that is the authority set by the developer\r\n     */\n    get: function () {\n      return this._canonicalAuthority.urlString;\n    },\n\n    /**\r\n     * Sets canonical authority.\r\n     */\n    set: function (url) {\n      this._canonicalAuthority = new UrlString(url);\n\n      this._canonicalAuthority.validateAsUri();\n\n      this._canonicalAuthorityUrlComponents = null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Authority.prototype, \"canonicalAuthorityUrlComponents\", {\n    /**\r\n     * Get authority components.\r\n     */\n    get: function () {\n      if (!this._canonicalAuthorityUrlComponents) {\n        this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\n      }\n\n      return this._canonicalAuthorityUrlComponents;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Authority.prototype, \"tenant\", {\n    /**\r\n     * Get tenant for authority.\r\n     */\n    get: function () {\n      return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Authority.prototype, \"authorizationEndpoint\", {\n    /**\r\n     * OAuth /authorize endpoint for requests\r\n     */\n    get: function () {\n      if (this.discoveryComplete()) {\n        return this.replaceTenant(this.tenantDiscoveryResponse.authorization_endpoint);\n      } else {\n        throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Authority.prototype, \"tokenEndpoint\", {\n    /**\r\n     * OAuth /token endpoint for requests\r\n     */\n    get: function () {\n      if (this.discoveryComplete()) {\n        return this.replaceTenant(this.tenantDiscoveryResponse.token_endpoint);\n      } else {\n        throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Authority.prototype, \"deviceCodeEndpoint\", {\n    get: function () {\n      if (this.discoveryComplete()) {\n        return this.tenantDiscoveryResponse.token_endpoint.replace(\"/token\", \"/devicecode\");\n      } else {\n        throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Authority.prototype, \"endSessionEndpoint\", {\n    /**\r\n     * OAuth logout endpoint for requests\r\n     */\n    get: function () {\n      if (this.discoveryComplete()) {\n        return this.replaceTenant(this.tenantDiscoveryResponse.end_session_endpoint);\n      } else {\n        throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Authority.prototype, \"selfSignedJwtAudience\", {\n    /**\r\n     * OAuth issuer for requests\r\n     */\n    get: function () {\n      if (this.discoveryComplete()) {\n        return this.replaceTenant(this.tenantDiscoveryResponse.issuer);\n      } else {\n        throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Replaces tenant in url path with current tenant. Defaults to common.\r\n   * @param urlString\r\n   */\n\n  Authority.prototype.replaceTenant = function (urlString) {\n    return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n  };\n\n  Object.defineProperty(Authority.prototype, \"defaultOpenIdConfigurationEndpoint\", {\n    /**\r\n     * The default open id configuration endpoint for any canonical authority.\r\n     */\n    get: function () {\n      if (this.authorityType === AuthorityType.Adfs) {\n        return this.canonicalAuthority + \".well-known/openid-configuration\";\n      }\n\n      return this.canonicalAuthority + \"v2.0/.well-known/openid-configuration\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Boolean that returns whethr or not tenant discovery has been completed.\r\n   */\n\n  Authority.prototype.discoveryComplete = function () {\n    return !!this.tenantDiscoveryResponse;\n  };\n  /**\r\n   * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n   * @param openIdConfigurationEndpoint\r\n   */\n\n\n  Authority.prototype.discoverEndpoints = function (openIdConfigurationEndpoint) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      return __generator$1(this, function (_a) {\n        return [2\n        /*return*/\n        , this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint)];\n      });\n    });\n  };\n\n  Object.defineProperty(Authority.prototype, \"aadInstanceDiscoveryEndpointUrl\", {\n    // Default AAD Instance Discovery Endpoint\n    get: function () {\n      return \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + this.canonicalAuthority + \"oauth2/v2.0/authorize\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Authority.prototype.validateAndSetPreferredNetwork = function () {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var host, preferredNetwork;\n      return __generator$1(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            host = this.canonicalAuthorityUrlComponents.HostNameAndPort;\n            if (!(TrustedAuthority.getTrustedHostList().length === 0)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , TrustedAuthority.setTrustedAuthoritiesFromNetwork(this._canonicalAuthority, this.networkInterface)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            if (!TrustedAuthority.IsInTrustedHostList(host)) {\n              throw ClientConfigurationError.createUntrustedAuthorityError();\n            }\n\n            preferredNetwork = TrustedAuthority.getCloudDiscoveryMetadata(host).preferred_network;\n\n            if (host !== preferredNetwork) {\n              this.canonicalAuthority = this.canonicalAuthority.replace(host, preferredNetwork);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Perform endpoint discovery to discover the /authorize, /token and logout endpoints.\r\n   */\n\n\n  Authority.prototype.resolveEndpointsAsync = function () {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var openIdConfigEndpoint, response;\n      return __generator$1(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.validateAndSetPreferredNetwork()];\n\n          case 1:\n            _a.sent();\n\n            openIdConfigEndpoint = this.defaultOpenIdConfigurationEndpoint;\n            return [4\n            /*yield*/\n            , this.discoverEndpoints(openIdConfigEndpoint)];\n\n          case 2:\n            response = _a.sent();\n            this.tenantDiscoveryResponse = response.body;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return Authority;\n}();\n\nvar AuthorityFactory =\n/** @class */\nfunction () {\n  function AuthorityFactory() {}\n  /**\r\n   * Create an authority object of the correct type based on the url\r\n   * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n   *\r\n   * Also performs endpoint discovery.\r\n   *\r\n   * @param authorityUri\r\n   * @param networkClient\r\n   */\n\n\n  AuthorityFactory.createDiscoveredInstance = function (authorityUri, networkClient) {\n    return __awaiter$1(this, void 0, void 0, function () {\n      var acquireTokenAuthority, e_1;\n      return __generator$1(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            acquireTokenAuthority = AuthorityFactory.createInstance(authorityUri, networkClient);\n\n            if (acquireTokenAuthority.discoveryComplete()) {\n              return [2\n              /*return*/\n              , acquireTokenAuthority];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , acquireTokenAuthority.resolveEndpointsAsync()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , acquireTokenAuthority];\n\n          case 3:\n            e_1 = _a.sent();\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Create an authority object of the correct type based on the url\r\n   * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n   *\r\n   * Does not perform endpoint discovery.\r\n   *\r\n   * @param authorityUrl\r\n   * @param networkInterface\r\n   */\n\n\n  AuthorityFactory.createInstance = function (authorityUrl, networkInterface) {\n    // Throw error if authority url is empty\n    if (StringUtils.isEmpty(authorityUrl)) {\n      throw ClientConfigurationError.createUrlEmptyError();\n    }\n\n    return new Authority(authorityUrl, networkInterface);\n  };\n\n  return AuthorityFactory;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Result returned from the authority's token endpoint.\r\n * - uniqueId               - `oid` or `sub` claim from ID token\r\n * - tenantId               - `tid` claim from ID token\r\n * - scopes                 - Scopes that are validated for the respective token\r\n * - account                - An account object representation of the currently signed-in user\r\n * - idToken                - Id token received as part of the response\r\n * - idTokenClaims          - MSAL-relevant ID token claims\r\n * - accessToken            - Access token received as part of the response\r\n * - fromCache              - Boolean denoting whether token came from cache\r\n * - expiresOn              - Javascript Date object representing relative expiration of access token\r\n * - extExpiresOn           - Javascript Date object representing extended relative expiration of access token in case of server outage\r\n * - state                  - Value passed in by user in request\r\n * - familyId               - Family ID identifier, usually only used for refresh tokens\r\n */\n\n\nvar AuthenticationResult =\n/** @class */\nfunction () {\n  function AuthenticationResult() {}\n\n  return AuthenticationResult;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Constants\r\n */\n\n\nvar BrowserConstants = {\n  // Local storage constant string\n  CACHE_LOCATION_LOCAL: \"localStorage\",\n  // Session storage constant string\n  CACHE_LOCATION_SESSION: \"sessionStorage\",\n  // Interaction status key (only used for browsers)\n  INTERACTION_STATUS_KEY: \"interaction.status\",\n  // Interaction in progress cache value\n  INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n  // Invalid grant error code\n  INVALID_GRANT_ERROR: \"invalid_grant\",\n  // Default popup window width\n  POPUP_WIDTH: 483,\n  // Default popup window height\n  POPUP_HEIGHT: 600,\n  // Default popup monitor poll interval in milliseconds\n  POLL_INTERVAL_MS: 50,\n  // msal-browser SKU\n  MSAL_SKU: \"msal.js.browser\"\n};\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\n\nvar HTTP_REQUEST_TYPE;\n\n(function (HTTP_REQUEST_TYPE) {\n  HTTP_REQUEST_TYPE[\"GET\"] = \"GET\";\n  HTTP_REQUEST_TYPE[\"POST\"] = \"POST\";\n})(HTTP_REQUEST_TYPE || (HTTP_REQUEST_TYPE = {}));\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\n\n\nvar TemporaryCacheKeys;\n\n(function (TemporaryCacheKeys) {\n  TemporaryCacheKeys[\"AUTHORITY\"] = \"authority\";\n  TemporaryCacheKeys[\"ACQUIRE_TOKEN_ACCOUNT\"] = \"acquireToken.account\";\n  TemporaryCacheKeys[\"SESSION_STATE\"] = \"session.state\";\n  TemporaryCacheKeys[\"REQUEST_STATE\"] = \"request.state\";\n  TemporaryCacheKeys[\"NONCE_IDTOKEN\"] = \"nonce.id_token\";\n  TemporaryCacheKeys[\"ORIGIN_URI\"] = \"request.origin\";\n  TemporaryCacheKeys[\"RENEW_STATUS\"] = \"token.renew.status\";\n  TemporaryCacheKeys[\"URL_HASH\"] = \"urlHash\";\n  TemporaryCacheKeys[\"REQUEST_PARAMS\"] = \"request.params\";\n  TemporaryCacheKeys[\"SCOPES\"] = \"scopes\";\n})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\n\n\nvar FetchClient =\n/** @class */\nfunction () {\n  function FetchClient() {}\n  /**\r\n   * Fetch Client for REST endpoints - Get request\r\n   * @param url\r\n   * @param headers\r\n   * @param body\r\n   */\n\n\n  FetchClient.prototype.sendGetRequestAsync = function (url, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , fetch(url, {\n              method: HTTP_REQUEST_TYPE.GET,\n              headers: this.getFetchHeaders(options)\n            })];\n\n          case 1:\n            response = _b.sent();\n            _a = {\n              headers: this.getHeaderMap(response.headers)\n            };\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 2:\n            return [2\n            /*return*/\n            , (_a.body = _b.sent(), _a.status = response.status, _a)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Fetch Client for REST endpoints - Post request\r\n   * @param url\r\n   * @param headers\r\n   * @param body\r\n   */\n\n\n  FetchClient.prototype.sendPostRequestAsync = function (url, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var reqBody, response, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            reqBody = options && options.body || \"\";\n            return [4\n            /*yield*/\n            , fetch(url, {\n              method: HTTP_REQUEST_TYPE.POST,\n              headers: this.getFetchHeaders(options),\n              body: reqBody\n            })];\n\n          case 1:\n            response = _b.sent();\n            _a = {\n              headers: this.getHeaderMap(response.headers)\n            };\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 2:\n            return [2\n            /*return*/\n            , (_a.body = _b.sent(), _a.status = response.status, _a)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get Fetch API Headers object from string map\r\n   * @param inputHeaders\r\n   */\n\n\n  FetchClient.prototype.getFetchHeaders = function (options) {\n    var headers = new Headers();\n\n    if (!(options && options.headers)) {\n      return headers;\n    }\n\n    options.headers.forEach(function (value, key) {\n      headers.append(key, value);\n    });\n    return headers;\n  };\n\n  FetchClient.prototype.getHeaderMap = function (headers) {\n    var headerMap = new Map();\n    headers.forEach(function (value, key) {\n      headerMap.set(key, value);\n    });\n    return headerMap;\n  };\n\n  return FetchClient;\n}();\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\n\nvar BrowserAuthErrorMessage = {\n  noWindowObjectError: {\n    code: \"no_window_object\",\n    desc: \"No window object detected.\"\n  },\n  pkceNotGenerated: {\n    code: \"pkce_not_created\",\n    desc: \"The PKCE code challenge and verifier could not be generated.\"\n  },\n  cryptoDoesNotExist: {\n    code: \"crypto_nonexistent\",\n    desc: \"The crypto object or function is not available.\"\n  },\n  httpMethodNotImplementedError: {\n    code: \"http_method_not_implemented\",\n    desc: \"The HTTP method given has not been implemented in this library.\"\n  },\n  emptyNavigateUriError: {\n    code: \"empty_navigate_uri\",\n    desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n  },\n  hashEmptyError: {\n    code: \"hash_empty_error\",\n    desc: \"Hash value cannot be processed because it is empty.\"\n  },\n  interactionInProgress: {\n    code: \"interaction_in_progress\",\n    desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.\"\n  },\n  popUpWindowError: {\n    code: \"popup_window_error\",\n    desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n  },\n  emptyWindowError: {\n    code: \"empty_window_error\",\n    desc: \"window.open returned null or undefined window object.\"\n  },\n  userCancelledError: {\n    code: \"user_cancelled\",\n    desc: \"User cancelled the flow.\"\n  },\n  monitorWindowTimeoutError: {\n    code: \"monitor_window_timeout\",\n    desc: \"Token acquisition in popup failed due to timeout.\"\n  },\n  redirectInIframeError: {\n    code: \"redirect_in_iframe\",\n    desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n  },\n  blockTokenRequestsInHiddenIframeError: {\n    code: \"block_iframe_reload\",\n    desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. Please ensure monitorWindowForHash was called.\"\n  },\n  iframeClosedPrematurelyError: {\n    code: \"iframe_closed_prematurely\",\n    desc: \"The iframe being monitored was closed prematurely.\"\n  },\n  silentSSOInsufficientInfoError: {\n    code: \"silent_sso_error\",\n    desc: \"Silent SSO could not be completed - insufficient information was provided. Please provide either a login_hint, sid or account object.\"\n  },\n  silentPromptValueError: {\n    code: \"silent_prompt_value_error\",\n    desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\n  },\n  tokenRequestCacheError: {\n    code: \"token_request_cache_error\",\n    desc: \"The token request could not be fetched from the cache correctly.\"\n  },\n  invalidCacheType: {\n    code: \"invalid_cache_type\",\n    desc: \"Invalid cache type\"\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\n\nvar BrowserAuthError =\n/** @class */\nfunction (_super) {\n  __extends(BrowserAuthError, _super);\n\n  function BrowserAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    Object.setPrototypeOf(_this, BrowserAuthError.prototype);\n    _this.name = \"BrowserAuthError\";\n    return _this;\n  }\n  /**\r\n   * Creates error thrown when no window object can be found.\r\n   */\n\n\n  BrowserAuthError.createNoWindowObjectError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noWindowObjectError.code, BrowserAuthErrorMessage.noWindowObjectError.desc);\n  };\n  /**\r\n   * Creates an error thrown when PKCE is not implemented.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createPkceNotGeneratedError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, BrowserAuthErrorMessage.pkceNotGenerated.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when the crypto object is unavailable.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createCryptoNotAvailableError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, BrowserAuthErrorMessage.cryptoDoesNotExist.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n   * @param method\r\n   */\n\n\n  BrowserAuthError.createHttpMethodNotImplementedError = function (method) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, BrowserAuthErrorMessage.httpMethodNotImplementedError.desc + \" Given Method: \" + method);\n  };\n  /**\r\n   * Creates an error thrown when the navigation URI is empty.\r\n   */\n\n\n  BrowserAuthError.createEmptyNavigationUriError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   * @param hashValue\r\n   */\n\n\n  BrowserAuthError.createEmptyHashError = function (hashValue) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, BrowserAuthErrorMessage.hashEmptyError.desc + \" Given Url: \" + hashValue);\n  };\n  /**\r\n   * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n   */\n\n\n  BrowserAuthError.createInteractionInProgressError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n  };\n  /**\r\n   * Creates an error thrown when the popup window could not be opened.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createPopupWindowError = function (errDetail) {\n    var errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\n    errorMessage = !StringUtils.isEmpty(errDetail) ? errorMessage + \" Details: \" + errDetail : errorMessage;\n    return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\n  };\n  /**\r\n   * Creates an error thrown when window.open returns an empty window object.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createEmptyWindowCreatedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the user closes a popup.\r\n   */\n\n\n  BrowserAuthError.createUserCancelledError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\n  };\n  /**\r\n   * Creates an error thrown when monitorWindowFromHash times out for a given popup.\r\n   * @param urlNavigate\r\n   */\n\n\n  BrowserAuthError.createMonitorWindowTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.monitorWindowTimeoutError.code, BrowserAuthErrorMessage.monitorWindowTimeoutError.desc);\n  };\n  /**\r\n   * Creates an error thrown when navigateWindow is called inside an iframe.\r\n   * @param windowParentCheck\r\n   */\n\n\n  BrowserAuthError.createRedirectInIframeError = function (windowParentCheck) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, BrowserAuthErrorMessage.redirectInIframeError.desc + \" (window.parent !== window) => \" + windowParentCheck);\n  };\n  /**\r\n   * Creates an error thrown when an auth reload is done inside an iframe.\r\n   */\n\n\n  BrowserAuthError.createBlockReloadInHiddenIframeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n  };\n  /**\r\n   * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n   */\n\n\n  BrowserAuthError.createIframeClosedPrematurelyError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the login_hint, sid or account object is not provided in the ssoSilent API.\r\n   */\n\n\n  BrowserAuthError.createSilentSSOInsufficientInfoError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentSSOInsufficientInfoError.code, BrowserAuthErrorMessage.silentSSOInsufficientInfoError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n   */\n\n\n  BrowserAuthError.createSilentPromptValueError = function (givenPrompt) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, BrowserAuthErrorMessage.silentPromptValueError.desc + \" Given value: \" + givenPrompt);\n  };\n  /**\r\n   * Creates an error thrown when the token request could not be retrieved from the cache\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createTokenRequestCacheError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.tokenRequestCacheError.code, BrowserAuthErrorMessage.tokenRequestCacheError.desc + \" Error Detail: \" + errDetail);\n  };\n  /**\r\n  * Creates an error thrown if cache type is invalid.\r\n  */\n\n\n  BrowserAuthError.createInvalidCacheTypeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, \"\" + BrowserAuthErrorMessage.invalidCacheType.desc);\n  };\n\n  return BrowserAuthError;\n}(AuthError);\n/**\r\n * This client implements the XMLHttpRequest class to send GET and POST requests.\r\n */\n\n\nvar XhrClient =\n/** @class */\nfunction () {\n  function XhrClient() {}\n  /**\r\n   * XhrClient for REST endpoints - Get request\r\n   * @param url\r\n   * @param headers\r\n   * @param body\r\n   */\n\n\n  XhrClient.prototype.sendGetRequestAsync = function (url, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options)];\n      });\n    });\n  };\n  /**\r\n   * XhrClient for REST endpoints - Post request\r\n   * @param url\r\n   * @param headers\r\n   * @param body\r\n   */\n\n\n  XhrClient.prototype.sendPostRequestAsync = function (url, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options)];\n      });\n    });\n  };\n  /**\r\n   * Helper for XhrClient requests.\r\n   * @param url\r\n   * @param method\r\n   * @param options\r\n   */\n\n\n  XhrClient.prototype.sendRequestAsync = function (url, method, options) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(method, url,\n      /* async: */\n      true);\n\n      _this.setXhrHeaders(xhr, options);\n\n      xhr.onload = function () {\n        if (xhr.status < 200 || xhr.status >= 300) {\n          reject(xhr.responseText);\n        }\n\n        try {\n          var jsonResponse = JSON.parse(xhr.responseText);\n          var networkResponse = {\n            headers: _this.getHeaderMap(xhr),\n            body: jsonResponse,\n            status: xhr.status\n          };\n          resolve(networkResponse);\n        } catch (e) {\n          reject(xhr.responseText);\n        }\n      };\n\n      xhr.onerror = function () {\n        reject(xhr.status);\n      };\n\n      if (method === \"POST\" && options.body) {\n        xhr.send(options.body);\n      } else if (method === \"GET\") {\n        xhr.send();\n      } else {\n        throw BrowserAuthError.createHttpMethodNotImplementedError(method);\n      }\n    });\n  };\n  /**\r\n   * Helper to set XHR headers for request.\r\n   * @param xhr\r\n   * @param options\r\n   */\n\n\n  XhrClient.prototype.setXhrHeaders = function (xhr, options) {\n    if (options && options.headers) {\n      options.headers.forEach(function (value, key) {\n        xhr.setRequestHeader(key, value);\n      });\n    }\n  };\n  /**\r\n   * Gets a string map of the headers received in the response.\r\n   *\r\n   * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\r\n   * @param xhr\r\n   */\n\n\n  XhrClient.prototype.getHeaderMap = function (xhr) {\n    var headerString = xhr.getAllResponseHeaders();\n    var headerArr = headerString.trim().split(/[\\r\\n]+/);\n    var headerMap = new Map();\n    headerArr.forEach(function (value) {\n      var parts = value.split(\": \");\n      var headerName = parts.shift();\n      var headerVal = parts.join(\": \");\n      headerMap.set(headerName, headerVal);\n    });\n    return headerMap;\n  };\n\n  return XhrClient;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Utility class for browser specific functions\r\n */\n\n\nvar BrowserUtils =\n/** @class */\nfunction () {\n  function BrowserUtils() {} // #region Window Navigation and URL management\n\n  /**\r\n   * Used to redirect the browser to the STS authorization endpoint\r\n   * @param {string} urlNavigate - URL of the authorization endpoint\r\n   * @param {boolean} noHistory - boolean flag, uses .replace() instead of .assign() if true\r\n   */\n\n\n  BrowserUtils.navigateWindow = function (urlNavigate, noHistory) {\n    if (noHistory) {\n      window.location.replace(urlNavigate);\n    } else {\n      window.location.assign(urlNavigate);\n    }\n  };\n  /**\r\n   * Clears hash from window url.\r\n   */\n\n\n  BrowserUtils.clearHash = function () {\n    window.location.hash = \"\";\n  };\n  /**\r\n   * Replaces current hash with hash from provided url\r\n   */\n\n\n  BrowserUtils.replaceHash = function (url) {\n    var urlParts = url.split(\"#\");\n    urlParts.shift(); // Remove part before the hash\n\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\n  };\n  /**\r\n   * Returns boolean of whether the current window is in an iframe or not.\r\n   */\n\n\n  BrowserUtils.isInIframe = function () {\n    return window.parent !== window;\n  }; // #endregion\n\n  /**\r\n   * Returns current window URL as redirect uri\r\n   */\n\n\n  BrowserUtils.getCurrentUri = function () {\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\n  };\n  /**\r\n   * Returns best compatible network client object.\r\n   */\n\n\n  BrowserUtils.getBrowserNetworkClient = function () {\n    if (window.fetch) {\n      return new FetchClient();\n    } else {\n      return new XhrClient();\n    }\n  };\n  /**\r\n   * Throws error if we have completed an auth and are\r\n   * attempting another auth request inside an iframe.\r\n   */\n\n\n  BrowserUtils.blockReloadInHiddenIframes = function () {\n    var isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash); // return an error if called from the hidden iframe created by the msal js silent calls\n\n    if (isResponseHash && BrowserUtils.isInIframe()) {\n      throw BrowserAuthError.createBlockReloadInHiddenIframeError();\n    }\n  };\n  /**\r\n   * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n   */\n\n\n  BrowserUtils.detectIEOrEdge = function () {\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    var msie11 = ua.indexOf(\"Trident/\");\n    var msedge = ua.indexOf(\"Edge/\");\n    var isIE = msie > 0 || msie11 > 0;\n    var isEdge = msedge > 0;\n    return isIE || isEdge;\n  };\n\n  return BrowserUtils;\n}(); // Default timeout for popup windows and iframes in milliseconds\n\n\nvar DEFAULT_POPUP_TIMEOUT_MS = 60000;\nvar DEFAULT_IFRAME_TIMEOUT_MS = 6000; // Default auth options for browser\n\nvar DEFAULT_AUTH_OPTIONS$1 = {\n  clientId: \"\",\n  authority: \"\" + Constants.DEFAULT_AUTHORITY,\n  knownAuthorities: [],\n  cloudDiscoveryMetadata: \"\",\n  redirectUri: \"\",\n  postLogoutRedirectUri: \"\",\n  navigateToLoginRequestUrl: true\n}; // Default cache options for browser\n\nvar DEFAULT_CACHE_OPTIONS = {\n  cacheLocation: BrowserConstants.CACHE_LOCATION_SESSION,\n  storeAuthStateInCookie: false\n}; // Default logger options for browser\n\nvar DEFAULT_LOGGER_OPTIONS = {\n  loggerCallback: function () {},\n  piiLoggingEnabled: false\n}; // Default system options for browser\n\nvar DEFAULT_BROWSER_SYSTEM_OPTIONS = __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), {\n  loggerOptions: DEFAULT_LOGGER_OPTIONS,\n  networkClient: BrowserUtils.getBrowserNetworkClient(),\n  windowHashTimeout: DEFAULT_POPUP_TIMEOUT_MS,\n  iframeHashTimeout: DEFAULT_IFRAME_TIMEOUT_MS,\n  loadFrameTimeout: BrowserUtils.detectIEOrEdge() ? 500 : 0\n});\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\n\n\nfunction buildConfiguration(_a) {\n  var userInputAuth = _a.auth,\n      userInputCache = _a.cache,\n      userInputSystem = _a.system;\n  var overlayedConfig = {\n    auth: __assign(__assign({}, DEFAULT_AUTH_OPTIONS$1), userInputAuth),\n    cache: __assign(__assign({}, DEFAULT_CACHE_OPTIONS), userInputCache),\n    system: __assign(__assign({}, DEFAULT_BROWSER_SYSTEM_OPTIONS), userInputSystem)\n  };\n  return overlayedConfig;\n}\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\n\nvar BrowserConfigurationAuthErrorMessage = {\n  redirectUriNotSet: {\n    code: \"redirect_uri_empty\",\n    desc: \"A redirect URI is required for all calls, and none has been set.\"\n  },\n  postLogoutUriNotSet: {\n    code: \"post_logout_uri_empty\",\n    desc: \"A post logout redirect has not been set.\"\n  },\n  storageNotSupportedError: {\n    code: \"storage_not_supported\",\n    desc: \"Given storage configuration option was not supported.\"\n  },\n  noRedirectCallbacksSet: {\n    code: \"no_redirect_callbacks\",\n    desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  invalidCallbackObject: {\n    code: \"invalid_callback_object\",\n    desc: \"The object passed for the callback was invalid. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\n\nvar BrowserConfigurationAuthError =\n/** @class */\nfunction (_super) {\n  __extends(BrowserConfigurationAuthError, _super);\n\n  function BrowserConfigurationAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"BrowserConfigurationAuthError\";\n    Object.setPrototypeOf(_this, BrowserConfigurationAuthError.prototype);\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n   */\n\n\n  BrowserConfigurationAuthError.createRedirectUriEmptyError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n   */\n\n\n  BrowserConfigurationAuthError.createPostLogoutRedirectUriEmptyError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n  };\n  /**\r\n   * Creates error thrown when given storage location is not supported.\r\n   * @param givenStorageLocation\r\n   */\n\n\n  BrowserConfigurationAuthError.createStorageNotSupportedError = function (givenStorageLocation) {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc + \" Given Location: \" + givenStorageLocation);\n  };\n  /**\r\n   * Creates error thrown when callback object is invalid.\r\n   * @param callbackObject\r\n   */\n\n\n  BrowserConfigurationAuthError.createInvalidCallbackObjectError = function (callbackObject) {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.invalidCallbackObject.code, BrowserConfigurationAuthErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\n  };\n  /**\r\n   * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n   */\n\n\n  BrowserConfigurationAuthError.createRedirectCallbacksNotSetError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n  };\n\n  return BrowserConfigurationAuthError;\n}(AuthError); // Cookie life calculation (hours * minutes * seconds * ms)\n\n\nvar COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\n\nvar BrowserStorage =\n/** @class */\nfunction (_super) {\n  __extends(BrowserStorage, _super);\n\n  function BrowserStorage(clientId, cacheConfig) {\n    var _this = _super.call(this) || this; // Validate cache location\n\n\n    _this.validateWindowStorage(cacheConfig.cacheLocation);\n\n    _this.cacheConfig = cacheConfig;\n    _this.windowStorage = window[_this.cacheConfig.cacheLocation];\n    _this.clientId = clientId; // Migrate any cache entries from older versions of MSAL.\n\n    _this.migrateCacheEntries();\n\n    return _this;\n  }\n  /**\r\n   * Validates the the given cache location string is an expected value:\r\n   * - localStorage\r\n   * - sessionStorage (default)\r\n   * Also validates if given cacheLocation is supported on the browser.\r\n   * @param cacheLocation\r\n   */\n\n\n  BrowserStorage.prototype.validateWindowStorage = function (cacheLocation) {\n    if (typeof window === \"undefined\" || !window) {\n      throw BrowserAuthError.createNoWindowObjectError();\n    }\n\n    if (cacheLocation !== BrowserConstants.CACHE_LOCATION_LOCAL && cacheLocation !== BrowserConstants.CACHE_LOCATION_SESSION) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n\n    var storageSupported = !!window[cacheLocation];\n\n    if (!storageSupported) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n  };\n  /**\r\n   * Migrate all old cache entries to new schema. No rollback supported.\r\n   * @param storeAuthStateInCookie\r\n   */\n\n\n  BrowserStorage.prototype.migrateCacheEntries = function () {\n    var _this = this;\n\n    var idTokenKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ID_TOKEN;\n    var clientInfoKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.CLIENT_INFO;\n    var errorKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ERROR;\n    var errorDescKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ERROR_DESC;\n    var idTokenValue = this.windowStorage.getItem(idTokenKey);\n    var clientInfoValue = this.windowStorage.getItem(clientInfoKey);\n    var errorValue = this.windowStorage.getItem(errorKey);\n    var errorDescValue = this.windowStorage.getItem(errorDescKey);\n    var values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\n    var keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\n    keysToMigrate.forEach(function (cacheKey, index) {\n      return _this.migrateCacheEntry(cacheKey, values[index]);\n    });\n  };\n  /**\r\n   * Utility function to help with migration.\r\n   * @param newKey\r\n   * @param value\r\n   * @param storeAuthStateInCookie\r\n   */\n\n\n  BrowserStorage.prototype.migrateCacheEntry = function (newKey, value) {\n    if (value) {\n      this.setItem(this.generateCacheKey(newKey), value, CacheSchemaType.TEMPORARY);\n    }\n  };\n  /**\r\n   * Parses key as JSON object, JSON.parse() will throw an error.\r\n   * @param key\r\n   */\n\n\n  BrowserStorage.prototype.validateObjectKey = function (key) {\n    JSON.parse(key);\n  };\n  /**\r\n   * Sets the cache item with the key and value given.\r\n   * Stores in cookie if storeAuthStateInCookie is set to true.\r\n   * This can cause cookie overflow if used incorrectly.\r\n   * @param key\r\n   * @param value\r\n   */\n\n\n  BrowserStorage.prototype.setItem = function (key, value, type) {\n    // save the cacheItem\n    switch (type) {\n      case CacheSchemaType.ACCOUNT:\n      case CacheSchemaType.CREDENTIAL:\n      case CacheSchemaType.APP_META_DATA:\n        this.windowStorage.setItem(key, JSON.stringify(value));\n        break;\n\n      case CacheSchemaType.TEMPORARY:\n        {\n          var stringVal = value;\n          this.windowStorage.setItem(key, stringVal);\n\n          if (this.cacheConfig.storeAuthStateInCookie) {\n            this.setItemCookie(key, stringVal);\n          }\n\n          break;\n        }\n\n      default:\n        {\n          throw BrowserAuthError.createInvalidCacheTypeError();\n        }\n    }\n  };\n  /**\r\n   * Gets cache item with given key.\r\n   * Will retrieve frm cookies if storeAuthStateInCookie is set to true.\r\n   * @param key\r\n   */\n\n\n  BrowserStorage.prototype.getItem = function (key, type) {\n    var value = this.windowStorage.getItem(key);\n\n    if (StringUtils.isEmpty(value)) {\n      return null;\n    }\n\n    switch (type) {\n      case CacheSchemaType.ACCOUNT:\n        {\n          var account = new AccountEntity();\n          return CacheManager.toObject(account, JSON.parse(value));\n        }\n\n      case CacheSchemaType.CREDENTIAL:\n        {\n          var credentialType = CredentialEntity.getCredentialType(key);\n\n          switch (credentialType) {\n            case CredentialType.ID_TOKEN:\n              {\n                var idTokenEntity = new IdTokenEntity();\n                return CacheManager.toObject(idTokenEntity, JSON.parse(value));\n              }\n\n            case CredentialType.ACCESS_TOKEN:\n              {\n                var accessTokenEntity = new AccessTokenEntity();\n                return CacheManager.toObject(accessTokenEntity, JSON.parse(value));\n              }\n\n            case CredentialType.REFRESH_TOKEN:\n              {\n                var refreshTokenEntity = new RefreshTokenEntity();\n                return CacheManager.toObject(refreshTokenEntity, JSON.parse(value));\n              }\n          }\n        }\n\n      case CacheSchemaType.APP_META_DATA:\n        {\n          return JSON.parse(value);\n        }\n\n      case CacheSchemaType.TEMPORARY:\n        {\n          var itemCookie = this.getItemCookie(key);\n\n          if (this.cacheConfig.storeAuthStateInCookie) {\n            return itemCookie;\n          }\n\n          return value;\n        }\n\n      default:\n        {\n          throw BrowserAuthError.createInvalidCacheTypeError();\n        }\n    }\n  };\n  /**\r\n   * Removes the cache item with the given key.\r\n   * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n   * @param key\r\n   */\n\n\n  BrowserStorage.prototype.removeItem = function (key) {\n    this.windowStorage.removeItem(key);\n\n    if (this.cacheConfig.storeAuthStateInCookie) {\n      this.clearItemCookie(key);\n    }\n\n    return true;\n  };\n  /**\r\n   * Checks whether key is in cache.\r\n   * @param key\r\n   */\n\n\n  BrowserStorage.prototype.containsKey = function (key) {\n    return this.windowStorage.hasOwnProperty(key);\n  };\n  /**\r\n   * Gets all keys in window.\r\n   */\n\n\n  BrowserStorage.prototype.getKeys = function () {\n    return Object.keys(this.windowStorage);\n  };\n  /**\r\n   * Clears all cache entries created by MSAL (except tokens).\r\n   */\n\n\n  BrowserStorage.prototype.clear = function () {\n    this.removeAllAccounts();\n    this.removeAppMetadata();\n    var key;\n\n    for (key in this.windowStorage) {\n      // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n      if (this.windowStorage.hasOwnProperty(key) && (key.indexOf(Constants.CACHE_PREFIX) !== -1 || key.indexOf(this.clientId) !== -1)) {\n        this.removeItem(key);\n      }\n    }\n  };\n  /**\r\n   * Add value to cookies\r\n   * @param cookieName\r\n   * @param cookieValue\r\n   * @param expires\r\n   */\n\n\n  BrowserStorage.prototype.setItemCookie = function (cookieName, cookieValue, expires) {\n    var cookieStr = encodeURIComponent(cookieName) + \"=\" + encodeURIComponent(cookieValue) + \";path=/;\";\n\n    if (expires) {\n      var expireTime = this.getCookieExpirationTime(expires);\n      cookieStr += \"expires=\" + expireTime + \";\";\n    }\n\n    document.cookie = cookieStr;\n  };\n  /**\r\n   * Get one item by key from cookies\r\n   * @param cookieName\r\n   */\n\n\n  BrowserStorage.prototype.getItemCookie = function (cookieName) {\n    var name = encodeURIComponent(cookieName) + \"=\";\n    var cookieList = document.cookie.split(\";\");\n\n    for (var i = 0; i < cookieList.length; i++) {\n      var cookie = cookieList[i];\n\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n\n      if (cookie.indexOf(name) === 0) {\n        return decodeURIComponent(cookie.substring(name.length, cookie.length));\n      }\n    }\n\n    return \"\";\n  };\n  /**\r\n   * Clear an item in the cookies by key\r\n   * @param cookieName\r\n   */\n\n\n  BrowserStorage.prototype.clearItemCookie = function (cookieName) {\n    this.setItemCookie(cookieName, \"\", -1);\n  };\n  /**\r\n   * Clear all msal cookies\r\n   */\n\n\n  BrowserStorage.prototype.clearMsalCookie = function (state) {\n    var nonceKey = state ? TemporaryCacheKeys.NONCE_IDTOKEN + \"|\" + state : TemporaryCacheKeys.NONCE_IDTOKEN;\n    this.clearItemCookie(this.generateCacheKey(nonceKey));\n    this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\n    this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n  };\n  /**\r\n   * Get cookie expiration time\r\n   * @param cookieLifeDays\r\n   */\n\n\n  BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {\n    var today = new Date();\n    var expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\n    return expr.toUTCString();\n  };\n  /**\r\n   * Gets the cache object referenced by the browser\r\n   */\n\n\n  BrowserStorage.prototype.getCache = function () {\n    return this.windowStorage;\n  };\n  /**\r\n   * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\r\n   */\n\n\n  BrowserStorage.prototype.setCache = function () {// sets nothing\n  };\n  /**\r\n   * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n   * @param key\r\n   * @param addInstanceId\r\n   */\n\n\n  BrowserStorage.prototype.generateCacheKey = function (key) {\n    try {\n      // Defined schemas do not need the key migrated\n      this.validateObjectKey(key);\n      return key;\n    } catch (e) {\n      if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) || StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\n        return key;\n      }\n\n      return Constants.CACHE_PREFIX + \".\" + this.clientId + \".\" + key;\n    }\n  };\n  /**\r\n   * Create authorityKey to cache authority\r\n   * @param state\r\n   */\n\n\n  BrowserStorage.prototype.generateAuthorityKey = function (state) {\n    return \"\" + TemporaryCacheKeys.AUTHORITY + Constants.RESOURCE_DELIM + state;\n  };\n  /**\r\n   * Create Nonce key to cache nonce\r\n   * @param state\r\n   */\n\n\n  BrowserStorage.prototype.generateNonceKey = function (state) {\n    return \"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.RESOURCE_DELIM + state;\n  };\n  /**\r\n   * Sets the cacheKey for and stores the authority information in cache\r\n   * @param state\r\n   * @param authority\r\n   */\n\n\n  BrowserStorage.prototype.setAuthorityCache = function (authority, state) {\n    // Cache authorityKey\n    var authorityKey = this.generateAuthorityKey(state);\n    this.setItem(this.generateCacheKey(authorityKey), authority, CacheSchemaType.TEMPORARY);\n  };\n  /**\r\n   * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n   */\n\n\n  BrowserStorage.prototype.getCachedAuthority = function () {\n    var state = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\n\n    if (!state) {\n      return null;\n    }\n\n    return this.getItem(this.generateCacheKey(this.generateAuthorityKey(state)), CacheSchemaType.TEMPORARY);\n  };\n  /**\r\n   * Updates account, authority, and state in cache\r\n   * @param serverAuthenticationRequest\r\n   * @param account\r\n   */\n\n\n  BrowserStorage.prototype.updateCacheEntries = function (state, nonce, authorityInstance) {\n    // Cache the request state\n    this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), state, CacheSchemaType.TEMPORARY); // Cache the nonce\n\n    this.setItem(this.generateCacheKey(this.generateNonceKey(state)), nonce, CacheSchemaType.TEMPORARY); // Cache authorityKey\n\n    this.setAuthorityCache(authorityInstance, state);\n  };\n  /**\r\n   * Reset all temporary cache items\r\n   * @param state\r\n   */\n\n\n  BrowserStorage.prototype.resetRequestCache = function (state) {\n    var _this = this; // check state and remove associated cache items\n\n\n    this.getKeys().forEach(function (key) {\n      if (!StringUtils.isEmpty(state) && key.indexOf(state) !== -1) {\n        _this.removeItem(key);\n      }\n    }); // delete generic interactive request parameters\n\n    this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\n    this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n    this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n    this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n  };\n\n  BrowserStorage.prototype.cleanRequest = function () {\n    // Interaction is completed - remove interaction status.\n    this.removeItem(this.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\n    var cachedState = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\n    this.resetRequestCache(cachedState || \"\");\n  };\n\n  BrowserStorage.prototype.cacheCodeRequest = function (authCodeRequest, browserCrypto) {\n    this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), browserCrypto.base64Encode(JSON.stringify(authCodeRequest)), CacheSchemaType.TEMPORARY);\n  };\n  /**\r\n   * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n   */\n\n\n  BrowserStorage.prototype.getCachedRequest = function (state, browserCrypto) {\n    try {\n      // Get token request from cache and parse as TokenExchangeParameters.\n      var encodedTokenRequest = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), CacheSchemaType.TEMPORARY);\n      var parsedRequest = JSON.parse(browserCrypto.base64Decode(encodedTokenRequest));\n      this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)); // Get cached authority and use if no authority is cached with request.\n\n      if (StringUtils.isEmpty(parsedRequest.authority)) {\n        var authorityKey = this.generateAuthorityKey(state);\n        var cachedAuthority = this.getItem(this.generateCacheKey(authorityKey), CacheSchemaType.TEMPORARY);\n        parsedRequest.authority = cachedAuthority;\n      }\n\n      return parsedRequest;\n    } catch (err) {\n      throw BrowserAuthError.createTokenRequestCacheError(err);\n    }\n  };\n\n  return BrowserStorage;\n}(CacheManager);\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Utility class for math specific functions in browser.\r\n */\n\n\nvar MathUtils =\n/** @class */\nfunction () {\n  function MathUtils() {}\n  /**\r\n   * Decimal to Hex\r\n   *\r\n   * @param num\r\n   */\n\n\n  MathUtils.decimalToHex = function (num) {\n    var hex = num.toString(16);\n\n    while (hex.length < 2) {\n      hex = \"0\" + hex;\n    }\n\n    return hex;\n  };\n\n  return MathUtils;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n\nvar GuidGenerator =\n/** @class */\nfunction () {\n  function GuidGenerator(cryptoObj) {\n    this.cryptoObj = cryptoObj;\n  }\n  /*\r\n   * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n   * pseudo-random numbers.\r\n   * The algorithm is as follows:\r\n   *     Set the two most significant bits (bits 6 and 7) of the\r\n   *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n   *     Set the four most significant bits (bits 12 through 15) of the\r\n   *        time_hi_and_version field to the 4-bit version number from\r\n   *        Section 4.1.3. Version4\r\n   *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n   *     values.\r\n   * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n   * time-low               = 4hexOctet\r\n   * time-mid               = 2hexOctet\r\n   * time-high-and-version  = 2hexOctet\r\n   * clock-seq-and-reserved = hexOctet:\r\n   * clock-seq-low          = hexOctet\r\n   * node                   = 6hexOctet\r\n   * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n   * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n   * y values are 8, 9, A, B\r\n   */\n\n\n  GuidGenerator.prototype.generateGuid = function () {\n    try {\n      var buffer = new Uint8Array(16);\n      this.cryptoObj.getRandomValues(buffer); // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\n\n      buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\n\n      buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\n      // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\n\n      buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\n\n      buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\n\n      return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1]) + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3]) + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5]) + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7]) + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9]) + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11]) + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13]) + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\n    } catch (err) {\n      var guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n      var hex = \"0123456789abcdef\";\n      var r = 0;\n      var guidResponse = \"\";\n\n      for (var i = 0; i < 36; i++) {\n        if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\n          // each x and y needs to be random\n          r = Math.random() * 16 | 0;\n        }\n\n        if (guidHolder[i] === \"x\") {\n          guidResponse += hex[r];\n        } else if (guidHolder[i] === \"y\") {\n          // clock-seq-and-reserved first hex is filtered and remaining hex values are random\n          r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\n\n          r |= 0x8; // set pos 3 to 1 as 1???\n\n          guidResponse += hex[r];\n        } else {\n          guidResponse += guidHolder[i];\n        }\n      }\n\n      return guidResponse;\n    }\n  };\n  /**\r\n   * verifies if a string is  GUID\r\n   * @param guid\r\n   */\n\n\n  GuidGenerator.isGuid = function (guid) {\n    var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n    return regexGuid.test(guid);\n  };\n\n  return GuidGenerator;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\n\n\nvar BrowserStringUtils =\n/** @class */\nfunction () {\n  function BrowserStringUtils() {}\n  /**\r\n   * Converts string to Uint8Array\r\n   * @param sDOMStr\r\n   */\n\n\n  BrowserStringUtils.stringToUtf8Arr = function (sDOMStr) {\n    var nChr;\n    var nArrLen = 0;\n    var nStrLen = sDOMStr.length;\n    /* mapping... */\n\n    for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n      nChr = sDOMStr.charCodeAt(nMapIdx);\n      nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\n    }\n\n    var aBytes = new Uint8Array(nArrLen);\n    /* transcription... */\n\n    for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n      nChr = sDOMStr.charCodeAt(nChrIdx);\n\n      if (nChr < 128) {\n        /* one byte */\n        aBytes[nIdx++] = nChr;\n      } else if (nChr < 0x800) {\n        /* two bytes */\n        aBytes[nIdx++] = 192 + (nChr >>> 6);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x10000) {\n        /* three bytes */\n        aBytes[nIdx++] = 224 + (nChr >>> 12);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x200000) {\n        /* four bytes */\n        aBytes[nIdx++] = 240 + (nChr >>> 18);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x4000000) {\n        /* five bytes */\n        aBytes[nIdx++] = 248 + (nChr >>> 24);\n        aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else\n        /* if (nChr <= 0x7fffffff) */\n        {\n          /* six bytes */\n          aBytes[nIdx++] = 252 + (nChr >>> 30);\n          aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\n          aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n          aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n          aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n          aBytes[nIdx++] = 128 + (nChr & 63);\n        }\n    }\n\n    return aBytes;\n  };\n  /**\r\n   * Converts Uint8Array to a string\r\n   * @param aBytes\r\n   */\n\n\n  BrowserStringUtils.utf8ArrToString = function (aBytes) {\n    var sView = \"\";\n\n    for (var nPart = void 0, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n      nPart = aBytes[nIdx];\n      sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen ?\n      /* six bytes */\n\n      /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n      (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ?\n      /* five bytes */\n      (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ?\n      /* four bytes */\n      (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ?\n      /* three bytes */\n      (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ?\n      /* two bytes */\n      (nPart - 192 << 6) + aBytes[++nIdx] - 128 :\n      /* nPart < 127 ? */\n\n      /* one byte */\n      nPart);\n    }\n\n    return sView;\n  };\n\n  return BrowserStringUtils;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\n\n\nvar Base64Encode =\n/** @class */\nfunction () {\n  function Base64Encode() {}\n  /**\r\n   * Returns URL Safe b64 encoded string from a plaintext string.\r\n   * @param input\r\n   */\n\n\n  Base64Encode.prototype.urlEncode = function (input) {\n    return encodeURIComponent(this.encode(input).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\"));\n  };\n  /**\r\n   * Returns URL Safe b64 encoded string from an int8Array.\r\n   * @param inputArr\r\n   */\n\n\n  Base64Encode.prototype.urlEncodeArr = function (inputArr) {\n    return this.base64EncArr(inputArr).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n  };\n  /**\r\n   * Returns b64 encoded string from plaintext string.\r\n   * @param input\r\n   */\n\n\n  Base64Encode.prototype.encode = function (input) {\n    var inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\n    return this.base64EncArr(inputUtf8Arr);\n  };\n  /**\r\n   * Base64 encode byte array\r\n   * @param aBytes\r\n   */\n\n\n  Base64Encode.prototype.base64EncArr = function (aBytes) {\n    var eqLen = (3 - aBytes.length % 3) % 3;\n    var sB64Enc = \"\";\n\n    for (var nMod3 = void 0, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n      nMod3 = nIdx % 3;\n      /* Uncomment the following line in order to split the output in lines 76-character long: */\n\n      /*\r\n      if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n      */\n\n      nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n\n      if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n        sB64Enc += String.fromCharCode(this.uint6ToB64(nUint24 >>> 18 & 63), this.uint6ToB64(nUint24 >>> 12 & 63), this.uint6ToB64(nUint24 >>> 6 & 63), this.uint6ToB64(nUint24 & 63));\n        nUint24 = 0;\n      }\n    }\n\n    return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\n  };\n  /**\r\n   * Base64 string to array encoding helper\r\n   * @param nUint6\r\n   */\n\n\n  Base64Encode.prototype.uint6ToB64 = function (nUint6) {\n    return nUint6 < 26 ? nUint6 + 65 : nUint6 < 52 ? nUint6 + 71 : nUint6 < 62 ? nUint6 - 4 : nUint6 === 62 ? 43 : nUint6 === 63 ? 47 : 65;\n  };\n\n  return Base64Encode;\n}();\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\n\n\nvar Base64Decode =\n/** @class */\nfunction () {\n  function Base64Decode() {}\n  /**\r\n   * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n   * @param input\r\n   */\n\n\n  Base64Decode.prototype.decode = function (input) {\n    var encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\n\n    switch (encodedString.length % 4) {\n      case 0:\n        break;\n\n      case 2:\n        encodedString += \"==\";\n        break;\n\n      case 3:\n        encodedString += \"=\";\n        break;\n\n      default:\n        throw new Error(\"Invalid base64 string\");\n    }\n\n    var inputUtf8Arr = this.base64DecToArr(encodedString);\n    return decodeURIComponent(BrowserStringUtils.utf8ArrToString(inputUtf8Arr));\n  };\n  /**\r\n   * Decodes base64 into Uint8Array\r\n   * @param base64String\r\n   * @param nBlockSize\r\n   */\n\n\n  Base64Decode.prototype.base64DecToArr = function (base64String, nBlockSize) {\n    var sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\n    var nInLen = sB64Enc.length;\n    var nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\n    var aBytes = new Uint8Array(nOutLen);\n\n    for (var nMod3 = void 0, nMod4 = void 0, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n      nMod4 = nInIdx & 3;\n      nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n\n      if (nMod4 === 3 || nInLen - nInIdx === 1) {\n        for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n          aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n        }\n\n        nUint24 = 0;\n      }\n    }\n\n    return aBytes;\n  };\n  /**\r\n   * Base64 string to array decoding helper\r\n   * @param charNum\r\n   */\n\n\n  Base64Decode.prototype.b64ToUint6 = function (charNum) {\n    return charNum > 64 && charNum < 91 ? charNum - 65 : charNum > 96 && charNum < 123 ? charNum - 71 : charNum > 47 && charNum < 58 ? charNum + 4 : charNum === 43 ? 62 : charNum === 47 ? 63 : 0;\n  };\n\n  return Base64Decode;\n}(); // Constant byte array length\n\n\nvar RANDOM_BYTE_ARR_LENGTH = 32;\n/**\r\n * Class which exposes APIs to generate PKCE codes and code verifiers.\r\n */\n\nvar PkceGenerator =\n/** @class */\nfunction () {\n  function PkceGenerator(cryptoObj) {\n    this.base64Encode = new Base64Encode();\n    this.cryptoObj = cryptoObj;\n  }\n  /**\r\n   * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n   */\n\n\n  PkceGenerator.prototype.generateCodes = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var codeVerifier, codeChallenge;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            codeVerifier = this.generateCodeVerifier();\n            return [4\n            /*yield*/\n            , this.generateCodeChallengeFromVerifier(codeVerifier)];\n\n          case 1:\n            codeChallenge = _a.sent();\n            return [2\n            /*return*/\n            , {\n              verifier: codeVerifier,\n              challenge: codeChallenge\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Generates a random 32 byte buffer and returns the base64\r\n   * encoded string to be used as a PKCE Code Verifier\r\n   */\n\n\n  PkceGenerator.prototype.generateCodeVerifier = function () {\n    try {\n      // Generate random values as utf-8\n      var buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n      this.cryptoObj.getRandomValues(buffer); // encode verifier as base64\n\n      var pkceCodeVerifierB64 = this.base64Encode.urlEncodeArr(buffer);\n      return pkceCodeVerifierB64;\n    } catch (e) {\n      throw BrowserAuthError.createPkceNotGeneratedError(e);\n    }\n  };\n  /**\r\n   * Creates a base64 encoded PKCE Code Challenge string from the\r\n   * hash created from the PKCE Code Verifier supplied\r\n   */\n\n\n  PkceGenerator.prototype.generateCodeChallengeFromVerifier = function (pkceCodeVerifier) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pkceHashedCodeVerifier, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.cryptoObj.sha256Digest(pkceCodeVerifier)];\n\n          case 1:\n            pkceHashedCodeVerifier = _a.sent(); // encode hash as base64\n\n            return [2\n            /*return*/\n            , this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier))];\n\n          case 2:\n            e_1 = _a.sent();\n            throw BrowserAuthError.createPkceNotGeneratedError(e_1);\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return PkceGenerator;\n}(); // SHA-256 hashing algorithm\n\n\nvar HASH_ALG = \"SHA-256\";\n/**\r\n * This class implements functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\n\nvar BrowserCrypto =\n/** @class */\nfunction () {\n  function BrowserCrypto() {\n    if (!this.hasCryptoAPI()) {\n      throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\n    }\n  }\n  /**\r\n   * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n   * @param dataString\r\n   */\n\n\n  BrowserCrypto.prototype.sha256Digest = function (dataString) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data;\n      return __generator(this, function (_a) {\n        data = BrowserStringUtils.stringToUtf8Arr(dataString);\n        return [2\n        /*return*/\n        , this.hasIECrypto() ? this.getMSCryptoDigest(HASH_ALG, data) : this.getSubtleCryptoDigest(HASH_ALG, data)];\n      });\n    });\n  };\n  /**\r\n   * Populates buffer with cryptographically random values.\r\n   * @param dataBuffer\r\n   */\n\n\n  BrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\n    var cryptoObj = window[\"msCrypto\"] || window.crypto;\n\n    if (!cryptoObj.getRandomValues) {\n      throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\n    }\n\n    cryptoObj.getRandomValues(dataBuffer);\n  };\n  /**\r\n   * Checks whether IE crypto (AKA msCrypto) is available.\r\n   */\n\n\n  BrowserCrypto.prototype.hasIECrypto = function () {\n    return !!window[\"msCrypto\"];\n  };\n  /**\r\n   * Check whether browser crypto is available.\r\n   */\n\n\n  BrowserCrypto.prototype.hasBrowserCrypto = function () {\n    return !!window.crypto;\n  };\n  /**\r\n   * Check whether IE crypto or other browser cryptography is available.\r\n   */\n\n\n  BrowserCrypto.prototype.hasCryptoAPI = function () {\n    return this.hasIECrypto() || this.hasBrowserCrypto();\n  };\n  /**\r\n   * Helper function for SHA digest.\r\n   * @param algorithm\r\n   * @param data\r\n   */\n\n\n  BrowserCrypto.prototype.getSubtleCryptoDigest = function (algorithm, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , window.crypto.subtle.digest(algorithm, data)];\n      });\n    });\n  };\n  /**\r\n   * Helper function for SHA digest.\r\n   * @param algorithm\r\n   * @param data\r\n   */\n\n\n  BrowserCrypto.prototype.getMSCryptoDigest = function (algorithm, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\n          digestOperation.addEventListener(\"complete\", function (e) {\n            resolve(e.target.result);\n          });\n          digestOperation.addEventListener(\"error\", function (error) {\n            reject(error);\n          });\n        })];\n      });\n    });\n  };\n\n  return BrowserCrypto;\n}();\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\n\n\nvar CryptoOps =\n/** @class */\nfunction () {\n  function CryptoOps() {\n    // Browser crypto needs to be validated first before any other classes can be set.\n    this.browserCrypto = new BrowserCrypto();\n    this.b64Encode = new Base64Encode();\n    this.b64Decode = new Base64Decode();\n    this.guidGenerator = new GuidGenerator(this.browserCrypto);\n    this.pkceGenerator = new PkceGenerator(this.browserCrypto);\n  }\n  /**\r\n   * Creates a new random GUID - used to populate state and nonce.\r\n   * @returns string (GUID)\r\n   */\n\n\n  CryptoOps.prototype.createNewGuid = function () {\n    return this.guidGenerator.generateGuid();\n  };\n  /**\r\n   * Encodes input string to base64.\r\n   * @param input\r\n   */\n\n\n  CryptoOps.prototype.base64Encode = function (input) {\n    return this.b64Encode.encode(input);\n  };\n  /**\r\n   * Decodes input string from base64.\r\n   * @param input\r\n   */\n\n\n  CryptoOps.prototype.base64Decode = function (input) {\n    return this.b64Decode.decode(input);\n  };\n  /**\r\n   * Generates PKCE codes used in Authorization Code Flow.\r\n   */\n\n\n  CryptoOps.prototype.generatePkceCodes = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.pkceGenerator.generateCodes()];\n      });\n    });\n  };\n\n  return CryptoOps;\n}();\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\n\n\nvar InteractionHandler =\n/** @class */\nfunction () {\n  function InteractionHandler(authCodeModule, storageImpl) {\n    this.authModule = authCodeModule;\n    this.browserStorage = storageImpl;\n  }\n  /**\r\n   * Function to handle response parameters from hash.\r\n   * @param locationHash\r\n   */\n\n\n  InteractionHandler.prototype.handleCodeResponse = function (locationHash) {\n    return __awaiter(this, void 0, void 0, function () {\n      var requestState, authCode, cachedNonceKey, cachedNonce, tokenResponse;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Check that location hash isn't empty.\n            if (StringUtils.isEmpty(locationHash)) {\n              throw BrowserAuthError.createEmptyHashError(locationHash);\n            }\n\n            requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\n            authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\n            cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\n            cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY); // Assign code to request\n\n            this.authCodeRequest.code = authCode;\n            return [4\n            /*yield*/\n            , this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState)];\n\n          case 1:\n            tokenResponse = _a.sent();\n            this.browserStorage.cleanRequest();\n            return [2\n            /*return*/\n            , tokenResponse];\n        }\n      });\n    });\n  };\n\n  return InteractionHandler;\n}();\n\nvar RedirectHandler =\n/** @class */\nfunction (_super) {\n  __extends(RedirectHandler, _super);\n\n  function RedirectHandler() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Redirects window to given URL.\r\n   * @param urlNavigate\r\n   */\n\n\n  RedirectHandler.prototype.initiateAuthRequest = function (requestUrl, authCodeRequest, redirectStartPage, browserCrypto) {\n    // Navigate if valid URL\n    if (!StringUtils.isEmpty(requestUrl)) {\n      // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n      if (redirectStartPage) {\n        this.browserStorage.setItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), redirectStartPage, CacheSchemaType.TEMPORARY);\n      } // Set interaction status in the library.\n\n\n      this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\n      this.browserStorage.cacheCodeRequest(authCodeRequest, browserCrypto);\n      this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\n      var isIframedApp = BrowserUtils.isInIframe();\n\n      if (isIframedApp) {\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n        throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\n      } // Navigate window to request URL\n\n\n      BrowserUtils.navigateWindow(requestUrl);\n    } else {\n      // Throw error if request URL is empty.\n      this.authModule.logger.info(\"Navigate url is empty\");\n      throw BrowserAuthError.createEmptyNavigationUriError();\n    } // Return this window handle. Not used for redirect, but needed for API definition.\n\n\n    return window;\n  };\n  /**\r\n   * Handle authorization code response in the window.\r\n   * @param hash\r\n   */\n\n\n  RedirectHandler.prototype.handleCodeResponse = function (locationHash, browserCrypto) {\n    return __awaiter(this, void 0, void 0, function () {\n      var requestState, authCode, cachedNonceKey, cachedNonce, tokenResponse;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Check that location hash isn't empty.\n            if (StringUtils.isEmpty(locationHash)) {\n              throw BrowserAuthError.createEmptyHashError(locationHash);\n            } // Interaction is completed - remove interaction status.\n\n\n            this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\n            requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\n            authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\n            cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\n            cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY);\n            this.authCodeRequest = this.browserStorage.getCachedRequest(requestState, browserCrypto);\n            this.authCodeRequest.code = authCode; // Hash was processed successfully - remove from cache\n\n            this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n            return [4\n            /*yield*/\n            , this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState)];\n\n          case 1:\n            tokenResponse = _a.sent();\n            this.browserStorage.cleanRequest();\n            return [2\n            /*return*/\n            , tokenResponse];\n        }\n      });\n    });\n  };\n\n  return RedirectHandler;\n}(InteractionHandler);\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\n\n\nvar PopupHandler =\n/** @class */\nfunction (_super) {\n  __extends(PopupHandler, _super);\n\n  function PopupHandler(authCodeModule, storageImpl) {\n    var _this = _super.call(this, authCodeModule, storageImpl) || this; // Properly sets this reference for the unload event.\n\n\n    _this.unloadWindow = _this.unloadWindow.bind(_this);\n    return _this;\n  }\n  /**\r\n   * Opens a popup window with given request Url.\r\n   * @param requestUrl\r\n   */\n\n\n  PopupHandler.prototype.initiateAuthRequest = function (requestUrl, authCodeRequest) {\n    // Check that request url is not empty.\n    if (!StringUtils.isEmpty(requestUrl)) {\n      // Save auth code request\n      this.authCodeRequest = authCodeRequest; // Set interaction status in the library.\n\n      this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\n      this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl); // Open the popup window to requestUrl.\n\n      return this.openPopup(requestUrl, Constants.LIBRARY_NAME, BrowserConstants.POPUP_WIDTH, BrowserConstants.POPUP_HEIGHT);\n    } else {\n      // Throw error if request URL is empty.\n      this.authModule.logger.error(\"Navigate url is empty\");\n      throw BrowserAuthError.createEmptyNavigationUriError();\n    }\n  };\n  /**\r\n   * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\r\n   * @param popupWindow - window that is being monitored\r\n   * @param timeout - milliseconds until timeout\r\n   * @param urlNavigate - url that was navigated to\r\n   */\n\n\n  PopupHandler.prototype.monitorPopupForHash = function (popupWindow, timeout) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var maxTicks = timeout / BrowserConstants.POLL_INTERVAL_MS;\n      var ticks = 0;\n      var intervalId = setInterval(function () {\n        if (popupWindow.closed) {\n          // Window is closed\n          _this.cleanPopup();\n\n          clearInterval(intervalId);\n          reject(BrowserAuthError.createUserCancelledError());\n          return;\n        }\n\n        var href;\n\n        try {\n          /*\r\n           * Will throw if cross origin,\r\n           * which should be caught and ignored\r\n           * since we need the interval to keep running while on STS UI.\r\n           */\n          href = popupWindow.location.href;\n        } catch (e) {} // Don't process blank pages or cross domain\n\n\n        if (!href || href === \"about:blank\") {\n          return;\n        } // Only run clock when we are on same domain\n\n\n        ticks++;\n\n        if (UrlString.hashContainsKnownProperties(href)) {\n          // Success case\n          var contentHash = popupWindow.location.hash;\n\n          _this.cleanPopup(popupWindow);\n\n          clearInterval(intervalId);\n          resolve(contentHash);\n          return;\n        } else if (ticks > maxTicks) {\n          // Timeout error\n          _this.cleanPopup(popupWindow);\n\n          clearInterval(intervalId);\n          reject(BrowserAuthError.createMonitorWindowTimeoutError());\n          return;\n        }\n      }, BrowserConstants.POLL_INTERVAL_MS);\n    });\n  };\n  /**\r\n   * @hidden\r\n   *\r\n   * Configures popup window for login.\r\n   *\r\n   * @param urlNavigate\r\n   * @param title\r\n   * @param popUpWidth\r\n   * @param popUpHeight\r\n   * @ignore\r\n   * @hidden\r\n   */\n\n\n  PopupHandler.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\n    try {\n      /**\r\n       * adding winLeft and winTop to account for dual monitor\r\n       * using screenLeft and screenTop for IE8 and earlier\r\n       */\n      var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n      var winTop = window.screenTop ? window.screenTop : window.screenY;\n      /**\r\n       * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n       * using document.documentElement.clientWidth for IE8 and earlier\r\n       */\n\n      var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      var left = Math.max(0, width / 2 - popUpWidth / 2 + winLeft);\n      var top_1 = Math.max(0, height / 2 - popUpHeight / 2 + winTop); // open the window\n\n      var popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top_1 + \", left=\" + left);\n\n      if (!popupWindow) {\n        throw BrowserAuthError.createEmptyWindowCreatedError();\n      }\n\n      if (popupWindow.focus) {\n        popupWindow.focus();\n      }\n\n      this.currentWindow = popupWindow;\n      window.addEventListener(\"beforeunload\", this.unloadWindow);\n      return popupWindow;\n    } catch (e) {\n      this.authModule.logger.error(\"error opening popup \" + e.message);\n      this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\n      throw BrowserAuthError.createPopupWindowError(e.toString());\n    }\n  };\n  /**\r\n   * Event callback to unload main window.\r\n   */\n\n\n  PopupHandler.prototype.unloadWindow = function (e) {\n    this.browserStorage.cleanRequest();\n    this.currentWindow.close(); // Guarantees browser unload will happen, so no other errors will be thrown.\n\n    delete e[\"returnValue\"];\n  };\n  /**\r\n   * Closes popup, removes any state vars created during popup calls.\r\n   * @param popupWindow\r\n   */\n\n\n  PopupHandler.prototype.cleanPopup = function (popupWindow) {\n    if (popupWindow) {\n      // Close window.\n      popupWindow.close();\n    } // Remove window unload function\n\n\n    window.removeEventListener(\"beforeunload\", this.unloadWindow); // Interaction is completed - remove interaction status.\n\n    this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\n  };\n\n  return PopupHandler;\n}(InteractionHandler);\n\nvar SilentHandler =\n/** @class */\nfunction (_super) {\n  __extends(SilentHandler, _super);\n\n  function SilentHandler(authCodeModule, storageImpl, configuredLoadFrameTimeout) {\n    var _this = _super.call(this, authCodeModule, storageImpl) || this;\n\n    _this.loadFrameTimeout = configuredLoadFrameTimeout;\n    return _this;\n  }\n  /**\r\n   * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n   * @param urlNavigate\r\n   * @param userRequestScopes\r\n   */\n\n\n  SilentHandler.prototype.initiateAuthRequest = function (requestUrl, authCodeRequest, userRequestScopes) {\n    return __awaiter(this, void 0, void 0, function () {\n      var frameName, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (StringUtils.isEmpty(requestUrl)) {\n              // Throw error if request URL is empty.\n              this.authModule.logger.info(\"Navigate url is empty\");\n              throw BrowserAuthError.createEmptyNavigationUriError();\n            } // Save auth code request\n\n\n            this.authCodeRequest = authCodeRequest;\n            frameName = userRequestScopes ? \"msalTokenFrame\" + userRequestScopes : \"msalTokenFrame\";\n            if (!this.loadFrameTimeout) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.loadFrame(requestUrl, frameName)];\n\n          case 1:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = this.loadFrameSync(requestUrl, frameName);\n            _b.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            , _a];\n        }\n      });\n    });\n  };\n  /**\r\n   * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n   * @param iframe\r\n   * @param timeout\r\n   */\n\n\n  SilentHandler.prototype.monitorIframeForHash = function (iframe, timeout) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      /*\r\n       * Polling for iframes can be purely timing based,\r\n       * since we don't need to account for interaction.\r\n       */\n      var nowMark = window.performance.now();\n      var timeoutMark = nowMark + timeout;\n      var intervalId = setInterval(function () {\n        if (window.performance.now() > timeoutMark) {\n          _this.removeHiddenIframe(iframe);\n\n          clearInterval(intervalId);\n          reject(BrowserAuthError.createMonitorWindowTimeoutError());\n          return;\n        }\n\n        var href;\n\n        try {\n          /*\r\n           * Will throw if cross origin,\r\n           * which should be caught and ignored\r\n           * since we need the interval to keep running while on STS UI.\r\n           */\n          href = iframe.contentWindow.location.href;\n        } catch (e) {}\n\n        if (UrlString.hashContainsKnownProperties(href)) {\n          // Success case\n          var contentHash = iframe.contentWindow.location.hash;\n\n          _this.removeHiddenIframe(iframe);\n\n          clearInterval(intervalId);\n          resolve(contentHash);\n          return;\n        }\n      }, BrowserConstants.POLL_INTERVAL_MS);\n    });\n  };\n  /**\r\n   * @hidden\r\n   * Loads iframe with authorization endpoint URL\r\n   * @ignore\r\n   */\n\n\n  SilentHandler.prototype.loadFrame = function (urlNavigate, frameName) {\n    /*\r\n     * This trick overcomes iframe navigation in IE\r\n     * IE does not load the page consistently in iframe\r\n     */\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        var frameHandle = _this.loadFrameSync(urlNavigate, frameName);\n\n        if (!frameHandle) {\n          reject(\"Unable to load iframe with name: \" + frameName);\n          return;\n        }\n\n        resolve(frameHandle);\n      }, _this.loadFrameTimeout);\n    });\n  };\n  /**\r\n   * @hidden\r\n   * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n   * @param urlNavigate\r\n   * @param frameName\r\n   * @param logger\r\n   */\n\n\n  SilentHandler.prototype.loadFrameSync = function (urlNavigate, frameName) {\n    var frameHandle = this.getHiddenIframe(frameName); // returning to handle null in loadFrame, also to avoid null object access errors\n\n    if (!frameHandle) {\n      return null;\n    } else if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\n      frameHandle.src = urlNavigate;\n    }\n\n    return frameHandle;\n  };\n  /**\r\n   * @hidden\r\n   * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n   * @ignore\r\n   */\n\n\n  SilentHandler.prototype.getHiddenIframe = function (iframeId) {\n    if (typeof iframeId === \"undefined\") {\n      return null;\n    }\n\n    var authFrame = document.getElementById(iframeId);\n\n    if (!authFrame) {\n      if (document.createElement && document.documentElement && window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1) {\n        var ifr = document.createElement(\"iframe\");\n        ifr.setAttribute(\"id\", iframeId);\n        ifr.style.visibility = \"hidden\";\n        ifr.style.position = \"absolute\";\n        ifr.style.width = ifr.style.height = \"0\";\n        ifr.style.border = \"0\";\n        ifr.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n        authFrame = document.getElementsByTagName(\"body\")[0].appendChild(ifr);\n      } else if (document.body && document.body.insertAdjacentHTML) {\n        document.body.insertAdjacentHTML(\"beforeend\", \"<iframe name='\" + iframeId + \"' id='\" + iframeId + \"' style='display:none'></iframe>\");\n      }\n\n      if (window.frames && window.frames[iframeId]) {\n        authFrame = window.frames[iframeId];\n      }\n    }\n\n    return authFrame;\n  };\n  /**\r\n   * @hidden\r\n   * Removes a hidden iframe from the page.\r\n   * @ignore\r\n   */\n\n\n  SilentHandler.prototype.removeHiddenIframe = function (iframe) {\n    if (document.body === iframe.parentNode) {\n      document.body.removeChild(iframe);\n    }\n  };\n\n  return SilentHandler;\n}(InteractionHandler);\n\nvar version$1 = \"2.0.0\";\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\n\nvar PublicClientApplication =\n/** @class */\nfunction () {\n  /**\r\n   * @constructor\r\n   * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n   *\r\n   * Important attributes in the Configuration object for auth are:\r\n   * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n   * - authority: the authority URL for your application.\r\n   * - redirect_uri: the uri of your application registered in the portal.\r\n   *\r\n   * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n   * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n   * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n   * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n   * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n   * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n   *\r\n   * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n   * Full B2C functionality will be available in this library in future versions.\r\n   *\r\n   * @param {@link (Configuration:type)} configuration object for the MSAL PublicClientApplication instance\r\n   */\n  function PublicClientApplication(configuration) {\n    // Set the configuration.\n    this.config = buildConfiguration(configuration); // Initialize the crypto class.\n\n    this.browserCrypto = new CryptoOps(); // Initialize the network module class.\n\n    this.networkClient = this.config.system.networkClient; // Initialize the browser storage class.\n\n    this.browserStorage = new BrowserStorage(this.config.auth.clientId, this.config.cache); // Initialize logger\n\n    this.logger = new Logger(this.config.system.loggerOptions); // Initialize default authority instance\n\n    TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.auth.knownAuthorities, this.config.auth.cloudDiscoveryMetadata);\n    this.defaultAuthority = null;\n  } // #region Redirect Flow\n\n  /**\r\n   * Event handler function which allows users to fire events after the PublicClientApplication object\r\n   * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n   * auth flows.\r\n   * @returns {Promise.<AuthenticationResult | null>} token response or null. If the return value is null, then no auth redirect was detected.\r\n   */\n\n\n  PublicClientApplication.prototype.handleRedirectPromise = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.handleRedirectResponse()];\n      });\n    });\n  };\n  /**\r\n   * Checks if navigateToLoginRequestUrl is set, and:\r\n   * - if true, performs logic to cache and navigate\r\n   * - if false, handles hash string and parses response\r\n   */\n\n\n  PublicClientApplication.prototype.handleRedirectResponse = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var hash, cachedHash, isResponseHash, loginRequestUrl, currentUrlNormalized, loginRequestUrlNormalized, hashKey;\n      return __generator(this, function (_a) {\n        hash = window.location.hash;\n        cachedHash = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH), CacheSchemaType.TEMPORARY);\n        isResponseHash = UrlString.hashContainsKnownProperties(hash);\n        loginRequestUrl = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), CacheSchemaType.TEMPORARY);\n        currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\n        loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl || \"\");\n\n        if (loginRequestUrlNormalized === currentUrlNormalized && this.config.auth.navigateToLoginRequestUrl) {\n          // We are on the page we need to navigate to - handle hash\n          // Replace current hash with non-msal hash, if present\n          BrowserUtils.replaceHash(loginRequestUrl);\n          return [2\n          /*return*/\n          , this.handleHash(isResponseHash ? hash : cachedHash)];\n        }\n\n        if (!this.config.auth.navigateToLoginRequestUrl) {\n          // We don't need to navigate - handle hash\n          BrowserUtils.clearHash();\n          return [2\n          /*return*/\n          , this.handleHash(isResponseHash ? hash : cachedHash)];\n        }\n\n        if (isResponseHash && !BrowserUtils.isInIframe()) {\n          hashKey = this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH);\n          this.browserStorage.setItem(hashKey, hash, CacheSchemaType.TEMPORARY);\n\n          if (StringUtils.isEmpty(loginRequestUrl) || loginRequestUrl === \"null\") {\n            // Redirect to home page if login request url is null (real null or the string null)\n            this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\n            BrowserUtils.navigateWindow(\"/\", true);\n          } else {\n            // Navigate to target url\n            BrowserUtils.navigateWindow(loginRequestUrl, true);\n          }\n        }\n\n        return [2\n        /*return*/\n        , null];\n      });\n    });\n  };\n  /**\r\n   * Checks if hash exists and handles in window.\r\n   * @param responseHash\r\n   * @param interactionHandler\r\n   */\n\n\n  PublicClientApplication.prototype.handleHash = function (responseHash) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentAuthority, authClient, interactionHandler;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // There is no hash - clean cache and return null.\n            if (StringUtils.isEmpty(responseHash)) {\n              this.browserStorage.cleanRequest();\n              return [2\n              /*return*/\n              , null];\n            }\n\n            currentAuthority = this.browserStorage.getCachedAuthority();\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(currentAuthority)];\n\n          case 1:\n            authClient = _a.sent();\n            interactionHandler = new RedirectHandler(authClient, this.browserStorage);\n            return [2\n            /*return*/\n            , interactionHandler.handleCodeResponse(responseHash, this.browserCrypto)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n   * any code that follows this function will not execute.\r\n   *\r\n   * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n   * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n   *\r\n   * @param {@link (RedirectRequest:type)}\r\n   */\n\n\n  PublicClientApplication.prototype.loginRedirect = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.acquireTokenRedirect(request)];\n      });\n    });\n  };\n  /**\r\n   * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n   * the page, so any code that follows this function will not execute.\r\n   *\r\n   * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n   * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n   *\r\n   * @param {@link (RedirectRequest:type)}\r\n   */\n\n\n  PublicClientApplication.prototype.acquireTokenRedirect = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var validRequest, authCodeRequest, authClient, interactionHandler, navigateUrl, redirectStartPage, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 5]);\n\n            validRequest = this.preflightInteractiveRequest(request);\n            return [4\n            /*yield*/\n            , this.initializeAuthorizationCodeRequest(validRequest)];\n\n          case 1:\n            authCodeRequest = _a.sent();\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(validRequest.authority)];\n\n          case 2:\n            authClient = _a.sent();\n            interactionHandler = new RedirectHandler(authClient, this.browserStorage);\n            return [4\n            /*yield*/\n            , authClient.getAuthCodeUrl(validRequest)];\n\n          case 3:\n            navigateUrl = _a.sent();\n            redirectStartPage = request && request.redirectStartPage || window.location.href; // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n\n            interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest, redirectStartPage, this.browserCrypto);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            e_1 = _a.sent();\n            this.browserStorage.cleanRequest();\n            throw e_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // #endregion\n  // #region Popup Flow\n\n  /**\r\n   * Use when initiating the login process via opening a popup window in the user's browser\r\n   *\r\n   * @param {@link (PopupRequest:type)}\r\n   *\r\n   * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n   */\n\n\n  PublicClientApplication.prototype.loginPopup = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.acquireTokenPopup(request)];\n      });\n    });\n  };\n  /**\r\n   * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n   * @param {@link (PopupRequest:type)}\r\n   *\r\n   * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n   */\n\n\n  PublicClientApplication.prototype.acquireTokenPopup = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var validRequest, authCodeRequest, authClient, navigateUrl, e_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 5,, 6]);\n\n            validRequest = this.preflightInteractiveRequest(request);\n            return [4\n            /*yield*/\n            , this.initializeAuthorizationCodeRequest(validRequest)];\n\n          case 1:\n            authCodeRequest = _a.sent();\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(validRequest.authority)];\n\n          case 2:\n            authClient = _a.sent();\n            return [4\n            /*yield*/\n            , authClient.getAuthCodeUrl(validRequest)];\n\n          case 3:\n            navigateUrl = _a.sent();\n            return [4\n            /*yield*/\n            , this.popupTokenHelper(navigateUrl, authCodeRequest, authClient)];\n\n          case 4:\n            // Acquire token with popup\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 5:\n            e_2 = _a.sent();\n            this.browserStorage.cleanRequest();\n            throw e_2;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Helper which acquires an authorization code with a popup from given url, and exchanges the code for a set of OAuth tokens.\r\n   * @param navigateUrl\r\n   */\n\n\n  PublicClientApplication.prototype.popupTokenHelper = function (navigateUrl, authCodeRequest, authClient) {\n    return __awaiter(this, void 0, void 0, function () {\n      var interactionHandler, popupWindow, hash;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            interactionHandler = new PopupHandler(authClient, this.browserStorage);\n            popupWindow = interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest);\n            return [4\n            /*yield*/\n            , interactionHandler.monitorPopupForHash(popupWindow, this.config.system.windowHashTimeout)];\n\n          case 1:\n            hash = _a.sent();\n            return [4\n            /*yield*/\n            , interactionHandler.handleCodeResponse(hash)];\n\n          case 2:\n            // Handle response from hash string.\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  }; // #endregion\n  // #region Silent Flow\n\n  /**\r\n   * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n   * - Any browser using a form of Intelligent Tracking Prevention\r\n   * - If there is not an established session with the service\r\n   *\r\n   * In these cases, the request must be done inside a popup or full frame redirect.\r\n   *\r\n   * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n   *\r\n   * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n   * you session on the server still exists.\r\n   * @param {@link AuthorizationUrlRequest}\r\n   *\r\n   * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n   */\n\n\n  PublicClientApplication.prototype.ssoSilent = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var silentRequest, authCodeRequest, scopeString, authClient, navigateUrl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // block the reload if it occurred inside a hidden iframe\n            BrowserUtils.blockReloadInHiddenIframes(); // Check that we have some SSO data\n\n            if (StringUtils.isEmpty(request.loginHint)) {\n              throw BrowserAuthError.createSilentSSOInsufficientInfoError();\n            } // Check that prompt is set to none, throw error if it is set to anything else.\n\n\n            if (request.prompt && request.prompt !== PromptValue.NONE) {\n              throw BrowserAuthError.createSilentPromptValueError(request.prompt);\n            }\n\n            silentRequest = this.initializeAuthorizationRequest(__assign(__assign({}, request), {\n              prompt: PromptValue.NONE\n            }));\n            return [4\n            /*yield*/\n            , this.initializeAuthorizationCodeRequest(silentRequest)];\n\n          case 1:\n            authCodeRequest = _a.sent();\n            scopeString = silentRequest.scopes ? silentRequest.scopes.join(\" \") : \"\";\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(silentRequest.authority)];\n\n          case 2:\n            authClient = _a.sent();\n            return [4\n            /*yield*/\n            , authClient.getAuthCodeUrl(silentRequest)];\n\n          case 3:\n            navigateUrl = _a.sent();\n            return [2\n            /*return*/\n            , this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Use this function to obtain a token before every call to the API / resource provider\r\n   *\r\n   * MSAL return's a cached token when available\r\n   * Or it send's a request to the STS to obtain a new token using a refresh token.\r\n   *\r\n   * @param {@link (SilentRequest:type)}\r\n   *\r\n   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n   * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n   *\r\n   */\n\n\n  PublicClientApplication.prototype.acquireTokenSilent = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var silentRequest, silentAuthClient, e_3, isServerError, isInteractionRequiredError, isInvalidGrantError, silentAuthUrlRequest, authCodeRequest, authClient, navigateUrl, scopeString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // block the reload if it occurred inside a hidden iframe\n            BrowserUtils.blockReloadInHiddenIframes();\n            silentRequest = __assign(__assign({}, request), this.initializeBaseRequest(request));\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 9]);\n\n            return [4\n            /*yield*/\n            , this.createSilentFlowClient(silentRequest.authority)];\n\n          case 2:\n            silentAuthClient = _a.sent();\n            return [4\n            /*yield*/\n            , silentAuthClient.acquireToken(silentRequest)];\n\n          case 3:\n            // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 4:\n            e_3 = _a.sent();\n            isServerError = e_3 instanceof ServerError;\n            isInteractionRequiredError = e_3 instanceof InteractionRequiredAuthError;\n            isInvalidGrantError = e_3.errorCode === BrowserConstants.INVALID_GRANT_ERROR;\n            if (!(isServerError && isInvalidGrantError && !isInteractionRequiredError)) return [3\n            /*break*/\n            , 8];\n            silentAuthUrlRequest = this.initializeAuthorizationRequest(__assign(__assign({}, silentRequest), {\n              redirectUri: request.redirectUri,\n              prompt: PromptValue.NONE\n            }));\n            return [4\n            /*yield*/\n            , this.initializeAuthorizationCodeRequest(silentAuthUrlRequest)];\n\n          case 5:\n            authCodeRequest = _a.sent();\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(silentAuthUrlRequest.authority)];\n\n          case 6:\n            authClient = _a.sent();\n            return [4\n            /*yield*/\n            , authClient.getAuthCodeUrl(silentAuthUrlRequest)];\n\n          case 7:\n            navigateUrl = _a.sent();\n            scopeString = silentAuthUrlRequest.scopes ? silentAuthUrlRequest.scopes.join(\" \") : \"\";\n            return [2\n            /*return*/\n            , this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString)];\n\n          case 8:\n            throw e_3;\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n   * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n   * @param navigateUrl\r\n   * @param userRequestScopes\r\n   */\n\n\n  PublicClientApplication.prototype.silentTokenHelper = function (navigateUrl, authCodeRequest, authClient, userRequestScopes) {\n    return __awaiter(this, void 0, void 0, function () {\n      var silentHandler, msalFrame, hash, e_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 5]);\n\n            silentHandler = new SilentHandler(authClient, this.browserStorage, this.config.system.loadFrameTimeout);\n            return [4\n            /*yield*/\n            , silentHandler.initiateAuthRequest(navigateUrl, authCodeRequest, userRequestScopes)];\n\n          case 1:\n            msalFrame = _a.sent();\n            return [4\n            /*yield*/\n            , silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout)];\n\n          case 2:\n            hash = _a.sent();\n            return [4\n            /*yield*/\n            , silentHandler.handleCodeResponse(hash)];\n\n          case 3:\n            // Handle response from hash string.\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 4:\n            e_4 = _a.sent();\n            this.browserStorage.cleanRequest();\n            throw e_4;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // #endregion\n  // #region Logout\n\n  /**\r\n   * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n   * Default behaviour is to redirect the user to `window.location.href`.\r\n   * @param {@link (EndSessionRequest:type)}\r\n   */\n\n\n  PublicClientApplication.prototype.logout = function (logoutRequest) {\n    return __awaiter(this, void 0, void 0, function () {\n      var validLogoutRequest, authClient, logoutUri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(validLogoutRequest && validLogoutRequest.authority)];\n\n          case 1:\n            authClient = _a.sent();\n            logoutUri = authClient.getLogoutUri(validLogoutRequest);\n            BrowserUtils.navigateWindow(logoutUri);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // #endregion\n  // #region Account APIs\n\n  /**\r\n   * Returns all accounts that MSAL currently has data for.\r\n   * (the account object is created at the time of successful login)\r\n   * or null when no state is found\r\n   * @returns {@link AccountInfo[]} - Array of account objects in cache\r\n   */\n\n\n  PublicClientApplication.prototype.getAllAccounts = function () {\n    return this.browserStorage.getAllAccounts();\n  };\n  /**\r\n   * Returns the signed in account matching username.\r\n   * (the account object is created at the time of successful login)\r\n   * or null when no state is found\r\n   * @returns {@link AccountInfo} - the account object stored in MSAL\r\n   */\n\n\n  PublicClientApplication.prototype.getAccountByUsername = function (userName) {\n    var allAccounts = this.getAllAccounts();\n    return allAccounts ? allAccounts.filter(function (accountObj) {\n      return accountObj.username.toLowerCase() === userName.toLowerCase();\n    })[0] : null;\n  }; // #endregion\n  // #region Helpers\n\n  /**\r\n   *\r\n   * Use to get the redirect uri configured in MSAL or null.\r\n   * @returns {string} redirect URL\r\n   *\r\n   */\n\n\n  PublicClientApplication.prototype.getRedirectUri = function (requestRedirectUri) {\n    return requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\n  };\n  /**\r\n   * Use to get the post logout redirect uri configured in MSAL or null.\r\n   *\r\n   * @returns {string} post logout redirect URL\r\n   */\n\n\n  PublicClientApplication.prototype.getPostLogoutRedirectUri = function (requestPostLogoutRedirectUri) {\n    return requestPostLogoutRedirectUri || this.config.auth.postLogoutRedirectUri || BrowserUtils.getCurrentUri();\n  };\n  /**\r\n   * Used to get a discovered version of the default authority.\r\n   */\n\n\n  PublicClientApplication.prototype.getDiscoveredDefaultAuthority = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!!this.defaultAuthority) return [3\n            /*break*/\n            , 2];\n            _a = this;\n            return [4\n            /*yield*/\n            , AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient)];\n\n          case 1:\n            _a.defaultAuthority = _b.sent();\n            _b.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , this.defaultAuthority];\n        }\n      });\n    });\n  };\n  /**\r\n   * Helper to check whether interaction is in progress.\r\n   */\n\n\n  PublicClientApplication.prototype.interactionInProgress = function () {\n    // Check whether value in cache is present and equal to expected value\n    return this.browserStorage.getItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), CacheSchemaType.TEMPORARY) === BrowserConstants.INTERACTION_IN_PROGRESS_VALUE;\n  };\n  /**\r\n   * Creates an Authorization Code Client with the given authority, or the default authority.\r\n   * @param authorityUrl\r\n   */\n\n\n  PublicClientApplication.prototype.createAuthCodeClient = function (authorityUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientConfig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getClientConfiguration(authorityUrl)];\n\n          case 1:\n            clientConfig = _a.sent();\n            return [2\n            /*return*/\n            , new AuthorizationCodeClient(clientConfig)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates an Silent Flow Client with the given authority, or the default authority.\r\n   * @param authorityUrl\r\n   */\n\n\n  PublicClientApplication.prototype.createSilentFlowClient = function (authorityUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientConfig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getClientConfiguration(authorityUrl)];\n\n          case 1:\n            clientConfig = _a.sent();\n            return [2\n            /*return*/\n            , new SilentFlowClient(clientConfig)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates a Client Configuration object with the given request authority, or the default authority.\r\n   * @param requestAuthority\r\n   */\n\n\n  PublicClientApplication.prototype.getClientConfiguration = function (requestAuthority) {\n    return __awaiter(this, void 0, void 0, function () {\n      var discoveredAuthority, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!(!StringUtils.isEmpty(requestAuthority) && requestAuthority !== this.config.auth.authority)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient)];\n\n          case 1:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.getDiscoveredDefaultAuthority()];\n\n          case 3:\n            _a = _b.sent();\n            _b.label = 4;\n\n          case 4:\n            discoveredAuthority = _a;\n            return [2\n            /*return*/\n            , {\n              authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                knownAuthorities: this.config.auth.knownAuthorities,\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata\n              },\n              systemOptions: {\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds\n              },\n              loggerOptions: {\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled\n              },\n              cryptoInterface: this.browserCrypto,\n              networkInterface: this.networkClient,\n              storageInterface: this.browserStorage,\n              libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version$1,\n                cpu: \"\",\n                os: \"\"\n              }\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Helper to validate app environment before making a request.\r\n   */\n\n\n  PublicClientApplication.prototype.preflightInteractiveRequest = function (request) {\n    // block the reload if it occurred inside a hidden iframe\n    BrowserUtils.blockReloadInHiddenIframes(); // Check if interaction is in progress. Throw error if true.\n\n    if (this.interactionInProgress()) {\n      throw BrowserAuthError.createInteractionInProgressError();\n    }\n\n    return this.initializeAuthorizationRequest(request);\n  };\n  /**\r\n   * Initializer function for all request APIs\r\n   * @param request\r\n   */\n\n\n  PublicClientApplication.prototype.initializeBaseRequest = function (request) {\n    var validatedRequest = __assign({}, request);\n\n    if (StringUtils.isEmpty(validatedRequest.authority)) {\n      validatedRequest.authority = this.config.auth.authority;\n    }\n\n    validatedRequest.correlationId = request && request.correlationId || this.browserCrypto.createNewGuid();\n    return validatedRequest;\n  };\n  /**\r\n   * Generates a request that will contain the openid and profile scopes.\r\n   * @param request\r\n   */\n\n\n  PublicClientApplication.prototype.setDefaultScopes = function (request) {\n    return __assign(__assign({}, request), {\n      scopes: __spreadArrays(request && request.scopes || [], [Constants.OPENID_SCOPE, Constants.PROFILE_SCOPE])\n    });\n  };\n  /**\r\n   * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n   * @param request\r\n   */\n\n\n  PublicClientApplication.prototype.initializeAuthorizationRequest = function (request) {\n    var validatedRequest = __assign({}, request);\n\n    validatedRequest.redirectUri = this.getRedirectUri(validatedRequest.redirectUri); // Check for ADAL SSO\n\n    if (StringUtils.isEmpty(validatedRequest.loginHint)) {\n      // Only check for adal token if no SSO params are being used\n      var adalIdTokenString = this.browserStorage.getItem(PersistentCacheKeys.ADAL_ID_TOKEN, CacheSchemaType.TEMPORARY);\n\n      if (!StringUtils.isEmpty(adalIdTokenString)) {\n        var adalIdToken = new IdToken(adalIdTokenString, this.browserCrypto);\n        this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\n\n        if (adalIdToken.claims && adalIdToken.claims.upn) {\n          validatedRequest.loginHint = adalIdToken.claims.upn;\n        }\n      }\n    }\n\n    validatedRequest.state = ProtocolUtils.setRequestState(request && request.state || \"\", this.browserCrypto);\n\n    if (StringUtils.isEmpty(validatedRequest.nonce)) {\n      validatedRequest.nonce = this.browserCrypto.createNewGuid();\n    }\n\n    validatedRequest.responseMode = ResponseMode.FRAGMENT;\n    validatedRequest = __assign(__assign({}, validatedRequest), this.initializeBaseRequest(validatedRequest));\n    this.browserStorage.updateCacheEntries(validatedRequest.state, validatedRequest.nonce, validatedRequest.authority);\n    return __assign(__assign({}, validatedRequest), this.setDefaultScopes(validatedRequest));\n  };\n  /**\r\n   * Generates an auth code request tied to the url request.\r\n   * @param request\r\n   */\n\n\n  PublicClientApplication.prototype.initializeAuthorizationCodeRequest = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var generatedPkceParams, authCodeRequest;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.browserCrypto.generatePkceCodes()];\n\n          case 1:\n            generatedPkceParams = _a.sent();\n            authCodeRequest = __assign(__assign({}, request), {\n              redirectUri: request.redirectUri,\n              code: \"\",\n              codeVerifier: generatedPkceParams.verifier\n            });\n            request.codeChallenge = generatedPkceParams.challenge;\n            request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\n            return [2\n            /*return*/\n            , authCodeRequest];\n        }\n      });\n    });\n  };\n  /**\r\n   * Initializer for the logout request.\r\n   * @param logoutRequest\r\n   */\n\n\n  PublicClientApplication.prototype.initializeLogoutRequest = function (logoutRequest) {\n    var validLogoutRequest = __assign({}, logoutRequest);\n\n    if (StringUtils.isEmpty(validLogoutRequest.authority)) {\n      validLogoutRequest.authority = this.config.auth.authority;\n    }\n\n    validLogoutRequest.correlationId = validLogoutRequest && validLogoutRequest.correlationId || this.browserCrypto.createNewGuid();\n    validLogoutRequest.postLogoutRedirectUri = this.getPostLogoutRedirectUri(logoutRequest ? logoutRequest.postLogoutRedirectUri : \"\");\n    return validLogoutRequest;\n  };\n\n  return PublicClientApplication;\n}();\n\nexport { AuthError, AuthErrorMessage, AuthenticationResult, BrowserAuthError, BrowserAuthErrorMessage, BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage, InteractionRequiredAuthError, LogLevel, Logger, PublicClientApplication };","map":{"version":3,"sources":["../../msal-common/dist/index.es.js","../src/utils/BrowserConstants.ts","../src/network/FetchClient.ts","../src/error/BrowserAuthError.ts","../src/network/XhrClient.ts","../src/utils/BrowserUtils.ts","../src/config/Configuration.ts","../src/error/BrowserConfigurationAuthError.ts","../src/cache/BrowserStorage.ts","../src/utils/MathUtils.ts","../src/crypto/GuidGenerator.ts","../src/utils/BrowserStringUtils.ts","../src/encode/Base64Encode.ts","../src/encode/Base64Decode.ts","../src/crypto/PkceGenerator.ts","../src/crypto/BrowserCrypto.ts","../src/crypto/CryptoOps.ts","../src/interaction_handler/InteractionHandler.ts","../src/interaction_handler/RedirectHandler.ts","../src/interaction_handler/PopupHandler.ts","../src/interaction_handler/SilentHandler.ts","../src/app/PublicClientApplication.ts"],"names":["extendStatics","__extends","__assign","__awaiter","__generator","__spreadArrays","DEFAULT_AUTH_OPTIONS","version"],"mappings":"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","sourcesContent":["/*! @azure/msal-common v1.0.0 2020-07-21 */\n'use strict';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = this;\r\n        var errorString = errorMessage ? errorCode + \": \" + errorMessage : errorCode;\r\n        _this = _super.call(this, errorString) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error that is thrown when something unexpected happens in the library.\r\n     * @param errDesc\r\n     */\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\n\nvar name = \"@azure/msal-common\";\nvar author = {\n\tname: \"Microsoft\",\n\temail: \"nugetaad@microsoft.com\",\n\turl: \"https://www.microsoft.com\"\n};\nvar license = \"MIT\";\nvar repository = {\n\ttype: \"git\",\n\turl: \"https://github.com/AzureAD/microsoft-authentication-library-for-js.git\"\n};\nvar version = \"1.0.0\";\nvar description = \"Microsoft Authentication Library for js\";\nvar keywords = [\n\t\"implicit\",\n\t\"authorization code\",\n\t\"PKCE\",\n\t\"js\",\n\t\"AAD\",\n\t\"msal\",\n\t\"oauth\"\n];\nvar main = \"./dist/index.js\";\nvar module = \"./dist/index.es.js\";\nvar types = \"./dist/src/index.d.ts\";\nvar browserslist = [\n\t\"last 1 version\",\n\t\"> 1%\",\n\t\"maintained node versions\",\n\t\"not dead\"\n];\nvar engines = {\n\tnode: \">=0.8.0\"\n};\nvar directories = {\n\ttest: \"test\"\n};\nvar files = [\n\t\"dist\"\n];\nvar scripts = {\n\tclean: \"shx rm -rf dist lib\",\n\t\"clean:coverage\": \"rimraf ../../.nyc_output/*\",\n\tdoc: \"npm run doc:generate && npm run doc:deploy\",\n\t\"doc:generate\": \"typedoc --mode modules --excludePrivate --excludeProtected --excludeNotExported --out ./ref ./src/ --gitRevision dev\",\n\t\"doc:deploy\": \"gh-pages -d ref -a -e ref/msal-common\",\n\tlint: \"eslint src --ext .ts\",\n\ttest: \"mocha\",\n\t\"test:coverage\": \"nyc --reporter=text mocha --exit\",\n\t\"test:coverage:only\": \"npm run clean:coverage && npm run test:coverage\",\n\t\"build:modules\": \"rollup -c\",\n\t\"build:modules:watch\": \"rollup -cw\",\n\tbuild: \"npm run clean && npm run lint && npm run build:modules\",\n\tprepack: \"npm run build\"\n};\nvar devDependencies = {\n\t\"@babel/core\": \"^7.7.2\",\n\t\"@babel/plugin-proposal-class-properties\": \"^7.7.0\",\n\t\"@babel/plugin-proposal-object-rest-spread\": \"^7.6.2\",\n\t\"@babel/polyfill\": \"^7.7.0\",\n\t\"@babel/preset-env\": \"^7.7.1\",\n\t\"@babel/preset-typescript\": \"^7.7.2\",\n\t\"@babel/register\": \"^7.7.0\",\n\t\"@istanbuljs/nyc-config-babel\": \"^2.1.1\",\n\t\"@rollup/plugin-json\": \"^4.0.0\",\n\t\"@types/chai\": \"^4.2.5\",\n\t\"@types/chai-as-promised\": \"^7.1.2\",\n\t\"@types/debug\": \"^4.1.5\",\n\t\"@types/mocha\": \"^5.2.7\",\n\t\"@types/sinon\": \"^7.5.0\",\n\t\"@typescript-eslint/eslint-plugin\": \"^2.4.0\",\n\t\"@typescript-eslint/eslint-plugin-tslint\": \"^2.4.0\",\n\t\"@typescript-eslint/parser\": \"^2.4.0\",\n\t\"babel-plugin-istanbul\": \"^5.2.0\",\n\tchai: \"^4.2.0\",\n\t\"chai-as-promised\": \"^7.1.1\",\n\teslint: \"^6.5.1\",\n\t\"gh-pages\": \"^3.1.0\",\n\thusky: \"^3.0.9\",\n\tmocha: \"^6.2.2\",\n\tnyc: \"^14.1.1\",\n\trimraf: \"^3.0.2\",\n\trollup: \"^1.24.0\",\n\t\"rollup-plugin-typescript2\": \"^0.24.3\",\n\t\"rollup-plugin-uglify\": \"^6.0.4\",\n\tshx: \"^0.3.2\",\n\tsinon: \"^7.5.0\",\n\ttslib: \"^1.10.0\",\n\ttslint: \"^5.20.0\",\n\ttypedoc: \"^0.17.8\",\n\ttypescript: \"^3.7.5\"\n};\nvar dependencies = {\n\tdebug: \"^4.1.1\"\n};\nvar pkg = {\n\tname: name,\n\tauthor: author,\n\tlicense: license,\n\trepository: repository,\n\tversion: version,\n\tdescription: description,\n\tkeywords: keywords,\n\tmain: main,\n\tmodule: module,\n\ttypes: types,\n\tbrowserslist: browserslist,\n\tengines: engines,\n\tdirectories: directories,\n\tfiles: files,\n\tscripts: scripts,\n\tdevDependencies: devDependencies,\n\tdependencies: dependencies\n};\n\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: \"client_info_empty_error\",\r\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenParsingError: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please review the trace to determine the root cause.\"\r\n    },\r\n    hashNotDeserialized: {\r\n        code: \"hash_not_deserialized\",\r\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\r\n    },\r\n    blankGuidGenerated: {\r\n        code: \"blank_guid_generated\",\r\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state\",\r\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\r\n    },\r\n    stateMismatchError: {\r\n        code: \"state_mismatch\",\r\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch\",\r\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\r\n    },\r\n    accountMismatchError: {\r\n        code: \"account_mismatch\",\r\n        desc: \"The cached account and account which made the token request do not match.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cache_parse_error\",\r\n        desc: \"Could not parse cache key.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required.\"\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements such as authority or account.\"\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: \"multiple_matching_accounts\",\r\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: \"request_cannot_be_made\",\r\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\r\n    },\r\n    appendEmptyScopeError: {\r\n        code: \"cannot_append_empty_scope\",\r\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: \"cannot_remove_empty_scope\",\r\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    appendScopeSetError: {\r\n        code: \"cannot_append_scopeset\",\r\n        desc: \"Cannot append ScopeSet due to error.\"\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: \"empty_input_scopeset\",\r\n        desc: \"Empty input ScopeSet cannot be processed.\"\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: \"device_code_polling_cancelled\",\r\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: \"device_code_expired\",\r\n        desc: \"Device code is expired.\"\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: \"no_account_in_silent_request\",\r\n        desc: \"Please pass an account object, silent flow is not supported without account information\"\r\n    },\r\n    invalidCacheRecord: {\r\n        code: \"invalid_cache_record\",\r\n        desc: \"Cache record object was null or undefined.\"\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: \"invalid_cache_environment\",\r\n        desc: \"Invalid environment when attempting to create cache entry\"\r\n    },\r\n    noAccountFound: {\r\n        code: \"no_account_found\",\r\n        desc: \"No account found in cache for given key.\"\r\n    },\r\n    CachePluginError: {\r\n        code: \"no cache plugin set on CacheManager\",\r\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\r\n    },\r\n    noCryptoObj: {\r\n        code: \"no_crypto_object\",\r\n        desc: \"No crypto object detected. This is required for the following operation: \"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    unexpectedAccountType: {\r\n        code: \"unexpected_account_type\",\r\n        desc: \"Unexpected account type.\"\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: \"unexpected_credential_type\",\r\n        desc: \"Unexpected credential type.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when client info object doesn't decode correctly.\r\n     * @param caughtError\r\n     */\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if the client info is empty.\r\n     * @param rawClientInfo\r\n     */\r\n    ClientAuthError.createClientInfoEmptyError = function (rawClientInfo) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, ClientAuthErrorMessage.clientInfoEmptyError.desc + \" Given Object: \" + rawClientInfo);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token extraction errors out.\r\n     * @param err\r\n     */\r\n    ClientAuthError.createIdTokenParsingError = function (caughtExtractionError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenParsingError.code, ClientAuthErrorMessage.idTokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token string is null or empty.\r\n     * @param invalidRawTokenString\r\n     */\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n     */\r\n    ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority type is not valid.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createInvalidAuthorityTypeError = function (givenUrl) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAuthorityType.code, ClientAuthErrorMessage.invalidAuthorityType.desc + \" Given Url: \" + givenUrl);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash cannot be deserialized.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the state cannot be parsed.\r\n     * @param invalidState\r\n     */\r\n    ClientAuthError.createInvalidStateError = function (invalidState, errorString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" Invalid State: \" + invalidState + \", Root Err: \" + errorString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when two states do not match.\r\n     */\r\n    ClientAuthError.createStateMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the nonce does not match.\r\n     */\r\n    ClientAuthError.createNonceMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the cached account and response account do not match.\r\n     */\r\n    ClientAuthError.createAccountMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.accountMismatchError.code, ClientAuthErrorMessage.accountMismatchError.desc);\r\n    };\r\n    /**\r\n     * Throws error if idToken is not correctly formed\r\n     * @param idToken\r\n     */\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + JSON.stringify(idToken));\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    ClientAuthError.createNoTokensFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noTokensFoundError.code, ClientAuthErrorMessage.noTokensFoundError.desc);\r\n    };\r\n    /**\r\n     * Creates an error in cache parsing.\r\n     */\r\n    ClientAuthError.createCacheParseError = function (cacheKey) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, ClientAuthErrorMessage.cacheParseError.desc + \" Cache key: \" + cacheKey);\r\n    };\r\n    /**\r\n     * Throws error when renewing token without login.\r\n     */\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingAccountsInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code, ClientAuthErrorMessage.multipleMatchingAccounts.desc);\r\n    };\r\n    /**\r\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n     */\r\n    ClientAuthError.createTokenRequestCannotBeMadeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append null or empty ScopeSet.\r\n     * @param appendError\r\n     */\r\n    ClientAuthError.createAppendScopeSetError = function (appendError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\r\n    };\r\n    /**\r\n     * Throws error if ScopeSet is null or undefined.\r\n     * @param givenScopeSet\r\n     */\r\n    ClientAuthError.createEmptyInputScopeSetError = function (givenScopeSet) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, ClientAuthErrorMessage.emptyInputScopeSetError.desc + \" Given ScopeSet: \" + givenScopeSet);\r\n    };\r\n    /**\r\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\r\n     */\r\n    ClientAuthError.createDeviceCodeCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, \"\" + ClientAuthErrorMessage.DeviceCodePollingCancelled.desc);\r\n    };\r\n    /**\r\n     * Throws error if device code is expired\r\n     */\r\n    ClientAuthError.createDeviceCodeExpiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, \"\" + ClientAuthErrorMessage.DeviceCodeExpired.desc);\r\n    };\r\n    /**\r\n     * Throws error when silent requests are made without an account object\r\n     */\r\n    ClientAuthError.createNoAccountInSilentRequestError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, \"\" + ClientAuthErrorMessage.NoAccountInSilentRequest.desc);\r\n    };\r\n    /**\r\n     * Throws error when cache record is null or undefined.\r\n     */\r\n    ClientAuthError.createNullOrUndefinedCacheRecord = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\r\n     */\r\n    ClientAuthError.createInvalidCacheEnvironmentError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\r\n    };\r\n    /**\r\n     * Throws error when account is not found in cache.\r\n     */\r\n    ClientAuthError.createNoAccountFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\r\n    };\r\n    /**\r\n     * Throws error if ICachePlugin not set on CacheManager.\r\n     */\r\n    ClientAuthError.createCachePluginError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, \"\" + ClientAuthErrorMessage.CachePluginError.desc);\r\n    };\r\n    /**\r\n     * Throws error if crypto object not found.\r\n     * @param operationName\r\n     */\r\n    ClientAuthError.createNoCryptoObjectError = function (operationName) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, \"\" + ClientAuthErrorMessage.noCryptoObj.desc + operationName);\r\n    };\r\n    /**\r\n    * Throws error if cache type is invalid.\r\n    */\r\n    ClientAuthError.createInvalidCacheTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, \"\" + ClientAuthErrorMessage.invalidCacheType.desc);\r\n    };\r\n    /**\r\n    * Throws error if unexpected account type.\r\n    */\r\n    ClientAuthError.createUnexpectedAccountTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, \"\" + ClientAuthErrorMessage.unexpectedAccountType.desc);\r\n    };\r\n    /**\r\n    * Throws error if unexpected credential type.\r\n    */\r\n    ClientAuthError.createUnexpectedCredentialTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, \"\" + ClientAuthErrorMessage.unexpectedCredentialType.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\n\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param jwtToken\r\n     */\r\n    StringUtils.decodeJwt = function (jwtToken) {\r\n        if (StringUtils.isEmpty(jwtToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(jwtToken);\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            throw ClientAuthError.createIdTokenParsingError(\"Given token is malformed: \" + JSON.stringify(jwtToken));\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Check if a string is empty.\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    StringUtils.startsWith = function (str, search) {\r\n        return str.indexOf(search) === 0;\r\n    };\r\n    StringUtils.endsWith = function (str, search) {\r\n        return (str.length >= search.length) && (str.lastIndexOf(search) === (str.length - search.length));\r\n    };\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    StringUtils.queryStringToObject = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(decodeURIComponent(s.replace(pl, \" \"))); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * Trims entries in an array.\r\n     *\r\n     * @param arr\r\n     */\r\n    StringUtils.trimArrayEntries = function (arr) {\r\n        return arr.map(function (entry) { return entry.trim(); });\r\n    };\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    StringUtils.removeEmptyStringsFromArray = function (arr) {\r\n        return arr.filter(function (entry) {\r\n            return !StringUtils.isEmpty(entry);\r\n        });\r\n    };\r\n    return StringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        if (loggerOptions) {\r\n            this.localCallback = loggerOptions.loggerCallback;\r\n            this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled;\r\n            this.level = loggerOptions.logLevel;\r\n        }\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var logHeader = StringUtils.isEmpty(this.correlationId) ? \"[\" + timestamp + \"] : \" : \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        var log = logHeader + \" : \" + pkg.version + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\"\r\n};\r\n/**\r\n * Request header names\r\n */\r\nvar HeaderNames;\r\n(function (HeaderNames) {\r\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n})(HeaderNames || (HeaderNames = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\r\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\r\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * IdToken claim string constants\r\n */\r\nvar IdTokenClaimName;\r\n(function (IdTokenClaimName) {\r\n    IdTokenClaimName[\"ISSUER\"] = \"iss\";\r\n    IdTokenClaimName[\"OBJID\"] = \"oid\";\r\n    IdTokenClaimName[\"SUBJECT\"] = \"sub\";\r\n    IdTokenClaimName[\"TENANTID\"] = \"tid\";\r\n    IdTokenClaimName[\"VERSION\"] = \"ver\";\r\n    IdTokenClaimName[\"PREF_USERNAME\"] = \"preferred_username\";\r\n    IdTokenClaimName[\"NAME\"] = \"name\";\r\n    IdTokenClaimName[\"NONCE\"] = \"nonce\";\r\n    IdTokenClaimName[\"EXPIRATION\"] = \"exp\";\r\n    IdTokenClaimName[\"HOME_OBJID\"] = \"home_oid\";\r\n    IdTokenClaimName[\"SESSIONID\"] = \"sid\";\r\n    IdTokenClaimName[\"CLOUD_INSTANCE_HOSTNAME\"] = \"cloud_instance_host_name\";\r\n})(IdTokenClaimName || (IdTokenClaimName = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * Disallowed extra query parameters.\r\n */\r\nvar BlacklistedEQParams = [\r\n    SSOTypes.SID,\r\n    SSOTypes.LOGIN_HINT\r\n];\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nvar CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\"\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nvar ResponseMode;\r\n(function (ResponseMode) {\r\n    ResponseMode[\"QUERY\"] = \"query\";\r\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\r\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\r\n})(ResponseMode || (ResponseMode = {}));\r\n/**\r\n * allowed grant_type\r\n */\r\nvar GrantType;\r\n(function (GrantType) {\r\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\r\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\r\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\r\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\r\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\r\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\r\n})(GrantType || (GrantType = {}));\r\n/**\r\n * Account types in Cache\r\n */\r\nvar CacheAccountType;\r\n(function (CacheAccountType) {\r\n    CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\r\n    CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\r\n    CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\r\n    CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\r\n})(CacheAccountType || (CacheAccountType = {}));\r\n/**\r\n * Separators used in cache\r\n */\r\nvar Separators;\r\n(function (Separators) {\r\n    Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\r\n    Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\r\n})(Separators || (Separators = {}));\r\n/**\r\n * Credentail Type stored in the cache\r\n */\r\nvar CredentialType;\r\n(function (CredentialType) {\r\n    CredentialType[\"ID_TOKEN\"] = \"IdToken\";\r\n    CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\r\n    CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\r\n})(CredentialType || (CredentialType = {}));\r\n/**\r\n * Credentail Type stored in the cache\r\n */\r\nvar CacheSchemaType;\r\n(function (CacheSchemaType) {\r\n    CacheSchemaType[\"ACCOUNT\"] = \"Account\";\r\n    CacheSchemaType[\"CREDENTIAL\"] = \"Credential\";\r\n    CacheSchemaType[\"APP_META_DATA\"] = \"AppMetadata\";\r\n    CacheSchemaType[\"TEMPORARY\"] = \"TempCache\";\r\n})(CacheSchemaType || (CacheSchemaType = {}));\r\n/**\r\n * Combine all cache types\r\n */\r\nvar CacheType;\r\n(function (CacheType) {\r\n    CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\r\n    CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\r\n    CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\r\n    CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\r\n    CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\r\n    CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\r\n    CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\r\n    CacheType[CacheType[\"APP_META_DATA\"] = 3001] = \"APP_META_DATA\";\r\n})(CacheType || (CacheType = {}));\r\n/**\r\n * More Cache related constants\r\n */\r\nvar APP_META_DATA = \"appmetadata\";\r\nvar ClientInfo = \"client_info\";\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\r\nvar CredentialEntity = /** @class */ (function () {\r\n    function CredentialEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    CredentialEntity.prototype.generateAccountId = function () {\r\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\r\n    };\r\n    /**\r\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n     */\r\n    CredentialEntity.prototype.generateCredentialId = function () {\r\n        return CredentialEntity.generateCredentialIdForCacheKey(this.credentialType, this.clientId, this.realm, this.familyId);\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.prototype.generateTarget = function () {\r\n        return CredentialEntity.generateTargetForCacheKey(this.target);\r\n    };\r\n    /**\r\n     * generates credential key\r\n     */\r\n    CredentialEntity.prototype.generateCredentialKey = function () {\r\n        return CredentialEntity.generateCredentialCacheKey(this.homeAccountId, this.environment, this.credentialType, this.clientId, this.realm, this.target, this.familyId);\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case credential)\r\n     */\r\n    CredentialEntity.prototype.generateType = function () {\r\n        switch (this.credentialType) {\r\n            case CredentialType.ID_TOKEN:\r\n                return CacheType.ID_TOKEN;\r\n            case CredentialType.ACCESS_TOKEN:\r\n                return CacheType.ACCESS_TOKEN;\r\n            case CredentialType.REFRESH_TOKEN:\r\n                return CacheType.REFRESH_TOKEN;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedCredentialTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * helper function to return `CredentialType`\r\n     * @param key\r\n     */\r\n    CredentialEntity.getCredentialType = function (key) {\r\n        if (key.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.ACCESS_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.ID_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.ID_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.REFRESH_TOKEN;\r\n        }\r\n        return Constants.NOT_DEFINED;\r\n    };\r\n    /**\r\n     * generates credential key\r\n     */\r\n    CredentialEntity.generateCredentialCacheKey = function (homeAccountId, environment, credentialType, clientId, realm, target, familyId) {\r\n        var credentialKey = [\r\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\r\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\r\n            this.generateTargetForCacheKey(target),\r\n        ];\r\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * generates Account Id for keys\r\n     * @param homeAccountId\r\n     * @param environment\r\n     */\r\n    CredentialEntity.generateAccountIdForCacheKey = function (homeAccountId, environment) {\r\n        var accountId = [homeAccountId, environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generates Credential Id for keys\r\n     * @param credentialType\r\n     * @param realm\r\n     * @param clientId\r\n     * @param familyId\r\n     */\r\n    CredentialEntity.generateCredentialIdForCacheKey = function (credentialType, clientId, realm, familyId) {\r\n        var clientOrFamilyId = credentialType === CredentialType.REFRESH_TOKEN\r\n            ? familyId || clientId\r\n            : clientId;\r\n        var credentialId = [\r\n            credentialType,\r\n            clientOrFamilyId,\r\n            realm || \"\",\r\n        ];\r\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.generateTargetForCacheKey = function (scopes) {\r\n        return (scopes || \"\").toLowerCase();\r\n    };\r\n    return CredentialEntity;\r\n}());\n\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'.  Please see here for valid configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: \"logout_request_empty\",\r\n        desc: \"The logout request was null or undefined.\"\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: \"invalid_code_challenge_method\",\r\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: \"pkce_params_missing\",\r\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\r\n    },\r\n    knownAuthoritiesAndCloudDiscoveryMetadata: {\r\n        code: \"invalid_known_authorities\",\r\n        desc: \"knownAuthorities and cloudDiscoveryMetadata cannot both be provided. Please provide cloudDiscoveryMetadata object for AAD, knownAuthorities otherwise.\"\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: \"invalid_cloud_discovery_metadata\",\r\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a JSON object containing tenant_discovery_endpoint and metadata fields\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are not an array\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createScopesNonArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopesError.code, ClientConfigurationErrorMessage.nonArrayScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, ClientConfigurationErrorMessage.emptyScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyLogoutRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when an invalid code_challenge_method is passed by the user\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\r\n    };\r\n    /**\r\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes both knownAuthorities and cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided authority is not a member of the trusted host list\r\n     */\r\n    ClientConfigurationError.createUntrustedAuthorityError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet(inputScopes) {\r\n        var _this = this;\r\n        // Filter empty string and null/undefined array items\r\n        var scopeArr = inputScopes ? StringUtils.trimArrayEntries(__spreadArrays(inputScopes)) : [];\r\n        var filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach(function (scope) { return _this.scopes.add(scope); });\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n    */\r\n    ScopeSet.fromString = function (inputScopeString) {\r\n        inputScopeString = inputScopeString || \"\";\r\n        var inputScopes = inputScopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    };\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n    */\r\n    ScopeSet.prototype.validateInputScopes = function (inputScopes) {\r\n        // Check if scopes are required but not given or is an empty array\r\n        if (!inputScopes || inputScopes.length < 1) {\r\n            throw ClientConfigurationError.createEmptyScopesArrayError(inputScopes);\r\n        }\r\n    };\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.containsScope = function (scope) {\r\n        return !StringUtils.isEmpty(scope) ? this.scopes.has(scope) : false;\r\n    };\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    ScopeSet.prototype.containsScopeSet = function (scopeSet) {\r\n        var _this = this;\r\n        if (!scopeSet) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) { return _this.containsScope(scope); }));\r\n    };\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    ScopeSet.prototype.appendScope = function (newScope) {\r\n        if (!StringUtils.isEmpty(newScope)) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    };\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    ScopeSet.prototype.appendScopes = function (newScopes) {\r\n        var _this = this;\r\n        try {\r\n            newScopes.forEach(function (newScope) { return _this.appendScope(newScope); });\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createAppendScopeSetError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.removeScope = function (scope) {\r\n        if (StringUtils.isEmpty(scope)) {\r\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    };\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.unionScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        var unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach(function (scope) { return unionScopes.add(scope); });\r\n        this.scopes.forEach(function (scope) { return unionScopes.add(scope); });\r\n        return unionScopes;\r\n    };\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        var unionScopes = this.unionScopeSets(otherScopes);\r\n        // Do not allow offline_access to be the only intersecting scope\r\n        var sizeOtherScopes = otherScopes.getScopeCount();\r\n        var sizeThisScopes = this.getScopeCount();\r\n        var sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\r\n    };\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    ScopeSet.prototype.getScopeCount = function () {\r\n        return this.scopes.size;\r\n    };\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    ScopeSet.prototype.asArray = function () {\r\n        var array = [];\r\n        this.scopes.forEach(function (val) { return array.push(val); });\r\n        return array;\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    ScopeSet.prototype.printScopes = function () {\r\n        if (this.scopes) {\r\n            var scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    ScopeSet.prototype.printScopesLowerCase = function () {\r\n        return this.printScopes().toLowerCase();\r\n    };\r\n    return ScopeSet;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, crypto) {\r\n    if (StringUtils.isEmpty(rawClientInfo)) {\r\n        throw ClientAuthError.createClientInfoEmptyError(rawClientInfo);\r\n    }\r\n    try {\r\n        var decodedClientInfo = crypto.base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw ClientAuthError.createClientInfoDecodingError(e);\r\n    }\r\n}\n\nvar TrustedAuthority = /** @class */ (function () {\r\n    function TrustedAuthority() {\r\n    }\r\n    /**\r\n     * Set the CloudDiscoveryMetadata object from knownAuthorities or cloudDiscoveryMetadata passed into the app config\r\n     * @param knownAuthorities\r\n     * @param cloudDiscoveryMetadata\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromConfig = function (knownAuthorities, cloudDiscoveryMetadata) {\r\n        if (!this.getTrustedHostList().length) {\r\n            if (knownAuthorities.length > 0 && !StringUtils.isEmpty(cloudDiscoveryMetadata)) {\r\n                throw ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError();\r\n            }\r\n            this.createCloudDiscoveryMetadataFromKnownAuthorities(knownAuthorities);\r\n            try {\r\n                if (cloudDiscoveryMetadata) {\r\n                    var parsedMetadata = JSON.parse(cloudDiscoveryMetadata);\r\n                    this.saveCloudDiscoveryMetadata(parsedMetadata.metadata);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     * @param networkInterface\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromNetwork = function (authorityToVerify, networkInterface) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var instanceDiscoveryEndpoint, response, metadata, e_1, host;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        instanceDiscoveryEndpoint = \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + authorityToVerify.urlString + \"oauth2/v2.0/authorize\";\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        metadata = response.body.metadata;\r\n                        this.saveCloudDiscoveryMetadata(metadata);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 4:\r\n                        host = authorityToVerify.getUrlComponents().HostNameAndPort;\r\n                        if (this.getTrustedHostList().length > 0 && !this.IsInTrustedHostList(host)) {\r\n                            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded \r\n                            this.createCloudDiscoveryMetadataFromKnownAuthorities([host]);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param metadata\r\n     */\r\n    TrustedAuthority.saveCloudDiscoveryMetadata = function (metadata) {\r\n        metadata.forEach(function (entry) {\r\n            var authorities = entry.aliases;\r\n            authorities.forEach(function (authority) {\r\n                TrustedAuthority.TrustedHostList[authority.toLowerCase()] = entry;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create a generic metadata object for each host passed to knownAuthorities.\r\n     * This is mostly useful for B2C or ADFS scenarios\r\n     * @param knownAuthorities\r\n     */\r\n    TrustedAuthority.createCloudDiscoveryMetadataFromKnownAuthorities = function (knownAuthorities) {\r\n        var _this = this;\r\n        knownAuthorities.forEach(function (authority) {\r\n            _this.TrustedHostList[authority.toLowerCase()] = {\r\n                preferred_cache: authority.toLowerCase(),\r\n                preferred_network: authority.toLowerCase(),\r\n                aliases: [authority.toLowerCase()]\r\n            };\r\n        });\r\n    };\r\n    TrustedAuthority.getTrustedHostList = function () {\r\n        return Object.keys(this.TrustedHostList);\r\n    };\r\n    /**\r\n     * Get metadata for the provided host\r\n     * @param host\r\n     */\r\n    TrustedAuthority.getCloudDiscoveryMetadata = function (host) {\r\n        return this.TrustedHostList[host.toLowerCase()] || null;\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param host\r\n     */\r\n    TrustedAuthority.IsInTrustedHostList = function (host) {\r\n        return Object.keys(this.TrustedHostList).indexOf(host.toLowerCase()) > -1;\r\n    };\r\n    TrustedAuthority.TrustedHostList = {};\r\n    return TrustedAuthority;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      clientInfo: Full base64 encoded client info received from ESTS\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n * }\r\n */\r\nvar AccountEntity = /** @class */ (function () {\r\n    function AccountEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    AccountEntity.prototype.generateAccountId = function () {\r\n        var accountId = [this.homeAccountId, this.environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    AccountEntity.prototype.generateAccountKey = function () {\r\n        return AccountEntity.generateAccountCacheKey({\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username\r\n        });\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case account)\r\n     */\r\n    AccountEntity.prototype.generateType = function () {\r\n        switch (this.authorityType) {\r\n            case CacheAccountType.ADFS_ACCOUNT_TYPE:\r\n                return CacheType.ADFS;\r\n            case CacheAccountType.MSAV1_ACCOUNT_TYPE:\r\n                return CacheType.MSA;\r\n            case CacheAccountType.MSSTS_ACCOUNT_TYPE:\r\n                return CacheType.MSSTS;\r\n            case CacheAccountType.GENERIC_ACCOUNT_TYPE:\r\n                return CacheType.GENERIC;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedAccountTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    AccountEntity.prototype.getAccountInfo = function () {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username\r\n        };\r\n    };\r\n    /**\r\n     * Generates account key from interface\r\n     * @param accountInterface\r\n     */\r\n    AccountEntity.generateAccountCacheKey = function (accountInterface) {\r\n        var accountKey = [\r\n            accountInterface.homeAccountId,\r\n            accountInterface.environment || \"\",\r\n            accountInterface.tenantId || \"\",\r\n        ];\r\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy\r\n     * @param clientInfo\r\n     * @param authority\r\n     * @param idToken\r\n     * @param policy\r\n     */\r\n    AccountEntity.createAccount = function (clientInfo, authority, idToken, crypto) {\r\n        var account = new AccountEntity();\r\n        account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        account.clientInfo = clientInfo;\r\n        var clientInfoObj = buildClientInfo(clientInfo, crypto);\r\n        account.homeAccountId = \"\" + clientInfoObj.uid + Separators.CLIENT_INFO_SEPARATOR + clientInfoObj.utid;\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        account.environment = env;\r\n        account.realm = idToken.claims.tid;\r\n        if (idToken) {\r\n            // How do you account for MSA CID here?\r\n            var localAccountId = !StringUtils.isEmpty(idToken.claims.oid)\r\n                ? idToken.claims.oid\r\n                : idToken.claims.sid;\r\n            account.localAccountId = localAccountId;\r\n            account.username = idToken.claims.preferred_username;\r\n            account.name = idToken.claims.name;\r\n        }\r\n        return account;\r\n    };\r\n    /**\r\n     * Build ADFS account type\r\n     * @param authority\r\n     * @param idToken\r\n     */\r\n    AccountEntity.createADFSAccount = function (authority, idToken) {\r\n        var account = new AccountEntity();\r\n        account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\r\n        account.homeAccountId = idToken.claims.sub;\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        account.environment = env;\r\n        account.username = idToken.claims.upn;\r\n        // add uniqueName to claims\r\n        // account.name = idToken.claims.uniqueName;\r\n        return account;\r\n    };\r\n    return AccountEntity;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n */\r\nvar CacheManager = /** @class */ (function () {\r\n    function CacheManager() {\r\n    }\r\n    /**\r\n     * Returns all accounts in cache\r\n     */\r\n    CacheManager.prototype.getAllAccounts = function () {\r\n        var currentAccounts = this.getAccountsFilteredBy();\r\n        var accountValues = Object.keys(currentAccounts).map(function (accountKey) { return currentAccounts[accountKey]; });\r\n        var numAccounts = accountValues.length;\r\n        if (numAccounts < 1) {\r\n            return null;\r\n        }\r\n        else {\r\n            var allAccounts = accountValues.map(function (value) {\r\n                var accountObj = new AccountEntity();\r\n                accountObj = CacheManager.toObject(accountObj, value);\r\n                return accountObj.getAccountInfo();\r\n            });\r\n            return allAccounts;\r\n        }\r\n    };\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord\r\n     */\r\n    CacheManager.prototype.saveCacheRecord = function (cacheRecord) {\r\n        if (!cacheRecord) {\r\n            throw ClientAuthError.createNullOrUndefinedCacheRecord();\r\n        }\r\n        if (!!cacheRecord.account) {\r\n            this.saveAccount(cacheRecord.account);\r\n        }\r\n        if (!!cacheRecord.idToken) {\r\n            this.saveCredential(cacheRecord.idToken);\r\n        }\r\n        if (!!cacheRecord.accessToken) {\r\n            this.saveAccessToken(cacheRecord.accessToken);\r\n        }\r\n        if (!!cacheRecord.refreshToken) {\r\n            this.saveCredential(cacheRecord.refreshToken);\r\n        }\r\n    };\r\n    /**\r\n     * saves account into cache\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.saveAccount = function (account) {\r\n        var key = account.generateAccountKey();\r\n        this.setItem(key, account, CacheSchemaType.ACCOUNT);\r\n    };\r\n    /**\r\n     * saves credential - accessToken, idToken or refreshToken into cache\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.saveCredential = function (credential) {\r\n        var key = credential.generateCredentialKey();\r\n        this.setItem(key, credential, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.saveAccessToken = function (credential) {\r\n        var _this = this;\r\n        var currentTokenCache = this.getCredentialsFilteredBy({\r\n            clientId: credential.clientId,\r\n            credentialType: CredentialType.ACCESS_TOKEN,\r\n            environment: credential.environment,\r\n            homeAccountId: credential.homeAccountId,\r\n            realm: credential.realm\r\n        });\r\n        var currentScopes = ScopeSet.fromString(credential.target);\r\n        var currentAccessTokens = Object.keys(currentTokenCache.accessTokens).map(function (key) { return currentTokenCache.accessTokens[key]; });\r\n        if (currentAccessTokens) {\r\n            currentAccessTokens.forEach(function (tokenEntity) {\r\n                var tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\r\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                    _this.removeCredential(tokenEntity);\r\n                }\r\n            });\r\n        }\r\n        this.saveCredential(credential);\r\n    };\r\n    /**\r\n     * Given account key retrieve an account\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getAccount = function (key) {\r\n        var account = this.getItem(key, CacheSchemaType.ACCOUNT);\r\n        return account;\r\n    };\r\n    /**\r\n     * retrieve a credential - accessToken, idToken or refreshToken; given the cache key\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getCredential = function (key) {\r\n        return this.getItem(key, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredBy = function (accountFilter) {\r\n        return this.getAccountsFilteredByInternal(accountFilter ? accountFilter.homeAccountId : \"\", accountFilter ? accountFilter.environment : \"\", accountFilter ? accountFilter.realm : \"\");\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredByInternal = function (homeAccountId, environment, realm) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingAccounts = {};\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity = _this.getAccountEntity(cacheKey);\r\n            if (!entity) {\r\n                return null;\r\n            }\r\n            if (!StringUtils.isEmpty(homeAccountId) && !_this.matchHomeAccountId(entity, homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(environment) && !_this.matchEnvironment(entity, environment)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(realm) && !_this.matchRealm(entity, realm)) {\r\n                return;\r\n            }\r\n            matchingAccounts[cacheKey] = entity;\r\n        });\r\n        return matchingAccounts;\r\n    };\r\n    /**\r\n     * retrieve credentails matching all provided filters; if no filter is set, get all credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredBy = function (filter) {\r\n        return this.getCredentialsFilteredByInternal(filter.homeAccountId, filter.environment, filter.credentialType, filter.clientId, filter.realm, filter.target);\r\n    };\r\n    /**\r\n     * Support function to help match credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredByInternal = function (homeAccountId, environment, credentialType, clientId, realm, target) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingCredentials = {\r\n            idTokens: {},\r\n            accessTokens: {},\r\n            refreshTokens: {}\r\n        };\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity;\r\n            // don't parse any non-credential type cache entities\r\n            var credType = CredentialEntity.getCredentialType(cacheKey);\r\n            if (credType === Constants.NOT_DEFINED) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            try {\r\n                entity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\r\n            }\r\n            catch (e) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(homeAccountId) && !_this.matchHomeAccountId(entity, homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(environment) && !_this.matchEnvironment(entity, environment)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(realm) && !_this.matchRealm(entity, realm)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(credentialType) && !_this.matchCredentialType(entity, credentialType)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(clientId) && !_this.matchClientId(entity, clientId)) {\r\n                return;\r\n            }\r\n            // idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n            // TODO: Add case for target specific refresh tokens\r\n            if (!StringUtils.isEmpty(target) && !_this.matchTarget(entity, target)) {\r\n                return;\r\n            }\r\n            switch (credType) {\r\n                case CredentialType.ID_TOKEN:\r\n                    matchingCredentials.idTokens[cacheKey] = entity;\r\n                    break;\r\n                case CredentialType.ACCESS_TOKEN:\r\n                    matchingCredentials.accessTokens[cacheKey] = entity;\r\n                    break;\r\n                case CredentialType.REFRESH_TOKEN:\r\n                    matchingCredentials.refreshTokens[cacheKey] = entity;\r\n                    break;\r\n            }\r\n        });\r\n        return matchingCredentials;\r\n    };\r\n    /**\r\n     * Removes all app metadata objects from cache.\r\n     */\r\n    CacheManager.prototype.removeAppMetadata = function () {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            if (_this.isAppMetadata(cacheKey)) {\r\n                _this.removeItem(cacheKey, CacheSchemaType.APP_META_DATA);\r\n            }\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes all accounts and related tokens from cache.\r\n     */\r\n    CacheManager.prototype.removeAllAccounts = function () {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity = _this.getAccountEntity(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            _this.removeAccount(cacheKey);\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccount = function (accountKey) {\r\n        var account = this.getAccount(accountKey);\r\n        if (!account) {\r\n            throw ClientAuthError.createNoAccountFoundError();\r\n        }\r\n        return (this.removeAccountContext(account) && this.removeItem(accountKey, CacheSchemaType.ACCOUNT));\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccountContext = function (account) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var accountId = account.generateAccountId();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            // don't parse any non-credential type cache entities\r\n            if (CredentialEntity.getCredentialType(cacheKey) === Constants.NOT_DEFINED) {\r\n                return;\r\n            }\r\n            var cacheEntity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\r\n            if (!!cacheEntity && accountId === cacheEntity.generateAccountId()) {\r\n                _this.removeCredential(cacheEntity);\r\n            }\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * returns a boolean if the given credential is removed\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.removeCredential = function (credential) {\r\n        var key = credential.generateCredentialKey();\r\n        return this.removeItem(key, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     *\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    CacheManager.prototype.matchHomeAccountId = function (entity, homeAccountId) {\r\n        return entity.homeAccountId && homeAccountId === entity.homeAccountId;\r\n    };\r\n    /**\r\n     *\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    CacheManager.prototype.matchEnvironment = function (entity, environment) {\r\n        var cloudMetadata = TrustedAuthority.getCloudDiscoveryMetadata(environment);\r\n        if (cloudMetadata &&\r\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    CacheManager.prototype.matchCredentialType = function (entity, credentialType) {\r\n        return entity.credentialType && credentialType.toLowerCase() === entity.credentialType.toLowerCase();\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    CacheManager.prototype.matchClientId = function (entity, clientId) {\r\n        return entity.clientId && clientId === entity.clientId;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.matchRealm = function (entity, realm) {\r\n        return entity.realm && realm === entity.realm;\r\n    };\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.matchTarget = function (entity, target) {\r\n        if (entity.credentialType !== CredentialType.ACCESS_TOKEN || StringUtils.isEmpty(entity.target)) {\r\n            return false;\r\n        }\r\n        var entityScopeSet = ScopeSet.fromString(entity.target);\r\n        var requestTargetScopeSet = ScopeSet.fromString(target);\r\n        return entityScopeSet.containsScopeSet(requestTargetScopeSet);\r\n    };\r\n    /**\r\n     * Returns a valid AccountEntity if key and object contain correct values, null otherwise.\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getAccountEntity = function (key) {\r\n        // don't parse any non-account type cache entities\r\n        if (CredentialEntity.getCredentialType(key) !== Constants.NOT_DEFINED || this.isAppMetadata(key)) {\r\n            return null;\r\n        }\r\n        // Attempt retrieval\r\n        var entity;\r\n        try {\r\n            entity = this.getItem(key, CacheSchemaType.ACCOUNT);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n        // Authority type is required for accounts, return if it is not available (not an account entity)\r\n        if (!entity || StringUtils.isEmpty(entity.authorityType)) {\r\n            return null;\r\n        }\r\n        return entity;\r\n    };\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.isAppMetadata = function (key) {\r\n        return key.indexOf(APP_META_DATA) !== -1;\r\n    };\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    CacheManager.toObject = function (obj, json) {\r\n        for (var propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    };\r\n    return CacheManager;\r\n}());\r\nvar DefaultStorageClass = /** @class */ (function (_super) {\r\n    __extends(DefaultStorageClass, _super);\r\n    function DefaultStorageClass() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DefaultStorageClass.prototype.setItem = function () {\r\n        var notImplErr = \"Storage interface - setItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getItem = function () {\r\n        var notImplErr = \"Storage interface - getItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.removeItem = function () {\r\n        var notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.containsKey = function () {\r\n        var notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getKeys = function () {\r\n        var notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.clear = function () {\r\n        var notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    return DefaultStorageClass;\r\n}(CacheManager));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nvar DEFAULT_AUTH_OPTIONS = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    knownAuthorities: [],\r\n    cloudDiscoveryMetadata: \"\"\r\n};\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC\r\n};\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info\r\n};\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: function () {\r\n        var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Decode: function () {\r\n        var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Encode: function () {\r\n        var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    generatePkceCodes: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: \"\",\r\n    os: \"\"\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration(_a) {\r\n    var userAuthOptions = _a.authOptions, userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface, libraryInfo = _a.libraryInfo;\r\n    return {\r\n        authOptions: __assign(__assign({}, DEFAULT_AUTH_OPTIONS), userAuthOptions),\r\n        systemOptions: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\r\n        loggerOptions: __assign(__assign({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption),\r\n        storageInterface: storageImplementation || new DefaultStorageClass(),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        libraryInfo: __assign(__assign({}, DEFAULT_LIBRARY_INFO), libraryInfo)\r\n    };\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n */\r\nvar BaseClient = /** @class */ (function () {\r\n    function BaseClient(configuration) {\r\n        // Set the configuration\r\n        this.config = buildClientConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.authOptions.knownAuthorities, this.config.authOptions.cloudDiscoveryMetadata);\r\n        this.authority = this.config.authOptions.authority;\r\n    }\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    BaseClient.prototype.createDefaultTokenRequestHeaders = function () {\r\n        var headers = this.createDefaultLibraryHeaders();\r\n        headers.set(HeaderNames.CONTENT_TYPE, Constants.URL_FORM_CONTENT_TYPE);\r\n        return headers;\r\n    };\r\n    /**\r\n     * addLibraryData\r\n     */\r\n    BaseClient.prototype.createDefaultLibraryHeaders = function () {\r\n        var headers = new Map();\r\n        // client info headers\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_SKU, this.config.libraryInfo.sku);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_VER, this.config.libraryInfo.version);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_OS, this.config.libraryInfo.os);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_CPU, this.config.libraryInfo.cpu);\r\n        return headers;\r\n    };\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     */\r\n    BaseClient.prototype.executePostToTokenEndpoint = function (tokenEndpoint, queryString, headers) {\r\n        return this.networkClient.sendPostRequestAsync(tokenEndpoint, {\r\n            body: queryString,\r\n            headers: headers,\r\n        });\r\n    };\r\n    return BaseClient;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nvar RequestValidator = /** @class */ (function () {\r\n    function RequestValidator() {\r\n    }\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    RequestValidator.validateRedirectUri = function (redirectUri) {\r\n        if (StringUtils.isEmpty(redirectUri)) {\r\n            throw ClientConfigurationError.createRedirectUriEmptyError();\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    RequestValidator.validatePrompt = function (prompt) {\r\n        if ([\r\n            PromptValue.LOGIN,\r\n            PromptValue.SELECT_ACCOUNT,\r\n            PromptValue.CONSENT,\r\n            PromptValue.NONE\r\n        ].indexOf(prompt) < 0) {\r\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        if (StringUtils.isEmpty(codeChallenge) || StringUtils.isEmpty(codeChallengeMethod)) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n        else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeMethod = function (codeChallengeMethod) {\r\n        if ([\r\n            CodeChallengeMethodValues.PLAIN,\r\n            CodeChallengeMethodValues.S256\r\n        ].indexOf(codeChallengeMethod) < 0) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\r\n        }\r\n    };\r\n    /**\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    RequestValidator.sanitizeEQParams = function (eQParams, queryParams) {\r\n        if (!eQParams) {\r\n            return null;\r\n        }\r\n        // Remove any query parameters already included in SSO params\r\n        queryParams.forEach(function (value, key) {\r\n            if (eQParams[key]) {\r\n                delete eQParams[key];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    return RequestValidator;\r\n}());\n\n/*\r\n* Copyright (c) Microsoft Corporation. All rights reserved.\r\n* Licensed under the MIT License.\r\n*/\r\nvar RequestParameterBuilder = /** @class */ (function () {\r\n    function RequestParameterBuilder() {\r\n        this.parameters = new Map();\r\n    }\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseTypeCode = function () {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\r\n    };\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseMode = function (responseMode) {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_MODE, encodeURIComponent((responseMode) ? responseMode : ResponseMode.QUERY));\r\n    };\r\n    /**\r\n     * add scopes\r\n     * @param scopeSet\r\n     */\r\n    RequestParameterBuilder.prototype.addScopes = function (scopeSet) {\r\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\r\n    };\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    RequestParameterBuilder.prototype.addClientId = function (clientId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\r\n    };\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    RequestParameterBuilder.prototype.addRedirectUri = function (redirectUri) {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\r\n    };\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    RequestParameterBuilder.prototype.addDomainHint = function (domainHint) {\r\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\r\n    };\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    RequestParameterBuilder.prototype.addLoginHint = function (loginHint) {\r\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\r\n    };\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    RequestParameterBuilder.prototype.addClaims = function (claims) {\r\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(claims));\r\n    };\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    RequestParameterBuilder.prototype.addCorrelationId = function (correlationId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\r\n    };\r\n    /**\r\n     * add library info query params\r\n     * @param libraryInfo\r\n     */\r\n    RequestParameterBuilder.prototype.addLibraryInfo = function (libraryInfo) {\r\n        // Telemetry Info\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\r\n    };\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    RequestParameterBuilder.prototype.addPrompt = function (prompt) {\r\n        RequestValidator.validatePrompt(prompt);\r\n        this.parameters.set(\"\" + AADServerParamKeys.PROMPT, encodeURIComponent(prompt));\r\n    };\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    RequestParameterBuilder.prototype.addState = function (state) {\r\n        if (!StringUtils.isEmpty(state)) {\r\n            this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\r\n        }\r\n    };\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    RequestParameterBuilder.prototype.addNonce = function (nonce) {\r\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\r\n    };\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\r\n        }\r\n        else {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addAuthorizationCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addDeviceCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    RequestParameterBuilder.prototype.addRefreshToken = function (refreshToken) {\r\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\r\n    };\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeVerifier = function (codeVerifier) {\r\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\r\n    };\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    // TODO uncomment when confidential client flow is added.\r\n    // addClientSecret(clientSecret: string): void {\r\n    //     params.set(`${AADServerParamKeys.CLIENT_SECRET}`, clientSecret);\r\n    // }\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    RequestParameterBuilder.prototype.addGrantType = function (grantType) {\r\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\r\n    };\r\n    /**\r\n     * add client info\r\n     *\r\n     */\r\n    RequestParameterBuilder.prototype.addClientInfo = function () {\r\n        this.parameters.set(ClientInfo, \"1\");\r\n    };\r\n    /**\r\n     * add extraQueryParams\r\n     * @param eQparams\r\n     */\r\n    RequestParameterBuilder.prototype.addExtraQueryParameters = function (eQparams) {\r\n        var _this = this;\r\n        RequestValidator.sanitizeEQParams(eQparams, this.parameters);\r\n        Object.keys(eQparams).forEach(function (key) {\r\n            _this.parameters.set(key, eQparams[key]);\r\n        });\r\n    };\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    RequestParameterBuilder.prototype.createQueryString = function () {\r\n        var queryParameterArray = new Array();\r\n        this.parameters.forEach(function (value, key) {\r\n            queryParameterArray.push(key + \"=\" + value);\r\n        });\r\n        return queryParameterArray.join(\"&\");\r\n    };\r\n    return RequestParameterBuilder;\r\n}());\n\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    __extends(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        _this.subError = subError;\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    return ServerError;\r\n}(AuthError));\n\n/**\r\n * Id Token representation class. Parses id token string and generates claims object.\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    function IdToken(rawIdToken, crypto) {\r\n        if (StringUtils.isEmpty(rawIdToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n        }\r\n        this.rawIdToken = rawIdToken;\r\n        this.claims = IdToken.extractIdToken(rawIdToken, crypto);\r\n    }\r\n    /**\r\n     * Extract IdToken by decoding the RAWIdToken\r\n     *\r\n     * @param encodedIdToken\r\n     */\r\n    IdToken.extractIdToken = function (encodedIdToken, crypto) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = StringUtils.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdTokenPayload = decodedToken.JWSPayload;\r\n            // base64Decode() should throw an error if there is an issue\r\n            var base64Decoded = crypto.base64Decode(base64IdTokenPayload);\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createIdTokenParsingError(err);\r\n        }\r\n    };\r\n    return IdToken;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class which exposes functions for managing date and time operations.\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * return the current time in Unix time (seconds).\r\n     */\r\n    TimeUtils.nowSeconds = function () {\r\n        // Date.getTime() returns in milliseconds.\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    return TimeUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Default\"] = 0] = \"Default\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n})(AuthorityType || (AuthorityType = {}));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ID_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n * }\r\n */\r\nvar IdTokenEntity = /** @class */ (function (_super) {\r\n    __extends(IdTokenEntity, _super);\r\n    function IdTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create IdTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    IdTokenEntity.createIdTokenEntity = function (homeAccountId, environment, idToken, clientId, tenantId) {\r\n        var idTokenEntity = new IdTokenEntity();\r\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\r\n        idTokenEntity.homeAccountId = homeAccountId;\r\n        idTokenEntity.environment = environment;\r\n        idTokenEntity.clientId = clientId;\r\n        idTokenEntity.secret = idToken;\r\n        idTokenEntity.realm = tenantId;\r\n        return idTokenEntity;\r\n    };\r\n    return IdTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ACCESS_TOKEN Credential Type\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n *      cachedAt: Absolute device time when entry was created in the cache.\r\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\r\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\r\n *      keyId: used for POP and SSH tokenTypes\r\n *      tokenType: Type of the token issued. Usually \"Bearer\"\r\n * }\r\n */\r\nvar AccessTokenEntity = /** @class */ (function (_super) {\r\n    __extends(AccessTokenEntity, _super);\r\n    function AccessTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create AccessTokenEntity\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param accessToken\r\n     * @param clientId\r\n     * @param tenantId\r\n     * @param scopes\r\n     * @param expiresOn\r\n     * @param extExpiresOn\r\n     */\r\n    AccessTokenEntity.createAccessTokenEntity = function (homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn) {\r\n        var atEntity = new AccessTokenEntity();\r\n        atEntity.homeAccountId = homeAccountId;\r\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\r\n        atEntity.secret = accessToken;\r\n        var currentTime = TimeUtils.nowSeconds();\r\n        atEntity.cachedAt = currentTime.toString();\r\n        // Token expiry time.\r\n        // This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\r\n        atEntity.expiresOn = expiresOn.toString();\r\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\r\n        atEntity.environment = environment;\r\n        atEntity.clientId = clientId;\r\n        atEntity.realm = tenantId;\r\n        atEntity.target = scopes;\r\n        return atEntity;\r\n    };\r\n    return AccessTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * REFRESH_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\r\n *\r\n * Value:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\r\nvar RefreshTokenEntity = /** @class */ (function (_super) {\r\n    __extends(RefreshTokenEntity, _super);\r\n    function RefreshTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create RefreshTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    RefreshTokenEntity.createRefreshTokenEntity = function (homeAccountId, environment, refreshToken, clientId, familyId) {\r\n        var rtEntity = new RefreshTokenEntity();\r\n        rtEntity.clientId = clientId;\r\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\r\n        rtEntity.environment = environment;\r\n        rtEntity.homeAccountId = homeAccountId;\r\n        rtEntity.secret = refreshToken;\r\n        if (familyId)\r\n            rtEntity.familyId = familyId;\r\n        return rtEntity;\r\n    };\r\n    return RefreshTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar InteractionRequiredAuthErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\nvar InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    __extends(InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage, subError) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\r\n        var isInteractionRequiredErrorCode = !StringUtils.isEmpty(errorCode) && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\r\n        var isInteractionRequiredSubError = !StringUtils.isEmpty(subError) && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        var isInteractionRequiredErrorDesc = !StringUtils.isEmpty(errorString) && InteractionRequiredAuthErrorMessage.some(function (irErrorCode) {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(ServerError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar CacheRecord = /** @class */ (function () {\r\n    function CacheRecord(accountEntity, idTokenEntity, accessTokenEntity, refreshTokenEntity) {\r\n        this.account = accountEntity;\r\n        this.idToken = idTokenEntity;\r\n        this.accessToken = accessTokenEntity;\r\n        this.refreshToken = refreshTokenEntity;\r\n    }\r\n    return CacheRecord;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nvar ProtocolUtils = /** @class */ (function () {\r\n    function ProtocolUtils() {\r\n    }\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    ProtocolUtils.setRequestState = function (userState, cryptoObj) {\r\n        var libraryState = ProtocolUtils.generateLibraryState(cryptoObj);\r\n        return !StringUtils.isEmpty(userState) ? \"\" + libraryState + Constants.RESOURCE_DELIM + userState : libraryState;\r\n    };\r\n    /**\r\n     * Generates the state value used by the library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.generateLibraryState = function (cryptoObj) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        var stateObj = {\r\n            id: cryptoObj.createNewGuid(),\r\n            ts: TimeUtils.nowSeconds()\r\n        };\r\n        var stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    };\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.parseRequestState = function (state, cryptoObj) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\r\n        }\r\n        if (StringUtils.isEmpty(state)) {\r\n            throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            var splitState = decodeURIComponent(state).split(Constants.RESOURCE_DELIM);\r\n            var libraryState = splitState[0];\r\n            var userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : \"\";\r\n            var libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            var libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: !StringUtils.isEmpty(userState) ? userState : \"\",\r\n                libraryState: libraryStateObj\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    };\r\n    return ProtocolUtils;\r\n}());\n\n/**\r\n * Class that handles response parsing.\r\n */\r\nvar ResponseHandler = /** @class */ (function () {\r\n    function ResponseHandler(clientId, cacheStorage, cryptoObj, logger) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param cachedState\r\n     * @param cryptoObj\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationCodeResponse = function (serverResponseHash, cachedState, cryptoObj) {\r\n        if (serverResponseHash.state !== cachedState) {\r\n            throw ClientAuthError.createStateMismatchError();\r\n        }\r\n        // Check for error\r\n        if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n            }\r\n            throw new ServerError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n        }\r\n        if (serverResponseHash.client_info) {\r\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     */\r\n    ResponseHandler.prototype.validateTokenResponse = function (serverResponse) {\r\n        // Check for error\r\n        if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\r\n            }\r\n            var errString = serverResponse.error_codes + \" - [\" + serverResponse.timestamp + \"]: \" + serverResponse.error_description + \" - Correlation ID: \" + serverResponse.correlation_id + \" - Trace ID: \" + serverResponse.trace_id;\r\n            throw new ServerError(serverResponse.error, errString);\r\n        }\r\n        // generate homeAccountId\r\n        if (serverResponse.client_info) {\r\n            this.clientInfo = buildClientInfo(serverResponse.client_info, this.cryptoObj);\r\n            if (!StringUtils.isEmpty(this.clientInfo.uid) && !StringUtils.isEmpty(this.clientInfo.utid)) {\r\n                this.homeAccountIdentifier = this.clientInfo.uid + \".\" + this.clientInfo.utid;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.handleServerTokenResponse = function (serverTokenResponse, authority, cachedNonce, cachedState) {\r\n        // create an idToken object (not entity)\r\n        var idTokenObj = new IdToken(serverTokenResponse.id_token, this.cryptoObj);\r\n        // token nonce check (TODO: Add a warning if no nonce is given?)\r\n        if (!StringUtils.isEmpty(cachedNonce)) {\r\n            if (idTokenObj.claims.nonce !== cachedNonce) {\r\n                throw ClientAuthError.createNonceMismatchError();\r\n            }\r\n        }\r\n        // save the response tokens\r\n        var requestStateObj = null;\r\n        if (!StringUtils.isEmpty(cachedState)) {\r\n            requestStateObj = ProtocolUtils.parseRequestState(cachedState, this.cryptoObj);\r\n        }\r\n        var cacheRecord = this.generateCacheRecord(serverTokenResponse, idTokenObj, authority, requestStateObj && requestStateObj.libraryState);\r\n        this.cacheStorage.saveCacheRecord(cacheRecord);\r\n        return ResponseHandler.generateAuthenticationResult(cacheRecord, idTokenObj, false, requestStateObj ? requestStateObj.userRequestState : null);\r\n    };\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateCacheRecord = function (serverTokenResponse, idTokenObj, authority, libraryState) {\r\n        // Account\r\n        var cachedAccount = this.generateAccountEntity(serverTokenResponse, idTokenObj, authority);\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        // IdToken\r\n        var cachedIdToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.id_token)) {\r\n            cachedIdToken = IdTokenEntity.createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, idTokenObj.claims.tid);\r\n        }\r\n        // AccessToken\r\n        var cachedAccessToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.access_token)) {\r\n            var responseScopes = ScopeSet.fromString(serverTokenResponse.scope);\r\n            // Expiration calculation\r\n            var currentTime = TimeUtils.nowSeconds();\r\n            // If the request timestamp was sent in the library state, use that timestamp to calculate expiration. Otherwise, use current time.\r\n            var timestamp = libraryState ? libraryState.ts : currentTime;\r\n            var tokenExpirationSeconds = timestamp + serverTokenResponse.expires_in;\r\n            var extendedTokenExpirationSeconds = tokenExpirationSeconds + serverTokenResponse.ext_expires_in;\r\n            cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, idTokenObj.claims.tid, responseScopes.printScopesLowerCase(), tokenExpirationSeconds, extendedTokenExpirationSeconds);\r\n        }\r\n        // refreshToken\r\n        var cachedRefreshToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.refresh_token)) {\r\n            cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci);\r\n        }\r\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken);\r\n    };\r\n    /**\r\n     * Generate Account\r\n     * @param serverTokenResponse\r\n     * @param idToken\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateAccountEntity = function (serverTokenResponse, idToken, authority) {\r\n        var authorityType = authority.authorityType;\r\n        if (StringUtils.isEmpty(serverTokenResponse.client_info)) {\r\n            throw ClientAuthError.createClientInfoEmptyError(serverTokenResponse.client_info);\r\n        }\r\n        return (authorityType === AuthorityType.Adfs) ?\r\n            AccountEntity.createADFSAccount(authority, idToken) :\r\n            AccountEntity.createAccount(serverTokenResponse.client_info, authority, idToken, this.cryptoObj);\r\n    };\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    ResponseHandler.generateAuthenticationResult = function (cacheRecord, idTokenObj, fromTokenCache, stateString) {\r\n        var accessToken = \"\";\r\n        var responseScopes = [];\r\n        var expiresOn = null;\r\n        var extExpiresOn = null;\r\n        var familyId = null;\r\n        if (cacheRecord.accessToken) {\r\n            accessToken = cacheRecord.accessToken.secret;\r\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\r\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\r\n        }\r\n        if (cacheRecord.refreshToken) {\r\n            familyId = cacheRecord.refreshToken.familyId || null;\r\n        }\r\n        return {\r\n            uniqueId: idTokenObj.claims.oid || idTokenObj.claims.sub,\r\n            tenantId: idTokenObj.claims.tid,\r\n            scopes: responseScopes,\r\n            account: cacheRecord.account.getAccountInfo(),\r\n            idToken: idTokenObj.rawIdToken,\r\n            idTokenClaims: idTokenObj.claims,\r\n            accessToken: accessToken,\r\n            fromCache: fromTokenCache,\r\n            expiresOn: expiresOn,\r\n            extExpiresOn: extExpiresOn,\r\n            familyId: familyId,\r\n            state: stateString || \"\"\r\n        };\r\n    };\r\n    return ResponseHandler;\r\n}());\n\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nvar UrlString = /** @class */ (function () {\r\n    function UrlString(url) {\r\n        this._urlString = url;\r\n        if (!StringUtils.isEmpty(this._urlString) && StringUtils.isEmpty(this.getHash())) {\r\n            this._urlString = this.canonicalizeUri(url);\r\n        }\r\n        else if (StringUtils.isEmpty(this._urlString)) {\r\n            // Throws error if url is empty\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n    }\r\n    Object.defineProperty(UrlString.prototype, \"urlString\", {\r\n        get: function () {\r\n            return this._urlString;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    UrlString.prototype.canonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !StringUtils.endsWith(url, \"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    UrlString.prototype.validateAsUri = function () {\r\n        // Attempts to parse url for uri components\r\n        var components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createUrlParseError(e);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\r\n        }\r\n    };\r\n    /**\r\n     * Function to remove query string params from url. Returns the new url.\r\n     * @param url\r\n     * @param name\r\n     */\r\n    UrlString.prototype.urlRemoveQueryStringParameter = function (name) {\r\n        var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value&\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        return this.urlString;\r\n    };\r\n    UrlString.removeHashFromUrl = function (url) {\r\n        return url.split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlString.prototype.replaceTenantPath = function (tenantId) {\r\n        var urlObject = this.getUrlComponents();\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    };\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlString.prototype.getHash = function () {\r\n        var hashIndex1 = this.urlString.indexOf(\"#\");\r\n        var hashIndex2 = this.urlString.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return this.urlString.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return this.urlString.substring(hashIndex1 + 1);\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Returns deserialized portion of URL hash\r\n     */\r\n    UrlString.prototype.getDeserializedHash = function () {\r\n        var hash = this.getHash();\r\n        var deserializedHash = StringUtils.queryStringToObject(hash);\r\n        if (!deserializedHash) {\r\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\r\n        }\r\n        return deserializedHash;\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlString.prototype.getUrlComponents = function () {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        var match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Url component object\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        return urlComponents;\r\n    };\r\n    UrlString.constructAuthorityUriFromObject = function (urlObject) {\r\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\r\n    };\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     */\r\n    UrlString.hashContainsKnownProperties = function (url) {\r\n        if (StringUtils.isEmpty(url)) {\r\n            return false;\r\n        }\r\n        var urlString = new UrlString(url);\r\n        var parameters = urlString.getDeserializedHash();\r\n        return !!(parameters.code ||\r\n            parameters.error_description ||\r\n            parameters.error ||\r\n            parameters.state);\r\n    };\r\n    return UrlString;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n */\r\nvar AuthorizationCodeClient = /** @class */ (function (_super) {\r\n    __extends(AuthorizationCodeClient, _super);\r\n    function AuthorizationCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.getAuthCodeUrl = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var queryString;\r\n            return __generator(this, function (_a) {\r\n                queryString = this.createAuthCodeUrlQueryString(request);\r\n                return [2 /*return*/, this.authority.authorizationEndpoint + \"?\" + queryString];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.acquireToken = function (request, cachedNonce, cachedState) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, responseHandler, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info(\"in acquireToken call\");\r\n                        // If no code response is given, we cannot acquire a token.\r\n                        if (!request || StringUtils.isEmpty(request.code)) {\r\n                            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n                        }\r\n                        return [4 /*yield*/, this.executeTokenRequest(this.authority, request)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority, cachedNonce, cachedState);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    AuthorizationCodeClient.prototype.handleFragmentResponse = function (hashFragment, cachedState) {\r\n        // Handle responses.\r\n        var responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n        // Deserialize hash fragment response parameters.\r\n        var hashUrlString = new UrlString(hashFragment);\r\n        var serverParams = hashUrlString.getDeserializedHash();\r\n        // Get code response\r\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\r\n        return serverParams.code;\r\n    };\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    AuthorizationCodeClient.prototype.getLogoutUri = function (logoutRequest) {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw ClientConfigurationError.createEmptyLogoutRequestError();\r\n        }\r\n        if (logoutRequest.account) {\r\n            // Clear given account.\r\n            this.cacheManager.removeAccount(AccountEntity.generateAccountCacheKey(logoutRequest.account));\r\n        }\r\n        else {\r\n            // Clear all accounts and tokens\r\n            this.cacheManager.clear();\r\n        }\r\n        // Get postLogoutRedirectUri.\r\n        var postLogoutUriParam = logoutRequest.postLogoutRedirectUri ?\r\n            \"?\" + AADServerParamKeys.POST_LOGOUT_URI + \"=\" + encodeURIComponent(logoutRequest.postLogoutRedirectUri) : \"\";\r\n        var correlationIdParam = logoutRequest.correlationId ?\r\n            \"&\" + AADServerParamKeys.CLIENT_REQUEST_ID + \"=\" + encodeURIComponent(logoutRequest.correlationId) : \"\";\r\n        // Construct logout URI.\r\n        var logoutUri = \"\" + this.authority.endSessionEndpoint + postLogoutUriParam + correlationIdParam;\r\n        return logoutUri;\r\n    };\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.executeTokenRequest = function (authority, request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // add code: user set, not validated\r\n        parameterBuilder.addAuthorizationCode(request.code);\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n        }\r\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createAuthCodeUrlQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        if (request.extraScopesToConsent) {\r\n            scopeSet.appendScopes(request.extraScopesToConsent);\r\n        }\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        // generate the correlationId if not set by the user and add\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n        // add library info parameters\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        // add client_info=1\r\n        parameterBuilder.addClientInfo();\r\n        if (request.codeChallenge) {\r\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n        }\r\n        if (request.prompt) {\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n        if (request.loginHint) {\r\n            parameterBuilder.addLoginHint(request.loginHint);\r\n        }\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n        }\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.claims) {\r\n            parameterBuilder.addClaims(request.claims);\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return AuthorizationCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 Device code client\r\n */\r\nvar DeviceCodeClient = /** @class */ (function (_super) {\r\n    __extends(DeviceCodeClient, _super);\r\n    function DeviceCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Gets device code from device code endpoint, calls back to with device code response, and\r\n     * polls token endpoint to exchange device code for tokens\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var deviceCodeResponse, response, responseHandler, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDeviceCode(request)];\r\n                    case 1:\r\n                        deviceCodeResponse = _a.sent();\r\n                        request.deviceCodeCallback(deviceCodeResponse);\r\n                        return [4 /*yield*/, this.acquireTokenWithDeviceCode(request, deviceCodeResponse)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateTokenResponse(response);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response, this.authority);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates device code request and executes http GET\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.getDeviceCode = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var queryString, headers;\r\n            return __generator(this, function (_a) {\r\n                queryString = this.createQueryString(request);\r\n                headers = this.createDefaultLibraryHeaders();\r\n                return [2 /*return*/, this.executePostRequestToDeviceCodeEndpoint(this.authority.deviceCodeEndpoint, queryString, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Executes POST request to device code endpoint\r\n     * @param deviceCodeEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     */\r\n    DeviceCodeClient.prototype.executePostRequestToDeviceCodeEndpoint = function (deviceCodeEndpoint, queryString, headers) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, userCode, deviceCode, verificationUri, expiresIn, interval, message;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendPostRequestAsync(deviceCodeEndpoint, {\r\n                            body: queryString,\r\n                            headers: headers\r\n                        })];\r\n                    case 1:\r\n                        _a = (_b.sent()).body, userCode = _a.user_code, deviceCode = _a.device_code, verificationUri = _a.verification_uri, expiresIn = _a.expires_in, interval = _a.interval, message = _a.message;\r\n                        return [2 /*return*/, {\r\n                                userCode: userCode,\r\n                                deviceCode: deviceCode,\r\n                                verificationUri: verificationUri,\r\n                                expiresIn: expiresIn,\r\n                                interval: interval,\r\n                                message: message\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create device code endpoint query parameters and returns string\r\n     */\r\n    DeviceCodeClient.prototype.createQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * Creates token request with device code response and polls token endpoint at interval set by the device code\r\n     * response\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.acquireTokenWithDeviceCode = function (request, deviceCodeResponse) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestBody, headers, deviceCodeExpirationTime, pollingIntervalMilli;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request, deviceCodeResponse);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                deviceCodeExpirationTime = TimeUtils.nowSeconds() + deviceCodeResponse.expiresIn;\r\n                pollingIntervalMilli = deviceCodeResponse.interval * 1000;\r\n                // Poll token endpoint while (device code is not expired AND operation has not been cancelled by\r\n                // setting CancellationToken.cancel = true). POST request is sent at interval set by pollingIntervalMilli\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var intervalId = setInterval(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var response, error_1;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        _a.trys.push([0, 5, , 6]);\r\n                                        if (!request.cancel) return [3 /*break*/, 1];\r\n                                        this.logger.error(\"Token request cancelled by setting DeviceCodeRequest.cancel = true\");\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeCancelledError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 1:\r\n                                        if (!(TimeUtils.nowSeconds() > deviceCodeExpirationTime)) return [3 /*break*/, 2];\r\n                                        this.logger.error(\"Device code expired. Expiration time of device code was \" + deviceCodeExpirationTime);\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeExpiredError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 2: return [4 /*yield*/, this.executePostToTokenEndpoint(this.authority.tokenEndpoint, requestBody, headers)];\r\n                                    case 3:\r\n                                        response = _a.sent();\r\n                                        if (response.body && response.body.error == Constants.AUTHORIZATION_PENDING) {\r\n                                            // user authorization is pending. Sleep for polling interval and try again\r\n                                            this.logger.info(response.body.error_description);\r\n                                        }\r\n                                        else {\r\n                                            clearInterval(intervalId);\r\n                                            resolve(response.body);\r\n                                        }\r\n                                        _a.label = 4;\r\n                                    case 4: return [3 /*break*/, 6];\r\n                                    case 5:\r\n                                        error_1 = _a.sent();\r\n                                        clearInterval(intervalId);\r\n                                        reject(error_1);\r\n                                        return [3 /*break*/, 6];\r\n                                    case 6: return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); }, pollingIntervalMilli);\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates query parameters and converts to string.\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.createTokenRequestBody = function (request, deviceCodeResponse) {\r\n        var requestParameters = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        requestParameters.addScopes(scopeSet);\r\n        requestParameters.addClientId(this.config.authOptions.clientId);\r\n        requestParameters.addGrantType(GrantType.DEVICE_CODE_GRANT);\r\n        requestParameters.addDeviceCode(deviceCodeResponse.deviceCode);\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        requestParameters.addCorrelationId(correlationId);\r\n        requestParameters.addClientInfo();\r\n        return requestParameters.createQueryString();\r\n    };\r\n    return DeviceCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 refresh token client\r\n */\r\nvar RefreshTokenClient = /** @class */ (function (_super) {\r\n    __extends(RefreshTokenClient, _super);\r\n    function RefreshTokenClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    RefreshTokenClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, responseHandler, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.executeTokenRequest(request, this.authority)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        parameterBuilder.addRefreshToken(request.refreshToken);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return RefreshTokenClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar SilentFlowClient = /** @class */ (function (_super) {\r\n    __extends(SilentFlowClient, _super);\r\n    function SilentFlowClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestScopes, accountKey, cachedAccount, homeAccountId, environment, cachedAccessToken, cachedRefreshToken, refreshTokenClient, refreshTokenRequest, cachedIdToken, idTokenObj;\r\n            return __generator(this, function (_a) {\r\n                // Cannot renew token if no request object is given.\r\n                if (!request) {\r\n                    throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                }\r\n                // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n                if (!request.account) {\r\n                    throw ClientAuthError.createNoAccountInSilentRequestError();\r\n                }\r\n                requestScopes = new ScopeSet(request.scopes || []);\r\n                accountKey = AccountEntity.generateAccountCacheKey(request.account);\r\n                cachedAccount = this.cacheManager.getAccount(accountKey);\r\n                homeAccountId = cachedAccount.homeAccountId;\r\n                environment = cachedAccount.environment;\r\n                cachedAccessToken = this.readAccessTokenFromCache(homeAccountId, environment, requestScopes, cachedAccount.realm);\r\n                cachedRefreshToken = this.readRefreshTokenFromCache(homeAccountId, environment);\r\n                // Check if refresh is forced, or if tokens are expired. If neither are true, return a token response with the found token entry.\r\n                if (request.forceRefresh || !cachedAccessToken || this.isTokenExpired(cachedAccessToken.expiresOn)) {\r\n                    // no refresh Token\r\n                    if (!cachedRefreshToken) {\r\n                        throw ClientAuthError.createNoTokensFoundError();\r\n                    }\r\n                    refreshTokenClient = new RefreshTokenClient(this.config);\r\n                    refreshTokenRequest = __assign(__assign({}, request), { refreshToken: cachedRefreshToken.secret });\r\n                    return [2 /*return*/, refreshTokenClient.acquireToken(refreshTokenRequest)];\r\n                }\r\n                cachedIdToken = this.readIdTokenFromCache(homeAccountId, environment, cachedAccount.realm);\r\n                idTokenObj = new IdToken(cachedIdToken.secret, this.config.cryptoInterface);\r\n                return [2 /*return*/, ResponseHandler.generateAuthenticationResult({\r\n                        account: cachedAccount,\r\n                        accessToken: cachedAccessToken,\r\n                        idToken: cachedIdToken,\r\n                        refreshToken: cachedRefreshToken\r\n                    }, idTokenObj, true)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * fetches idToken from cache if present\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.readIdTokenFromCache = function (homeAccountId, environment, inputRealm) {\r\n        var idTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.ID_TOKEN, this.config.authOptions.clientId, inputRealm);\r\n        return this.cacheManager.getCredential(idTokenKey);\r\n    };\r\n    /**\r\n     * fetches accessToken from cache if present\r\n     * @param request\r\n     * @param scopes\r\n     */\r\n    SilentFlowClient.prototype.readAccessTokenFromCache = function (homeAccountId, environment, scopes, inputRealm) {\r\n        var accessTokenFilter = {\r\n            homeAccountId: homeAccountId,\r\n            environment: environment,\r\n            credentialType: CredentialType.ACCESS_TOKEN,\r\n            clientId: this.config.authOptions.clientId,\r\n            realm: inputRealm,\r\n            target: scopes.printScopesLowerCase()\r\n        };\r\n        var credentialCache = this.cacheManager.getCredentialsFilteredBy(accessTokenFilter);\r\n        var accessTokens = Object.keys(credentialCache.accessTokens).map(function (key) { return credentialCache.accessTokens[key]; });\r\n        if (accessTokens.length > 1) ;\r\n        else if (accessTokens.length < 1) {\r\n            return null;\r\n        }\r\n        return accessTokens[0];\r\n    };\r\n    /**\r\n     * fetches refreshToken from cache if present\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.readRefreshTokenFromCache = function (homeAccountId, environment) {\r\n        var refreshTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.REFRESH_TOKEN, this.config.authOptions.clientId);\r\n        return this.cacheManager.getCredential(refreshTokenKey);\r\n    };\r\n    /**\r\n     * check if a token is expired based on given UTC time in seconds.\r\n     * @param expiresOn\r\n     */\r\n    SilentFlowClient.prototype.isTokenExpired = function (expiresOn) {\r\n        // check for access token expiry\r\n        var expirationSec = Number(expiresOn) || 0;\r\n        var offsetCurrentTimeSec = TimeUtils.nowSeconds() + this.config.systemOptions.tokenRenewalOffsetSeconds;\r\n        // If current time + offset is greater than token expiration time, then token is expired.\r\n        return (offsetCurrentTimeSec > expirationSec);\r\n    };\r\n    return SilentFlowClient;\r\n}(BaseClient));\n\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, networkInterface) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"authorityType\", {\r\n        // See above for AuthorityType\r\n        get: function () {\r\n            var pathSegments = this.canonicalAuthorityUrlComponents.PathSegments;\r\n            if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS) {\r\n                return AuthorityType.Adfs;\r\n            }\r\n            return AuthorityType.Default;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this._canonicalAuthority.urlString;\r\n        },\r\n        /**\r\n         * Sets canonical authority.\r\n         */\r\n        set: function (url) {\r\n            this._canonicalAuthority = new UrlString(url);\r\n            this._canonicalAuthority.validateAsUri();\r\n            this._canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthorityUrlComponents\", {\r\n        /**\r\n         * Get authority components.\r\n         */\r\n        get: function () {\r\n            if (!this._canonicalAuthorityUrlComponents) {\r\n                this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\r\n            }\r\n            return this._canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tenant\", {\r\n        /**\r\n         * Get tenant for authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"authorizationEndpoint\", {\r\n        /**\r\n         * OAuth /authorize endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.authorization_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tokenEndpoint\", {\r\n        /**\r\n         * OAuth /token endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.token_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"deviceCodeEndpoint\", {\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.tenantDiscoveryResponse.token_endpoint.replace(\"/token\", \"/devicecode\");\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"endSessionEndpoint\", {\r\n        /**\r\n         * OAuth logout endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.end_session_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"selfSignedJwtAudience\", {\r\n        /**\r\n         * OAuth issuer for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.issuer);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    Authority.prototype.replaceTenant = function (urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"defaultOpenIdConfigurationEndpoint\", {\r\n        /**\r\n         * The default open id configuration endpoint for any canonical authority.\r\n         */\r\n        get: function () {\r\n            if (this.authorityType === AuthorityType.Adfs) {\r\n                return this.canonicalAuthority + \".well-known/openid-configuration\";\r\n            }\r\n            return this.canonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Boolean that returns whethr or not tenant discovery has been completed.\r\n     */\r\n    Authority.prototype.discoveryComplete = function () {\r\n        return !!this.tenantDiscoveryResponse;\r\n    };\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     * @param openIdConfigurationEndpoint\r\n     */\r\n    Authority.prototype.discoverEndpoints = function (openIdConfigurationEndpoint) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint)];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"aadInstanceDiscoveryEndpointUrl\", {\r\n        // Default AAD Instance Discovery Endpoint\r\n        get: function () {\r\n            return \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + this.canonicalAuthority + \"oauth2/v2.0/authorize\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Authority.prototype.validateAndSetPreferredNetwork = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var host, preferredNetwork;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        host = this.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n                        if (!(TrustedAuthority.getTrustedHostList().length === 0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, TrustedAuthority.setTrustedAuthoritiesFromNetwork(this._canonicalAuthority, this.networkInterface)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!TrustedAuthority.IsInTrustedHostList(host)) {\r\n                            throw ClientConfigurationError.createUntrustedAuthorityError();\r\n                        }\r\n                        preferredNetwork = TrustedAuthority.getCloudDiscoveryMetadata(host).preferred_network;\r\n                        if (host !== preferredNetwork) {\r\n                            this.canonicalAuthority = this.canonicalAuthority.replace(host, preferredNetwork);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Perform endpoint discovery to discover the /authorize, /token and logout endpoints.\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var openIdConfigEndpoint, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.validateAndSetPreferredNetwork()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        openIdConfigEndpoint = this.defaultOpenIdConfigurationEndpoint;\r\n                        return [4 /*yield*/, this.discoverEndpoints(openIdConfigEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        this.tenantDiscoveryResponse = response.body;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Authority;\r\n}());\n\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Also performs endpoint discovery.\r\n     *\r\n     * @param authorityUri\r\n     * @param networkClient\r\n     */\r\n    AuthorityFactory.createDiscoveredInstance = function (authorityUri, networkClient) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenAuthority, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        acquireTokenAuthority = AuthorityFactory.createInstance(authorityUri, networkClient);\r\n                        if (acquireTokenAuthority.discoveryComplete()) {\r\n                            return [2 /*return*/, acquireTokenAuthority];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, acquireTokenAuthority];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Does not perform endpoint discovery.\r\n     *\r\n     * @param authorityUrl\r\n     * @param networkInterface\r\n     */\r\n    AuthorityFactory.createInstance = function (authorityUrl, networkInterface) {\r\n        // Throw error if authority url is empty\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        return new Authority(authorityUrl, networkInterface);\r\n    };\r\n    return AuthorityFactory;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * APP_META_DATA Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: appmetadata-<environment>-<client_id>\r\n *\r\n * Value:\r\n * {\r\n *      clientId: client ID of the application\r\n *      environment: entity that issued the token, represented as a full host\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n * }\r\n */\r\nvar AppMetadataEntity = /** @class */ (function () {\r\n    function AppMetadataEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    AppMetadataEntity.prototype.generateAppMetaDataEntityKey = function () {\r\n        var appMetaDataKeyArray = [APP_META_DATA, this.environment, this.clientId];\r\n        return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    return AppMetadataEntity;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Result returned from the authority's token endpoint.\r\n * - uniqueId               - `oid` or `sub` claim from ID token\r\n * - tenantId               - `tid` claim from ID token\r\n * - scopes                 - Scopes that are validated for the respective token\r\n * - account                - An account object representation of the currently signed-in user\r\n * - idToken                - Id token received as part of the response\r\n * - idTokenClaims          - MSAL-relevant ID token claims\r\n * - accessToken            - Access token received as part of the response\r\n * - fromCache              - Boolean denoting whether token came from cache\r\n * - expiresOn              - Javascript Date object representing relative expiration of access token\r\n * - extExpiresOn           - Javascript Date object representing extended relative expiration of access token in case of server outage\r\n * - state                  - Value passed in by user in request\r\n * - familyId               - Family ID identifier, usually only used for refresh tokens\r\n */\r\nvar AuthenticationResult = /** @class */ (function () {\r\n    function AuthenticationResult() {\r\n    }\r\n    return AuthenticationResult;\r\n}());\n\nexport { AccessTokenEntity, AccountEntity, AppMetadataEntity, AuthError, AuthErrorMessage, AuthenticationResult, Authority, AuthorityFactory, AuthorityType, AuthorizationCodeClient, CacheManager, CacheSchemaType, ClientAuthError, ClientAuthErrorMessage, ClientConfigurationError, ClientConfigurationErrorMessage, Constants, CredentialEntity, CredentialType, DEFAULT_SYSTEM_OPTIONS, DeviceCodeClient, IdToken, IdTokenEntity, InteractionRequiredAuthError, LogLevel, Logger, PersistentCacheKeys, PromptValue, ProtocolUtils, RefreshTokenClient, RefreshTokenEntity, ResponseMode, ServerError, SilentFlowClient, StringUtils, TimeUtils, TrustedAuthority, UrlString };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const BrowserConstants = {\r\n    // Local storage constant string\r\n    CACHE_LOCATION_LOCAL: \"localStorage\",\r\n    // Session storage constant string\r\n    CACHE_LOCATION_SESSION: \"sessionStorage\",\r\n    // Interaction status key (only used for browsers)\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    // Interaction in progress cache value\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    // Invalid grant error code\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    // Default popup window width\r\n    POPUP_WIDTH: 483,\r\n    // Default popup window height\r\n    POPUP_HEIGHT: 600,\r\n    // Default popup monitor poll interval in milliseconds\r\n    POLL_INTERVAL_MS: 50,\r\n    // msal-browser SKU\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\n\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nexport enum HTTP_REQUEST_TYPE {\r\n    GET = \"GET\",\r\n    POST = \"POST\"\r\n}\r\n\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nexport enum TemporaryCacheKeys {\r\n    AUTHORITY = \"authority\",\r\n    ACQUIRE_TOKEN_ACCOUNT = \"acquireToken.account\",\r\n    SESSION_STATE = \"session.state\",\r\n    REQUEST_STATE = \"request.state\",\r\n    NONCE_IDTOKEN = \"nonce.id_token\",\r\n    ORIGIN_URI = \"request.origin\",\r\n    RENEW_STATUS = \"token.renew.status\",\r\n    URL_HASH = \"urlHash\",\r\n    REQUEST_PARAMS = \"request.params\",\r\n    SCOPES = \"scopes\"\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\r\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nexport class FetchClient implements INetworkModule {\r\n\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        const response = await fetch(url, {\r\n            method: HTTP_REQUEST_TYPE.GET,\r\n            headers: this.getFetchHeaders(options)\r\n        });\r\n        return {\r\n            headers: this.getHeaderMap(response.headers),\r\n            body: await response.json() as T,\r\n            status: response.status\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        const reqBody = (options && options.body) || \"\";\r\n        const response = await fetch(url, {\r\n            method: HTTP_REQUEST_TYPE.POST,\r\n            headers: this.getFetchHeaders(options),\r\n            body: reqBody\r\n        });\r\n        return {\r\n            headers: this.getHeaderMap(response.headers),\r\n            body: await response.json() as T,\r\n            status: response.status\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get Fetch API Headers object from string map\r\n     * @param inputHeaders \r\n     */\r\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\r\n        const headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        options.headers.forEach((value, key) => {\r\n            headers.append(key, value);\r\n        });\r\n        return headers;\r\n    }\r\n\r\n    private getHeaderMap(headers: Headers): Map<string, string> {\r\n        const headerMap = new Map<string, string>();\r\n        headers.forEach((value: string, key: string) => {\r\n            headerMap.set(key, value);\r\n        });\r\n        return headerMap;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserAuthErrorMessage = {\r\n    noWindowObjectError: {\r\n        code: \"no_window_object\",\r\n        desc: \"No window object detected.\"\r\n    },\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    monitorWindowTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in popup failed due to timeout.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: \"block_iframe_reload\",\r\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. Please ensure monitorWindowForHash was called.\"\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: \"iframe_closed_prematurely\",\r\n        desc: \"The iframe being monitored was closed prematurely.\"\r\n    },\r\n    silentSSOInsufficientInfoError: {\r\n        code: \"silent_sso_error\",\r\n        desc: \"Silent SSO could not be completed - insufficient information was provided. Please provide either a login_hint, sid or account object.\"\r\n    },\r\n    silentPromptValueError: {\r\n        code: \"silent_prompt_value_error\",\r\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\r\n    },\r\n    tokenRequestCacheError: {\r\n        code: \"token_request_cache_error\",\r\n        desc: \"The token request could not be fetched from the cache correctly.\"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    }\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when no window object can be found.\r\n     */\r\n    static createNoWindowObjectError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noWindowObjectError.code, BrowserAuthErrorMessage.noWindowObjectError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail \r\n     */\r\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\r\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail \r\n     */\r\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\r\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method \r\n     */\r\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\r\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    static createEmptyNavigationUriError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue \r\n     */\r\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    static createInteractionInProgressError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail \r\n     */\r\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\r\n        let errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail \r\n     */\r\n    static createEmptyWindowCreatedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    static createUserCancelledError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\r\n            BrowserAuthErrorMessage.userCancelledError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when monitorWindowFromHash times out for a given popup.\r\n     * @param urlNavigate \r\n     */\r\n    static createMonitorWindowTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorWindowTimeoutError.code,\r\n            BrowserAuthErrorMessage.monitorWindowTimeoutError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe.\r\n     * @param windowParentCheck \r\n     */\r\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, \r\n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an auth reload is done inside an iframe.\r\n     */\r\n    static createBlockReloadInHiddenIframeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code,\r\n            BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n     */\r\n    static createIframeClosedPrematurelyError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the login_hint, sid or account object is not provided in the ssoSilent API.\r\n     */\r\n    static createSilentSSOInsufficientInfoError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentSSOInsufficientInfoError.code, BrowserAuthErrorMessage.silentSSOInsufficientInfoError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n     */\r\n    static createSilentPromptValueError(givenPrompt: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     * @param errDetail\r\n     */\r\n    static createTokenRequestCacheError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.tokenRequestCacheError.code,\r\n            `${BrowserAuthErrorMessage.tokenRequestCacheError.desc} Error Detail: ${errDetail}`);\r\n    }\r\n\r\n    /**\r\n    * Creates an error thrown if cache type is invalid.\r\n    */\r\n    static createInvalidCacheTypeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * This client implements the XMLHttpRequest class to send GET and POST requests.\r\n */\r\nexport class XhrClient implements INetworkModule {\r\n\r\n    /**\r\n     * XhrClient for REST endpoints - Get request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options);\r\n    }\r\n\r\n    /**\r\n     * XhrClient for REST endpoints - Post request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options);\r\n    }\r\n\r\n    /**\r\n     * Helper for XhrClient requests.\r\n     * @param url \r\n     * @param method \r\n     * @param options \r\n     */\r\n    private sendRequestAsync<T>(url: string, method: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        return new Promise<NetworkResponse<T>>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            this.setXhrHeaders(xhr, options);\r\n            xhr.onload = (): void => {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(xhr.responseText);\r\n                }\r\n                try {\r\n                    const jsonResponse = JSON.parse(xhr.responseText) as T;\r\n                    const networkResponse: NetworkResponse<T> = {\r\n                        headers: this.getHeaderMap(xhr),\r\n                        body: jsonResponse,\r\n                        status: xhr.status\r\n                    };\r\n                    resolve(networkResponse);\r\n                } catch (e) {\r\n                    reject(xhr.responseText);\r\n                }\r\n            };\r\n\r\n            xhr.onerror = (): void => {\r\n                reject(xhr.status);\r\n            };\r\n\r\n            if (method === \"POST\" && options.body) {\r\n                xhr.send(options.body);\r\n            } else if (method === \"GET\") {\r\n                xhr.send();\r\n            } else {\r\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Helper to set XHR headers for request.\r\n     * @param xhr \r\n     * @param options \r\n     */\r\n    private setXhrHeaders(xhr: XMLHttpRequest, options?: NetworkRequestOptions): void {\r\n        if (options && options.headers) {\r\n            options.headers.forEach((value, key) => {\r\n                xhr.setRequestHeader(key, value);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a string map of the headers received in the response.\r\n     * \r\n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\r\n     * @param xhr \r\n     */\r\n    private getHeaderMap(xhr: XMLHttpRequest): Map<string, string> {\r\n        const headerString = xhr.getAllResponseHeaders();\r\n        const headerArr = headerString.trim().split(/[\\r\\n]+/);\r\n        const headerMap = new Map<string, string>();\r\n        headerArr.forEach((value: string) => {\r\n            const parts = value.split(\": \");\r\n            const headerName = parts.shift();\r\n            const headerVal = parts.join(\": \");\r\n            headerMap.set(headerName, headerVal);\r\n        });\r\n\r\n        return headerMap;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { INetworkModule, UrlString } from \"@azure/msal-common\";\r\nimport { FetchClient } from \"../network/FetchClient\";\r\nimport { XhrClient } from \"../network/XhrClient\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\n\r\n/**\r\n * Utility class for browser specific functions\r\n */\r\nexport class BrowserUtils {\r\n\r\n    // #region Window Navigation and URL management\r\n\r\n    /**\r\n     * Used to redirect the browser to the STS authorization endpoint\r\n     * @param {string} urlNavigate - URL of the authorization endpoint\r\n     * @param {boolean} noHistory - boolean flag, uses .replace() instead of .assign() if true\r\n     */\r\n    static navigateWindow(urlNavigate: string, noHistory?: boolean): void {\r\n        if (noHistory) {\r\n            window.location.replace(urlNavigate);\r\n        } else {\r\n            window.location.assign(urlNavigate);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears hash from window url.\r\n     */\r\n    static clearHash(): void {\r\n        window.location.hash = \"\";\r\n    }\r\n\r\n    /**\r\n     * Replaces current hash with hash from provided url\r\n     */\r\n    static replaceHash(url: string): void {\r\n        const urlParts = url.split(\"#\");\r\n        urlParts.shift(); // Remove part before the hash\r\n        \r\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns boolean of whether the current window is in an iframe or not.\r\n     */\r\n    static isInIframe(): boolean {\r\n        return window.parent !== window;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    static getCurrentUri(): string {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    }\r\n\r\n    /**\r\n     * Returns best compatible network client object. \r\n     */\r\n    static getBrowserNetworkClient(): INetworkModule {\r\n        if (window.fetch) {\r\n            return new FetchClient();\r\n        } else {\r\n            return new XhrClient();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Throws error if we have completed an auth and are \r\n     * attempting another auth request inside an iframe.\r\n     */\r\n    static blockReloadInHiddenIframes(): void {\r\n        const isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (isResponseHash && BrowserUtils.isInIframe()) {\r\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n     */\r\n    static detectIEOrEdge(): boolean {\r\n        const ua = window.navigator.userAgent;\r\n        const msie = ua.indexOf(\"MSIE \");\r\n        const msie11 = ua.indexOf(\"Trident/\");\r\n        const msedge = ua.indexOf(\"Edge/\");\r\n        const isIE = msie > 0 || msie11 > 0;\r\n        const isEdge = msedge > 0;\r\n        return isIE || isEdge;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { SystemOptions, LoggerOptions, INetworkModule, DEFAULT_SYSTEM_OPTIONS, Constants } from \"@azure/msal-common\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\n\r\n// Default timeout for popup windows and iframes in milliseconds\r\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nconst DEFAULT_IFRAME_TIMEOUT_MS = 6000;\r\n\r\n/**\r\n * Use this to configure the auth options in the Configuration object\r\n *\r\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\r\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\r\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\r\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\r\n * - redirectUri                - The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\r\n * - postLogoutRedirectUri      - The redirect URI where the window navigates after a successful logout.\r\n * - navigateToLoginRequestUrl  - Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\r\n */\r\nexport type BrowserAuthOptions = {\r\n    clientId: string;\r\n    authority?: string;\r\n    knownAuthorities?: Array<string>;\r\n    cloudDiscoveryMetadata?: string;\r\n    redirectUri?: string;\r\n    postLogoutRedirectUri?: string;\r\n    navigateToLoginRequestUrl?: boolean;\r\n};\r\n\r\n/**\r\n * Use this to configure the below cache configuration options:\r\n *\r\n * - cacheLocation            - Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\r\n * - storeAuthStateInCookie   - If set, MSAL store's the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\r\n */\r\nexport type CacheOptions = {\r\n    cacheLocation?: string;\r\n    storeAuthStateInCookie?: boolean;\r\n};\r\n\r\n/**\r\n * Library Specific Options\r\n *\r\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\r\n * - loggerOptions                - Used to initialize the Logger object (See ClientConfiguration.ts)\r\n * - networkClient                - Network interface implementation\r\n * - windowHashTimeout            - sets the timeout for waiting for a response hash in a popup\r\n * - iframeHashTimeout            - sets the timeout for waiting for a response hash in an iframe\r\n * - loadFrameTimeout             - maximum time the library should wait for a frame to load\r\n */\r\nexport type BrowserSystemOptions = SystemOptions & {\r\n    loggerOptions?: LoggerOptions;\r\n    networkClient?: INetworkModule;\r\n    windowHashTimeout?: number;\r\n    iframeHashTimeout?: number;\r\n    loadFrameTimeout?: number;\r\n};\r\n\r\n/**\r\n * Use the configuration object to configure MSAL and initialize the UserAgentApplication.\r\n *\r\n * This object allows you to configure important elements of MSAL functionality:\r\n * - auth: this is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\r\n * - cache: this is where you configure cache location and whether to store cache in cookies\r\n * - system: this is where you can configure the network client, logger, token renewal offset\r\n */\r\nexport type Configuration = {\r\n    auth?: BrowserAuthOptions,\r\n    cache?: CacheOptions,\r\n    system?: BrowserSystemOptions\r\n};\r\n\r\n// Default auth options for browser\r\nconst DEFAULT_AUTH_OPTIONS: BrowserAuthOptions = {\r\n    clientId: \"\",\r\n    authority: `${Constants.DEFAULT_AUTHORITY}`,\r\n    knownAuthorities: [],\r\n    cloudDiscoveryMetadata: \"\",\r\n    redirectUri: \"\",\r\n    postLogoutRedirectUri: \"\",\r\n    navigateToLoginRequestUrl: true\r\n};\r\n\r\n// Default cache options for browser\r\nconst DEFAULT_CACHE_OPTIONS: CacheOptions = {\r\n    cacheLocation: BrowserConstants.CACHE_LOCATION_SESSION,\r\n    storeAuthStateInCookie: false\r\n};\r\n\r\n// Default logger options for browser\r\nconst DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\r\n    loggerCallback: (): void => {},\r\n    piiLoggingEnabled: false\r\n};\r\n\r\n// Default system options for browser\r\nconst DEFAULT_BROWSER_SYSTEM_OPTIONS: BrowserSystemOptions = {\r\n    ...DEFAULT_SYSTEM_OPTIONS,\r\n    loggerOptions: DEFAULT_LOGGER_OPTIONS,\r\n    networkClient: BrowserUtils.getBrowserNetworkClient(),\r\n    windowHashTimeout: DEFAULT_POPUP_TIMEOUT_MS,\r\n    iframeHashTimeout: DEFAULT_IFRAME_TIMEOUT_MS,\r\n    loadFrameTimeout: BrowserUtils.detectIEOrEdge() ? 500 : 0\r\n};\r\n\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\r\nexport function buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem }: Configuration): Configuration {\r\n    const overlayedConfig: Configuration = {\r\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...userInputAuth },\r\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\r\n        system: { ...DEFAULT_BROWSER_SYSTEM_OPTIONS, ...userInputSystem }\r\n    };\r\n    return overlayedConfig;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { AuthError } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserConfigurationAuthErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    storageNotSupportedError: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"Given storage configuration option was not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserConfigurationAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"BrowserConfigurationAuthError\";\r\n\r\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    static createRedirectUriEmptyError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code,\r\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    static createPostLogoutRedirectUriEmptyError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code,\r\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when given storage location is not supported.\r\n     * @param givenStorageLocation \r\n     */\r\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when callback object is invalid.\r\n     * @param callbackObject \r\n     */\r\n    static createInvalidCallbackObjectError(callbackObject: object): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.invalidCallbackObject.code,\r\n            `${BrowserConfigurationAuthErrorMessage.invalidCallbackObject.desc} Given value for callback function: ${callbackObject}`);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n     */\r\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \r\n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { Constants, PersistentCacheKeys, StringUtils, AuthorizationCodeRequest, ICrypto, CacheSchemaType, AccountEntity, IdTokenEntity, CredentialType, AccessTokenEntity, RefreshTokenEntity, AppMetadataEntity, CacheManager, CredentialEntity } from \"@azure/msal-common\";\r\nimport { CacheOptions } from \"../config/Configuration\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\r\nimport { BrowserConstants, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\n\r\n// Cookie life calculation (hours * minutes * seconds * ms)\r\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\n\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nexport class BrowserStorage extends CacheManager {\r\n\r\n    // Cache configuration, either set by user or default values.\r\n    private cacheConfig: CacheOptions;\r\n    // Window storage object (either local or sessionStorage)\r\n    private windowStorage: Storage;\r\n    // Client id of application. Used in cache keys to partition cache correctly in the case of multiple instances of MSAL.\r\n    private clientId: string;\r\n\r\n    constructor(clientId: string, cacheConfig: CacheOptions) {\r\n        super();\r\n        // Validate cache location\r\n        this.validateWindowStorage(cacheConfig.cacheLocation);\r\n\r\n        this.cacheConfig = cacheConfig;\r\n        this.windowStorage = window[this.cacheConfig.cacheLocation];\r\n        this.clientId = clientId;\r\n\r\n        // Migrate any cache entries from older versions of MSAL.\r\n        this.migrateCacheEntries();\r\n    }\r\n\r\n    /**\r\n     * Validates the the given cache location string is an expected value:\r\n     * - localStorage\r\n     * - sessionStorage (default)\r\n     * Also validates if given cacheLocation is supported on the browser.\r\n     * @param cacheLocation\r\n     */\r\n    private validateWindowStorage(cacheLocation: string): void {\r\n        if (typeof window === \"undefined\" || !window) {\r\n            throw BrowserAuthError.createNoWindowObjectError();\r\n        }\r\n\r\n        if (cacheLocation !== BrowserConstants.CACHE_LOCATION_LOCAL && cacheLocation !== BrowserConstants.CACHE_LOCATION_SESSION) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n\r\n        const storageSupported = !!window[cacheLocation];\r\n        if (!storageSupported) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Migrate all old cache entries to new schema. No rollback supported.\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    private migrateCacheEntries(): void {\r\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\r\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\r\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\r\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\r\n\r\n        const idTokenValue = this.windowStorage.getItem(idTokenKey);\r\n        const clientInfoValue = this.windowStorage.getItem(clientInfoKey);\r\n        const errorValue = this.windowStorage.getItem(errorKey);\r\n        const errorDescValue = this.windowStorage.getItem(errorDescKey);\r\n\r\n        const values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n        const keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\r\n\r\n        keysToMigrate.forEach((cacheKey, index) => this.migrateCacheEntry(cacheKey, values[index]));\r\n    }\r\n\r\n    /**\r\n     * Utility function to help with migration.\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    private migrateCacheEntry(newKey: string, value: string): void {\r\n        if (value) {\r\n            this.setItem(this.generateCacheKey(newKey), value, CacheSchemaType.TEMPORARY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parses key as JSON object, JSON.parse() will throw an error.\r\n     * @param key\r\n     */\r\n    private validateObjectKey(key: string): void {\r\n        JSON.parse(key);\r\n    }\r\n\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setItem(key: string, value: string | object, type: string): void {\r\n        // save the cacheItem\r\n        switch (type) {\r\n            case CacheSchemaType.ACCOUNT:\r\n            case CacheSchemaType.CREDENTIAL:\r\n            case CacheSchemaType.APP_META_DATA:\r\n                this.windowStorage.setItem(key, JSON.stringify(value));\r\n                break;\r\n            case CacheSchemaType.TEMPORARY: {\r\n                const stringVal = value as string;\r\n                this.windowStorage.setItem(key, stringVal);\r\n                if (this.cacheConfig.storeAuthStateInCookie) {\r\n                    this.setItemCookie(key, stringVal);\r\n                }\r\n                break;\r\n            }\r\n            default: {\r\n                throw BrowserAuthError.createInvalidCacheTypeError();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve frm cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    getItem(key: string, type: string): string | object {\r\n        const value = this.windowStorage.getItem(key);\r\n        if (StringUtils.isEmpty(value)) {\r\n            return null;\r\n        }\r\n        switch (type) {\r\n            case CacheSchemaType.ACCOUNT: {\r\n                const account = new AccountEntity();\r\n                return (CacheManager.toObject(account, JSON.parse(value)) as AccountEntity);\r\n            }\r\n            case CacheSchemaType.CREDENTIAL: {\r\n                const credentialType = CredentialEntity.getCredentialType(key);\r\n                switch (credentialType) {\r\n                    case CredentialType.ID_TOKEN: {\r\n                        const idTokenEntity: IdTokenEntity = new IdTokenEntity();\r\n                        return (CacheManager.toObject(idTokenEntity, JSON.parse(value)) as IdTokenEntity);\r\n                    }\r\n                    case CredentialType.ACCESS_TOKEN: {\r\n                        const accessTokenEntity: AccessTokenEntity = new AccessTokenEntity();\r\n                        return (CacheManager.toObject(accessTokenEntity, JSON.parse(value)) as AccessTokenEntity);\r\n                    }\r\n                    case CredentialType.REFRESH_TOKEN: {\r\n                        const refreshTokenEntity: RefreshTokenEntity = new RefreshTokenEntity();\r\n                        return (CacheManager.toObject(refreshTokenEntity, JSON.parse(value)) as RefreshTokenEntity);\r\n                    }\r\n                }\r\n            }\r\n            case CacheSchemaType.APP_META_DATA: {\r\n                return (JSON.parse(value) as AppMetadataEntity);\r\n            }\r\n            case CacheSchemaType.TEMPORARY: {\r\n                const itemCookie = this.getItemCookie(key);\r\n                if (this.cacheConfig.storeAuthStateInCookie) {\r\n                    return itemCookie;\r\n                }\r\n                return value;\r\n            }\r\n            default: {\r\n                throw BrowserAuthError.createInvalidCacheTypeError();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    removeItem(key: string): boolean {\r\n        this.windowStorage.removeItem(key);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.clearItemCookie(key);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Checks whether key is in cache.\r\n     * @param key\r\n     */\r\n    containsKey(key: string): boolean {\r\n        return this.windowStorage.hasOwnProperty(key);\r\n    }\r\n\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    getKeys(): string[] {\r\n        return Object.keys(this.windowStorage);\r\n    }\r\n\r\n    /**\r\n     * Clears all cache entries created by MSAL (except tokens).\r\n     */\r\n    clear(): void {\r\n        this.removeAllAccounts();\r\n        this.removeAppMetadata();\r\n        let key: string;\r\n        for (key in this.windowStorage) {\r\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\r\n            if (this.windowStorage.hasOwnProperty(key) && ((key.indexOf(Constants.CACHE_PREFIX) !== -1) || (key.indexOf(this.clientId) !== -1))) {\r\n                this.removeItem(key);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add value to cookies\r\n     * @param cookieName\r\n     * @param cookieValue\r\n     * @param expires\r\n     */\r\n    setItemCookie(cookieName: string, cookieValue: string, expires?: number): void {\r\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;`;\r\n        if (expires) {\r\n            const expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += `expires=${expireTime};`;\r\n        }\r\n\r\n        document.cookie = cookieStr;\r\n    }\r\n\r\n    /**\r\n     * Get one item by key from cookies\r\n     * @param cookieName\r\n     */\r\n    getItemCookie(cookieName: string): string {\r\n        const name = `${encodeURIComponent(cookieName)}=`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        for (let i = 0; i < cookieList.length; i++) {\r\n            let cookie = cookieList[i];\r\n            while (cookie.charAt(0) === \" \") {\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(name) === 0) {\r\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cookieName\r\n     */\r\n    clearItemCookie(cookieName: string): void {\r\n        this.setItemCookie(cookieName, \"\", -1);\r\n    }\r\n\r\n    /**\r\n     * Clear all msal cookies\r\n     */\r\n    clearMsalCookie(state?: string): void {\r\n        const nonceKey = state ? `${TemporaryCacheKeys.NONCE_IDTOKEN}|${state}` : TemporaryCacheKeys.NONCE_IDTOKEN;\r\n        this.clearItemCookie(this.generateCacheKey(nonceKey));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n    }\r\n\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    getCookieExpirationTime(cookieLifeDays: number): string {\r\n        const today = new Date();\r\n        const expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\r\n        return expr.toUTCString();\r\n    }\r\n\r\n    /**\r\n     * Gets the cache object referenced by the browser\r\n     */\r\n    getCache(): object {\r\n        return this.windowStorage;\r\n    }\r\n\r\n    /**\r\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\r\n     */\r\n    setCache(): void {\r\n        // sets nothing\r\n    }\r\n\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    generateCacheKey(key: string): string {\r\n        try {\r\n            // Defined schemas do not need the key migrated\r\n            this.validateObjectKey(key);\r\n            return key;\r\n        } catch (e) {\r\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) || StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\r\n                return key;\r\n            }\r\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    generateAuthorityKey(state: string): string {\r\n        return `${TemporaryCacheKeys.AUTHORITY}${Constants.RESOURCE_DELIM}${state}`;\r\n    }\r\n\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    generateNonceKey(state: string): string {\r\n        return `${TemporaryCacheKeys.NONCE_IDTOKEN}${Constants.RESOURCE_DELIM}${state}`;\r\n    }\r\n\r\n    /**\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     */\r\n    setAuthorityCache(authority: string, state: string): void {\r\n        // Cache authorityKey\r\n        const authorityKey = this.generateAuthorityKey(state);\r\n        this.setItem(this.generateCacheKey(authorityKey), authority, CacheSchemaType.TEMPORARY);\r\n    }\r\n\r\n    /**\r\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n     */\r\n    getCachedAuthority(): string {\r\n        const state = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY) as string;\r\n        if (!state) {\r\n            return null;\r\n        }\r\n        return this.getItem(this.generateCacheKey(this.generateAuthorityKey(state)), CacheSchemaType.TEMPORARY) as string;\r\n    }\r\n\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    updateCacheEntries(state: string, nonce: string, authorityInstance: string): void {\r\n        // Cache the request state\r\n        this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), state, CacheSchemaType.TEMPORARY);\r\n\r\n        // Cache the nonce\r\n        this.setItem(this.generateCacheKey(this.generateNonceKey(state)), nonce, CacheSchemaType.TEMPORARY);\r\n\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(authorityInstance, state);\r\n    }\r\n\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    resetRequestCache(state: string): void {\r\n        // check state and remove associated cache items\r\n        this.getKeys().forEach(key => {\r\n            if (!StringUtils.isEmpty(state) && key.indexOf(state) !== -1) {\r\n                this.removeItem(key);\r\n            }\r\n        });\r\n\r\n        // delete generic interactive request parameters\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n    }\r\n\r\n    cleanRequest(): void {\r\n        // Interaction is completed - remove interaction status.\r\n        this.removeItem(this.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n        const cachedState = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY) as string;\r\n        this.resetRequestCache(cachedState || \"\");\r\n    }\r\n\r\n    cacheCodeRequest(authCodeRequest: AuthorizationCodeRequest, browserCrypto: ICrypto): void {\r\n        this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), browserCrypto.base64Encode(JSON.stringify(authCodeRequest)), CacheSchemaType.TEMPORARY);\r\n    }\r\n\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    getCachedRequest(state: string, browserCrypto: ICrypto): AuthorizationCodeRequest {\r\n        try {\r\n            // Get token request from cache and parse as TokenExchangeParameters.\r\n            const encodedTokenRequest = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), CacheSchemaType.TEMPORARY) as string;\r\n            const parsedRequest = JSON.parse(browserCrypto.base64Decode(encodedTokenRequest)) as AuthorizationCodeRequest;\r\n            this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n            // Get cached authority and use if no authority is cached with request.\r\n            if (StringUtils.isEmpty(parsedRequest.authority)) {\r\n                const authorityKey: string = this.generateAuthorityKey(state);\r\n                const cachedAuthority: string = this.getItem(this.generateCacheKey(authorityKey), CacheSchemaType.TEMPORARY) as string;\r\n                parsedRequest.authority = cachedAuthority;\r\n            }\r\n            return parsedRequest;\r\n        } catch (err) {\r\n            throw BrowserAuthError.createTokenRequestCacheError(err);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Utility class for math specific functions in browser.\r\n */\r\nexport class MathUtils {\r\n\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    static decimalToHex(num: number): string {\r\n        let hex: string = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { MathUtils } from \"../utils/MathUtils\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\nexport class GuidGenerator {\r\n\r\n    // browser crypto object used to generate random values\r\n    private cryptoObj: BrowserCrypto;\r\n\r\n    constructor(cryptoObj: BrowserCrypto) {\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n\r\n    /*\r\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n     * pseudo-random numbers.\r\n     * The algorithm is as follows:\r\n     *     Set the two most significant bits (bits 6 and 7) of the\r\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n     *     Set the four most significant bits (bits 12 through 15) of the\r\n     *        time_hi_and_version field to the 4-bit version number from\r\n     *        Section 4.1.3. Version4\r\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n     *     values.\r\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n     * time-low               = 4hexOctet\r\n     * time-mid               = 2hexOctet\r\n     * time-high-and-version  = 2hexOctet\r\n     * clock-seq-and-reserved = hexOctet:\r\n     * clock-seq-low          = hexOctet\r\n     * node                   = 6hexOctet\r\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n     * y values are 8, 9, A, B\r\n     */\r\n    generateGuid(): string {\r\n        try {\r\n            const buffer: Uint8Array = new Uint8Array(16);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n\r\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n\r\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\r\n\r\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\r\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\r\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\r\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\r\n        }\r\n        catch (err) {\r\n            const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            const hex: string = \"0123456789abcdef\";\r\n            let r: number = 0;\r\n            let guidResponse: string = \"\";\r\n            for (let i: number = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                } else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                } else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    static isGuid(guid: string): boolean {\r\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class BrowserStringUtils {\r\n\r\n    /**\r\n     * Converts string to Uint8Array\r\n     * @param sDOMStr \r\n     */\r\n    static stringToUtf8Arr (sDOMStr: string): Uint8Array {\r\n        let nChr;\r\n        let nArrLen = 0;\r\n        const nStrLen = sDOMStr.length;\r\n        /* mapping... */\r\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n\r\n        const aBytes = new Uint8Array(nArrLen);\r\n\r\n        /* transcription... */\r\n\r\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            } else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n\r\n        return aBytes;      \r\n    }\r\n\r\n    /**\r\n     * Converts Uint8Array to a string\r\n     * @param aBytes \r\n     */\r\n    static utf8ArrToString (aBytes: Uint8Array): string {\r\n        let sView = \"\";\r\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(\r\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                    : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart\r\n            );\r\n        }\r\n        return sView;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\n\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class Base64Encode {\r\n    \r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input \r\n     */\r\n    urlEncode(input: string): string {\r\n        return encodeURIComponent(this.encode(input)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\"));\r\n    }\r\n\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr \r\n     */\r\n    urlEncodeArr(inputArr: Uint8Array): string {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    }\r\n\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input \r\n     */\r\n    encode(input: string): string {\r\n        const inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    }\r\n\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes \r\n     */\r\n    private base64EncArr(aBytes: Uint8Array): string {  \r\n        const eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        let sB64Enc = \"\";\r\n      \r\n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n            */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(\r\n                    this.uint6ToB64(nUint24 >>> 18 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 12 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 6 & 63), \r\n                    this.uint6ToB64(nUint24 & 63)\r\n                );\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return  eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    }\r\n\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6 \r\n     */\r\n    private uint6ToB64 (nUint6: number): number {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                            65;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\n\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class Base64Decode {\r\n\r\n    /**\r\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n     * @param input \r\n     */\r\n    decode(input: string): string {\r\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n\r\n        const inputUtf8Arr = this.base64DecToArr(encodedString);\r\n        return decodeURIComponent(BrowserStringUtils.utf8ArrToString(inputUtf8Arr));\r\n    }\r\n\r\n    /**\r\n     * Decodes base64 into Uint8Array\r\n     * @param base64String \r\n     * @param nBlockSize \r\n     */\r\n    private base64DecToArr(base64String: string, nBlockSize?: number): Uint8Array {\r\n        const sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\r\n        const nInLen = sB64Enc.length;\r\n        const nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\r\n        const aBytes = new Uint8Array(nOutLen);\r\n\r\n        for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\r\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return aBytes;\r\n    }\r\n\r\n    /**\r\n     * Base64 string to array decoding helper\r\n     * @param charNum \r\n     */\r\n    private b64ToUint6(charNum: number): number {\r\n        return charNum > 64 && charNum < 91 ?\r\n            charNum - 65\r\n            : charNum > 96 && charNum < 123 ? \r\n                charNum - 71\r\n                : charNum > 47 && charNum < 58 ?\r\n                    charNum + 4\r\n                    : charNum === 43 ?\r\n                        62\r\n                        : charNum === 47 ?\r\n                            63\r\n                            :\r\n                            0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { PkceCodes } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { Base64Encode } from \"../encode/Base64Encode\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\n// Constant byte array length\r\nconst RANDOM_BYTE_ARR_LENGTH = 32;\r\n\r\n/**\r\n * Class which exposes APIs to generate PKCE codes and code verifiers.\r\n */\r\nexport class PkceGenerator {\r\n\r\n    private base64Encode: Base64Encode;\r\n    private cryptoObj: BrowserCrypto;\r\n\r\n    constructor(cryptoObj: BrowserCrypto) {\r\n        this.base64Encode = new Base64Encode();\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n\r\n    /**\r\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n     */\r\n    async generateCodes(): Promise<PkceCodes> {\r\n        const codeVerifier = this.generateCodeVerifier();\r\n        const codeChallenge = await this.generateCodeChallengeFromVerifier(codeVerifier);\r\n        return {\r\n            verifier: codeVerifier,\r\n            challenge: codeChallenge\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generates a random 32 byte buffer and returns the base64\r\n     * encoded string to be used as a PKCE Code Verifier\r\n     */\r\n    private generateCodeVerifier(): string {\r\n        try {\r\n            // Generate random values as utf-8\r\n            const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // encode verifier as base64\r\n            const pkceCodeVerifierB64: string = this.base64Encode.urlEncodeArr(buffer);\r\n            return pkceCodeVerifierB64;\r\n        } catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a base64 encoded PKCE Code Challenge string from the\r\n     * hash created from the PKCE Code Verifier supplied\r\n     */\r\n    private async generateCodeChallengeFromVerifier(pkceCodeVerifier: string): Promise<string> {\r\n        try {\r\n            // hashed verifier\r\n            const pkceHashedCodeVerifier = await this.cryptoObj.sha256Digest(pkceCodeVerifier);\r\n            // encode hash as base64\r\n            return this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\r\n        } catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\n\r\n// SHA-256 hashing algorithm\r\nconst HASH_ALG = \"SHA-256\";\r\n\r\n/**\r\n * This class implements functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\nexport class BrowserCrypto {\r\n\r\n    constructor() {\r\n        if (!(this.hasCryptoAPI())) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n     * @param dataString \r\n     */\r\n    async sha256Digest(dataString: string): Promise<ArrayBuffer> {\r\n        const data = BrowserStringUtils.stringToUtf8Arr(dataString);\r\n\r\n        return this.hasIECrypto() ? this.getMSCryptoDigest(HASH_ALG, data) : this.getSubtleCryptoDigest(HASH_ALG, data);\r\n    }\r\n\r\n    /**\r\n     * Populates buffer with cryptographically random values.\r\n     * @param dataBuffer \r\n     */\r\n    getRandomValues(dataBuffer: Uint8Array): void {\r\n        const cryptoObj = window[\"msCrypto\"] || window.crypto;\r\n        if (!cryptoObj.getRandomValues) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\r\n        }\r\n        cryptoObj.getRandomValues(dataBuffer);\r\n    }\r\n\r\n    /**\r\n     * Checks whether IE crypto (AKA msCrypto) is available.\r\n     */\r\n    private hasIECrypto(): boolean {\r\n        return !!window[\"msCrypto\"];\r\n    }\r\n\r\n    /**\r\n     * Check whether browser crypto is available.\r\n     */\r\n    private hasBrowserCrypto(): boolean {\r\n        return !!window.crypto;\r\n    }\r\n\r\n    /**\r\n     * Check whether IE crypto or other browser cryptography is available.\r\n     */\r\n    private hasCryptoAPI(): boolean {\r\n        return this.hasIECrypto() || this.hasBrowserCrypto();\r\n    }\r\n\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm \r\n     * @param data \r\n     */\r\n    private async getSubtleCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\r\n        return window.crypto.subtle.digest(algorithm, data);\r\n    }\r\n\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm \r\n     * @param data \r\n     */\r\n    private async getMSCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\r\n        return new Promise((resolve, reject) => {\r\n            const digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\r\n            digestOperation.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\r\n                resolve(e.target.result);\r\n            });\r\n            digestOperation.addEventListener(\"error\", (error: string) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ICrypto, PkceCodes } from \"@azure/msal-common\";\r\nimport { GuidGenerator } from \"./GuidGenerator\";\r\nimport { Base64Encode } from \"../encode/Base64Encode\";\r\nimport { Base64Decode } from \"../encode/Base64Decode\";\r\nimport { PkceGenerator } from \"./PkceGenerator\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and \r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nexport class CryptoOps implements ICrypto {\r\n\r\n    private browserCrypto: BrowserCrypto;\r\n    private guidGenerator: GuidGenerator;\r\n    private b64Encode: Base64Encode;\r\n    private b64Decode: Base64Decode;\r\n    private pkceGenerator: PkceGenerator;\r\n\r\n    constructor() {\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        this.browserCrypto = new BrowserCrypto();\r\n        this.b64Encode = new Base64Encode();\r\n        this.b64Decode = new Base64Decode();\r\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\r\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\r\n    }\r\n\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    createNewGuid(): string {\r\n        return this.guidGenerator.generateGuid();\r\n    }\r\n\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input \r\n     */\r\n    base64Encode(input: string): string {\r\n        return this.b64Encode.encode(input);\r\n    }    \r\n    \r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input \r\n     */\r\n    base64Decode(input: string): string {\r\n        return this.b64Decode.decode(input);\r\n    }\r\n\r\n    /**\r\n     * Generates PKCE codes used in Authorization Code Flow.\r\n     */\r\n    async generatePkceCodes(): Promise<PkceCodes> {\r\n        return this.pkceGenerator.generateCodes();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { StringUtils, AuthorizationCodeRequest, CacheSchemaType, AuthenticationResult, AuthorizationCodeClient } from \"@azure/msal-common\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nexport abstract class InteractionHandler {\r\n\r\n    protected authModule: AuthorizationCodeClient;\r\n    protected browserStorage: BrowserStorage;\r\n    protected authCodeRequest: AuthorizationCodeRequest;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserStorage) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n    }\r\n\r\n    /**\r\n     * Function to enable user interaction.\r\n     * @param requestUrl\r\n     */\r\n    abstract initiateAuthRequest(requestUrl: string, authCodeRequest: AuthorizationCodeRequest): Window | Promise<HTMLIFrameElement>;\r\n\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    async handleCodeResponse(locationHash: string): Promise<AuthenticationResult> {\r\n        // Check that location hash isn't empty.\r\n        if (StringUtils.isEmpty(locationHash)) {\r\n            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n        }\r\n\r\n        // Handle code response.\r\n        const requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY) as string;\r\n        const authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n        \r\n        // Get cached items\r\n        const cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY) as string;\r\n\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCode;\r\n\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState);\r\n        this.browserStorage.cleanRequest();\r\n        return tokenResponse;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { StringUtils, AuthorizationCodeRequest, ICrypto, CacheSchemaType, AuthenticationResult } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConstants, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\n\r\nexport class RedirectHandler extends InteractionHandler {\r\n\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    initiateAuthRequest(requestUrl: string, authCodeRequest: AuthorizationCodeRequest, redirectStartPage?: string, browserCrypto?: ICrypto): Window {\r\n        // Navigate if valid URL\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n            if (redirectStartPage) {\r\n                this.browserStorage.setItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), redirectStartPage, CacheSchemaType.TEMPORARY);\r\n            }\r\n\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\r\n            this.browserStorage.cacheCodeRequest(authCodeRequest, browserCrypto);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            const isIframedApp = BrowserUtils.isInIframe();\r\n            if (isIframedApp) {\r\n                // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n                throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\r\n            }\r\n            // Navigate window to request URL\r\n            BrowserUtils.navigateWindow(requestUrl);\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n        // Return this window handle. Not used for redirect, but needed for API definition.\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    async handleCodeResponse(locationHash: string, browserCrypto?: ICrypto): Promise<AuthenticationResult> {\r\n        // Check that location hash isn't empty.\r\n        if (StringUtils.isEmpty(locationHash)) {\r\n            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n        }\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n\r\n        // Handle code response.\r\n        const requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY) as string;\r\n        const authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n\r\n        // Get cached items\r\n        const cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY) as string;\r\n        this.authCodeRequest = this.browserStorage.getCachedRequest(requestState, browserCrypto);\r\n        this.authCodeRequest.code = authCode;\r\n\r\n        // Hash was processed successfully - remove from cache\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState);\r\n        this.browserStorage.cleanRequest();\r\n        return tokenResponse;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { UrlString, StringUtils, Constants, AuthorizationCodeRequest, CacheSchemaType, AuthorizationCodeClient } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\n\r\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\r\nexport class PopupHandler extends InteractionHandler {\r\n\r\n    private currentWindow: Window;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserStorage) {\r\n        super(authCodeModule, storageImpl);\r\n\r\n        // Properly sets this reference for the unload event.\r\n        this.unloadWindow = this.unloadWindow.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    initiateAuthRequest(requestUrl: string, authCodeRequest: AuthorizationCodeRequest): Window {\r\n        // Check that request url is not empty.\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Save auth code request\r\n            this.authCodeRequest = authCodeRequest;\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, Constants.LIBRARY_NAME, BrowserConstants.POPUP_WIDTH, BrowserConstants.POPUP_HEIGHT);\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.error(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - milliseconds until timeout\r\n     * @param urlNavigate - url that was navigated to\r\n     */\r\n    monitorPopupForHash(popupWindow: Window, timeout: number): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const maxTicks = timeout / BrowserConstants.POLL_INTERVAL_MS;\r\n            let ticks = 0;\r\n\r\n            const intervalId = setInterval(() => {\r\n                if (popupWindow.closed) {\r\n                    // Window is closed\r\n                    this.cleanPopup();\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n\r\n                let href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                } catch (e) {}\r\n\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n\r\n                // Only run clock when we are on same domain\r\n                ticks++;\r\n\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    const contentHash = popupWindow.location.hash;\r\n                    this.cleanPopup(popupWindow);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                } else if (ticks > maxTicks) {\r\n                    // Timeout error\r\n                    this.cleanPopup(popupWindow);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError());\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    private openPopup(urlNavigate: string, title: string, popUpWidth: number, popUpHeight: number): Window {\r\n        try {\r\n            /**\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            const winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            const left = Math.max(0, ((width / 2) - (popUpWidth / 2)) + winLeft);\r\n            const top = Math.max(0, ((height / 2) - (popUpHeight / 2)) + winTop);\r\n\r\n            // open the window\r\n            const popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top + \", left=\" + left);\r\n            if (!popupWindow) {\r\n                throw BrowserAuthError.createEmptyWindowCreatedError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\r\n\r\n            return popupWindow;\r\n        } catch (e) {\r\n            this.authModule.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n            throw BrowserAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    unloadWindow(e: Event): void {\r\n        this.browserStorage.cleanRequest();\r\n        this.currentWindow.close();\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        delete e[\"returnValue\"];\r\n    }\r\n\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    private cleanPopup(popupWindow?: Window): void {\r\n        if (popupWindow) {\r\n            // Close window.\r\n            popupWindow.close();\r\n        }\r\n        // Remove window unload function\r\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { UrlString, StringUtils, AuthorizationCodeRequest, AuthorizationCodeClient } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\n\r\nexport class SilentHandler extends InteractionHandler {\r\n\r\n    private loadFrameTimeout: number;\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserStorage, configuredLoadFrameTimeout: number) {\r\n        super(authCodeModule, storageImpl);\r\n        this.loadFrameTimeout = configuredLoadFrameTimeout;\r\n    }\r\n\r\n    /**\r\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n     * @param urlNavigate \r\n     * @param userRequestScopes\r\n     */\r\n    async initiateAuthRequest(requestUrl: string, authCodeRequest: AuthorizationCodeRequest, userRequestScopes?: string): Promise<HTMLIFrameElement> {\r\n        if (StringUtils.isEmpty(requestUrl)) {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n        // Save auth code request\r\n        this.authCodeRequest = authCodeRequest;\r\n        const frameName = userRequestScopes ? `msalTokenFrame${userRequestScopes}` : \"msalTokenFrame\";\r\n        return this.loadFrameTimeout ? await this.loadFrame(requestUrl, frameName) : this.loadFrameSync(requestUrl, frameName);\r\n    }\r\n\r\n    /**\r\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param iframe \r\n     * @param timeout \r\n     */\r\n    monitorIframeForHash(iframe: HTMLIFrameElement, timeout: number): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            /*\r\n             * Polling for iframes can be purely timing based,\r\n             * since we don't need to account for interaction.\r\n             */\r\n            const nowMark = window.performance.now();\r\n            const timeoutMark = nowMark + timeout;\r\n\r\n            const intervalId = setInterval(() => {\r\n                if (window.performance.now() > timeoutMark) {\r\n                    this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError());\r\n                    return;\r\n                }\r\n\r\n                let href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = iframe.contentWindow.location.href;\r\n                } catch (e) {}\r\n\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    const contentHash = iframe.contentWindow.location.hash;\r\n                    this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    private loadFrame(urlNavigate: string, frameName: string): Promise<HTMLIFrameElement> {\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const frameHandle = this.loadFrameSync(urlNavigate, frameName);\r\n\r\n                if (!frameHandle) {\r\n                    reject(`Unable to load iframe with name: ${frameName}`);\r\n                    return;\r\n                }\r\n\r\n                resolve(frameHandle);\r\n            }, this.loadFrameTimeout);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    private loadFrameSync(urlNavigate: string, frameName: string): HTMLIFrameElement{\r\n        const frameHandle = this.getHiddenIframe(frameName);\r\n\r\n        // returning to handle null in loadFrame, also to avoid null object access errors\r\n        if (!frameHandle) {\r\n            return null;\r\n        }\r\n        else if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n            frameHandle.src = urlNavigate;\r\n        }\r\n\r\n        return frameHandle;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n     * @ignore\r\n     */\r\n    private getHiddenIframe(iframeId: string): HTMLIFrameElement {\r\n        if (typeof iframeId === \"undefined\") {\r\n            return null;\r\n        }\r\n\r\n        let authFrame = document.getElementById(iframeId) as HTMLIFrameElement;\r\n        if (!authFrame) {\r\n            if (document.createElement &&\r\n            document.documentElement &&\r\n            (window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1)) {\r\n                const ifr = document.createElement(\"iframe\");\r\n                ifr.setAttribute(\"id\", iframeId);\r\n                ifr.style.visibility = \"hidden\";\r\n                ifr.style.position = \"absolute\";\r\n                ifr.style.width = ifr.style.height = \"0\";\r\n                ifr.style.border = \"0\";\r\n                ifr.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n                authFrame = (document.getElementsByTagName(\"body\")[0].appendChild(ifr) as HTMLIFrameElement);\r\n            } else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML(\"beforeend\", \"<iframe name='\" + iframeId + \"' id='\" + iframeId + \"' style='display:none'></iframe>\");\r\n            }\r\n\r\n            if (window.frames && window.frames[iframeId]) {\r\n                authFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n\r\n        return authFrame;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    private removeHiddenIframe(iframe: HTMLIFrameElement): void {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport {\r\n    AuthorizationCodeClient,\r\n    INetworkModule,\r\n    UrlString,\r\n    StringUtils,\r\n    PromptValue,\r\n    ServerError,\r\n    Authority,\r\n    AuthorityFactory,\r\n    InteractionRequiredAuthError,\r\n    TrustedAuthority,\r\n    AuthorizationUrlRequest,\r\n    PersistentCacheKeys,\r\n    IdToken,\r\n    ProtocolUtils,\r\n    AuthorizationCodeRequest,\r\n    Constants,\r\n    CacheSchemaType,\r\n    AuthenticationResult,\r\n    SilentFlowRequest,\r\n    AccountInfo,\r\n    ResponseMode,\r\n    ClientConfiguration,\r\n    SilentFlowClient,\r\n    EndSessionRequest,\r\n    BaseAuthRequest,\r\n    Logger\r\n} from \"@azure/msal-common\";\r\nimport { buildConfiguration, Configuration } from \"../config/Configuration\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\nimport { CryptoOps } from \"../crypto/CryptoOps\";\r\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\r\nimport { PopupHandler } from \"../interaction_handler/PopupHandler\";\r\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConstants, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { version } from \"../../package.json\";\r\nimport { IPublicClientApplication } from \"./IPublicClientApplication\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { SilentRequest } from \"../request/SilentRequest\";\r\n\r\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nexport class PublicClientApplication implements IPublicClientApplication {\r\n\r\n    // Crypto interface implementation\r\n    private readonly browserCrypto: CryptoOps;\r\n\r\n    // Storage interface implementation\r\n    private readonly browserStorage: BrowserStorage;\r\n\r\n    // Network interface implementation\r\n    private readonly networkClient: INetworkModule;\r\n\r\n    // Response promise\r\n    private readonly tokenExchangePromise: Promise<AuthenticationResult>;\r\n\r\n    // Input configuration by developer/user\r\n    private config: Configuration;\r\n\r\n    // Default authority\r\n    private defaultAuthority: Authority;\r\n\r\n    // Logger\r\n    private logger: Logger;\r\n\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param {@link (Configuration:type)} configuration object for the MSAL PublicClientApplication instance\r\n     */\r\n    constructor(configuration: Configuration) {\r\n        // Set the configuration.\r\n        this.config = buildConfiguration(configuration);\r\n\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = new CryptoOps();\r\n\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = new BrowserStorage(this.config.auth.clientId, this.config.cache);\r\n\r\n        // Initialize logger\r\n        this.logger = new Logger(this.config.system.loggerOptions);\r\n\r\n        // Initialize default authority instance\r\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.auth.knownAuthorities, this.config.auth.cloudDiscoveryMetadata);\r\n\r\n        this.defaultAuthority = null;\r\n    }\r\n\r\n    // #region Redirect Flow\r\n    \r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @returns {Promise.<AuthenticationResult | null>} token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    async handleRedirectPromise(): Promise<AuthenticationResult | null> {\r\n        return this.handleRedirectResponse();\r\n    }\r\n\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     */\r\n    private async handleRedirectResponse(): Promise<AuthenticationResult> {\r\n        // Get current location hash from window or cache.\r\n        const { location: { hash } } = window;\r\n        const cachedHash = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH), CacheSchemaType.TEMPORARY) as string;\r\n        const isResponseHash = UrlString.hashContainsKnownProperties(hash);\r\n        const loginRequestUrl = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), CacheSchemaType.TEMPORARY) as string;\r\n\r\n        const currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\r\n        const loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl || \"\");\r\n        if (loginRequestUrlNormalized === currentUrlNormalized && this.config.auth.navigateToLoginRequestUrl) {\r\n            // We are on the page we need to navigate to - handle hash\r\n            // Replace current hash with non-msal hash, if present\r\n            BrowserUtils.replaceHash(loginRequestUrl);\r\n            return this.handleHash(isResponseHash ? hash : cachedHash);\r\n        }\r\n\r\n        if (!this.config.auth.navigateToLoginRequestUrl) {\r\n            // We don't need to navigate - handle hash\r\n            BrowserUtils.clearHash();\r\n            return this.handleHash(isResponseHash ? hash : cachedHash);\r\n        }\r\n\r\n        if (isResponseHash && !BrowserUtils.isInIframe()) {\r\n            // Returned from authority using redirect - need to perform navigation before processing response\r\n            const hashKey = this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH);\r\n            this.browserStorage.setItem(hashKey, hash, CacheSchemaType.TEMPORARY);\r\n            if (StringUtils.isEmpty(loginRequestUrl) || loginRequestUrl === \"null\") {\r\n                // Redirect to home page if login request url is null (real null or the string null)\r\n                this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                BrowserUtils.navigateWindow(\"/\", true);\r\n            } else {\r\n                // Navigate to target url\r\n                BrowserUtils.navigateWindow(loginRequestUrl, true);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n\t * Checks if hash exists and handles in window.\r\n\t * @param responseHash\r\n\t * @param interactionHandler\r\n\t */\r\n    private async handleHash(responseHash: string): Promise<AuthenticationResult> {\r\n        // There is no hash - clean cache and return null.\r\n        if (StringUtils.isEmpty(responseHash)) {\r\n            this.browserStorage.cleanRequest();\r\n            return null;\r\n        }\r\n\r\n        // Hash contains known properties - handle and return in callback\r\n        const currentAuthority = this.browserStorage.getCachedAuthority();\r\n        const authClient = await this.createAuthCodeClient(currentAuthority);\r\n        const interactionHandler = new RedirectHandler(authClient, this.browserStorage);\r\n        return interactionHandler.handleCodeResponse(responseHash, this.browserCrypto);\r\n    }\r\n\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n\t *\r\n\t * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n\t * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n\t *\r\n     * @param {@link (RedirectRequest:type)}\r\n     */\r\n    async loginRedirect(request: RedirectRequest): Promise<void> {\r\n        return this.acquireTokenRedirect(request);\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n\t *\r\n\t * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n\t * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param {@link (RedirectRequest:type)}\r\n     */\r\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\r\n        try {\r\n            // Preflight request\r\n            const validRequest: AuthorizationUrlRequest = this.preflightInteractiveRequest(request);\r\n\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest: AuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\r\n\r\n            // Initialize the client\r\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(validRequest.authority);\r\n\r\n            // Create redirect interaction handler.\r\n            const interactionHandler = new RedirectHandler(authClient, this.browserStorage);\r\n\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl(validRequest);\r\n\r\n            const redirectStartPage = (request && request.redirectStartPage) || window.location.href;\r\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n            interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest, redirectStartPage, this.browserCrypto);\r\n        } catch (e) {\r\n            this.browserStorage.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Popup Flow\r\n\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param {@link (PopupRequest:type)}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async loginPopup(request: PopupRequest): Promise<AuthenticationResult> {\r\n        return this.acquireTokenPopup(request);\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     * @param {@link (PopupRequest:type)}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\r\n        try {\r\n            // Preflight request\r\n            const validRequest: AuthorizationUrlRequest = this.preflightInteractiveRequest(request);\r\n\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest: AuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\r\n\r\n            // Initialize the client\r\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(validRequest.authority);\r\n\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl(validRequest);\r\n\r\n            // Acquire token with popup\r\n            return await this.popupTokenHelper(navigateUrl, authCodeRequest, authClient);\r\n        } catch (e) {\r\n            this.browserStorage.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper which acquires an authorization code with a popup from given url, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     */\r\n    private async popupTokenHelper(navigateUrl: string, authCodeRequest: AuthorizationCodeRequest, authClient: AuthorizationCodeClient): Promise<AuthenticationResult> {\r\n        // Create popup interaction handler.\r\n        const interactionHandler = new PopupHandler(authClient, this.browserStorage);\r\n        // Show the UI once the url has been created. Get the window handle for the popup.\r\n        const popupWindow: Window = interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest);\r\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n        const hash = await interactionHandler.monitorPopupForHash(popupWindow, this.config.system.windowHashTimeout);\r\n        // Handle response from hash string.\r\n        return await interactionHandler.handleCodeResponse(hash);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Silent Flow\r\n\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param {@link AuthorizationUrlRequest}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async ssoSilent(request: AuthorizationUrlRequest): Promise<AuthenticationResult> {\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n\r\n        // Check that we have some SSO data\r\n        if (StringUtils.isEmpty(request.loginHint)) {\r\n            throw BrowserAuthError.createSilentSSOInsufficientInfoError();\r\n        }\r\n\r\n        // Check that prompt is set to none, throw error if it is set to anything else.\r\n        if (request.prompt && request.prompt !== PromptValue.NONE) {\r\n            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\r\n        }\r\n\r\n        // Create silent request\r\n        const silentRequest: AuthorizationUrlRequest = this.initializeAuthorizationRequest({\r\n            ...request,\r\n            prompt: PromptValue.NONE\r\n        });\r\n\r\n        // Create auth code request and generate PKCE params\r\n        const authCodeRequest: AuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(silentRequest);\r\n\r\n        // Get scopeString for iframe ID\r\n        const scopeString = silentRequest.scopes ? silentRequest.scopes.join(\" \") : \"\";\r\n\r\n        // Initialize the client\r\n        const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(silentRequest.authority);\r\n\r\n        // Create authorize request url\r\n        const navigateUrl = await authClient.getAuthCodeUrl(silentRequest);\r\n\r\n        return this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString);\r\n    }\r\n\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     *\r\n     */\r\n    async acquireTokenSilent(request: SilentRequest): Promise<AuthenticationResult> {\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n        const silentRequest: SilentFlowRequest = {\r\n            ...request,\r\n            ...this.initializeBaseRequest(request)\r\n        };\r\n\r\n        try {\r\n            const silentAuthClient = await this.createSilentFlowClient(silentRequest.authority);\r\n            // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n            return await silentAuthClient.acquireToken(silentRequest);\r\n        } catch (e) {\r\n            const isServerError = e instanceof ServerError;\r\n            const isInteractionRequiredError = e instanceof InteractionRequiredAuthError;\r\n            const isInvalidGrantError = (e.errorCode === BrowserConstants.INVALID_GRANT_ERROR);\r\n            if (isServerError && isInvalidGrantError && !isInteractionRequiredError) {\r\n                const silentAuthUrlRequest: AuthorizationUrlRequest = this.initializeAuthorizationRequest({\r\n                    ...silentRequest,\r\n                    redirectUri: request.redirectUri,\r\n                    prompt: PromptValue.NONE\r\n                });\r\n\r\n                // Create auth code request and generate PKCE params\r\n                const authCodeRequest: AuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(silentAuthUrlRequest);\r\n\r\n                // Initialize the client\r\n                const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(silentAuthUrlRequest.authority);\r\n\r\n                // Create authorize request url\r\n                const navigateUrl = await authClient.getAuthCodeUrl(silentAuthUrlRequest);\r\n\r\n                // Get scopeString for iframe ID\r\n                const scopeString = silentAuthUrlRequest.scopes ? silentAuthUrlRequest.scopes.join(\" \") : \"\";\r\n\r\n                return this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString);\r\n            }\r\n\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    private async silentTokenHelper(navigateUrl: string, authCodeRequest: AuthorizationCodeRequest, authClient: AuthorizationCodeClient, userRequestScopes: string): Promise<AuthenticationResult> {\r\n        try {\r\n            // Create silent handler\r\n            const silentHandler = new SilentHandler(authClient, this.browserStorage, this.config.system.loadFrameTimeout);\r\n            // Get the frame handle for the silent request\r\n            const msalFrame = await silentHandler.initiateAuthRequest(navigateUrl, authCodeRequest, userRequestScopes);\r\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n            const hash = await silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout);\r\n            // Handle response from hash string.\r\n            return await silentHandler.handleCodeResponse(hash);\r\n        } catch (e) {\r\n            this.browserStorage.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Logout\r\n\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param {@link (EndSessionRequest:type)} \r\n     */\r\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        const authClient = await this.createAuthCodeClient(validLogoutRequest && validLogoutRequest.authority);\r\n        // create logout string and navigate user window to logout. Auth module will clear cache.\r\n        const logoutUri: string = authClient.getLogoutUri(validLogoutRequest);\r\n        BrowserUtils.navigateWindow(logoutUri);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Account APIs\r\n\r\n    /**\r\n     * Returns all accounts that MSAL currently has data for.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link AccountInfo[]} - Array of account objects in cache\r\n     */\r\n    getAllAccounts(): AccountInfo[] {\r\n        return this.browserStorage.getAllAccounts();\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link AccountInfo} - the account object stored in MSAL\r\n     */\r\n    getAccountByUsername(userName: string): AccountInfo {\r\n        const allAccounts = this.getAllAccounts();\r\n        return allAccounts ? allAccounts.filter(accountObj => accountObj.username.toLowerCase() === userName.toLowerCase())[0] : null;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Helpers\r\n\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @returns {string} redirect URL\r\n     *\r\n     */\r\n    private getRedirectUri(requestRedirectUri?: string): string {\r\n        return requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\r\n    }\r\n\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    private getPostLogoutRedirectUri(requestPostLogoutRedirectUri?: string): string {\r\n        return requestPostLogoutRedirectUri || this.config.auth.postLogoutRedirectUri || BrowserUtils.getCurrentUri();\r\n    }\r\n\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     */\r\n    private async getDiscoveredDefaultAuthority(): Promise<Authority> {\r\n        if (!this.defaultAuthority) {\r\n            this.defaultAuthority = await AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient);\r\n        }\r\n        return this.defaultAuthority;\r\n    }\r\n\r\n    /**\r\n     * Helper to check whether interaction is in progress.\r\n     */\r\n    private interactionInProgress(): boolean {\r\n        // Check whether value in cache is present and equal to expected value\r\n        return (this.browserStorage.getItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), CacheSchemaType.TEMPORARY) as string) === BrowserConstants.INTERACTION_IN_PROGRESS_VALUE;\r\n    }\r\n\r\n    /**\r\n     * Creates an Authorization Code Client with the given authority, or the default authority.\r\n     * @param authorityUrl \r\n     */\r\n    private async createAuthCodeClient(authorityUrl?: string): Promise<AuthorizationCodeClient> {\r\n        // Create auth module.\r\n        const clientConfig = await this.getClientConfiguration(authorityUrl);\r\n        return new AuthorizationCodeClient(clientConfig);\r\n    }\r\n\r\n    /**\r\n     * Creates an Silent Flow Client with the given authority, or the default authority.\r\n     * @param authorityUrl \r\n     */\r\n    private async createSilentFlowClient(authorityUrl?: string): Promise<SilentFlowClient> {\r\n        // Create auth module.\r\n        const clientConfig = await this.getClientConfiguration(authorityUrl);\r\n        return new SilentFlowClient(clientConfig);\r\n    }\r\n\r\n    /**\r\n     * Creates a Client Configuration object with the given request authority, or the default authority.\r\n     * @param requestAuthority \r\n     */\r\n    private async getClientConfiguration(requestAuthority?: string): Promise<ClientConfiguration> {\r\n        // If the requestAuthority is passed and is not equivalent to the default configured authority, create new authority and discover endpoints. Return default authority otherwise.\r\n        const discoveredAuthority = (!StringUtils.isEmpty(requestAuthority) && requestAuthority !== this.config.auth.authority) ? await AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient) \r\n            : await this.getDiscoveredDefaultAuthority();\r\n        return {\r\n            authOptions: {\r\n                clientId: this.config.auth.clientId,\r\n                authority: discoveredAuthority,\r\n                knownAuthorities: this.config.auth.knownAuthorities,\r\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata\r\n            },\r\n            systemOptions: {\r\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds\r\n            },\r\n            loggerOptions: {\r\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\r\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled\r\n            },\r\n            cryptoInterface: this.browserCrypto,\r\n            networkInterface: this.networkClient,\r\n            storageInterface: this.browserStorage,\r\n            libraryInfo: {\r\n                sku: BrowserConstants.MSAL_SKU,\r\n                version: version,\r\n                cpu: \"\",\r\n                os: \"\"\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Helper to validate app environment before making a request.\r\n     */\r\n    private preflightInteractiveRequest(request: RedirectRequest|PopupRequest): AuthorizationUrlRequest {\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n\r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.interactionInProgress()) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n        \r\n        return this.initializeAuthorizationRequest(request);\r\n    }\r\n\r\n    /**\r\n     * Initializer function for all request APIs\r\n     * @param request \r\n     */\r\n    private initializeBaseRequest(request: BaseAuthRequest): BaseAuthRequest {\r\n        const validatedRequest: BaseAuthRequest = {\r\n            ...request\r\n        };\r\n\r\n        if (StringUtils.isEmpty(validatedRequest.authority)) {\r\n            validatedRequest.authority = this.config.auth.authority;\r\n        }\r\n\r\n        validatedRequest.correlationId = (request && request.correlationId) || this.browserCrypto.createNewGuid();\r\n\r\n        return validatedRequest;\r\n    }\r\n\r\n    /**\r\n     * Generates a request that will contain the openid and profile scopes.\r\n     * @param request \r\n     */\r\n    private setDefaultScopes(request: BaseAuthRequest): BaseAuthRequest {\r\n        return {\r\n            ...request,\r\n            scopes: [...((request && request.scopes) || []), Constants.OPENID_SCOPE, Constants.PROFILE_SCOPE]\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n     * @param request\r\n     */\r\n    private initializeAuthorizationRequest(request: AuthorizationUrlRequest|RedirectRequest|PopupRequest): AuthorizationUrlRequest {\r\n        let validatedRequest: AuthorizationUrlRequest = {\r\n            ...request\r\n        };\r\n\r\n        validatedRequest.redirectUri = this.getRedirectUri(validatedRequest.redirectUri);\r\n\r\n        // Check for ADAL SSO\r\n        if (StringUtils.isEmpty(validatedRequest.loginHint)) {\r\n            // Only check for adal token if no SSO params are being used\r\n            const adalIdTokenString = this.browserStorage.getItem(PersistentCacheKeys.ADAL_ID_TOKEN, CacheSchemaType.TEMPORARY) as string;\r\n            if (!StringUtils.isEmpty(adalIdTokenString)) {\r\n                const adalIdToken = new IdToken(adalIdTokenString, this.browserCrypto);\r\n                this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                if (adalIdToken.claims && adalIdToken.claims.upn) {\r\n                    validatedRequest.loginHint = adalIdToken.claims.upn;\r\n                }\r\n            }\r\n        }\r\n\r\n        validatedRequest.state = ProtocolUtils.setRequestState(\r\n            (request && request.state) || \"\",\r\n            this.browserCrypto\r\n        );\r\n\r\n        if (StringUtils.isEmpty(validatedRequest.nonce)) {\r\n            validatedRequest.nonce = this.browserCrypto.createNewGuid();\r\n        }\r\n        \r\n        validatedRequest.responseMode = ResponseMode.FRAGMENT;\r\n\r\n        validatedRequest = {\r\n            ...validatedRequest,\r\n            ...this.initializeBaseRequest(validatedRequest)\r\n        };\r\n\r\n        this.browserStorage.updateCacheEntries(validatedRequest.state, validatedRequest.nonce, validatedRequest.authority);\r\n\r\n        return {\r\n            ...validatedRequest,\r\n            ...this.setDefaultScopes(validatedRequest)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generates an auth code request tied to the url request.\r\n     * @param request \r\n     */\r\n    private async initializeAuthorizationCodeRequest(request: AuthorizationUrlRequest): Promise<AuthorizationCodeRequest> {\r\n        const generatedPkceParams = await this.browserCrypto.generatePkceCodes();\r\n\r\n        const authCodeRequest: AuthorizationCodeRequest = {\r\n            ...request,\r\n            redirectUri: request.redirectUri,\r\n            code: \"\",\r\n            codeVerifier: generatedPkceParams.verifier\r\n        };\r\n\r\n        request.codeChallenge = generatedPkceParams.challenge;\r\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\r\n\r\n        return authCodeRequest;\r\n    }\r\n\r\n    /**\r\n     * Initializer for the logout request.\r\n     * @param logoutRequest \r\n     */\r\n    private initializeLogoutRequest(logoutRequest?: EndSessionRequest): EndSessionRequest {\r\n        const validLogoutRequest = {\r\n            ...logoutRequest\r\n        };\r\n        if (StringUtils.isEmpty(validLogoutRequest.authority)) {\r\n            validLogoutRequest.authority = this.config.auth.authority;\r\n        }\r\n\r\n        validLogoutRequest.correlationId = (validLogoutRequest && validLogoutRequest.correlationId) || this.browserCrypto.createNewGuid();\r\n\r\n        validLogoutRequest.postLogoutRedirectUri = this.getPostLogoutRedirectUri(logoutRequest ? logoutRequest.postLogoutRedirectUri : \"\");\r\n        \r\n        return validLogoutRequest;\r\n    }\r\n\r\n    // #endregion\r\n}\r\n"]},"metadata":{},"sourceType":"module"}