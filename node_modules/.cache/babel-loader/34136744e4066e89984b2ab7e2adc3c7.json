{"ast":null,"code":"const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport const validateEmail = emailString => {\n  if (emailString !== \"\" && emailString.match(emailRegex) === null) {\n    return false;\n  }\n\n  return true;\n};\nexport const validatePassword = passwordString => {\n  if (passwordString === \"\") {\n    return false;\n  }\n\n  return true;\n};\nexport const validateData = (source, data, setFn) => {\n  let dataOK = true;\n\n  switch (source) {\n    case \"email\":\n      dataOK = validateEmail(data);\n      return setFn({\n        error: dataOK ? false : true,\n        placeholder: dataOK ? null : \"Please enter a valid email\",\n        autoFocus: dataOK ? false : true\n      });\n\n    case \"password\":\n      dataOK = validatePassword(data);\n      return setFn({\n        error: dataOK ? false : true,\n        placeholder: dataOK ? null : \"Please enter a valid password\",\n        autoFocus: dataOK ? false : true\n      });\n  }\n};","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Login/loginHelpers.js"],"names":["emailRegex","validateEmail","emailString","match","validatePassword","passwordString","validateData","source","data","setFn","dataOK","error","placeholder","autoFocus"],"mappings":"AAAA,MAAMA,UAAU,GAAG,wJAAnB;AAEA,OAAO,MAAMC,aAAa,GAAGC,WAAW,IAAI;AAC1C,MAAIA,WAAW,KAAK,EAAhB,IAAsBA,WAAW,CAACC,KAAZ,CAAkBH,UAAlB,MAAkC,IAA5D,EAAkE;AAChE,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CALM;AAOP,OAAO,MAAMI,gBAAgB,GAAGC,cAAc,IAAI;AAChD,MAAIA,cAAc,KAAK,EAAvB,EAA2B;AACzB,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,KAAf,KAAyB;AACnD,MAAIC,MAAM,GAAG,IAAb;;AACA,UAAQH,MAAR;AACE,SAAK,OAAL;AACEG,MAAAA,MAAM,GAAGT,aAAa,CAACO,IAAD,CAAtB;AACA,aAAOC,KAAK,CAAC;AACXE,QAAAA,KAAK,EAAED,MAAM,GAAG,KAAH,GAAW,IADb;AAEXE,QAAAA,WAAW,EAAEF,MAAM,GAAG,IAAH,GAAU,4BAFlB;AAGXG,QAAAA,SAAS,EAAEH,MAAM,GAAG,KAAH,GAAW;AAHjB,OAAD,CAAZ;;AAKF,SAAK,UAAL;AACEA,MAAAA,MAAM,GAAGN,gBAAgB,CAACI,IAAD,CAAzB;AACA,aAAOC,KAAK,CAAC;AACXE,QAAAA,KAAK,EAAED,MAAM,GAAG,KAAH,GAAW,IADb;AAEXE,QAAAA,WAAW,EAAEF,MAAM,GAAG,IAAH,GAAU,+BAFlB;AAGXG,QAAAA,SAAS,EAAEH,MAAM,GAAG,KAAH,GAAW;AAHjB,OAAD,CAAZ;AAVJ;AAgBD,CAlBM","sourcesContent":["const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport const validateEmail = emailString => {\r\n  if (emailString !== \"\" && emailString.match(emailRegex) === null) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const validatePassword = passwordString => {\r\n  if (passwordString === \"\") {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const validateData = (source, data, setFn) => {\r\n  let dataOK = true;\r\n  switch (source) {\r\n    case \"email\":\r\n      dataOK = validateEmail(data);\r\n      return setFn({\r\n        error: dataOK ? false : true,\r\n        placeholder: dataOK ? null : \"Please enter a valid email\",\r\n        autoFocus: dataOK ? false : true\r\n      });\r\n    case \"password\":\r\n      dataOK = validatePassword(data);\r\n      return setFn({\r\n        error: dataOK ? false : true,\r\n        placeholder: dataOK ? null : \"Please enter a valid password\",\r\n        autoFocus: dataOK ? false : true\r\n      });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}