{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\TitleOpinion\\\\components\\\\AddPopover.js\";\nimport React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Button from \"@material-ui/core/Button\";\nimport { TitleOpinionContext } from \"../TitleOpinionContext\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\nimport Modal from \"./Modal\";\nconst useStyles = makeStyles(theme => ({\n  iconAdd: {\n    top: \"5px\"\n  },\n  btn: {\n    paddingBottom: \"10px !important\",\n    width: \"125px\"\n  }\n}));\nexport default function SimplePopover(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [, setStateTitleOpinion] = useContext(TitleOpinionContext);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const addRow = event => {\n    event.preventDefault();\n    setStateTitleOpinion(stateTitleOpinion => {\n      const sections = props.MORSections ? stateTitleOpinion.TOData.MORSections : stateTitleOpinion.TOData.runsheetSections;\n      let row = {};\n      sections[props.SectionIndex].columns.map(column => {\n        row = { ...row,\n          [column.key]: \"\"\n        };\n      });\n      sections[props.SectionIndex].rows.push(row);\n      return { ...stateTitleOpinion,\n        edited: true,\n        TOData: { ...stateTitleOpinion.TOData,\n          [props.MORSections ? \"MORSections\" : \"runsheetSections\"]: [...sections]\n        }\n      };\n    });\n    setAnchorEl(null);\n  };\n\n  const addColumn = name => {\n    setStateTitleOpinion(stateTitleOpinion => {\n      const sections = props.MORSections ? stateTitleOpinion.TOData.MORSections : stateTitleOpinion.TOData.runsheetSections;\n      let id = sections[props.SectionIndex].columns.length;\n      sections[props.SectionIndex].columns.push({\n        key: `id${id}`,\n        name,\n        editable: true,\n        resizable: true\n      });\n      sections[props.SectionIndex].rows = sections[props.SectionIndex].rows.map(row => {\n        return { ...row,\n          [`id${id}`]: \"\"\n        };\n      });\n      return { ...stateTitleOpinion,\n        edited: true,\n        TOData: { ...stateTitleOpinion.TOData,\n          [props.MORSections ? \"MORSections\" : \"runsheetSections\"]: [...sections]\n        }\n      };\n    });\n    setAnchorEl(null);\n  };\n\n  const addSection = name => {\n    setStateTitleOpinion(stateTitleOpinion => {\n      const sections = props.MORSections ? stateTitleOpinion.TOData.MORSections : stateTitleOpinion.TOData.runsheetSections;\n      let row = {};\n      sections[props.SectionIndex].columns.map(column => {\n        row = { ...row,\n          [column.key]: \"\"\n        };\n      });\n      sections.splice(props.SectionIndex + 1, 0, {\n        name,\n        columns: sections[props.SectionIndex].columns,\n        rows: [row, row, row, row, row]\n      });\n      return { ...stateTitleOpinion,\n        edited: true,\n        TOData: { ...stateTitleOpinion.TOData,\n          [props.MORSections ? \"MORSections\" : \"runsheetSections\"]: [...sections]\n        }\n      };\n    });\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"settings\",\n    onClick: handleClick,\n    className: classes.iconAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.btn,\n    \"aria-describedby\": id,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: addRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"New Row\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    Section: addSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/TitleOpinion/components/AddPopover.js"],"names":["React","useContext","makeStyles","Popover","Button","TitleOpinionContext","IconButton","AddCircleRoundedIcon","Modal","useStyles","theme","iconAdd","top","btn","paddingBottom","width","SimplePopover","props","classes","anchorEl","setAnchorEl","useState","setStateTitleOpinion","handleClick","event","currentTarget","handleClose","addRow","preventDefault","stateTitleOpinion","sections","MORSections","TOData","runsheetSections","row","SectionIndex","columns","map","column","key","rows","push","edited","addColumn","name","id","length","editable","resizable","addSection","splice","open","Boolean","undefined","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TitleOpinionContext } from \"../TitleOpinionContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  iconAdd: {\r\n    top: \"5px\"\r\n  },\r\n  btn: {\r\n    paddingBottom: \"10px !important\",\r\n    width: \"125px\"\r\n  }\r\n}));\r\n\r\nexport default function SimplePopover(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [, setStateTitleOpinion] = useContext(TitleOpinionContext);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const addRow = event => {\r\n    event.preventDefault();\r\n\r\n    setStateTitleOpinion(stateTitleOpinion => {\r\n      const sections = props.MORSections\r\n        ? stateTitleOpinion.TOData.MORSections\r\n        : stateTitleOpinion.TOData.runsheetSections;\r\n      let row = {};\r\n      sections[props.SectionIndex].columns.map(column => {\r\n        row = { ...row, [column.key]: \"\" };\r\n      });\r\n      sections[props.SectionIndex].rows.push(row);\r\n\r\n      return {\r\n        ...stateTitleOpinion,\r\n        edited: true,\r\n        TOData: {\r\n          ...stateTitleOpinion.TOData,\r\n          [props.MORSections ? \"MORSections\" : \"runsheetSections\"]: [\r\n            ...sections\r\n          ]\r\n        }\r\n      };\r\n    });\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const addColumn = name => {\r\n    setStateTitleOpinion(stateTitleOpinion => {\r\n      const sections = props.MORSections\r\n        ? stateTitleOpinion.TOData.MORSections\r\n        : stateTitleOpinion.TOData.runsheetSections;\r\n\r\n      let id = sections[props.SectionIndex].columns.length;\r\n      sections[props.SectionIndex].columns.push({\r\n        key: `id${id}`,\r\n        name,\r\n        editable: true,\r\n        resizable: true\r\n      });\r\n      sections[props.SectionIndex].rows = sections[props.SectionIndex].rows.map(\r\n        row => {\r\n          return { ...row, [`id${id}`]: \"\" };\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...stateTitleOpinion,\r\n        edited: true,\r\n        TOData: {\r\n          ...stateTitleOpinion.TOData,\r\n          [props.MORSections ? \"MORSections\" : \"runsheetSections\"]: [\r\n            ...sections\r\n          ]\r\n        }\r\n      };\r\n    });\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const addSection = name => {\r\n    setStateTitleOpinion(stateTitleOpinion => {\r\n      const sections = props.MORSections\r\n        ? stateTitleOpinion.TOData.MORSections\r\n        : stateTitleOpinion.TOData.runsheetSections;\r\n      let row = {};\r\n      sections[props.SectionIndex].columns.map(column => {\r\n        row = { ...row, [column.key]: \"\" };\r\n      });\r\n\r\n      sections.splice(props.SectionIndex + 1, 0, {\r\n        name,\r\n        columns: sections[props.SectionIndex].columns,\r\n        rows: [row, row, row, row, row]\r\n      });\r\n\r\n      return {\r\n        ...stateTitleOpinion,\r\n        edited: true,\r\n        TOData: {\r\n          ...stateTitleOpinion.TOData,\r\n          [props.MORSections ? \"MORSections\" : \"runsheetSections\"]: [\r\n            ...sections\r\n          ]\r\n        }\r\n      };\r\n    });\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"settings\"\r\n        onClick={handleClick}\r\n        className={classes.iconAdd}\r\n      >\r\n        <AddCircleRoundedIcon />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\"\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\"\r\n        }}\r\n      >\r\n        <Button\r\n          className={classes.btn}\r\n          aria-describedby={id}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={addRow}\r\n        >\r\n          New Row\r\n        </Button>\r\n        <br />\r\n\r\n        {/* //////removed untill the use case is redefined/////// */}\r\n        {/* <Modal Column={addColumn} /> */}\r\n\r\n        <Modal Section={addSection} />\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}