{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Title\\\\components\\\\titleOpinionList.js\";\nimport React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { AppContext } from \"../../../AppContext\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  folderIcon: {\n    color: \"#17AADD\"\n  },\n  TO: {\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n}));\nexport default function InteractiveList(props) {\n  const classes = useStyles();\n  let history = useHistory();\n  const [, setStateApp] = useContext(AppContext);\n  const [dense] = React.useState(false);\n\n  const handleTOClick = (e, id) => {\n    e.preventDefault();\n    setStateApp(stateApp => {\n      return { ...stateApp,\n        selectedTitleOpinionId: id\n      };\n    });\n    history.push(\"/titleopinion\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.demo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: dense,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, props.titleOpinions.map((titleOpinion, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: titleOpinion.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      className: classes.TO,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FolderIcon, {\n      className: classes.folderIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: titleOpinion.name,\n      onClick: e => {\n        handleTOClick(e, titleOpinion.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    })));\n  })))));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Title/components/titleOpinionList.js"],"names":["React","useContext","makeStyles","List","ListItem","ListItemIcon","ListItemText","Grid","FolderIcon","AppContext","useHistory","useStyles","theme","root","maxWidth","demo","backgroundColor","palette","background","paper","folderIcon","color","TO","cursor","InteractiveList","props","classes","history","setStateApp","dense","useState","handleTOClick","e","id","preventDefault","stateApp","selectedTitleOpinionId","push","titleOpinions","map","titleOpinion","i","name"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 752\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  folderIcon: {\r\n    color: \"#17AADD\"\r\n  },\r\n  TO: {\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function InteractiveList(props) {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [, setStateApp] = useContext(AppContext);\r\n  const [dense] = React.useState(false);\r\n\r\n  const handleTOClick = (e, id) => {\r\n    e.preventDefault();\r\n    setStateApp(stateApp => {\r\n      return {\r\n        ...stateApp,\r\n        selectedTitleOpinionId: id\r\n      };\r\n    });\r\n    history.push(\"/titleopinion\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid>\r\n        <div className={classes.demo}>\r\n          <List dense={dense}>\r\n            {props.titleOpinions.map((titleOpinion, i) => {\r\n              return (\r\n                <div key={titleOpinion.id}>\r\n                  {/* <NavLink to=\"/titleOpinion\"> */}\r\n                  <ListItem className={classes.TO}>\r\n                    <ListItemIcon>\r\n                      <FolderIcon className={classes.folderIcon} />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={titleOpinion.name}\r\n                      onClick={e => {\r\n                        handleTOClick(e, titleOpinion.id);\r\n                      }}\r\n                    />\r\n                  </ListItem>\r\n                  {/* </NavLink> */}\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}