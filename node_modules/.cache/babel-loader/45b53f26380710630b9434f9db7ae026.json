{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Transact\\\\components\\\\dialog.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport uuid from \"uuid\";\nimport NumberFormat from \"react-number-format\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { TransactContext } from \"../TransactContext\";\nimport { AppContext } from \"../../../AppContext\";\nimport AddContactDialogContent from \"../../Shared/M1nTable/components/SubComponents/AddContactDialogContent\";\nconst useStyles = makeStyles(theme => ({\n  label: {\n    backgroundColor: \"white\"\n  }\n}));\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    isNumericString: true,\n    prefix: \"$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default function TransactDialog(props) {\n  const classes = useStyles();\n  const {\n    transactData,\n    handleDataChange\n  } = props;\n  const [stateApp, setStateApp] = useContext(AppContext); // const [title, setTitle] = useState(props.contact ? props.contact.name : \"\"); // title change from contact.name to dealName\n\n  const [title, setTitle] = useState(\"\"); // title change from contact.name to dealName\n\n  const [label, setLabel] = useState(\"\");\n  const [stage, setStage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [contact, setContact] = useState(props.contact ? {\n    name: props.contact.name,\n    _id: props.contact._id\n  } : {});\n  const [openContactDialog, setOpenContactDialog] = useState(false);\n  useEffect(() => {\n    var _stateApp$activeDeal, _stateApp$activeDeal2;\n\n    const cardId = (_stateApp$activeDeal = stateApp.activeDeal) === null || _stateApp$activeDeal === void 0 ? void 0 : _stateApp$activeDeal.cardId;\n    const laneId = (_stateApp$activeDeal2 = stateApp.activeDeal) === null || _stateApp$activeDeal2 === void 0 ? void 0 : _stateApp$activeDeal2.laneId;\n\n    if (transactData && cardId && laneId && stateApp.dealDialog) {\n      const lane = transactData.lanes.find(lane => lane.id === laneId);\n      console.log(\"LANE SETTING: \", lane);\n      if (!lane || !lane.cards) return;\n      const card = lane.cards.find(card => card.id === cardId);\n      console.log(\"CARD SETTING: \", card);\n      if (!card) return;\n      setTitle(card.title ? card.title : \"\");\n      setLabel(card.label ? card.label : \"\");\n      setDescription(card.description ? card.description : \"\");\n      setStage(card.laneId ? card.laneId : \"lane1\");\n\n      if (card.contactId) {\n        console.log(\"SETTING CONTACT: \", card.title);\n        setContact({\n          name: card.contactName,\n          _id: card.contactId\n        });\n      }\n    } else if (props.contact) {\n      setContact({\n        name: props.contact.name,\n        _id: props.contact._id\n      });\n    }\n  }, [transactData, stateApp.activeDeal, props.contact, stateApp.dealDialog]); // old\n  // useEffect(() => {\n  //   if (contact?._id) {\n  //     setTitle(contact.name);\n  //   }\n  // }, [contact]);\n\n  const handleClose = () => {\n    setTitle(\"\");\n    setLabel(\"\");\n    setDescription(\"\");\n    setStage(\"\");\n    setContact({});\n    setStateApp(stateApp => ({ ...stateApp,\n      dealDialog: false\n    }));\n  };\n\n  const handleCloseContactDialog = () => {\n    console.log(\"Handle close dialog\");\n    setOpenContactDialog(false);\n  };\n\n  const handleUpdate = () => {\n    // if (title.trim() !== \"\" && description.trim() !== \"\") {\n    let newStage = stage ? stage : \"lane1\";\n\n    if (transactData) {\n      var _stateApp$activeDeal3, _stateApp$activeDeal4;\n\n      const cardId = (_stateApp$activeDeal3 = stateApp.activeDeal) === null || _stateApp$activeDeal3 === void 0 ? void 0 : _stateApp$activeDeal3.cardId;\n      const laneId = (_stateApp$activeDeal4 = stateApp.activeDeal) === null || _stateApp$activeDeal4 === void 0 ? void 0 : _stateApp$activeDeal4.laneId;\n\n      if (cardId && laneId) {\n        // update existing\n        const laneIndex = transactData.lanes.findIndex(lane => lane.id === laneId);\n        const lane = transactData.lanes[laneIndex];\n        const cardIndex = lane.cards.findIndex(card => card.id === cardId);\n        const card = lane.cards[cardIndex];\n        const updatedCard = {\n          // dealName: dealName.trim(),\n          // title: contact?.name.trim(),\n          contactName: (contact === null || contact === void 0 ? void 0 : contact.name) ? contact.name.trim() : \"\",\n          title: title ? title.trim() : \"\",\n          label: label ? label.trim() : \"\",\n          description: description ? description.trim() : \"\",\n          laneId: newStage,\n          contactId: contact === null || contact === void 0 ? void 0 : contact._id,\n          id: card.id\n        };\n\n        if (card.laneId !== newStage) {\n          if (cardIndex > -1) {\n            // remove card from current lane\n            transactData.lanes[laneIndex].cards.splice(cardIndex, 1); // add card to updated lane\n\n            const stageIndex = transactData.lanes.findIndex(lane => lane.id === newStage);\n            transactData.lanes[stageIndex].cards.push(updatedCard);\n          }\n        } else {\n          transactData.lanes[laneIndex].cards[cardIndex] = updatedCard;\n        }\n      } else if (cardId === null && laneId === null) {\n        // add new\n        transactData.lanes.forEach(lane => {\n          if (lane.id === newStage) {\n            let cards = [...lane.cards];\n            const newCard = {\n              // dealName: dealName.trim(),\n              // title: contact?.name,\n              contactName: (contact === null || contact === void 0 ? void 0 : contact.name) ? contact.name.trim() : \"\",\n              title: title ? title.trim() : \"\",\n              label: label ? label.trim() : \"\",\n              description: description ? description.trim() : \"\",\n              id: uuid(),\n              contactId: contact === null || contact === void 0 ? void 0 : contact._id,\n              laneId: newStage\n            };\n            cards.push(newCard);\n            lane.cards = cards;\n          }\n        });\n      }\n\n      handleDataChange(transactData);\n      handleClose();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: stateApp.dealDialog ? stateApp.dealDialog : false,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    fullWidth: true,\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, \"Deal Information\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    value: title,\n    label: \"Deal Name\",\n    fullWidth: true //   required\n    ,\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    className: classes.dialog,\n    open: openContactDialog ? true : false,\n    onClose: handleCloseContactDialog,\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddContactDialogContent, {\n    onClose: handleCloseContactDialog,\n    dealsPage: true,\n    setDealsContact: setContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    margin: \"dense\",\n    fullWidth: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, !(Object.keys(contact).length === 0 && contact.constructor === Object || contact === null) && /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    value: contact === null || contact === void 0 ? void 0 : contact.name,\n    label: \"\",\n    fullWidth: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }), !props.contact && /*#__PURE__*/React.createElement(ButtonGroup, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    \"aria-label\": \"contained primary button group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setOpenContactDialog(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, \"Add / Select Contact\"), /*#__PURE__*/React.createElement(Button, {\n    component: \"a\",\n    href: \"http://www.google.com\",\n    target: \"_blank\",\n    disabled: Object.keys(contact).length === 0 && contact.constructor === Object || contact === null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, \"View Contact\"))), /*#__PURE__*/React.createElement(FormControl, {\n    margin: \"dense\",\n    fullWidth: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, \"Deal Stage\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    value: stage,\n    onChange: e => {\n      console.log(\"Stage: \", e.target.value);\n      setStage(e.target.value);\n    },\n    fullWidth: true,\n    label: \"Deal Stage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"lane1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, \"Offer Preparation\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"lane2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Offer Extended\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"lane3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, \"Accepted - Due Diligence\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"lane4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, \"Deal Closed\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"lane5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Offer Rejected\"))), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    value: label,\n    label: \"Offer Price\",\n    fullWidth: true,\n    onChange: e => {\n      setLabel(e.target.value);\n    } // InputProps={{\n    //   inputComponent: NumberFormatCustom,\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField //   autoFocus\n  , {\n    margin: \"dense\",\n    value: description,\n    label: \"Offer Details\",\n    fullWidth: true,\n    multiline: true //   required\n    ,\n    onChange: e => {\n      setDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpdate,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Transact/components/dialog.js"],"names":["React","useState","useContext","useEffect","uuid","NumberFormat","Button","ButtonGroup","TextField","Dialog","DialogActions","FormControl","InputLabel","MenuItem","DialogContent","Select","makeStyles","DialogContentText","DialogTitle","TransactContext","AppContext","AddContactDialogContent","useStyles","theme","label","backgroundColor","NumberFormatCustom","props","inputRef","onChange","other","values","target","name","value","TransactDialog","classes","transactData","handleDataChange","stateApp","setStateApp","title","setTitle","setLabel","stage","setStage","description","setDescription","contact","setContact","_id","openContactDialog","setOpenContactDialog","cardId","activeDeal","laneId","dealDialog","lane","lanes","find","id","console","log","cards","card","contactId","contactName","handleClose","handleCloseContactDialog","handleUpdate","newStage","laneIndex","findIndex","cardIndex","updatedCard","trim","splice","stageIndex","push","forEach","newCard","e","dialog","Object","keys","length","constructor"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { TransactContext } from \"../TransactContext\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport AddContactDialogContent from \"../../Shared/M1nTable/components/SubComponents/AddContactDialogContent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  label: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default function TransactDialog(props) {\r\n  const classes = useStyles();\r\n  const { transactData, handleDataChange } = props;\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n  // const [title, setTitle] = useState(props.contact ? props.contact.name : \"\"); // title change from contact.name to dealName\r\n  const [title, setTitle] = useState(\"\"); // title change from contact.name to dealName\r\n  const [label, setLabel] = useState(\"\");\r\n  const [stage, setStage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [contact, setContact] = useState(\r\n    props.contact ? { name: props.contact.name, _id: props.contact._id } : {}\r\n  );\r\n  const [openContactDialog, setOpenContactDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const cardId = stateApp.activeDeal?.cardId;\r\n    const laneId = stateApp.activeDeal?.laneId;\r\n\r\n    if (transactData && cardId && laneId && stateApp.dealDialog) {\r\n      const lane = transactData.lanes.find((lane) => lane.id === laneId);\r\n      console.log(\"LANE SETTING: \", lane);\r\n      if (!lane || !lane.cards) return;\r\n      const card = lane.cards.find((card) => card.id === cardId);\r\n      console.log(\"CARD SETTING: \", card);\r\n      if (!card) return;\r\n\r\n      setTitle(card.title ? card.title : \"\");\r\n      setLabel(card.label ? card.label : \"\");\r\n      setDescription(card.description ? card.description : \"\");\r\n      setStage(card.laneId ? card.laneId : \"lane1\");\r\n      if (card.contactId) {\r\n        console.log(\"SETTING CONTACT: \", card.title);\r\n        setContact({ name: card.contactName, _id: card.contactId });\r\n      }\r\n    } else if (props.contact) {\r\n      setContact({ name: props.contact.name, _id: props.contact._id });\r\n    }\r\n  }, [transactData, stateApp.activeDeal, props.contact, stateApp.dealDialog]);\r\n\r\n  // old\r\n  // useEffect(() => {\r\n  //   if (contact?._id) {\r\n  //     setTitle(contact.name);\r\n  //   }\r\n  // }, [contact]);\r\n\r\n  const handleClose = () => {\r\n    setTitle(\"\");\r\n    setLabel(\"\");\r\n    setDescription(\"\");\r\n    setStage(\"\");\r\n    setContact({});\r\n    setStateApp((stateApp) => ({\r\n      ...stateApp,\r\n      dealDialog: false,\r\n    }));\r\n  };\r\n\r\n  const handleCloseContactDialog = () => {\r\n    console.log(\"Handle close dialog\");\r\n    setOpenContactDialog(false);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    // if (title.trim() !== \"\" && description.trim() !== \"\") {\r\n\r\n    let newStage = stage ? stage : \"lane1\";\r\n    if (transactData) {\r\n      const cardId = stateApp.activeDeal?.cardId;\r\n      const laneId = stateApp.activeDeal?.laneId;\r\n      if (cardId && laneId) {\r\n        // update existing\r\n        const laneIndex = transactData.lanes.findIndex(\r\n          (lane) => lane.id === laneId\r\n        );\r\n        const lane = transactData.lanes[laneIndex];\r\n        const cardIndex = lane.cards.findIndex((card) => card.id === cardId);\r\n        const card = lane.cards[cardIndex];\r\n\r\n        const updatedCard = {\r\n          // dealName: dealName.trim(),\r\n          // title: contact?.name.trim(),\r\n          contactName: contact?.name ? contact.name.trim() : \"\",\r\n          title: title ? title.trim() : \"\",\r\n          label: label ? label.trim() : \"\",\r\n          description: description ? description.trim() : \"\",\r\n          laneId: newStage,\r\n          contactId: contact?._id,\r\n          id: card.id,\r\n        };\r\n\r\n        if (card.laneId !== newStage) {\r\n          if (cardIndex > -1) {\r\n            // remove card from current lane\r\n            transactData.lanes[laneIndex].cards.splice(cardIndex, 1);\r\n            // add card to updated lane\r\n            const stageIndex = transactData.lanes.findIndex(\r\n              (lane) => lane.id === newStage\r\n            );\r\n            transactData.lanes[stageIndex].cards.push(updatedCard);\r\n          }\r\n        } else {\r\n          transactData.lanes[laneIndex].cards[cardIndex] = updatedCard;\r\n        }\r\n      } else if (cardId === null && laneId === null) {\r\n        // add new\r\n\r\n        transactData.lanes.forEach((lane) => {\r\n          if (lane.id === newStage) {\r\n            let cards = [...lane.cards];\r\n            const newCard = {\r\n              // dealName: dealName.trim(),\r\n              // title: contact?.name,\r\n              contactName: contact?.name ? contact.name.trim() : \"\",\r\n              title: title ? title.trim() : \"\",\r\n              label: label ? label.trim() : \"\",\r\n              description: description ? description.trim() : \"\",\r\n              id: uuid(),\r\n              contactId: contact?._id,\r\n              laneId: newStage,\r\n            };\r\n            cards.push(newCard);\r\n            lane.cards = cards;\r\n          }\r\n        });\r\n      }\r\n      handleDataChange(transactData);\r\n\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={stateApp.dealDialog ? stateApp.dealDialog : false}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Deal Information</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          margin=\"dense\"\r\n          value={title}\r\n          label=\"Deal Name\"\r\n          fullWidth\r\n          //   required\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n          }}\r\n        />\r\n        <Dialog\r\n          className={classes.dialog}\r\n          open={openContactDialog ? true : false}\r\n          onClose={handleCloseContactDialog}\r\n          maxWidth={\"xs\"}\r\n        >\r\n          <AddContactDialogContent\r\n            onClose={handleCloseContactDialog}\r\n            dealsPage={true}\r\n            setDealsContact={setContact}\r\n          />\r\n        </Dialog>\r\n\r\n        <FormControl margin=\"dense\" fullWidth size=\"small\">\r\n          {/* <InputLabel\r\n            id=\"demo-simple-select-outlined-label\"\r\n            className={classes.label}\r\n          >\r\n            Contact Name\r\n          </InputLabel> */}\r\n\r\n          {!(\r\n            (Object.keys(contact).length === 0 &&\r\n              contact.constructor === Object) ||\r\n            contact === null\r\n          ) && (\r\n            <TextField\r\n              margin=\"dense\"\r\n              value={contact?.name}\r\n              label=\"\"\r\n              fullWidth\r\n              disabled\r\n            />\r\n          )}\r\n\r\n          {!props.contact && (\r\n            <ButtonGroup\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              aria-label=\"contained primary button group\"\r\n            >\r\n              <Button onClick={() => setOpenContactDialog(true)}>\r\n                Add / Select Contact\r\n              </Button>\r\n\r\n              <Button\r\n                component=\"a\"\r\n                href=\"http://www.google.com\"\r\n                target=\"_blank\"\r\n                disabled={\r\n                  (Object.keys(contact).length === 0 &&\r\n                    contact.constructor === Object) ||\r\n                  contact === null\r\n                }\r\n              >\r\n                View Contact\r\n              </Button>\r\n            </ButtonGroup>\r\n          )}\r\n        </FormControl>\r\n\r\n        <FormControl margin=\"dense\" fullWidth size=\"small\">\r\n          <InputLabel\r\n            id=\"demo-simple-select-outlined-label\"\r\n            className={classes.label}\r\n          >\r\n            Deal Stage\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={stage}\r\n            onChange={(e) => {\r\n              console.log(\"Stage: \", e.target.value);\r\n              setStage(e.target.value);\r\n            }}\r\n            fullWidth\r\n            label=\"Deal Stage\"\r\n          >\r\n            <MenuItem value={\"lane1\"}>Offer Preparation</MenuItem>\r\n            <MenuItem value={\"lane2\"}>Offer Extended</MenuItem>\r\n            <MenuItem value={\"lane3\"}>Accepted - Due Diligence</MenuItem>\r\n            <MenuItem value={\"lane4\"}>Deal Closed</MenuItem>\r\n            <MenuItem value={\"lane5\"}>Offer Rejected</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          margin=\"dense\"\r\n          value={label}\r\n          label=\"Offer Price\"\r\n          fullWidth\r\n          onChange={(e) => {\r\n            setLabel(e.target.value);\r\n          }}\r\n          // InputProps={{\r\n          //   inputComponent: NumberFormatCustom,\r\n          // }}\r\n        />\r\n        <TextField\r\n          //   autoFocus\r\n          margin=\"dense\"\r\n          value={description}\r\n          label=\"Offer Details\"\r\n          fullWidth\r\n          multiline\r\n          //   required\r\n          onChange={(e) => {\r\n            setDescription(e.target.value);\r\n          }}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleUpdate} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}