{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\WellProdChart\\\\WellProdChart.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport { WellProdChartContext } from './WellProdChartContext';\nimport { WellCardContext } from '../WellCard/WellCardContext';\nimport { AppContext } from '../../AppContext';\nimport useQueryWellProdHistory from '../../graphQL/useQueryProdHistory'; //material-ui components\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_dark from \"@amcharts/amcharts4/themes/dark\";\nimport * as am4plugins_annotation from \"@amcharts/amcharts4/plugins/annotation\";\nimport { Typography } from '@material-ui/core';\nam4core.useTheme(am4themes_animated); //am4core.useTheme(am4themes_dark);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //width:'800px',\n    // height:'400px',\n    width: 'auto',\n    height: '600px',\n    paddingTop: '2%',\n    //  paddingRight: '8%',\n    position: 'relative'\n    /* display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection:'column', \r\n    backgroundColor: '#30303d',\r\n    color: '#fff'*/\n\n  },\n  paper: {\n    background: 'lightGrey',\n    width: '100%',\n    height: '100%'\n  }\n}));\nexport default function WellProdChart(props) {\n  const [stateApp, setStateApp] = useContext(AppContext);\n  const [stateWellProdChart, setStateWellProdChart] = useContext(WellProdChartContext);\n  const [chart, setChart] = useState(null);\n  const [chartData, setChartData] = useState(null);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [dataError, setDataError] = useState(false);\n  const classes = useStyles();\n  const [stateWellCard, setStateWellCard] = useContext(WellCardContext); //graphQL\n\n  const {\n    data,\n    loading,\n    error\n  } = useQueryWellProdHistory(stateApp.selectedWell.id); //const {data,loading,error} = useQueryWellProdHistory(stateApp.selectedWellApi)\n\n  useEffect(() => {\n    if (stateWellProdChart.wellProdHistory) {\n      //console.log('wellprodhistory',stateWellProdChart.wellProdHistory)\n      let chart = am4core.create(\"chartDiv\", am4charts.XYChart);\n      chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\n      chart.data = stateWellProdChart.wellProdHistory; // Create common x-asix\n\n      var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis.renderer.minGridDistance = 50; // if(!stateWellCard.chartToggleMultiAxis){\n      //   var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      //   //valueAxis.logarithmic = true;\n      // }\n\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis()); // Add legend\n\n      chart.legend = new am4charts.Legend(); // Add cursor\n\n      chart.cursor = new am4charts.XYCursor(); // Create gas series \n\n      if (stateWellCard.chartToggleGas) {\n        if (stateWellCard.chartToggleMultiAxis) {\n          var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n\n          if (chart.yAxes.indexOf(valueAxis) != 0) {\n            valueAxis.syncWithAxis = chart.yAxes.getIndex(0);\n          }\n        }\n\n        var series = chart.series.push(new am4charts.LineSeries());\n        series.dataFields.valueY = \"gas\";\n        series.dataFields.dateX = \"reportDate\";\n        series.strokeWidth = 2;\n        series.connect = true;\n        series.tensionX = 0.8;\n        series.fillOpacity = 0;\n        series.stroke = am4core.color(\"#e57373\");\n        series.minBulletDistance = 15;\n        series.showOnInit = true;\n        series.name = 'Gas';\n        series.tooltipText = \"Gas: [bold]{valueY}[/]\";\n\n        if (stateWellCard.chartToggleMultiAxis) {\n          series.yAxis = valueAxis;\n          valueAxis.renderer.line.strokeOpacity = 1;\n          valueAxis.renderer.line.strokeWidth = 1;\n          valueAxis.renderer.line.stroke = series.stroke;\n          valueAxis.renderer.labels.template.fill = series.stroke;\n          valueAxis.renderer.opposite = true;\n        }\n\n        var bullet = series.bullets.push(new am4charts.CircleBullet());\n        bullet.stroke = new am4core.InterfaceColorSet().getFor(\"background\");\n        bullet.circle.strokeWidth = 2;\n        bullet.circle.radius = 4;\n        bullet.circle.fill = am4core.color(\"#e57373\");\n        var bullethover = bullet.states.create(\"hover\");\n        bullethover.properties.scale = 1.3;\n        series.tooltip.getFillFromObject = false;\n        series.tooltip.background.fill = am4core.color(\"#e57373\");\n      }\n\n      if (stateWellCard.chartToggleOil) {\n        if (stateWellCard.chartToggleMultiAxis) {\n          var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n\n          if (chart.yAxes.indexOf(valueAxis) != 0) {\n            valueAxis.syncWithAxis = chart.yAxes.getIndex(0);\n          }\n        }\n\n        var seriesOil = chart.series.push(new am4charts.LineSeries());\n        seriesOil.dataFields.valueY = \"oil\";\n        seriesOil.dataFields.dateX = \"reportDate\";\n        seriesOil.strokeWidth = 2;\n        seriesOil.connect = true;\n        seriesOil.tensionX = 0.8;\n        seriesOil.fillOpacity = 0;\n        seriesOil.stroke = am4core.color(\"#81c784\");\n        seriesOil.minBulletDistance = 15;\n        seriesOil.showOnInit = true;\n        seriesOil.name = 'Oil';\n        seriesOil.tooltipText = \"Oil: [bold]{valueY}[/]\";\n\n        if (stateWellCard.chartToggleMultiAxis) {\n          seriesOil.yAxis = valueAxis;\n          valueAxis.renderer.line.strokeOpacity = 1;\n          valueAxis.renderer.line.strokeWidth = 1;\n          valueAxis.renderer.line.stroke = seriesOil.stroke;\n          valueAxis.renderer.labels.template.fill = seriesOil.stroke;\n          valueAxis.renderer.opposite = true;\n        }\n\n        var bulletOil = seriesOil.bullets.push(new am4charts.CircleBullet());\n        bulletOil.stroke = new am4core.InterfaceColorSet().getFor(\"background\");\n        bulletOil.circle.strokeWidth = 2;\n        bulletOil.circle.radius = 4;\n        bulletOil.circle.fill = am4core.color(\"#81c784\");\n        var bullethoverOil = bulletOil.states.create(\"hover\");\n        bullethoverOil.properties.scale = 1.3;\n        seriesOil.tooltip.getFillFromObject = false;\n        seriesOil.tooltip.background.fill = am4core.color(\"#81c784\");\n      }\n\n      if (stateWellCard.chartToggleWater) {\n        if (stateWellCard.chartToggleMultiAxis) {\n          var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n\n          if (chart.yAxes.indexOf(valueAxis) != 0) {\n            valueAxis.syncWithAxis = chart.yAxes.getIndex(0);\n          }\n        }\n\n        var seriesWater = chart.series.push(new am4charts.LineSeries());\n        seriesWater.dataFields.valueY = \"water\";\n        seriesWater.dataFields.dateX = \"reportDate\";\n        seriesWater.strokeWidth = 2;\n        seriesWater.connect = true;\n        seriesWater.tensionX = 0.8;\n        seriesWater.fillOpacity = 0;\n        seriesWater.stroke = am4core.color(\"#64b5f6\");\n        seriesWater.minBulletDistance = 15;\n        seriesWater.showOnInit = true;\n        seriesWater.name = 'Water';\n        seriesWater.tooltipText = \"Water: [bold]{valueY}[/]\";\n\n        if (stateWellCard.chartToggleMultiAxis) {\n          seriesWater.yAxis = valueAxis;\n          valueAxis.renderer.line.strokeOpacity = 1;\n          valueAxis.renderer.line.strokeWidth = 1;\n          valueAxis.renderer.line.stroke = seriesWater.stroke;\n          valueAxis.renderer.labels.template.fill = seriesWater.stroke;\n          valueAxis.renderer.opposite = true;\n        }\n\n        var bulletWater = seriesWater.bullets.push(new am4charts.CircleBullet());\n        bulletWater.stroke = new am4core.InterfaceColorSet().getFor(\"background\");\n        bulletWater.circle.strokeWidth = 2;\n        bulletWater.circle.radius = 4;\n        bulletWater.circle.fill = am4core.color(\"#64b5f6\");\n        var bullethoverWater = bulletWater.states.create(\"hover\");\n        bullethoverWater.properties.scale = 1.3;\n        seriesWater.tooltip.getFillFromObject = false;\n        seriesWater.tooltip.background.fill = am4core.color(\"#64b5f6\");\n      } // Create vertical scrollbar and place it before the value axis\n\n\n      chart.scrollbarY = new am4core.Scrollbar();\n      chart.scrollbarY.parent = chart.leftAxesContainer;\n      chart.scrollbarY.toBack(); // Create a horizontal scrollbar with previe and place it underneath the date axis\n\n      chart.scrollbarX = new am4charts.XYChartScrollbar();\n\n      if (stateWellCard.chartToggleGas) {\n        chart.scrollbarX.series.push(series);\n      }\n\n      ;\n\n      if (stateWellCard.chartToggleOil) {\n        chart.scrollbarX.series.push(seriesOil);\n      }\n\n      ;\n\n      if (stateWellCard.chartToggleWater) {\n        chart.scrollbarX.series.push(seriesWater);\n      }\n\n      ;\n      chart.scrollbarX.parent = chart.bottomAxesContainer;\n      dateAxis.start = 0;\n      dateAxis.keepSelection = true;\n      chart.exporting.menu = new am4core.ExportMenu();\n      chart.exporting.menu.align = \"right\";\n      chart.exporting.menu.verticalAlign = \"top\";\n      var annotation = chart.plugins.push(new am4plugins_annotation.Annotation());\n      setChart(chart); // Enable export\n    } else {\n      if (data) {\n        let wellProdHistory = data.wellProdHistory;\n        setStateWellProdChart(state => ({ ...state,\n          wellProdHistory: wellProdHistory\n        }));\n      }\n    }\n\n    return () => {\n      console.log('will unmount');\n\n      if (chart) {\n        am4core.disposeAllCharts();\n      }\n    };\n  }, [stateWellProdChart.wellProdHistory, data, stateWellCard.chartToggleOil, stateWellCard.chartToggleGas, stateWellCard.chartToggleWater, stateWellCard.chartToggleMultiAxis]);\n  return data && stateWellProdChart.wellProdHistory ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chartDiv\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }) : loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 80,\n    disableShrink: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(Skeleton, {\n    variant: \"rect\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 47\n    }\n  }, \"Not Available\"));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/WellProdChart/WellProdChart.js"],"names":["React","useEffect","useContext","useState","WellProdChartContext","WellCardContext","AppContext","useQueryWellProdHistory","makeStyles","CircularProgress","Skeleton","am4core","am4charts","am4themes_animated","am4themes_dark","am4plugins_annotation","Typography","useTheme","useStyles","theme","root","width","height","paddingTop","position","paper","background","WellProdChart","props","stateApp","setStateApp","stateWellProdChart","setStateWellProdChart","chart","setChart","chartData","setChartData","dataLoading","setDataLoading","dataError","setDataError","classes","stateWellCard","setStateWellCard","data","loading","error","selectedWell","id","wellProdHistory","create","XYChart","dateFormatter","inputDateFormat","dateAxis","xAxes","push","DateAxis","renderer","minGridDistance","valueAxis","yAxes","ValueAxis","legend","Legend","cursor","XYCursor","chartToggleGas","chartToggleMultiAxis","indexOf","syncWithAxis","getIndex","series","LineSeries","dataFields","valueY","dateX","strokeWidth","connect","tensionX","fillOpacity","stroke","color","minBulletDistance","showOnInit","name","tooltipText","yAxis","line","strokeOpacity","labels","template","fill","opposite","bullet","bullets","CircleBullet","InterfaceColorSet","getFor","circle","radius","bullethover","states","properties","scale","tooltip","getFillFromObject","chartToggleOil","seriesOil","bulletOil","bullethoverOil","chartToggleWater","seriesWater","bulletWater","bullethoverWater","scrollbarY","Scrollbar","parent","leftAxesContainer","toBack","scrollbarX","XYChartScrollbar","bottomAxesContainer","start","keepSelection","exporting","menu","ExportMenu","align","verticalAlign","annotation","plugins","Annotation","state","console","log","disposeAllCharts"],"mappings":"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","sourcesContent":["import React, { useEffect,useContext,useState } from 'react';\r\nimport {WellProdChartContext} from './WellProdChartContext';\r\nimport {WellCardContext} from '../WellCard/WellCardContext';\r\n\r\nimport {AppContext} from '../../AppContext';\r\nimport useQueryWellProdHistory from '../../graphQL/useQueryProdHistory';\r\n//material-ui components\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport am4themes_dark from \"@amcharts/amcharts4/themes/dark\";import * as am4plugins_annotation from \"@amcharts/amcharts4/plugins/annotation\"; \r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nam4core.useTheme(am4themes_animated);\r\n//am4core.useTheme(am4themes_dark);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    //width:'800px',\r\n   // height:'400px',\r\n   width:'auto',\r\n   height:'600px',\r\n   paddingTop: '2%',\r\n  //  paddingRight: '8%',\r\n   position: 'relative'\r\n  \r\n    /* display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection:'column', \r\n    backgroundColor: '#30303d',\r\n    color: '#fff'*/\r\n  },\r\n  paper:{\r\n    background:'lightGrey',\r\n    width:'100%',\r\n    height:'100%'\r\n  },\r\n}));\r\n\r\n\r\nexport default function WellProdChart(props) {\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n  const [stateWellProdChart,setStateWellProdChart] = useContext(WellProdChartContext);\r\n  const [chart,setChart] = useState(null)\r\n  const [chartData,setChartData] = useState(null)\r\n  const [dataLoading,setDataLoading] = useState(false)\r\n  const [dataError,setDataError] = useState(false)\r\n  const classes = useStyles();\r\n  const [stateWellCard ,setStateWellCard] = useContext(WellCardContext);\r\n\r\n\r\n\r\n//graphQL\r\nconst {data,loading,error} = useQueryWellProdHistory(stateApp.selectedWell.id)\r\n//const {data,loading,error} = useQueryWellProdHistory(stateApp.selectedWellApi)\r\n\r\n\r\nuseEffect( () => {  \r\n  \r\n  if(stateWellProdChart.wellProdHistory) {\r\n\r\n    //console.log('wellprodhistory',stateWellProdChart.wellProdHistory)\r\n  let chart = am4core.create(\"chartDiv\", am4charts.XYChart);\r\n\r\n  chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\r\n  chart.data = stateWellProdChart.wellProdHistory;\r\n\r\n    \r\n  // Create common x-asix\r\n  var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n  dateAxis.renderer.minGridDistance = 50;\r\n\r\n  // if(!stateWellCard.chartToggleMultiAxis){\r\n  //   var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n  //   //valueAxis.logarithmic = true;\r\n  // }\r\n\r\n\r\n  var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n\r\n  // Add legend\r\n  chart.legend = new am4charts.Legend();\r\n\r\n  // Add cursor\r\n  chart.cursor = new am4charts.XYCursor();\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    // Create gas series \r\n    if(stateWellCard.chartToggleGas){\r\n\r\n    if(stateWellCard.chartToggleMultiAxis){\r\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    if(chart.yAxes.indexOf(valueAxis) != 0){\r\n      valueAxis.syncWithAxis = chart.yAxes.getIndex(0);\r\n    }\r\n    }\r\n\r\n    var series = chart.series.push(new am4charts.LineSeries());\r\n    series.dataFields.valueY = \"gas\";\r\n    series.dataFields.dateX = \"reportDate\";\r\n    series.strokeWidth = 2;\r\n    series.connect = true;\r\n    series.tensionX = 0.8;\r\n    series.fillOpacity = 0;\r\n    series.stroke = am4core.color(\"#e57373\");\r\n    series.minBulletDistance = 15;\r\n    series.showOnInit = true;\r\n    series.name = 'Gas';\r\n    series.tooltipText = \"Gas: [bold]{valueY}[/]\";\r\n    \r\n    if(stateWellCard.chartToggleMultiAxis){\r\n    series.yAxis = valueAxis;\r\n    valueAxis.renderer.line.strokeOpacity = 1;\r\n    valueAxis.renderer.line.strokeWidth = 1;\r\n    valueAxis.renderer.line.stroke = series.stroke;\r\n    valueAxis.renderer.labels.template.fill = series.stroke;\r\n    valueAxis.renderer.opposite = true;\r\n    }\r\n\r\n    var bullet = series.bullets.push(new am4charts.CircleBullet());\r\n    bullet.stroke = new am4core.InterfaceColorSet().getFor(\"background\");\r\n    bullet.circle.strokeWidth = 2;\r\n    bullet.circle.radius = 4;\r\n    bullet.circle.fill = am4core.color(\"#e57373\");\r\n\r\n    var bullethover = bullet.states.create(\"hover\");\r\n    bullethover.properties.scale = 1.3;\r\n\r\n    series.tooltip.getFillFromObject = false;\r\n    series.tooltip.background.fill = am4core.color(\"#e57373\");\r\n\r\n\r\n  }\r\n\r\n\r\n  if(stateWellCard.chartToggleOil){\r\n\r\n    if(stateWellCard.chartToggleMultiAxis){\r\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    if(chart.yAxes.indexOf(valueAxis) != 0){\r\n      valueAxis.syncWithAxis = chart.yAxes.getIndex(0);\r\n    }\r\n    }\r\n\r\n    var seriesOil = chart.series.push(new am4charts.LineSeries());\r\n    seriesOil.dataFields.valueY = \"oil\";\r\n    seriesOil.dataFields.dateX = \"reportDate\";\r\n    seriesOil.strokeWidth = 2;\r\n    seriesOil.connect = true;\r\n    seriesOil.tensionX = 0.8;\r\n    seriesOil.fillOpacity = 0;\r\n    seriesOil.stroke = am4core.color(\"#81c784\");\r\n    seriesOil.minBulletDistance = 15;\r\n    seriesOil.showOnInit = true;\r\n    seriesOil.name = 'Oil';\r\n    seriesOil.tooltipText = \"Oil: [bold]{valueY}[/]\";\r\n\r\n    if(stateWellCard.chartToggleMultiAxis){\r\n    seriesOil.yAxis = valueAxis;\r\n    valueAxis.renderer.line.strokeOpacity = 1;\r\n    valueAxis.renderer.line.strokeWidth = 1;\r\n    valueAxis.renderer.line.stroke = seriesOil.stroke;\r\n    valueAxis.renderer.labels.template.fill = seriesOil.stroke;\r\n    valueAxis.renderer.opposite = true;\r\n    }\r\n\r\n    var bulletOil = seriesOil.bullets.push(new am4charts.CircleBullet());\r\n    bulletOil.stroke = new am4core.InterfaceColorSet().getFor(\"background\");\r\n    bulletOil.circle.strokeWidth = 2;\r\n    bulletOil.circle.radius = 4;\r\n    bulletOil.circle.fill = am4core.color(\"#81c784\");\r\n\r\n    var bullethoverOil = bulletOil.states.create(\"hover\");\r\n    bullethoverOil.properties.scale = 1.3;\r\n\r\n    seriesOil.tooltip.getFillFromObject = false;\r\n    seriesOil.tooltip.background.fill = am4core.color(\"#81c784\");\r\n  }\r\n\r\n\r\n\r\n  if(stateWellCard.chartToggleWater){\r\n\r\n    if(stateWellCard.chartToggleMultiAxis){\r\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    if(chart.yAxes.indexOf(valueAxis) != 0){\r\n      valueAxis.syncWithAxis = chart.yAxes.getIndex(0);\r\n    }\r\n    }\r\n\r\n    var seriesWater = chart.series.push(new am4charts.LineSeries());\r\n    seriesWater.dataFields.valueY = \"water\";\r\n    seriesWater.dataFields.dateX = \"reportDate\";\r\n    seriesWater.strokeWidth = 2;\r\n    seriesWater.connect = true;\r\n    seriesWater.tensionX = 0.8;\r\n    seriesWater.fillOpacity = 0;\r\n    seriesWater.stroke = am4core.color(\"#64b5f6\");\r\n    seriesWater.minBulletDistance = 15;\r\n    seriesWater.showOnInit = true;\r\n    seriesWater.name = 'Water';\r\n    seriesWater.tooltipText = \"Water: [bold]{valueY}[/]\";\r\n\r\n    if(stateWellCard.chartToggleMultiAxis){\r\n    seriesWater.yAxis = valueAxis;\r\n    valueAxis.renderer.line.strokeOpacity = 1;\r\n    valueAxis.renderer.line.strokeWidth = 1;\r\n    valueAxis.renderer.line.stroke = seriesWater.stroke;\r\n    valueAxis.renderer.labels.template.fill = seriesWater.stroke;\r\n    valueAxis.renderer.opposite = true;\r\n    }\r\n\r\n    var bulletWater = seriesWater.bullets.push(new am4charts.CircleBullet());\r\n    bulletWater.stroke = new am4core.InterfaceColorSet().getFor(\"background\");\r\n    bulletWater.circle.strokeWidth = 2;\r\n    bulletWater.circle.radius = 4;\r\n    bulletWater.circle.fill = am4core.color(\"#64b5f6\");\r\n\r\n    var bullethoverWater = bulletWater.states.create(\"hover\");\r\n    bullethoverWater.properties.scale = 1.3;\r\n\r\n    seriesWater.tooltip.getFillFromObject = false;\r\n    seriesWater.tooltip.background.fill = am4core.color(\"#64b5f6\");\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n    // Create vertical scrollbar and place it before the value axis\r\n    chart.scrollbarY = new am4core.Scrollbar();\r\n    chart.scrollbarY.parent = chart.leftAxesContainer;\r\n    chart.scrollbarY.toBack();\r\n    \r\n    // Create a horizontal scrollbar with previe and place it underneath the date axis\r\n    chart.scrollbarX = new am4charts.XYChartScrollbar();\r\n    if(stateWellCard.chartToggleGas){chart.scrollbarX.series.push(series)};\r\n    if(stateWellCard.chartToggleOil){chart.scrollbarX.series.push(seriesOil)};\r\n    if(stateWellCard.chartToggleWater){chart.scrollbarX.series.push(seriesWater)};\r\n    chart.scrollbarX.parent = chart.bottomAxesContainer;\r\n    \r\n    dateAxis.start = 0;\r\n    dateAxis.keepSelection = true;\r\n\r\n\r\n    chart.exporting.menu = new am4core.ExportMenu();\r\n    chart.exporting.menu.align = \"right\";\r\n    chart.exporting.menu.verticalAlign = \"top\";\r\n    var annotation = chart.plugins.push(new am4plugins_annotation.Annotation());\r\n    setChart(chart);\r\n        // Enable export\r\n\r\n    \r\n  }\r\n  else {\r\n   \r\n    if(data) {\r\n        let wellProdHistory = data.wellProdHistory;\r\n        setStateWellProdChart(state => ({...state,wellProdHistory:wellProdHistory}))\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return () => {\r\n    console.log('will unmount');\r\n    if(chart){\r\n      am4core.disposeAllCharts();\r\n    }\r\n   \r\n  }\r\n},[stateWellProdChart.wellProdHistory,\r\n    data,\r\n    stateWellCard.chartToggleOil,\r\n    stateWellCard.chartToggleGas,\r\n    stateWellCard.chartToggleWater,\r\n    stateWellCard.chartToggleMultiAxis])\r\n\r\n\r\n\r\n  return (\r\n    \r\n\r\n    data && stateWellProdChart.wellProdHistory ? (\r\n      <div id=\"chartDiv\" className={classes.root} ></div>)\r\n      : loading ? (<CircularProgress size={80} disableShrink color=\"secondary\" />)\r\n      :(<Skeleton variant=\"rect\" height={300}><Typography variant=\"button\">Not Available</Typography></Skeleton>)\r\n    \r\n   \r\n \r\n  );\r\n      \r\n}"]},"metadata":{},"sourceType":"module"}