{"ast":null,"code":"import { __read } from \"tslib\";\nimport React, { useState } from 'react';\nexport default function FilterableHeaderCell(_a) {\n  var column = _a.column,\n      onChange = _a.onChange;\n\n  var _b = __read(useState(''), 2),\n      filterTerm = _b[0],\n      setFilterTerm = _b[1];\n\n  function handleChange(event) {\n    var value = event.target.value;\n    setFilterTerm(value);\n\n    if (onChange) {\n      onChange({\n        filterTerm: value,\n        column: column\n      });\n    }\n  }\n\n  if (column.filterable === false) {\n    return React.createElement(\"div\", null);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"form-group\"\n  }, React.createElement(\"input\", {\n    key: \"header-filter-\" + column.key,\n    className: \"form-control input-sm\",\n    placeholder: \"Search\",\n    value: filterTerm,\n    onChange: handleChange\n  }));\n}","map":{"version":3,"sources":["../../../../src/common/cells/headerCells/FilterableHeaderCell.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AAGA,eAAc,SAAU,oBAAV,CAAkC,EAAlC,EAA8E;MAA1C,MAAA,GAAA,EAAA,CAAA,M;MAAQ,QAAA,GAAA,EAAA,CAAA,Q;;AAClD,MAAA,EAAA,GAAA,MAAA,CAAA,QAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AAAA,MAAC,UAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAa,aAAA,GAAA,EAAA,CAAA,CAAA,CAAb;;AAEN,WAAS,YAAT,CAAsB,KAAtB,EAAgE;AACtD,QAAA,KAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACR,IAAA,aAAa,CAAC,KAAD,CAAb;;AACA,QAAI,QAAJ,EAAc;AACZ,MAAA,QAAQ,CAAC;AAAE,QAAA,UAAU,EAAE,KAAd;AAAqB,QAAA,MAAM,EAAA;AAA3B,OAAD,CAAR;AACD;AACF;;AAED,MAAI,MAAM,CAAC,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,CAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,GAAG,EAAE,mBAAiB,MAAM,CAAC,GAD/B;AAEE,IAAA,SAAS,EAAC,uBAFZ;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,KAAK,EAAE,UAJT;AAKE,IAAA,QAAQ,EAAE;AALZ,GAAA,CADF,CADF;AAWD","sourcesContent":["import React, { useState } from 'react';\nimport { FilterRendererProps } from '../../types';\n\nexport default function FilterableHeaderCell<R>({ column, onChange }: FilterRendererProps<R>) {\n  const [filterTerm, setFilterTerm] = useState('');\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { value } = event.target;\n    setFilterTerm(value);\n    if (onChange) {\n      onChange({ filterTerm: value, column });\n    }\n  }\n\n  if (column.filterable === false) {\n    return <div />;\n  }\n\n  return (\n    <div className=\"form-group\">\n      <input\n        key={`header-filter-${column.key as keyof R}`}\n        className=\"form-control input-sm\"\n        placeholder=\"Search\"\n        value={filterTerm}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}