{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Shared\\\\WellStatusCard.js\";\nimport React, { useContext, useState } from 'react';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport WellIcon from './components/svgIcons/WellIcon';\nimport { AppContext } from '../../AppContext';\nimport QuestionIcon from '@material-ui/icons/Help';\nimport XIcon from '@material-ui/icons/HighlightOff';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nconst useStyles = makeStyles(theme => ({\n  iconContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  tex1: {\n    colorPrimary: 'white'\n  }\n}));\nexport default function WellStatusCard() {\n  let classes = useStyles();\n  const [stateApp, setStateApp] = useContext(AppContext);\n\n  const WellStatusIcon = () => {\n    console.log(stateApp.selectedWell.wellStatus);\n    console.log('*');\n\n    if (stateApp.selectedWell.wellStatus == \"ACTIVE\") {\n      return /*#__PURE__*/React.createElement(CheckCircleIcon, {\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      });\n    } else if (stateApp.selectedWell.wellStatus == \"UNKNOWN\") {\n      return /*#__PURE__*/React.createElement(QuestionIcon, {\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(XIcon, {\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.iconContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WellStatusIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography //classes={classes.text1}\n  , {\n    align: \"center\",\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Well Status\"), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\" //className={classes.text2}\n    ,\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, stateApp.selectedWell.wellStatus ? stateApp.selectedWell.wellStatus.toUpperCase() : '--'));\n}\n;\n/* \r\nimport React, { useEffect, useState } from 'react'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\n\r\nexport default function WellProfileIcon(props) {\r\n  const [letterPath, setLetterPath] = useState('')\r\n\r\n  useEffect(() => {\r\n    let h =\r\n      'M24 30H17.924V17.1429H6.07595V30H0V0H6.07595V12.1566H17.924V0H24V30Z'\r\n    if (props.letter === 'h') {\r\n      setLetterPath(h)\r\n    }\r\n  }, [props.letter])\r\n\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d={letterPath} />\r\n    </SvgIcon>\r\n  )\r\n}\r\n */","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Shared/WellStatusCard.js"],"names":["React","useContext","useState","makeStyles","useTheme","Typography","WellIcon","AppContext","QuestionIcon","XIcon","CheckCircleIcon","useStyles","theme","iconContainer","display","flexDirection","alignItems","tex1","colorPrimary","WellStatusCard","classes","stateApp","setStateApp","WellStatusIcon","console","log","selectedWell","wellStatus","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAoBC,QAApB,QAAoC,0BAApC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAGA,MAAMC,SAAS,GAAGR,UAAU,CAACS,KAAK,KAAK;AACnCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,aAAa,EAAE,QAFF;AAGbC,IAAAA,UAAU,EAAE;AAHC,GADoB;AAOnCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE;AADV;AAP6B,CAAL,CAAN,CAA5B;AAcA,eAAe,SAASC,cAAT,GAA0B;AACrC,MAAIC,OAAO,GAAGT,SAAS,EAAvB;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BrB,UAAU,CAACM,UAAD,CAA1C;;AACA,QAAMgB,cAAc,GAAG,MAAM;AAG3BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,YAAT,CAAsBC,UAAlC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AAEA,QAAGJ,QAAQ,CAACK,YAAT,CAAsBC,UAAtB,IAAoC,QAAvC,EAAgD;AAC9C,0BACE,oBAAC,eAAD;AAAiB,QAAA,QAAQ,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJD,MAIO,IAAGN,QAAQ,CAACK,YAAT,CAAsBC,UAAtB,IAAoC,SAAvC,EAAkD;AACvD,0BACE,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAID,KALM,MAKA;AACL,0BACE,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AACF,GApBD;;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACP,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAOA,oBAAC,UAAD,CACE;AADF;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPA,eAcA,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,QADR,CAEE;AAFF;AAGE,IAAA,OAAO,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGQ,QAAQ,CAACK,YAAT,CAAsBC,UAAtB,GACGN,QAAQ,CAACK,YAAT,CAAsBC,UAAtB,CAAiCC,WAAjC,EADH,GAEG,IAPN,CAdA,CADF;AA4BD;AAAA;AAIH","sourcesContent":["import React, { useContext,useState } from 'react';\r\nimport { makeStyles,useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography'\r\nimport WellIcon from './components/svgIcons/WellIcon'\r\nimport { AppContext } from '../../AppContext'\r\n\r\nimport QuestionIcon from '@material-ui/icons/Help';\r\nimport XIcon from '@material-ui/icons/HighlightOff';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    iconContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n\r\n    },\r\n    tex1: {\r\n      colorPrimary: 'white'\r\n    }\r\n  }))\r\n\r\n\r\n  \r\nexport default function WellStatusCard() {\r\n    let classes = useStyles();\r\n    const [stateApp, setStateApp] = useContext(AppContext)\r\n    const WellStatusIcon = () => {\r\n\r\n\r\n      console.log(stateApp.selectedWell.wellStatus)\r\n      console.log('*')\r\n\r\n      if(stateApp.selectedWell.wellStatus == \"ACTIVE\"){\r\n        return (\r\n          <CheckCircleIcon fontSize='large'/>\r\n        );\r\n      } else if(stateApp.selectedWell.wellStatus == \"UNKNOWN\") {\r\n        return (\r\n          <QuestionIcon fontSize='large'/>\r\n        );\r\n\r\n      } else {\r\n        return (\r\n          <XIcon fontSize='large'/>\r\n        );\r\n      }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className={classes.iconContainer}>\r\n\r\n      <WellStatusIcon/>\r\n\r\n\r\n\r\n\r\n      <Typography\r\n        //classes={classes.text1}\r\n        align=\"center\"\r\n        variant=\"subtitle2\"\r\n      >\r\n        Well Status\r\n      </Typography>\r\n      <Typography\r\n        align=\"center\"\r\n        //className={classes.text2}\r\n        variant=\"caption\"\r\n      >\r\n        {stateApp.selectedWell.wellStatus\r\n          ? stateApp.selectedWell.wellStatus.toUpperCase()\r\n          : '--'}\r\n      </Typography>\r\n      </div>\r\n\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n/* \r\nimport React, { useEffect, useState } from 'react'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\n\r\nexport default function WellProfileIcon(props) {\r\n  const [letterPath, setLetterPath] = useState('')\r\n\r\n  useEffect(() => {\r\n    let h =\r\n      'M24 30H17.924V17.1429H6.07595V30H0V0H6.07595V12.1566H17.924V0H24V30Z'\r\n    if (props.letter === 'h') {\r\n      setLetterPath(h)\r\n    }\r\n  }, [props.letter])\r\n\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d={letterPath} />\r\n    </SvgIcon>\r\n  )\r\n}\r\n */"]},"metadata":{},"sourceType":"module"}