{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Shared\\\\TrackToggleButton.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { AppContext } from \"../../AppContext\";\nimport { TOGGLETRACK } from \"../../graphQL/useMutationToggleCreateRemoveTrack\";\nimport { CircularProgress } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: props => props.iconZiseSmall ? \"30px\" : \"48px\",\n    height: props => props.iconZiseSmall ? \"30px\" : \"48px\",\n    borderRadius: \"50%\",\n    border: 0,\n    color: props => props.dark ? \"rgb(1,17,51)\" : \"#fff\",\n    // backgroundColor: \"transparent !important\",\n    \"&:hover\": {\n      backgroundColor: props => props.dark ? \"#dadbde !important\" : \"#031d40 !important\"\n    }\n  },\n  aaa: {\n    backgroundColor: \"green\"\n  },\n  hiddenLoader: {\n    position: \"absolute\",\n    backgroundColor: \"#EDF8FC\",\n    borderRadius: \"50%\",\n    visibility: \"hidden\" //visible\n\n  }\n}));\nexport default function TrackToggleButton(props) {\n  let classes = useStyles(props);\n  const [stateApp] = useContext(AppContext);\n  const [selected, setSelected] = useState(false);\n  const [toggleCreateRemoveTrack, {\n    data,\n    loading\n  }] = useMutation(TOGGLETRACK);\n  useEffect(() => {\n    //// if selected multiple buttons set all loader\n    if (props.multipleIds) {\n      if (loading) {\n        for (let i = 0; i < props.multipleIds.length; i++) {\n          if (document.getElementById(props.targetLabel + props.multipleIds[i] + \"loader\")) document.getElementById(props.targetLabel + props.multipleIds[i] + \"loader\").style.visibility = \"visible\";\n        }\n      } else {\n        for (let i = 0; i < props.multipleIds.length; i++) {\n          if (document.getElementById(props.targetLabel + props.multipleIds[i] + \"loader\")) document.getElementById(props.targetLabel + props.multipleIds[i] + \"loader\").style.visibility = \"hidden\";\n        }\n      }\n    }\n  }, [loading, props.multipleIds]);\n  useEffect(() => {\n    // console.log(\"Target: \", props.target);\n    if (props.target) {\n      if (props.target.isTracked) {\n        setSelected(true);\n      } else {\n        setSelected(false);\n      }\n    }\n  }, [props.target]);\n  useEffect(() => {\n    if (data && data.toggleCreateRemoveTrack && data.toggleCreateRemoveTrack.success) {\n      setSelected(data.toggleCreateRemoveTrack.tracking);\n    }\n  }, [data]);\n\n  const handleToggle = () => {\n    if (!props.multipleIds || !props.multipleTracks) {\n      toggleCreateRemoveTrack({\n        variables: {\n          track: {\n            user: stateApp.user.mongoId,\n            objectType: props.targetLabel,\n            trackOn: props.targetSourceId\n          }\n        },\n        refetchQueries: [\"tracksByUserAndObjectType\", \"trackByUserAndObjectId\"],\n        ////add all queries for components with track icons////\n        awaitRefetchQueries: true\n      });\n    } else {\n      for (let i = 0; i < props.multipleIds.length; i++) {\n        if (props.target.isTracked === props.multipleTracks[i]) {\n          toggleCreateRemoveTrack({\n            variables: {\n              track: {\n                user: stateApp.user.mongoId,\n                objectType: props.targetLabel,\n                trackOn: props.multipleIds[i]\n              }\n            },\n            refetchQueries: [\"tracksByUserAndObjectType\", \"trackByUserAndObjectId\"],\n            ////add all queries for components with track icons////\n            awaitRefetchQueries: true\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: `${props.target.isTracked ? \"Untrack\" : \"Track\"}${props.targetLabel ? \" \" + props.targetLabel.charAt(0).toUpperCase() + props.targetLabel.slice(1) : \"\"}${props.targetLabel && props.multiSelectMouseHoverColor ? \"s\" : \"\"}`,\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    id: props.id ? props.id : \"\",\n    size: \"small\" // classes={{ root: classes.root }}\n    ,\n    className: classes.root,\n    value: \"check\",\n    selected: selected,\n    onChange: e => {\n      e.stopPropagation();\n      e.persist();\n      handleToggle();\n    },\n    onMouseOver: e => {\n      if (props.multiSelectMouseHoverColor && props.idBase) props.multiSelectMouseHoverColor(props.idBase, \"#dadbde\");\n    },\n    onMouseOut: e => {\n      if (props.multiSelectMouseHoverColor && props.idBase) props.multiSelectMouseHoverColor(props.idBase, \"transparent\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: props.iconZiseSmall ? 18 : 28,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }) : selected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MyLocationIcon, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.hiddenLoader,\n    id: props.targetLabel + props.targetSourceId + \"loader\",\n    size: props.iconZiseSmall ? 18 : 28,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MyLocationIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.hiddenLoader,\n    id: props.targetLabel + props.targetSourceId + \"loader\",\n    size: props.iconZiseSmall ? 18 : 28,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Shared/TrackToggleButton.js"],"names":["React","useContext","useState","useEffect","useMutation","useLazyQuery","makeStyles","ToggleButton","MyLocationIcon","Tooltip","AppContext","TOGGLETRACK","CircularProgress","useStyles","theme","root","width","props","iconZiseSmall","height","borderRadius","border","color","dark","backgroundColor","aaa","hiddenLoader","position","visibility","TrackToggleButton","classes","stateApp","selected","setSelected","toggleCreateRemoveTrack","data","loading","multipleIds","i","length","document","getElementById","targetLabel","style","target","isTracked","success","tracking","handleToggle","multipleTracks","variables","track","user","mongoId","objectType","trackOn","targetSourceId","refetchQueries","awaitRefetchQueries","charAt","toUpperCase","slice","multiSelectMouseHoverColor","id","e","stopPropagation","persist","idBase"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { AppContext } from \"../../AppContext\";\r\nimport { TOGGLETRACK } from \"../../graphQL/useMutationToggleCreateRemoveTrack\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: (props) => (props.iconZiseSmall ? \"30px\" : \"48px\"),\r\n    height: (props) => (props.iconZiseSmall ? \"30px\" : \"48px\"),\r\n    borderRadius: \"50%\",\r\n    border: 0,\r\n    color: (props) => (props.dark ? \"rgb(1,17,51)\" : \"#fff\"),\r\n    // backgroundColor: \"transparent !important\",\r\n    \"&:hover\": {\r\n      backgroundColor: (props) =>\r\n        props.dark ? \"#dadbde !important\" : \"#031d40 !important\",\r\n    },\r\n  },\r\n  aaa: { backgroundColor: \"green\" },\r\n  hiddenLoader: {\r\n    position: \"absolute\",\r\n    backgroundColor: \"#EDF8FC\",\r\n    borderRadius: \"50%\",\r\n    visibility: \"hidden\", //visible\r\n  },\r\n}));\r\n\r\nexport default function TrackToggleButton(props) {\r\n  let classes = useStyles(props);\r\n  const [stateApp] = useContext(AppContext);\r\n  const [selected, setSelected] = useState(false);\r\n  const [toggleCreateRemoveTrack, { data, loading }] = useMutation(TOGGLETRACK);\r\n\r\n  useEffect(() => {\r\n    //// if selected multiple buttons set all loader\r\n    if (props.multipleIds) {\r\n      if (loading) {\r\n        for (let i = 0; i < props.multipleIds.length; i++) {\r\n          if (\r\n            document.getElementById(\r\n              props.targetLabel + props.multipleIds[i] + \"loader\"\r\n            )\r\n          )\r\n            document.getElementById(\r\n              props.targetLabel + props.multipleIds[i] + \"loader\"\r\n            ).style.visibility = \"visible\";\r\n        }\r\n      } else {\r\n        for (let i = 0; i < props.multipleIds.length; i++) {\r\n          if (\r\n            document.getElementById(\r\n              props.targetLabel + props.multipleIds[i] + \"loader\"\r\n            )\r\n          )\r\n            document.getElementById(\r\n              props.targetLabel + props.multipleIds[i] + \"loader\"\r\n            ).style.visibility = \"hidden\";\r\n        }\r\n      }\r\n    }\r\n  }, [loading, props.multipleIds]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"Target: \", props.target);\r\n    if (props.target) {\r\n      if (props.target.isTracked) {\r\n        setSelected(true);\r\n      } else {\r\n        setSelected(false);\r\n      }\r\n    }\r\n  }, [props.target]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      data &&\r\n      data.toggleCreateRemoveTrack &&\r\n      data.toggleCreateRemoveTrack.success\r\n    ) {\r\n      setSelected(data.toggleCreateRemoveTrack.tracking);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleToggle = () => {\r\n    if (!props.multipleIds || !props.multipleTracks) {\r\n      toggleCreateRemoveTrack({\r\n        variables: {\r\n          track: {\r\n            user: stateApp.user.mongoId,\r\n            objectType: props.targetLabel,\r\n            trackOn: props.targetSourceId,\r\n          },\r\n        },\r\n        refetchQueries: [\"tracksByUserAndObjectType\", \"trackByUserAndObjectId\"], ////add all queries for components with track icons////\r\n        awaitRefetchQueries: true,\r\n      });\r\n    } else {\r\n      for (let i = 0; i < props.multipleIds.length; i++) {\r\n        if (props.target.isTracked === props.multipleTracks[i]) {\r\n          toggleCreateRemoveTrack({\r\n            variables: {\r\n              track: {\r\n                user: stateApp.user.mongoId,\r\n                objectType: props.targetLabel,\r\n                trackOn: props.multipleIds[i],\r\n              },\r\n            },\r\n            refetchQueries: [\r\n              \"tracksByUserAndObjectType\",\r\n              \"trackByUserAndObjectId\",\r\n            ], ////add all queries for components with track icons////\r\n            awaitRefetchQueries: true,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      title={`${props.target.isTracked ? \"Untrack\" : \"Track\"}${\r\n        props.targetLabel\r\n          ? \" \" +\r\n            props.targetLabel.charAt(0).toUpperCase() +\r\n            props.targetLabel.slice(1)\r\n          : \"\"\r\n      }${props.targetLabel && props.multiSelectMouseHoverColor ? \"s\" : \"\"}`}\r\n      placement=\"top\"\r\n    >\r\n      <ToggleButton\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n        }}\r\n        id={props.id ? props.id : \"\"}\r\n        size=\"small\"\r\n        // classes={{ root: classes.root }}\r\n        className={classes.root}\r\n        value=\"check\"\r\n        selected={selected}\r\n        onChange={(e) => {\r\n          e.stopPropagation();\r\n          e.persist();\r\n          handleToggle();\r\n        }}\r\n        onMouseOver={(e) => {\r\n          if (props.multiSelectMouseHoverColor && props.idBase)\r\n            props.multiSelectMouseHoverColor(props.idBase, \"#dadbde\");\r\n        }}\r\n        onMouseOut={(e) => {\r\n          if (props.multiSelectMouseHoverColor && props.idBase)\r\n            props.multiSelectMouseHoverColor(props.idBase, \"transparent\");\r\n        }}\r\n      >\r\n        {loading ? (\r\n          <CircularProgress\r\n            size={props.iconZiseSmall ? 18 : 28}\r\n            color=\"secondary\"\r\n          />\r\n        ) : selected ? (\r\n          <>\r\n            <MyLocationIcon color=\"secondary\" />\r\n            <CircularProgress\r\n              className={classes.hiddenLoader}\r\n              id={props.targetLabel + props.targetSourceId + \"loader\"}\r\n              size={props.iconZiseSmall ? 18 : 28}\r\n              color=\"secondary\"\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <MyLocationIcon />\r\n            <CircularProgress\r\n              className={classes.hiddenLoader}\r\n              id={props.targetLabel + props.targetSourceId + \"loader\"}\r\n              size={props.iconZiseSmall ? 18 : 28}\r\n              color=\"secondary\"\r\n            />\r\n          </>\r\n        )}\r\n      </ToggleButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}