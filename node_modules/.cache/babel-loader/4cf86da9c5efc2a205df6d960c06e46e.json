{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\MapGridCard\\\\components\\\\MapGridCardSearch.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { AppContext } from \"../../../AppContext\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport parse from \"autosuggest-highlight/parse\";\nimport throttle from \"lodash/throttle\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport WellIcon from \"../../Shared/svgIcons/well\";\nimport OperatorIcon from \"../../Shared/svgIcons/operator\";\nimport LeaseIcon from \"../../Shared/svgIcons/lease\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { OWNERWELLSQUERY } from \"../../../graphQL/useQueryOwnerWells \";\nimport { useLazyQuery, useMutation } from \"@apollo/react-hooks\";\nimport { WELLSQUERY } from \"../../../graphQL/useQueryWells\";\nimport { OPERATORSLATSLONS } from \"../../../graphQL/useQueryOperatorLatsLonsArray\";\nimport { LEASELATSLONS } from \"../../../graphQL/useQueryLeaseLatsLonsArray\";\nimport { USERSEARCHHISTORY } from \"../../../graphQL/useQueryUserSearchHistory\";\nimport { ADDSEARCHHISTORY } from \"../../../graphQL/useMutationAddSearchHistory\";\nimport { UPDATESEARCHHISTORY } from \"../../../graphQL/useMutationUpdateSearchHistory\";\nimport { REMOVESEARCHHISTORY } from \"../../../graphQL/useMutationRemoveSearchHistory\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Box from \"@material-ui/core/Box\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    \"& .MuiInput-root\": {\n      height: \"50px\",\n      paddingRight: \"8px\"\n    },\n    \"& > div\": {\n      width: \"100%\"\n    }\n  },\n  inputAdornment: {\n    padding: \"0 8px\",\n    cursor: \"context-menu\",\n    height: \"100%\"\n  }\n}));\n\nconst capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst joinAddress = row => {\n  let rowData = {\n    Address1: row.Address1,\n    Address2: row.Address2,\n    City: row.City,\n    State: row.State,\n    Zip: row.Zip,\n    Country: row.Country\n  };\n  let textArray = [];\n\n  for (const key in rowData) {\n    if (rowData.hasOwnProperty(key) && rowData[key] && rowData[key] !== \"\") {\n      if (key === \"Zip\" || key === \"Country\") {\n        textArray = [[textArray.join(\", \"), capitalizeFirstLetter(rowData[key])].join(\" \")];\n      } else textArray.push(capitalizeFirstLetter(rowData[key]));\n    }\n  }\n\n  return textArray.join(\", \");\n};\n\nexport default function MapGridCardSearch(props) {\n  const classes = useStyles();\n  const [stateApp, setStateApp] = useContext(AppContext);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [options, setOptions] = React.useState([]);\n  const [searchTop] = React.useState(100);\n  const callWellSearch = React.useMemo(() => throttle((request, callback) => {\n    const endpoint = \"https://m1search.search.windows.net/indexes/wellheader-index/docs?api-version=2019-05-06&$count=true&searchFields=WellName,ApiNumber&$top=\" + searchTop + \"&search=\" + request.input;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\n    const options = {\n      method: \"GET\",\n      headers: headers\n    };\n    console.log(\"request made to wellheader-index search at: \" + new Date().toString());\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      console.log(response);\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  const callOwnerSearch = React.useMemo(() => throttle((request, callback) => {\n    const endpoint = \"https://m1search.search.windows.net/indexes/lod2019-index/docs?api-version=2019-05-06&%24count=true&searchFields=OwnerName%2CAddress1&%24top=\" + searchTop + \"&search=\" + request.input;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\n    const options = {\n      method: \"GET\",\n      headers: headers\n    };\n    console.log(\"request made to lod2019-index search at: \" + new Date().toString());\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      console.log(response);\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  const callOperatorSearch = React.useMemo(() => throttle((request, callback) => {\n    const endpoint = \"https://m1search.search.windows.net/indexes/operator-index/docs?api-version=2019-05-06&$count=true&searchFields=Operator&$top=\" + searchTop + \"&search=\" + request.input;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\n    const options = {\n      method: \"GET\",\n      headers: headers\n    };\n    console.log(\"request made to operator-index search at: \" + new Date().toString());\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      console.log(response);\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  const callLeaseSearch = React.useMemo(() => throttle((request, callback) => {\n    const endpoint = \"https://m1search.search.windows.net/indexes/lease-index/docs?api-version=2019-05-06&$count=true&searchFields=Lease,LeaseId&$top=\" + searchTop + \"&search=\" + request.input;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\n    const options = {\n      method: \"GET\",\n      headers: headers\n    };\n    console.log(\"request made to lease-index search at: \" + new Date().toString());\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      console.log(response);\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  const callMapboxSearch = React.useMemo(() => throttle((request, callback) => {\n    const endpoint = `https://api.mapbox.com/geocoding/v5/mapbox.places/${request.input}.json?access_token=${stateApp.mapboxglAccessToken}&autocomplete=true&country=us%2Cca&limit=${searchTop > 10 ? 10 : searchTop}`;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    const options = {\n      method: \"GET\",\n      headers\n    };\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  React.useEffect(() => {\n    if (inputValue === \"\") {\n      setStateApp(state => ({ ...state,\n        searchResultData: [],\n        searchloading: false\n      }));\n      return undefined;\n    }\n\n    (async () => {\n      let newOptions = [];\n      Promise.all([props.searchOption == \"well\" ? callWellSearch({\n        input: inputValue\n      }, results => {\n        if (results) {\n          const indexSource = results[\"@odata.context\"].substring(results[\"@odata.context\"].indexOf(\"('\") + 2, results[\"@odata.context\"].indexOf(\"')\"));\n          console.log(indexSource);\n          newOptions = [...results.value];\n        }\n\n        setStateApp(state => ({ ...state,\n          searchResultData: [...newOptions],\n          searchloading: false\n        }));\n      }) : null, props.searchOption == \"owner\" ? callOwnerSearch({\n        input: inputValue\n      }, results => {\n        if (results) {\n          const indexSource = results[\"@odata.context\"].substring(results[\"@odata.context\"].indexOf(\"('\") + 2, results[\"@odata.context\"].indexOf(\"')\"));\n          console.log(indexSource);\n          newOptions = [...results.value.map(result => {\n            return { ...result,\n              FullAddress: joinAddress(result)\n            };\n          })];\n        }\n\n        setStateApp(state => ({ ...state,\n          searchResultData: [...newOptions],\n          searchloading: false\n        }));\n      }) : null, props.searchOption == \"operator\" ? callOperatorSearch({\n        input: inputValue\n      }, results => {\n        if (results) {\n          const indexSource = results[\"@odata.context\"].substring(results[\"@odata.context\"].indexOf(\"('\") + 2, results[\"@odata.context\"].indexOf(\"')\"));\n          console.log(indexSource);\n          newOptions = [...results.value];\n        }\n\n        setStateApp(state => ({ ...state,\n          searchResultData: [...newOptions],\n          searchloading: false\n        }));\n      }) : null, props.searchOption == \"lease\" ? callLeaseSearch({\n        input: inputValue\n      }, results => {\n        if (results) {\n          const indexSource = results[\"@odata.context\"].substring(results[\"@odata.context\"].indexOf(\"('\") + 2, results[\"@odata.context\"].indexOf(\"')\"));\n          console.log(indexSource);\n          newOptions = [...results.value.map(result => {\n            return { ...result,\n              Lease: result.Lease && (result.Lease === \"N/A\" || result.Lease === \"(N/A)\") ? null : result.Lease,\n              LeaseId: result.LeaseId && (result.LeaseId === \"N/A\" || result.LeaseId === \"(N/A)\") ? null : result.LeaseId\n            };\n          })];\n        }\n\n        setStateApp(state => ({ ...state,\n          searchResultData: [...newOptions],\n          searchloading: false\n        }));\n      }) : null, props.searchOption == \"location\" ? callMapboxSearch({\n        input: inputValue\n      }, results => {\n        if (results && results.features) {\n          newOptions = [...results.features.map(result => {\n            return { ...result,\n              Id: result.id,\n              Primary: result.text ? result.text : \"\",\n              Secondary: result.place_name ? result.place_name.indexOf(result.text + \", \") === 0 ? result.place_name.slice(result.place_name.indexOf(\", \") + 2, result.place_name.length) : result.place_name : \"\"\n            };\n          })];\n        }\n\n        setStateApp(state => ({ ...state,\n          searchResultData: [...newOptions],\n          searchloading: false\n        }));\n      }) : null]);\n    })();\n  }, [inputValue, callWellSearch, callOwnerSearch, callOperatorSearch, callLeaseSearch, callMapboxSearch, props.searchOption]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: `cancelDraggableEffect ${classes.root}`,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"mapGridCardSearch-basic\",\n    type: \"search\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        className: classes.inputAdornment,\n        position: \"start\",\n        onClick: e => {\n          e.stopPropagation();\n          props.ativateSearchPanel();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        htmlColor: \"#757575\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }\n      }))\n    },\n    onClick: props.ativateSearchPanel,\n    value: inputValue,\n    onChange: event => {\n      setInputValue(event.target.value);\n      if (!stateApp.searchloading) setStateApp(state => ({ ...state,\n        searchloading: true\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/MapGridCard/components/MapGridCardSearch.js"],"names":["React","useState","useContext","useEffect","makeStyles","CircularProgress","AppContext","TextField","InputAdornment","SearchIcon","LocationOnIcon","Grid","Typography","parse","throttle","Button","PersonIcon","WellIcon","OperatorIcon","LeaseIcon","IconButton","ArrowDropDownIcon","OWNERWELLSQUERY","useLazyQuery","useMutation","WELLSQUERY","OPERATORSLATSLONS","LEASELATSLONS","USERSEARCHHISTORY","ADDSEARCHHISTORY","UPDATESEARCHHISTORY","REMOVESEARCHHISTORY","Popover","Tooltip","Box","useStyles","theme","root","flexGrow","height","paddingRight","width","inputAdornment","padding","cursor","capitalizeFirstLetter","string","charAt","toUpperCase","slice","joinAddress","row","rowData","Address1","Address2","City","State","Zip","Country","textArray","key","hasOwnProperty","join","push","MapGridCardSearch","props","classes","stateApp","setStateApp","inputValue","setInputValue","options","setOptions","searchTop","callWellSearch","useMemo","request","callback","endpoint","input","headers","Headers","append","method","console","log","Date","toString","fetch","then","response","json","catch","error","callOwnerSearch","callOperatorSearch","callLeaseSearch","callMapboxSearch","mapboxglAccessToken","state","searchResultData","searchloading","undefined","newOptions","Promise","all","searchOption","results","indexSource","substring","indexOf","value","map","result","FullAddress","Lease","LeaseId","features","Id","id","Primary","text","Secondary","place_name","length","startAdornment","e","stopPropagation","ativateSearchPanel","event","target"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport throttle from \"lodash/throttle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport WellIcon from \"../../Shared/svgIcons/well\";\r\nimport OperatorIcon from \"../../Shared/svgIcons/operator\";\r\nimport LeaseIcon from \"../../Shared/svgIcons/lease\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport { OWNERWELLSQUERY } from \"../../../graphQL/useQueryOwnerWells \";\r\nimport { useLazyQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { WELLSQUERY } from \"../../../graphQL/useQueryWells\";\r\nimport { OPERATORSLATSLONS } from \"../../../graphQL/useQueryOperatorLatsLonsArray\";\r\nimport { LEASELATSLONS } from \"../../../graphQL/useQueryLeaseLatsLonsArray\";\r\nimport { USERSEARCHHISTORY } from \"../../../graphQL/useQueryUserSearchHistory\";\r\nimport { ADDSEARCHHISTORY } from \"../../../graphQL/useMutationAddSearchHistory\";\r\nimport { UPDATESEARCHHISTORY } from \"../../../graphQL/useMutationUpdateSearchHistory\";\r\nimport { REMOVESEARCHHISTORY } from \"../../../graphQL/useMutationRemoveSearchHistory\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .MuiInput-root\": {\r\n      height: \"50px\",\r\n      paddingRight: \"8px\",\r\n    },\r\n    \"& > div\": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  inputAdornment: {\r\n    padding: \"0 8px\",\r\n    cursor: \"context-menu\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst capitalizeFirstLetter = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nconst joinAddress = (row) => {\r\n  let rowData = {\r\n    Address1: row.Address1,\r\n    Address2: row.Address2,\r\n    City: row.City,\r\n    State: row.State,\r\n    Zip: row.Zip,\r\n    Country: row.Country,\r\n  };\r\n  let textArray = [];\r\n  for (const key in rowData) {\r\n    if (rowData.hasOwnProperty(key) && rowData[key] && rowData[key] !== \"\") {\r\n      if (key === \"Zip\" || key === \"Country\") {\r\n        textArray = [\r\n          [textArray.join(\", \"), capitalizeFirstLetter(rowData[key])].join(\" \"),\r\n        ];\r\n      } else textArray.push(capitalizeFirstLetter(rowData[key]));\r\n    }\r\n  }\r\n\r\n  return textArray.join(\", \");\r\n};\r\n\r\nexport default function MapGridCardSearch(props) {\r\n  const classes = useStyles();\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [options, setOptions] = React.useState([]);\r\n  const [searchTop] = React.useState(100);\r\n\r\n  const callWellSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        const endpoint =\r\n          \"https://m1search.search.windows.net/indexes/wellheader-index/docs?api-version=2019-05-06&$count=true&searchFields=WellName,ApiNumber&$top=\" +\r\n          searchTop +\r\n          \"&search=\" +\r\n          request.input;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        };\r\n\r\n        console.log(\r\n          \"request made to wellheader-index search at: \" + new Date().toString()\r\n        );\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log(response);\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  const callOwnerSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        const endpoint =\r\n          \"https://m1search.search.windows.net/indexes/lod2019-index/docs?api-version=2019-05-06&%24count=true&searchFields=OwnerName%2CAddress1&%24top=\" +\r\n          searchTop +\r\n          \"&search=\" +\r\n          request.input;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        };\r\n\r\n        console.log(\r\n          \"request made to lod2019-index search at: \" + new Date().toString()\r\n        );\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log(response);\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  const callOperatorSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        const endpoint =\r\n          \"https://m1search.search.windows.net/indexes/operator-index/docs?api-version=2019-05-06&$count=true&searchFields=Operator&$top=\" +\r\n          searchTop +\r\n          \"&search=\" +\r\n          request.input;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        };\r\n\r\n        console.log(\r\n          \"request made to operator-index search at: \" + new Date().toString()\r\n        );\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log(response);\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  const callLeaseSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        const endpoint =\r\n          \"https://m1search.search.windows.net/indexes/lease-index/docs?api-version=2019-05-06&$count=true&searchFields=Lease,LeaseId&$top=\" +\r\n          searchTop +\r\n          \"&search=\" +\r\n          request.input;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        };\r\n\r\n        console.log(\r\n          \"request made to lease-index search at: \" + new Date().toString()\r\n        );\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log(response);\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  const callMapboxSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        const endpoint = `https://api.mapbox.com/geocoding/v5/mapbox.places/${\r\n          request.input\r\n        }.json?access_token=${\r\n          stateApp.mapboxglAccessToken\r\n        }&autocomplete=true&country=us%2Cca&limit=${\r\n          searchTop > 10 ? 10 : searchTop\r\n        }`;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers,\r\n        };\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (inputValue === \"\") {\r\n      setStateApp((state) => ({\r\n        ...state,\r\n        searchResultData: [],\r\n        searchloading: false,\r\n      }));\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      let newOptions = [];\r\n\r\n      Promise.all([\r\n        props.searchOption == \"well\"\r\n          ? callWellSearch({ input: inputValue }, (results) => {\r\n              if (results) {\r\n                const indexSource = results[\"@odata.context\"].substring(\r\n                  results[\"@odata.context\"].indexOf(\"('\") + 2,\r\n                  results[\"@odata.context\"].indexOf(\"')\")\r\n                );\r\n\r\n                console.log(indexSource);\r\n                newOptions = [...results.value];\r\n              }\r\n              setStateApp((state) => ({\r\n                ...state,\r\n                searchResultData: [...newOptions],\r\n                searchloading: false,\r\n              }));\r\n            })\r\n          : null,\r\n        props.searchOption == \"owner\"\r\n          ? callOwnerSearch({ input: inputValue }, (results) => {\r\n              if (results) {\r\n                const indexSource = results[\"@odata.context\"].substring(\r\n                  results[\"@odata.context\"].indexOf(\"('\") + 2,\r\n                  results[\"@odata.context\"].indexOf(\"')\")\r\n                );\r\n                console.log(indexSource);\r\n                newOptions = [\r\n                  ...results.value.map((result) => {\r\n                    return {\r\n                      ...result,\r\n                      FullAddress: joinAddress(result),\r\n                    };\r\n                  }),\r\n                ];\r\n              }\r\n\r\n              setStateApp((state) => ({\r\n                ...state,\r\n                searchResultData: [...newOptions],\r\n                searchloading: false,\r\n              }));\r\n            })\r\n          : null,\r\n        props.searchOption == \"operator\"\r\n          ? callOperatorSearch({ input: inputValue }, (results) => {\r\n              if (results) {\r\n                const indexSource = results[\"@odata.context\"].substring(\r\n                  results[\"@odata.context\"].indexOf(\"('\") + 2,\r\n                  results[\"@odata.context\"].indexOf(\"')\")\r\n                );\r\n                console.log(indexSource);\r\n                newOptions = [...results.value];\r\n              }\r\n\r\n              setStateApp((state) => ({\r\n                ...state,\r\n                searchResultData: [...newOptions],\r\n                searchloading: false,\r\n              }));\r\n            })\r\n          : null,\r\n        props.searchOption == \"lease\"\r\n          ? callLeaseSearch({ input: inputValue }, (results) => {\r\n              if (results) {\r\n                const indexSource = results[\"@odata.context\"].substring(\r\n                  results[\"@odata.context\"].indexOf(\"('\") + 2,\r\n                  results[\"@odata.context\"].indexOf(\"')\")\r\n                );\r\n                console.log(indexSource);\r\n                newOptions = [\r\n                  ...results.value.map((result) => {\r\n                    return {\r\n                      ...result,\r\n                      Lease:\r\n                        result.Lease &&\r\n                        (result.Lease === \"N/A\" || result.Lease === \"(N/A)\")\r\n                          ? null\r\n                          : result.Lease,\r\n                      LeaseId:\r\n                        result.LeaseId &&\r\n                        (result.LeaseId === \"N/A\" || result.LeaseId === \"(N/A)\")\r\n                          ? null\r\n                          : result.LeaseId,\r\n                    };\r\n                  }),\r\n                ];\r\n              }\r\n\r\n              setStateApp((state) => ({\r\n                ...state,\r\n                searchResultData: [...newOptions],\r\n                searchloading: false,\r\n              }));\r\n            })\r\n          : null,\r\n        props.searchOption == \"location\"\r\n          ? callMapboxSearch({ input: inputValue }, (results) => {\r\n              if (results && results.features) {\r\n                newOptions = [\r\n                  ...results.features.map((result) => {\r\n                    return {\r\n                      ...result,\r\n                      Id: result.id,\r\n                      Primary: result.text ? result.text : \"\",\r\n                      Secondary: result.place_name\r\n                        ? result.place_name.indexOf(result.text + \", \") === 0\r\n                          ? result.place_name.slice(\r\n                              result.place_name.indexOf(\", \") + 2,\r\n                              result.place_name.length\r\n                            )\r\n                          : result.place_name\r\n                        : \"\",\r\n                    };\r\n                  }),\r\n                ];\r\n              }\r\n\r\n              setStateApp((state) => ({\r\n                ...state,\r\n                searchResultData: [...newOptions],\r\n                searchloading: false,\r\n              }));\r\n            })\r\n          : null,\r\n      ]);\r\n    })();\r\n  }, [\r\n    inputValue,\r\n    callWellSearch,\r\n    callOwnerSearch,\r\n    callOperatorSearch,\r\n    callLeaseSearch,\r\n    callMapboxSearch,\r\n    props.searchOption,\r\n  ]);\r\n\r\n  return (\r\n    <form\r\n      className={`cancelDraggableEffect ${classes.root}`}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n      <TextField\r\n        id=\"mapGridCardSearch-basic\"\r\n        type=\"search\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment\r\n              className={classes.inputAdornment}\r\n              position=\"start\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                props.ativateSearchPanel();\r\n              }}\r\n            >\r\n              <SearchIcon htmlColor=\"#757575\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        onClick={props.ativateSearchPanel}\r\n        value={inputValue}\r\n        onChange={(event) => {\r\n          setInputValue(event.target.value);\r\n          if (!stateApp.searchloading)\r\n            setStateApp((state) => ({\r\n              ...state,\r\n              searchloading: true,\r\n            }));\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}