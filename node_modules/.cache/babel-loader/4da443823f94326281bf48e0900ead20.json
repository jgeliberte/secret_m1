{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterDefaultListGeo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  paparMain: {\n    boxShadow: \"none\",\n    padding: \"2px 6px\"\n  },\n  listItem: {\n    margin: 4,\n    flex: \"1 1 auto\",\n    justifyContent: \"space-between\",\n    minWidth: 278\n  },\n  chip: {\n    textAlign: \"center\"\n  },\n  chipContainer: {\n    height: \"100%\",\n    margin: \"6px 6px\"\n  },\n  chipRow: {\n    textAlign: \"center\",\n    padding: \"1px 0px\"\n  },\n  deleteButton: {\n    float: \"right\"\n  },\n  listLabel: {\n    padding: \"6px 30px\",\n    display: \"inline-flex\"\n  },\n  listItemContainer: {\n    display: \"inherit\",\n    \"&:hover\": {\n      color: \"transparent\"\n    }\n  }\n}));\nexport default function FilterDedaultListGeo(props) {\n  const [filtersTypeArrSCSA, setFiltersTypeArrSCSA] = useState(null);\n  const [filtersTypeArr, setFiltersTypeArr] = useState(null);\n  const [filterNameType, setFilterNameType] = useState(null);\n  const classes = useStyles();\n  useEffect(() => {\n    if (props) {\n      if (props.filters[1].length > 0) {\n        setFiltersTypeArr(props.filters[1]);\n      }\n\n      if (props.filters[0].length > 0) {\n        setFiltersTypeArrSCSA(props.filters[0]);\n      }\n\n      setFilterNameType(props.type);\n    }\n  }, [props]);\n\n  const removeNameFromType = string => {\n    if (string.includes(\"basin\")) {\n      return string.replace(\"basin\", \"Basin\");\n    }\n\n    if (string.includes(\"play\")) {\n      return string.replace(\"play\", \"Play\");\n    }\n\n    if (string.includes(\"state\")) {\n      return string.replace(\"state\", \"State\");\n    }\n\n    if (string.includes(\"county\")) {\n      return string.replace(\"county\", \"County\");\n    }\n\n    if (string.includes(\"survey\")) {\n      return string.replace(\"survey\", \"Survey\");\n    }\n\n    if (string.includes(\"abstract\")) {\n      return string.replace(\"abstract\", \"Abstract\");\n    }\n  };\n\n  const removeChip = (e, name) => () => {\n    const {\n      deleteChip\n    } = props;\n    deleteChip(e, name);\n  };\n\n  const removeChipSCSA = (e, name) => () => {\n    const {\n      deleteChipGeoSCSA\n    } = props;\n    deleteChipGeoSCSA(e, name);\n  };\n\n  const removeAllFilters = () => {\n    const {\n      removeAll\n    } = props;\n    removeAll();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, props.filters && props.filters.length > 0 ? /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paparMain,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    \"aria-label\": \"mailbox folders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.listLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, filterNameType), /*#__PURE__*/React.createElement(Button, {\n    className: classes.deleteButton,\n    endIcon: /*#__PURE__*/React.createElement(HighlightOffIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 24\n      }\n    }),\n    \"aria-label\": \"delete\",\n    onClick: removeAllFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Clear All\"), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItemContainer,\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, filtersTypeArr ? filtersTypeArr.map(elm => elm[1].length === 5 ? elm[1][2].map(el => /*#__PURE__*/React.createElement(Chip, {\n    key: el,\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, removeNameFromType(elm[1][1][1])), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, el)),\n    onDelete: removeChip(el, elm[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 27\n    }\n  })) : null) : null, filtersTypeArrSCSA ? filtersTypeArrSCSA.map(ele => ele[1][1] && ele[1][1].length === 5 ? /*#__PURE__*/React.createElement(Chip, {\n    key: ele[1][1][2],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, removeNameFromType(ele[1][1][1][1])), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, ele[1][1][2])),\n    onDelete: removeChipSCSA(ele[1][1][2], ele[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArrSCSA ? filtersTypeArrSCSA.map(elem => elem[1][2] && elem[1][2].length === 5 ? /*#__PURE__*/React.createElement(Chip, {\n    key: elem[1][2][2],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, removeNameFromType(elem[1][2][1][1])), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, elem[1][2][2])),\n    onDelete: removeChipSCSA(elem[1][2][2], elem[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArrSCSA ? filtersTypeArrSCSA.map(elemt => elemt[1][3] && elemt[1][3].length === 5 ? /*#__PURE__*/React.createElement(Chip, {\n    key: elemt[1][3][2],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, removeNameFromType(elemt[1][3][1][1])), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, elemt[1][3][2])),\n    onDelete: removeChipSCSA(elemt[1][3][2], elemt[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArrSCSA ? filtersTypeArrSCSA.map(e => e[1][4] && e[1][4].length === 5 ? /*#__PURE__*/React.createElement(Chip, {\n    key: e[1][4][2],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, removeNameFromType(e[1][4][1][1])), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, e[1][4][2])),\n    onDelete: removeChipSCSA(e[1][4][2], e[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 23\n    }\n  }) : null) : null), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  })))) : null);\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterDefaultListGeo.js"],"names":["React","useEffect","useState","Paper","List","Chip","ListItem","Divider","HighlightOffIcon","makeStyles","Button","useStyles","theme","paparMain","boxShadow","padding","listItem","margin","flex","justifyContent","minWidth","chip","textAlign","chipContainer","height","chipRow","deleteButton","float","listLabel","display","listItemContainer","color","FilterDedaultListGeo","props","filtersTypeArrSCSA","setFiltersTypeArrSCSA","filtersTypeArr","setFiltersTypeArr","filterNameType","setFilterNameType","classes","filters","length","type","removeNameFromType","string","includes","replace","removeChip","e","name","deleteChip","removeChipSCSA","deleteChipGeoSCSA","removeAllFilters","removeAll","map","elm","el","ele","elem","elemt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paparMain: {\r\n    boxShadow: \"none\",\r\n    padding: \"2px 6px\",\r\n  },\r\n  listItem: {\r\n    margin: 4,\r\n    flex: \"1 1 auto\",\r\n    justifyContent: \"space-between\",\r\n    minWidth: 278,\r\n  },\r\n  chip: {\r\n    textAlign: \"center\",\r\n  },\r\n  chipContainer: {\r\n    height: \"100%\",\r\n    margin: \"6px 6px\",\r\n  },\r\n  chipRow: {\r\n    textAlign: \"center\",\r\n    padding: \"1px 0px\",\r\n  },\r\n  deleteButton: {\r\n    float: \"right\",\r\n  },\r\n  listLabel: {\r\n    padding: \"6px 30px\",\r\n    display: \"inline-flex\",\r\n  },\r\n  listItemContainer: {\r\n    display: \"inherit\",\r\n    \"&:hover\": {\r\n      color: \"transparent\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FilterDedaultListGeo(props) {\r\n  const [filtersTypeArrSCSA, setFiltersTypeArrSCSA] = useState(null);\r\n  const [filtersTypeArr, setFiltersTypeArr] = useState(null);\r\n  const [filterNameType, setFilterNameType] = useState(null);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (props) {\r\n      if (props.filters[1].length > 0) {\r\n        setFiltersTypeArr(props.filters[1]);\r\n      }\r\n      if (props.filters[0].length > 0) {\r\n        setFiltersTypeArrSCSA(props.filters[0]);\r\n      }\r\n      setFilterNameType(props.type);\r\n    }\r\n  }, [props]);\r\n  \r\n  const removeNameFromType = (string) => {\r\n    if (string.includes(\"basin\")) {\r\n      return string.replace(\"basin\", \"Basin\");\r\n    }\r\n    if (string.includes(\"play\")) {\r\n      return string.replace(\"play\", \"Play\");\r\n    }\r\n    if (string.includes(\"state\")) {\r\n      return string.replace(\"state\", \"State\");\r\n    }\r\n    if (string.includes(\"county\")) {\r\n      return string.replace(\"county\", \"County\");\r\n    }\r\n    if (string.includes(\"survey\")) {\r\n      return string.replace(\"survey\", \"Survey\");\r\n    }\r\n    if (string.includes(\"abstract\")) {\r\n      return string.replace(\"abstract\", \"Abstract\");\r\n    }\r\n  };\r\n  \r\n  const removeChip = (e, name) => () => {\r\n    const { deleteChip } = props;\r\n    deleteChip(e, name);\r\n  };\r\n\r\n  const removeChipSCSA = (e, name) => () => {\r\n    const { deleteChipGeoSCSA } = props;\r\n    deleteChipGeoSCSA(e, name);\r\n  };\r\n\r\n  const removeAllFilters = () => {\r\n    const { removeAll } = props;\r\n    removeAll();\r\n  };\r\n \r\n  return (\r\n    <div>\r\n      {props.filters && props.filters.length > 0 ? (\r\n      <Paper className={classes.paparMain} square>\r\n        <List aria-label=\"mailbox folders\">\r\n          <div>\r\n            <div className={classes.listLabel}>{filterNameType}</div>\r\n            <Button\r\n              className={classes.deleteButton}\r\n              endIcon={<HighlightOffIcon />}\r\n              aria-label=\"delete\"\r\n              onClick={removeAllFilters}\r\n            >\r\n              Clear All\r\n            </Button>\r\n            <ListItem className={classes.listItemContainer} button>\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((elm) =>\r\n                    elm[1].length === 5\r\n                      ? elm[1][2].map((el) => (\r\n                          <Chip\r\n                            key={el}\r\n                            className={classes.chipContainer}\r\n                            label={\r\n                              <section>\r\n                                <div className={classes.chip}>\r\n                                  {removeNameFromType(elm[1][1][1])}\r\n                                </div>\r\n                                <div className={classes.chipRow}>{el}</div>\r\n                              </section>\r\n                            }\r\n                            onDelete={removeChip(el,elm[0])}\r\n                          />\r\n                        ))\r\n                      : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArrSCSA\r\n                ? filtersTypeArrSCSA.map((ele) =>\r\n                    ele[1][1] && ele[1][1].length === 5 ? (\r\n                      <Chip\r\n                        key={ele[1][1][2]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>\r\n                              {removeNameFromType(ele[1][1][1][1])}\r\n                            </div>\r\n                            <div className={classes.chipRow}>\r\n                              {ele[1][1][2]}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipSCSA(ele[1][1][2], ele[0])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArrSCSA\r\n                ? filtersTypeArrSCSA.map((elem) =>\r\n                    elem[1][2] && elem[1][2].length === 5 ? (\r\n                      <Chip\r\n                        key={elem[1][2][2]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>\r\n                              {removeNameFromType(elem[1][2][1][1])}\r\n                            </div>\r\n                            <div className={classes.chipRow}>\r\n                              {elem[1][2][2]}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipSCSA(elem[1][2][2], elem[0])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArrSCSA\r\n                ? filtersTypeArrSCSA.map((elemt) =>\r\n                    elemt[1][3] && elemt[1][3].length === 5 ? (\r\n                      <Chip\r\n                        key={elemt[1][3][2]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>\r\n                              {removeNameFromType(elemt[1][3][1][1])}\r\n                            </div>\r\n                            <div className={classes.chipRow}>\r\n                              {elemt[1][3][2]}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipSCSA(elemt[1][3][2], elemt[0])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArrSCSA\r\n                ? filtersTypeArrSCSA.map((e) =>\r\n                    e[1][4] && e[1][4].length === 5 ? (\r\n                      <Chip\r\n                        key={e[1][4][2]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>{removeNameFromType(e[1][4][1][1])}</div>\r\n                            <div className={classes.chipRow}>{e[1][4][2]}</div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipSCSA(e[1][4][2], e[0])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n            </ListItem>\r\n            <Divider />\r\n          </div>\r\n        </List>\r\n      </Paper>\r\n      )\r\n      : null}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}