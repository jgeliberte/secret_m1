{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Shared\\\\M1nTable\\\\components\\\\SubComponents\\\\PrintLabelsDialogContent.js\";\nimport React, { useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { Grid } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })) : null);\n});\n\nconst capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst joinAddress = row => {\n  let rowData = row.address1 || row.address2 || row.city || row.state || row.zip || row.country ? {\n    address1: row.address1,\n    address2: row.address2,\n    city: row.city,\n    state: row.state,\n    zip: row.zip,\n    country: row.country\n  } : {\n    address1: row.address1Alt,\n    address2: row.address2Alt,\n    city: row.cityAlt,\n    state: row.stateAlt,\n    zip: row.zipAlt,\n    country: row.countryAlt\n  };\n  let textArray = [];\n\n  for (const key in rowData) {\n    if (rowData.hasOwnProperty(key) && rowData[key] && rowData[key] !== \"\") {\n      if (key === \"zip\" || key === \"country\") {\n        textArray = [[textArray.join(\", \"), capitalizeFirstLetter(rowData[key])].join(\" \")];\n      } else textArray.push(capitalizeFirstLetter(rowData[key]));\n    }\n  }\n\n  return textArray.join(\", \");\n};\n\nconst useStyles = makeStyles({});\nexport default function PrintLabelsDialogContent(props) {\n  const classes = useStyles();\n  const recipientData = [`Contact Name${props.rows && props.rows.length > 1 ? \"s\" : \"\"}`, \"“Current Owner”\"];\n  const labelTypeData = ['Avery 5160: 2 5/8\" X 1\"', 'Avery 5161: 4\" X 1\"', 'Avery 5162: 4\" X 1.33\"'];\n  const [recipientValue, setRecipientValue] = React.useState(recipientData[0]);\n  useEffect(() => {\n    if (!props.rows || props.rows.length === 0) props.onClose();\n  }, [props.rows]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: props.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Print Mailing Labels\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      paddingBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: recipientData,\n    getOptionLabel: option => option,\n    style: {\n      marginBottom: \"10px\"\n    },\n    value: recipientValue,\n    onChange: (event, newValue) => {\n      setRecipientValue(newValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Recipient Name\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    options: labelTypeData,\n    getOptionLabel: option => option,\n    style: {\n      marginBottom: \"10px\"\n    },\n    defaultValue: labelTypeData[0],\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Label Type\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      margin: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, props.rows && props.rows.length ? props.rows.length : \"\", \" Label\", props.rows && props.rows.length && props.rows.length > 1 ? \"s\" : \"\", \" \", \"To Print\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    style: {\n      borderTop: \"1px solid rgba(224, 224, 224, 1)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, props.rows && props.rows.map((row, index) => /*#__PURE__*/React.createElement(TableRow, {\n    key: row._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    style: {\n      padding: \"0 0 0 10px\",\n      fontSize: \"0.8rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, recipientValue === \"“Current Owner”\" ? \"Current Owner\" : row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    style: {\n      padding: \"0 0 0 10px\",\n      fontSize: \"0.8rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, joinAddress(row)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    style: {\n      padding: \"0 0 0 10px\",\n      fontSize: \"0.8rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    onClick: () => {\n      let reducedRows = [...props.rows];\n      reducedRows.splice(index, 1);\n      props.setRows(reducedRows);\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 27\n    }\n  })))))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      props.onClose();\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {},\n    color: \"secondary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, \"Print Labels\")));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Shared/M1nTable/components/SubComponents/PrintLabelsDialogContent.js"],"names":["React","useEffect","withStyles","makeStyles","DialogActions","Button","MuiDialogTitle","IconButton","CloseIcon","Typography","DialogContent","Grid","Table","TableBody","TableCell","TableRow","DeleteIcon","TextField","Autocomplete","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","capitalizeFirstLetter","string","charAt","toUpperCase","slice","joinAddress","row","rowData","address1","address2","city","state","zip","country","address1Alt","address2Alt","cityAlt","stateAlt","zipAlt","countryAlt","textArray","key","hasOwnProperty","join","push","useStyles","PrintLabelsDialogContent","recipientData","rows","length","labelTypeData","recipientValue","setRecipientValue","useState","paddingBottom","option","marginBottom","event","newValue","params","borderTop","map","index","_id","fontSize","name","reducedRows","splice","setRows"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFL,GADmB;AAKzBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,KAAK,EAAEP,KAAK,CAACI,OAAN,CAAc,CAAd,CAFI;AAGXI,IAAAA,GAAG,EAAER,KAAK,CAACI,OAAN,CAAc,CAAd,CAHM;AAIXK,IAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAJI;AALY,CAAZ,CAAf;;AAaA,MAAMC,WAAW,GAAG9B,UAAU,CAACiB,MAAD,CAAV,CAAoBc,KAAD,IAAW;AAChD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,OAArB;AAA8B,OAAGC;AAAjC,MAA2CJ,KAAjD;AACA,sBACE,oBAAC,cAAD;AAAgB,IAAA,iBAAiB,MAAjC;AAAkC,IAAA,SAAS,EAAEE,OAAO,CAACd;AAArD,KAA+DgB,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,QAA1B,CADF,EAEGE,OAAO,gBACN,oBAAC,UAAD;AACE,kBAAW,OADb;AAEE,IAAA,SAAS,EAAED,OAAO,CAACV,WAFrB;AAGE,IAAA,OAAO,EAAEW,OAHX;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADM,GASJ,IAXN,CADF;AAeD,CAjBmB,CAApB;;AAmBA,MAAME,qBAAqB,GAAIC,MAAD,IAAY;AACxC,SAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3B,MAAIC,OAAO,GACTD,GAAG,CAACE,QAAJ,IACAF,GAAG,CAACG,QADJ,IAEAH,GAAG,CAACI,IAFJ,IAGAJ,GAAG,CAACK,KAHJ,IAIAL,GAAG,CAACM,GAJJ,IAKAN,GAAG,CAACO,OALJ,GAMI;AACEL,IAAAA,QAAQ,EAAEF,GAAG,CAACE,QADhB;AAEEC,IAAAA,QAAQ,EAAEH,GAAG,CAACG,QAFhB;AAGEC,IAAAA,IAAI,EAAEJ,GAAG,CAACI,IAHZ;AAIEC,IAAAA,KAAK,EAAEL,GAAG,CAACK,KAJb;AAKEC,IAAAA,GAAG,EAAEN,GAAG,CAACM,GALX;AAMEC,IAAAA,OAAO,EAAEP,GAAG,CAACO;AANf,GANJ,GAcI;AACEL,IAAAA,QAAQ,EAAEF,GAAG,CAACQ,WADhB;AAEEL,IAAAA,QAAQ,EAAEH,GAAG,CAACS,WAFhB;AAGEL,IAAAA,IAAI,EAAEJ,GAAG,CAACU,OAHZ;AAIEL,IAAAA,KAAK,EAAEL,GAAG,CAACW,QAJb;AAKEL,IAAAA,GAAG,EAAEN,GAAG,CAACY,MALX;AAMEL,IAAAA,OAAO,EAAEP,GAAG,CAACa;AANf,GAfN;AAuBA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,MAAMC,GAAX,IAAkBd,OAAlB,EAA2B;AACzB,QAAIA,OAAO,CAACe,cAAR,CAAuBD,GAAvB,KAA+Bd,OAAO,CAACc,GAAD,CAAtC,IAA+Cd,OAAO,CAACc,GAAD,CAAP,KAAiB,EAApE,EAAwE;AACtE,UAAIA,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,SAA7B,EAAwC;AACtCD,QAAAA,SAAS,GAAG,CACV,CAACA,SAAS,CAACG,IAAV,CAAe,IAAf,CAAD,EAAuBvB,qBAAqB,CAACO,OAAO,CAACc,GAAD,CAAR,CAA5C,EAA4DE,IAA5D,CAAiE,GAAjE,CADU,CAAZ;AAGD,OAJD,MAIOH,SAAS,CAACI,IAAV,CAAexB,qBAAqB,CAACO,OAAO,CAACc,GAAD,CAAR,CAApC;AACR;AACF;;AAED,SAAOD,SAAS,CAACG,IAAV,CAAe,IAAf,CAAP;AACD,CApCD;;AAsCA,MAAME,SAAS,GAAG5D,UAAU,CAAC,EAAD,CAA5B;AAEA,eAAe,SAAS6D,wBAAT,CAAkC/B,KAAlC,EAAyC;AACtD,QAAME,OAAO,GAAG4B,SAAS,EAAzB;AACA,QAAME,aAAa,GAAG,CACnB,eAAchC,KAAK,CAACiC,IAAN,IAAcjC,KAAK,CAACiC,IAAN,CAAWC,MAAX,GAAoB,CAAlC,GAAsC,GAAtC,GAA4C,EAAG,EAD1C,EAEpB,iBAFoB,CAAtB;AAIA,QAAMC,aAAa,GAAG,CACpB,yBADoB,EAEpB,qBAFoB,EAGpB,wBAHoB,CAAtB;AAKA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCtE,KAAK,CAACuE,QAAN,CAAeN,aAAa,CAAC,CAAD,CAA5B,CAA5C;AAEAhE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACgC,KAAK,CAACiC,IAAP,IAAejC,KAAK,CAACiC,IAAN,CAAWC,MAAX,KAAsB,CAAzC,EAA4ClC,KAAK,CAACG,OAAN;AAC7C,GAFQ,EAEN,CAACH,KAAK,CAACiC,IAAP,CAFM,CAAT;AAIA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAA0C,IAAA,OAAO,EAAEjC,KAAK,CAACG,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,KAAK,EAAE;AAAEoC,MAAAA,aAAa,EAAE;AAAjB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAEP,aADX;AAEE,IAAA,cAAc,EAAGQ,MAAD,IAAYA,MAF9B;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAHT;AAIE,IAAA,KAAK,EAAEL,cAJT;AAKE,IAAA,QAAQ,EAAE,CAACM,KAAD,EAAQC,QAAR,KAAqB;AAC7BN,MAAAA,iBAAiB,CAACM,QAAD,CAAjB;AACD,KAPH;AAQE,IAAA,WAAW,EAAGC,MAAD,iBACX,oBAAC,SAAD,oBACMA,MADN;AAEE,MAAA,KAAK,EAAC,gBAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAiBE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAET,aADX;AAEE,IAAA,cAAc,EAAGK,MAAD,IAAYA,MAF9B;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAHT;AAIE,IAAA,YAAY,EAAEN,aAAa,CAAC,CAAD,CAJ7B;AAKE,IAAA,WAAW,EAAGS,MAAD,iBACX,oBAAC,SAAD,oBAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,YAA7B;AAA0C,MAAA,OAAO,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,eA4BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAE;AAAEvD,MAAAA,MAAM,EAAE;AAAV,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,KAAK,CAACiC,IAAN,IAAcjC,KAAK,CAACiC,IAAN,CAAWC,MAAzB,GAAkClC,KAAK,CAACiC,IAAN,CAAWC,MAA7C,GAAsD,EADzD,YAEGlC,KAAK,CAACiC,IAAN,IAAcjC,KAAK,CAACiC,IAAN,CAAWC,MAAzB,IAAmClC,KAAK,CAACiC,IAAN,CAAWC,MAAX,GAAoB,CAAvD,GACG,GADH,GAEG,EAJN,EAIU,GAJV,aADF,CA5BF,eAqCE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAW,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEW,MAAAA,SAAS,EAAE;AAAb,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG7C,KAAK,CAACiC,IAAN,IACCjC,KAAK,CAACiC,IAAN,CAAWa,GAAX,CAAe,CAACnC,GAAD,EAAMoC,KAAN,kBACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEpC,GAAG,CAACqC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAC,IADZ;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,KAAK,EAAE;AAAE1D,MAAAA,OAAO,EAAE,YAAX;AAAyB2D,MAAAA,QAAQ,EAAE;AAAnC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGb,cAAc,KAAK,iBAAnB,GACG,eADH,GAEGzB,GAAG,CAACuC,IAPV,CADF,eAWE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,KAAK,EAAE;AAAE5D,MAAAA,OAAO,EAAE,YAAX;AAAyB2D,MAAAA,QAAQ,EAAE;AAAnC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGvC,WAAW,CAACC,GAAD,CAJd,CAXF,eAiBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,KAAK,EAAE;AAAErB,MAAAA,OAAO,EAAE,YAAX;AAAyB2D,MAAAA,QAAQ,EAAE;AAAnC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,UAAD;AACE,kBAAW,QADb;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIE,WAAW,GAAG,CAAC,GAAGnD,KAAK,CAACiC,IAAV,CAAlB;AACAkB,MAAAA,WAAW,CAACC,MAAZ,CAAmBL,KAAnB,EAA0B,CAA1B;AACA/C,MAAAA,KAAK,CAACqD,OAAN,CAAcF,WAAd;AACD,KANH;AAOE,IAAA,IAAI,EAAC,OAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAJF,CAjBF,CADF,CAJJ,CADF,CADF,CArCF,CADF,CAJF,eAyFE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbnD,MAAAA,KAAK,CAACG,OAAN;AACD,KAHH;AAIE,IAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM,CAAE,CAAzB;AAA2B,IAAA,KAAK,EAAC,WAAjC;AAA6C,IAAA,OAAO,EAAC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,CAzFF,CADF;AAyGD","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n          size=\"small\"\r\n        >\r\n          <CloseIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst capitalizeFirstLetter = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nconst joinAddress = (row) => {\r\n  let rowData =\r\n    row.address1 ||\r\n    row.address2 ||\r\n    row.city ||\r\n    row.state ||\r\n    row.zip ||\r\n    row.country\r\n      ? {\r\n          address1: row.address1,\r\n          address2: row.address2,\r\n          city: row.city,\r\n          state: row.state,\r\n          zip: row.zip,\r\n          country: row.country,\r\n        }\r\n      : {\r\n          address1: row.address1Alt,\r\n          address2: row.address2Alt,\r\n          city: row.cityAlt,\r\n          state: row.stateAlt,\r\n          zip: row.zipAlt,\r\n          country: row.countryAlt,\r\n        };\r\n  let textArray = [];\r\n  for (const key in rowData) {\r\n    if (rowData.hasOwnProperty(key) && rowData[key] && rowData[key] !== \"\") {\r\n      if (key === \"zip\" || key === \"country\") {\r\n        textArray = [\r\n          [textArray.join(\", \"), capitalizeFirstLetter(rowData[key])].join(\" \"),\r\n        ];\r\n      } else textArray.push(capitalizeFirstLetter(rowData[key]));\r\n    }\r\n  }\r\n\r\n  return textArray.join(\", \");\r\n};\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nexport default function PrintLabelsDialogContent(props) {\r\n  const classes = useStyles();\r\n  const recipientData = [\r\n    `Contact Name${props.rows && props.rows.length > 1 ? \"s\" : \"\"}`,\r\n    \"“Current Owner”\",\r\n  ];\r\n  const labelTypeData = [\r\n    'Avery 5160: 2 5/8\" X 1\"',\r\n    'Avery 5161: 4\" X 1\"',\r\n    'Avery 5162: 4\" X 1.33\"',\r\n  ];\r\n  const [recipientValue, setRecipientValue] = React.useState(recipientData[0]);\r\n\r\n  useEffect(() => {\r\n    if (!props.rows || props.rows.length === 0) props.onClose();\r\n  }, [props.rows]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={props.onClose}>\r\n        Print Mailing Labels\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2} style={{ paddingBottom: \"10px\" }}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              options={recipientData}\r\n              getOptionLabel={(option) => option}\r\n              style={{ marginBottom: \"10px\" }}\r\n              value={recipientValue}\r\n              onChange={(event, newValue) => {\r\n                setRecipientValue(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Recipient Name\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n            <Autocomplete\r\n              options={labelTypeData}\r\n              getOptionLabel={(option) => option}\r\n              style={{ marginBottom: \"10px\" }}\r\n              defaultValue={labelTypeData[0]}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Label Type\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <h3 style={{ margin: \"0\" }}>\r\n              {props.rows && props.rows.length ? props.rows.length : \"\"} Label\r\n              {props.rows && props.rows.length && props.rows.length > 1\r\n                ? \"s\"\r\n                : \"\"}{\" \"}\r\n              To Print\r\n            </h3>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n              <TableBody\r\n                style={{ borderTop: \"1px solid rgba(224, 224, 224, 1)\" }}\r\n              >\r\n                {props.rows &&\r\n                  props.rows.map((row, index) => (\r\n                    <TableRow key={row._id}>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        style={{ padding: \"0 0 0 10px\", fontSize: \"0.8rem\" }}\r\n                      >\r\n                        {recipientValue === \"“Current Owner”\"\r\n                          ? \"Current Owner\"\r\n                          : row.name}\r\n                      </TableCell>\r\n\r\n                      <TableCell\r\n                        align=\"right\"\r\n                        style={{ padding: \"0 0 0 10px\", fontSize: \"0.8rem\" }}\r\n                      >\r\n                        {joinAddress(row)}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"right\"\r\n                        style={{ padding: \"0 0 0 10px\", fontSize: \"0.8rem\" }}\r\n                      >\r\n                        <IconButton\r\n                          aria-label=\"delete\"\r\n                          onClick={() => {\r\n                            let reducedRows = [...props.rows];\r\n                            reducedRows.splice(index, 1);\r\n                            props.setRows(reducedRows);\r\n                          }}\r\n                          size=\"small\"\r\n                        >\r\n                          <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            props.onClose();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => {}} color=\"secondary\" variant=\"contained\">\r\n          Print Labels\r\n        </Button>\r\n      </DialogActions>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}