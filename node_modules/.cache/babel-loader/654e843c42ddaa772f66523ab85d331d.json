{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterDatePickerFirstProd.js\";\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport moment from \"moment\";\nimport { NavigationContext } from \"../NavigationContext\";\nimport Grid from '@material-ui/core/Grid'; // DOCUMENTATION FOR THIS COMPONENT IS ON FILTERDATEPICKERPERMIT\n\nconst useStyles = makeStyles(theme => ({\n  root: {// display: \"flex\",\n    // flexWrap: \"wrap\",\n    // flexDirection: \"column\",\n    // justifyContent: \"space-around\",\n    // flexGrow: 1\n  },\n  datesRow: {\n    display: \"flex\",\n    flexDirection: \"row\" // flex: 1,\n    // flexGrow: 1\n\n  },\n  datePicker: {\n    margin: \"15px\",\n    // minWidth: 175,\n    // maxWidth: 176,\n    \"&& span\": {\n      pointerEvents: \"none\"\n    }\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 10\n  }\n}));\nexport default function FilterDatePickerFirstProd(props) {\n  const classes = useStyles();\n  const [stateNav, setStateNav] = useContext(NavigationContext);\n  const [selectedStartDate, handleStartDateChang] = useState(moment().subtract(120, 'Years'));\n  const [selectedEndDate, handleEndDateChange] = useState(moment());\n  const [firstProductionFromDate, setFirstProductionFromDate] = useState({\n    check: false,\n    date: moment()\n  });\n  const [firstProductionToDate, setFirstProductionToDate] = useState({\n    check: false,\n    date: moment()\n  });\n  const [dateTypeName, setDateTypeName] = useState(stateNav.dateTypeName ? stateNav.dateTypeName : []);\n  const setFilterName = useCallback(() => {\n    let filter;\n\n    if (firstProductionFromDate.date._isValid === true && firstProductionToDate.date._isValid === true) {\n      const checkDate = moment.parseZone(firstProductionToDate.date).utc(true).valueOf();\n      const fromDate = moment.parseZone(firstProductionFromDate.date).utc(true).valueOf();\n\n      if (firstProductionFromDate.check && !firstProductionToDate.check) {\n        filter = [\"all\", [\">=\", [\"get\", \"firstProductionDate\"], fromDate], [\"<=\", [\"get\", \"firstProductionDate\"], checkDate]];\n      } else if (!firstProductionFromDate.check && firstProductionToDate.check) {\n        let checkDate = moment().subtract(120, 'Years');\n        let fromDate = moment.parseZone(checkDate).utc(true).valueOf();\n        const toDate = moment.parseZone(firstProductionToDate.date).utc(true).valueOf();\n        filter = [\"all\", [\">=\", [\"get\", \"firstProductionDate\"], fromDate], [\"<=\", [\"get\", \"firstProductionDate\"], toDate]];\n      } else {\n        const fromDate = moment.parseZone(firstProductionFromDate.date).utc(true).valueOf();\n        const toDate = moment.parseZone(firstProductionToDate.date).utc(true).valueOf();\n        filter = [\"all\", [\">=\", [\"get\", \"firstProductionDate\"], fromDate], [\"<=\", [\"get\", \"firstProductionDate\"], toDate]];\n      }\n    } else {\n      filter = null;\n    }\n\n    console.log(\"FirstProduction Range dates change filter\", filter);\n    setStateNav(stateNav => ({ ...stateNav,\n      filterFirstProdDateRange: filter\n    }));\n  }, [firstProductionFromDate.check, firstProductionFromDate.date, firstProductionToDate.date, setStateNav]);\n  useEffect(() => {\n    if (firstProductionFromDate.check === true) {\n      setFilterName();\n    }\n\n    if (firstProductionToDate.check === true) {\n      setFilterName();\n    }\n  }, [firstProductionFromDate.check, firstProductionToDate.check, setFilterName]);\n  const setvaluesFrom = useCallback(() => {\n    if (stateNav.firstProdDateFrom === null) {\n      return;\n    } else {\n      handleStartDateChang(stateNav.firstProdDateFrom);\n      setFirstProductionFromDate({\n        check: true,\n        date: stateNav.firstProdDateFrom\n      });\n    }\n  }, [stateNav.firstProdDateFrom]);\n  const setvaluesTo = useCallback(() => {\n    if (stateNav.firstProdDateTo === null) {\n      return;\n    } else {\n      handleEndDateChange(stateNav.firstProdDateTo);\n      setFirstProductionToDate({\n        check: true,\n        date: stateNav.firstProdDateTo\n      });\n    }\n  }, [stateNav.firstProdDateTo]);\n  useEffect(() => {\n    if (dateTypeName.length > 0) {\n      setvaluesFrom();\n      setvaluesTo();\n    }\n  }, [setvaluesTo, dateTypeName, setvaluesFrom]);\n\n  const handleStartDate = date => {\n    if (date === null) {\n      const formatDateReset = moment().subtract(120, 'Years');\n      setStateNav(stateNav => ({ ...stateNav,\n        firstProdDateFrom: null,\n        filterFirstProdDateRange: null\n      }));\n      handleStartDateChang(formatDateReset);\n    } else {\n      const formatDateAfter = moment(date);\n      let dateName = [];\n      setFirstProductionFromDate({\n        check: true,\n        date: formatDateAfter\n      });\n      handleStartDateChang(formatDateAfter);\n      dateName.push(\"firstProd\");\n      setDateTypeName(dateName);\n      setStateNav(stateNav => ({ ...stateNav,\n        firstProdDateFrom: formatDateAfter,\n        dateTypeName: dateName\n      }));\n    }\n  };\n\n  const handleEndDate = date => {\n    if (date === null) {\n      const formatDateReset = moment();\n      setStateNav(stateNav => ({ ...stateNav,\n        firstProdDateTo: null,\n        filterFirstProdDateRange: null\n      }));\n      handleEndDateChange(formatDateReset);\n      return;\n    } else {\n      const newDateAfter = moment(date);\n      let dateName = [];\n      setFirstProductionToDate({\n        check: true,\n        date: newDateAfter\n      });\n      handleEndDateChange(newDateAfter);\n      dateName.push(\"firstProd\");\n      setDateTypeName(dateName);\n      setStateNav(stateNav => ({ ...stateNav,\n        firstProdDateTo: newDateAfter,\n        dateTypeName: dateName\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.datesRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    label: props.labelDates + \" \" + \"From\" // label=\"From\"\n    ,\n    className: classes.datePicker,\n    maxDate: moment().subtract(1, 'day'),\n    variant: \"inline\",\n    value: selectedStartDate,\n    onChange: date => handleStartDate(date) //inputVariant=\"outlined\"\n    ,\n    minDateMessage: \"Date should not be before minimal date\",\n    maxDateMessage: \"Date should not be after max date\",\n    disableToolbar: true,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    autoOk: \"true\",\n    format: \"MM/DD/YYYY\" // orientation = 'landscape'\n    // margin = 'normal'\n    ,\n    PopoverProps: {\n      disablePortal: true\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    label: props.labelDates + \" \" + \"To\" // label=\"To\"\n    ,\n    className: classes.datePicker,\n    maxDate: moment(),\n    variant: \"inline\",\n    value: selectedEndDate,\n    onChange: date => handleEndDate(date) //inputVariant=\"outlined\"\n    ,\n    minDateMessage: \"Date should not be before minimal date\",\n    maxDateMessage: \"Date should not be after max date\",\n    disableToolbar: true,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    autoOk: \"true\",\n    format: \"MM/DD/YYYY\" // orientation = 'landscape'\n    // margin = 'normal'\n    ,\n    PopoverProps: {\n      disablePortal: true\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterDatePickerFirstProd.js"],"names":["React","useState","useContext","useEffect","useCallback","makeStyles","MuiPickersUtilsProvider","KeyboardDatePicker","moment","NavigationContext","Grid","useStyles","theme","root","datesRow","display","flexDirection","datePicker","margin","pointerEvents","chips","flexWrap","chip","FilterDatePickerFirstProd","props","classes","stateNav","setStateNav","selectedStartDate","handleStartDateChang","subtract","selectedEndDate","handleEndDateChange","firstProductionFromDate","setFirstProductionFromDate","check","date","firstProductionToDate","setFirstProductionToDate","dateTypeName","setDateTypeName","setFilterName","filter","_isValid","checkDate","parseZone","utc","valueOf","fromDate","toDate","console","log","filterFirstProdDateRange","setvaluesFrom","firstProdDateFrom","setvaluesTo","firstProdDateTo","length","handleStartDate","formatDateReset","formatDateAfter","dateName","push","handleEndDate","newDateAfter","labelDates","disablePortal"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from \"moment\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n// DOCUMENTATION FOR THIS COMPONENT IS ON FILTERDATEPICKERPERMIT\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    // flexWrap: \"wrap\",\r\n    // flexDirection: \"column\",\r\n    // justifyContent: \"space-around\",\r\n    // flexGrow: 1\r\n  },\r\n  datesRow: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    // flex: 1,\r\n    // flexGrow: 1\r\n  },\r\n  datePicker: {\r\n    margin: \"15px\",\r\n    // minWidth: 175,\r\n    // maxWidth: 176,\r\n    \"&& span\": {\r\n      pointerEvents: \"none\"\r\n    }\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: 10\r\n  }\r\n}));\r\n\r\nexport default function FilterDatePickerFirstProd(props) {\r\n  const classes = useStyles();\r\n  const [stateNav, setStateNav] = useContext(NavigationContext);\r\n  const [selectedStartDate, handleStartDateChang] = useState(\r\n    moment().subtract(120, 'Years')\r\n  );\r\n  const [selectedEndDate, handleEndDateChange] = useState(\r\n    moment()\r\n  );\r\n  const [firstProductionFromDate, setFirstProductionFromDate] = useState({\r\n    check: false,\r\n    date: moment()\r\n  });\r\n  const [firstProductionToDate, setFirstProductionToDate] = useState({\r\n    check: false,\r\n    date: moment()\r\n  });\r\n\r\n  const [dateTypeName, setDateTypeName] = useState(\r\n    stateNav.dateTypeName ? stateNav.dateTypeName : []\r\n  );\r\n  \r\n  const setFilterName = useCallback(() => {\r\n    let filter;\r\n    if (firstProductionFromDate.date._isValid === true  && firstProductionToDate.date._isValid === true) {\r\n      const checkDate = moment.parseZone(firstProductionToDate.date).utc(true).valueOf()\r\n      const fromDate = moment.parseZone(firstProductionFromDate.date).utc(true).valueOf()\r\n      if(firstProductionFromDate.check && !firstProductionToDate.check){\r\n        filter = [\"all\", [\">=\",[\"get\", \"firstProductionDate\"] ,fromDate], [\"<=\",[\"get\", \"firstProductionDate\"] , checkDate]];\r\n      } else if (!firstProductionFromDate.check && firstProductionToDate.check) {\r\n        let checkDate = moment().subtract(120, 'Years')\r\n        let fromDate = moment.parseZone(checkDate).utc(true).valueOf()\r\n        const toDate =  moment.parseZone(firstProductionToDate.date).utc(true).valueOf()\r\n        filter = [\"all\", [\">=\",[\"get\", \"firstProductionDate\"] ,fromDate], [\"<=\",[\"get\", \"firstProductionDate\"] , toDate]];\r\n      }\r\n      else{\r\n        const fromDate = moment.parseZone(firstProductionFromDate.date).utc(true).valueOf()\r\n        const toDate =  moment.parseZone(firstProductionToDate.date).utc(true).valueOf()\r\n        filter = [\"all\", [\">=\", [\"get\", \"firstProductionDate\"]  ,fromDate], [\"<=\", [\"get\", \"firstProductionDate\"] ,toDate]];\r\n      }\r\n    } else {\r\n      filter = null;\r\n    }\r\n    console.log(\"FirstProduction Range dates change filter\", filter);\r\n    setStateNav(stateNav => ({ ...stateNav, filterFirstProdDateRange: filter }));\r\n}, [firstProductionFromDate.check, firstProductionFromDate.date, firstProductionToDate.date, setStateNav]);\r\n\r\n  useEffect(() => {\r\n    if (firstProductionFromDate.check === true) {\r\n      setFilterName();\r\n    }\r\n    if (firstProductionToDate.check === true) {\r\n      setFilterName();\r\n    }\r\n  }, [firstProductionFromDate.check, firstProductionToDate.check, setFilterName]);\r\n\r\n  const setvaluesFrom = useCallback(() => {\r\n    if (stateNav.firstProdDateFrom === null) {\r\n      return;\r\n    } else {\r\n      handleStartDateChang(stateNav.firstProdDateFrom);\r\n      setFirstProductionFromDate({ check: true, date: stateNav.firstProdDateFrom });\r\n    }\r\n  }, [stateNav.firstProdDateFrom]);\r\n\r\n  const setvaluesTo = useCallback(() => {\r\n    if (stateNav.firstProdDateTo === null) {\r\n      return;\r\n    } else {\r\n      handleEndDateChange(stateNav.firstProdDateTo);\r\n      setFirstProductionToDate({ check: true, date: stateNav.firstProdDateTo });\r\n    }\r\n  }, [stateNav.firstProdDateTo]);\r\n\r\n  useEffect(() => {\r\n    if (dateTypeName.length > 0) {\r\n      setvaluesFrom();\r\n      setvaluesTo();\r\n    }\r\n  }, [setvaluesTo, dateTypeName, setvaluesFrom]);\r\n\r\n  const handleStartDate = date => {\r\n\r\n    if (date === null) {\r\n      const formatDateReset = moment().subtract(120, 'Years');\r\n      setStateNav(stateNav => ({\r\n        ...stateNav,\r\n        firstProdDateFrom: null,\r\n        filterFirstProdDateRange: null\r\n      }));\r\n      handleStartDateChang(formatDateReset);\r\n    } else {\r\n    const formatDateAfter = moment(date)\r\n    let dateName = [];\r\n    setFirstProductionFromDate({ check: true, date: formatDateAfter });\r\n    handleStartDateChang(formatDateAfter);\r\n    dateName.push(\"firstProd\");\r\n    setDateTypeName(dateName);\r\n    setStateNav(stateNav => ({\r\n      ...stateNav,\r\n      firstProdDateFrom: formatDateAfter,\r\n      dateTypeName: dateName\r\n    }));\r\n  }\r\n  };\r\n \r\n  const handleEndDate = date => {\r\n    if (date === null) {\r\n      const formatDateReset = moment();\r\n      setStateNav(stateNav => ({ ...stateNav, firstProdDateTo: null, filterFirstProdDateRange: null}));\r\n      handleEndDateChange(formatDateReset);\r\n      return;\r\n    } else {\r\n    const newDateAfter = moment(date)\r\n    let dateName = [];\r\n    setFirstProductionToDate({ check: true, date: newDateAfter });\r\n    handleEndDateChange(newDateAfter);\r\n    dateName.push(\"firstProd\");\r\n    setDateTypeName(dateName);\r\n    setStateNav(stateNav => ({\r\n      ...stateNav,\r\n      firstProdDateTo: newDateAfter,\r\n      dateTypeName: dateName\r\n    }));\r\n  }\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.datesRow}>\r\n\r\n        <KeyboardDatePicker\r\n          label={props.labelDates + \" \" + \"From\"}\r\n          // label=\"From\"\r\n          className={classes.datePicker}\r\n          maxDate={moment().subtract(1, 'day')}\r\n          variant=\"inline\"\r\n          value={selectedStartDate}\r\n          onChange={date => handleStartDate(date)}\r\n          \r\n          //inputVariant=\"outlined\"\r\n          minDateMessage = 'Date should not be before minimal date'\r\n          maxDateMessage = 'Date should not be after max date'\r\n          disableToolbar\r\n          KeyboardButtonProps = {{'aria-label':'change date'}}\r\n          autoOk = 'true'\r\n          format=\"MM/DD/YYYY\"\r\n          // orientation = 'landscape'\r\n          // margin = 'normal'\r\n          PopoverProps={{ disablePortal: true }}\r\n          fullWidth={true}          \r\n        />\r\n\r\n        <KeyboardDatePicker\r\n          label={props.labelDates + \" \" + \"To\"}\r\n          // label=\"To\"\r\n          className={classes.datePicker}\r\n          maxDate={moment()}\r\n          variant=\"inline\"\r\n          value={selectedEndDate}\r\n          onChange={date => handleEndDate(date)}\r\n\r\n          //inputVariant=\"outlined\"\r\n          minDateMessage = 'Date should not be before minimal date'\r\n          maxDateMessage = 'Date should not be after max date'\r\n          disableToolbar\r\n          KeyboardButtonProps = {{'aria-label':'change date'}}\r\n          autoOk = 'true'\r\n          format=\"MM/DD/YYYY\"\r\n          // orientation = 'landscape'\r\n          // margin = 'normal'\r\n          PopoverProps={{ disablePortal: true }}\r\n          fullWidth={true}          \r\n          />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}