{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Shared\\\\Activities.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport Icon from \"@material-ui/core/Icon\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\nimport AddActivityModal from \"../ContactDetailCard/components/AddActivityModal\";\nimport EnvelopeIcon from \"../Shared/svgIcons/envelope.js\";\nimport PhoneIcon from \"../Shared/svgIcons/phone.js\";\nimport StarIcon from \"../Shared/svgIcons/star.js\";\nimport MeetingIcon from \"../Shared/svgIcons/meeting.js\";\nimport { ProfileContext } from \"../Profile/ProfileContext\";\nimport { GETPROFILE } from \"../../graphQL/useQueryGetProfile\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#fff\"\n  },\n  timelineItemRight: {\n    \"&:before\": {\n      content: \"none\"\n    }\n  },\n  timelineText: {\n    \"& .MuiTypography-body1\": {\n      fontSize: \"0.85rem\"\n    },\n    \"& .MuiTypography-body2\": {\n      fontSize: \"0.7rem\"\n    },\n    \"&  p\": {\n      margin: \"0\"\n    }\n  },\n  blue: {\n    color: theme.palette.secondary.main\n  },\n  todayDot: {\n    fontSize: \"8px\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    borderRadius: \"20px\",\n    color: \"#000\",\n    backgroundColor: \"#d9d9d9\"\n  },\n  imageIcon: {\n    height: \"100%\",\n    padding: \"3px\",\n    display: \"block\"\n  },\n  iconRoot: {\n    textAlign: \"center\"\n  }\n}));\nexport default function Activities({\n  activityLog,\n  ...props\n}) {\n  const [activityModalOpen, setActivityModalOpen] = useState(false);\n  const classes = useStyles();\n\n  const getIcon = activityType => {\n    let icon = \"\";\n\n    switch (activityType) {\n      case \"general\":\n        icon = \"star_icon\";\n        break;\n\n      case \"phone\":\n        icon = \"phone_call_icon\";\n        break;\n\n      case \"email\":\n        icon = \"envelope_icon\";\n        break;\n\n      case \"meeting\":\n        icon = \"meeting_icon\";\n        break;\n\n      default:\n        icon = \"star_icon\";\n    }\n\n    return /*#__PURE__*/React.createElement(Icon, {\n      classes: {\n        root: classes.iconRoot\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.imageIcon,\n      src: require(`../Shared/svgIcons/${icon}.svg`),\n      alt: activityType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const sortedActivityLog = activityLog && activityLog.length > 0 ? activityLog.sort((a, b) => moment(b.dateTime).diff(moment(a.dateTime))) : [];\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddActivityModal, {\n    open: activityModalOpen,\n    onClose: () => setActivityModalOpen(false),\n    id: props.id,\n    activityLog: activityLog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"button\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Recent Activities\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"button\",\n    onClick: () => setActivityModalOpen(true),\n    gutterBottom: true,\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Add Activity\")))), /*#__PURE__*/React.createElement(Timeline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TimelineItem, {\n    className: classes.timelineItemRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimelineSeparator, {\n    style: {\n      transform: \"translateX(-5px)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimelineDot, {\n    className: classes.todayDot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Today\"), /*#__PURE__*/React.createElement(TimelineConnector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }))), sortedActivityLog.map((activity, i) => /*#__PURE__*/React.createElement(TimelineItem, {\n    key: i,\n    className: classes.timelineItemRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimelineSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimelineDot, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, getIcon(activity.type)), i + 1 !== activityLog.length && /*#__PURE__*/React.createElement(TimelineConnector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 48\n    }\n  })), /*#__PURE__*/React.createElement(TimelineContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.timelineText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, activity.notes), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.blue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, activity.fullname, \" \\u2013\", \" \", moment(activity.dateTime).format(\"MMMM D, YYYY hh:mm a\"))))))));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Shared/Activities.js"],"names":["React","useState","useEffect","useContext","useQuery","moment","makeStyles","Card","CardActions","CardContent","Grid","Typography","Timeline","TimelineItem","TimelineSeparator","TimelineConnector","TimelineContent","TimelineDot","Icon","FastfoodIcon","AddActivityModal","EnvelopeIcon","PhoneIcon","StarIcon","MeetingIcon","ProfileContext","GETPROFILE","useStyles","theme","root","backgroundColor","timelineItemRight","content","timelineText","fontSize","margin","blue","color","palette","secondary","main","todayDot","paddingLeft","paddingRight","borderRadius","imageIcon","height","padding","display","iconRoot","textAlign","Activities","activityLog","props","activityModalOpen","setActivityModalOpen","classes","getIcon","activityType","icon","require","sortedActivityLog","length","sort","a","b","dateTime","diff","id","cursor","transform","map","activity","i","type","notes","fullname","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\nimport AddActivityModal from \"../ContactDetailCard/components/AddActivityModal\";\r\n\r\nimport EnvelopeIcon from \"../Shared/svgIcons/envelope.js\";\r\nimport PhoneIcon from \"../Shared/svgIcons/phone.js\";\r\nimport StarIcon from \"../Shared/svgIcons/star.js\";\r\nimport MeetingIcon from \"../Shared/svgIcons/meeting.js\";\r\nimport { ProfileContext } from \"../Profile/ProfileContext\";\r\nimport { GETPROFILE } from \"../../graphQL/useQueryGetProfile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  timelineItemRight: {\r\n    \"&:before\": {\r\n      content: \"none\",\r\n    },\r\n  },\r\n\r\n  timelineText: {\r\n    \"& .MuiTypography-body1\": { fontSize: \"0.85rem\" },\r\n    \"& .MuiTypography-body2\": { fontSize: \"0.7rem\" },\r\n    \"&  p\": {\r\n      margin: \"0\",\r\n    },\r\n  },\r\n  blue: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  todayDot: {\r\n    fontSize: \"8px\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\",\r\n    borderRadius: \"20px\",\r\n    color: \"#000\",\r\n    backgroundColor: \"#d9d9d9\",\r\n  },\r\n  imageIcon: {\r\n    height: \"100%\",\r\n    padding: \"3px\",\r\n    display: \"block\",\r\n  },\r\n  iconRoot: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Activities({ activityLog, ...props }) {\r\n  const [activityModalOpen, setActivityModalOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const getIcon = (activityType) => {\r\n    let icon = \"\";\r\n    switch (activityType) {\r\n      case \"general\":\r\n        icon = \"star_icon\";\r\n        break;\r\n      case \"phone\":\r\n        icon = \"phone_call_icon\";\r\n        break;\r\n      case \"email\":\r\n        icon = \"envelope_icon\";\r\n        break;\r\n      case \"meeting\":\r\n        icon = \"meeting_icon\";\r\n        break;\r\n      default:\r\n        icon = \"star_icon\";\r\n    }\r\n\r\n    return (\r\n      <Icon classes={{ root: classes.iconRoot }}>\r\n        <img\r\n          className={classes.imageIcon}\r\n          src={require(`../Shared/svgIcons/${icon}.svg`)}\r\n          alt={activityType}\r\n        />\r\n      </Icon>\r\n    );\r\n  };\r\n\r\n  const sortedActivityLog =\r\n    activityLog && activityLog.length > 0\r\n      ? activityLog.sort((a, b) => moment(b.dateTime).diff(moment(a.dateTime)))\r\n      : [];\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <AddActivityModal\r\n        open={activityModalOpen}\r\n        onClose={() => setActivityModalOpen(false)}\r\n        id={props.id}\r\n        activityLog={activityLog}\r\n      />\r\n      <CardActions>\r\n        <Grid container justify=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"button\" gutterBottom>\r\n              Recent Activities\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"button\"\r\n              onClick={() => setActivityModalOpen(true)}\r\n              gutterBottom\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              Add Activity\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n      <Timeline>\r\n        <TimelineItem className={classes.timelineItemRight}>\r\n          <TimelineSeparator style={{ transform: \"translateX(-5px)\" }}>\r\n            <TimelineDot className={classes.todayDot}>Today</TimelineDot>\r\n            <TimelineConnector />\r\n          </TimelineSeparator>\r\n        </TimelineItem>\r\n        {sortedActivityLog.map((activity, i) => (\r\n          <TimelineItem key={i} className={classes.timelineItemRight}>\r\n            <TimelineSeparator>\r\n              <TimelineDot variant=\"outlined\">\r\n                {getIcon(activity.type)}\r\n              </TimelineDot>\r\n              {i + 1 !== activityLog.length && <TimelineConnector />}\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              <div className={classes.timelineText}>\r\n                <Typography variant=\"body1\">{activity.notes}</Typography>\r\n                <Typography variant=\"body2\" className={classes.blue}>\r\n                  {activity.fullname} –{\" \"}\r\n                  {moment(activity.dateTime).format(\"MMMM D, YYYY hh:mm a\")}\r\n                </Typography>\r\n              </div>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </Timeline>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}