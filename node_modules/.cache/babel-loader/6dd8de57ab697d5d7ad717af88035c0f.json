{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\BulkUpload\\\\components\\\\CSVFileReader.js\";\nimport React, { useContext, useEffect, useRef } from \"react\";\nimport { AppContext } from '../../../AppContext';\nimport { Button } from '@material-ui/core';\nimport { CSVReader } from 'react-papaparse';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles({\n  table: {\n    margin: '0px auto',\n    fontSize: '14px'\n  }\n});\n\nfunction createData(first_name, last_name, address, city, state, zip, email, phone) {\n  return {\n    first_name,\n    last_name,\n    address,\n    city,\n    state,\n    zip,\n    email,\n    phone\n  };\n}\n\nconst rows = [createData('John', 'Doe', 'H.no: 776', 'Florida', 'VA', '1121', 'unknown@ukmansul.com', '9982--1928'), createData('John', 'Doe', 'H.no: 776', 'Florida', 'VA', '1121', 'unknown@ukmansul.com', '9982--1928'), createData('John', 'Doe', 'H.no: 776', 'Florida', 'VA', '1121', 'unknown@ukmansul.com', '9982--1928'), createData('John', 'Doe', 'H.no: 776', 'Florida', 'VA', '1121', 'unknown@ukmansul.com', '9982--1928')];\nconst main_div = {\n  textAlign: 'center',\n  padding: '1.5vh'\n};\nconst upload_box = {\n  margin: '0 auto',\n  width: '50%',\n  borderRadius: '0px !important'\n};\nconst upload_box_div = {\n  height: '30vh'\n};\nconst big_text = {\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: '#504D4D'\n};\nconst small_grey_text = {\n  fontSize: '10px',\n  fontWeight: 'bold',\n  color: 'grey'\n};\nconst big_grey_text = {\n  fontSize: '20px',\n  color: 'grey'\n};\nconst padding_div_top = {\n  paddingTop: '4vh'\n};\nconst normal_padidng = {\n  padding: '1vh'\n};\nconst text_grey = {\n  fontSize: '12px',\n  fontWeight: 'bold',\n  color: 'grey'\n};\nconst sample_table_area = {\n  background: '#E9E8E8',\n  margin: '0px auto',\n  width: '70%'\n};\nconst table_body = {\n  background: 'white'\n};\nconst style_papaer = {\n  background: 'none',\n  width: '90%',\n  margin: '0px auto'\n};\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    fontWeight: 'bold',\n    border: '1px solid grey',\n    fontSize: '12px',\n    padding: '2px 5px'\n  },\n  body: {\n    border: '1px solid grey',\n    fontSize: '12px',\n    padding: '2px 5px'\n  }\n}))(TableCell);\nexport default function CSVFileReader(props) {\n  let [stateApp, setStateApp] = useContext(AppContext);\n  const classes = useStyles();\n  let unmounted = useRef(false);\n  useEffect(() => {\n    return () => {\n      unmounted.current = true;\n    };\n  }, []);\n\n  let handleOnDrop = data => {\n    if (!unmounted.current) {\n      mapped_headers_from_CSV(data);\n      setStateApp(state => ({ ...state,\n        csvContactsList: data,\n        activeStepNumber: stateApp.activeStepNumber + 1\n      }));\n    }\n  };\n\n  const mapped_headers_from_CSV = data => {\n    if (data.length > 0) {\n      var uniqueKeys = Object.keys(data[0].data); // uniqueKeys = uniqueKeys.sort();\n\n      for (let index in uniqueKeys) {\n        uniqueKeys[index] = {\n          mapped_key: uniqueKeys[index],\n          required: false,\n          actual_key: \"\",\n          label: \"\"\n        };\n      }\n\n      setStateApp(state => ({ ...state,\n        mappedHeadersFromCSV: uniqueKeys\n      }));\n    }\n  };\n\n  let handleOnError = (err, file, inputElem, reason) => {\n    if (!unmounted.current) {\n      console.log(err);\n    }\n  };\n\n  let handleOnRemoveFile = data => {\n    if (!unmounted.current) {\n      console.log(data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: main_div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...big_text,\n      ...padding_div_top\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Select a File to Import\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...text_grey,\n      ...padding_div_top\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Don't forget to upload CSV with first row containing the column headers\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...padding_div_top,\n      ...upload_box_div\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CSVReader, {\n    onDrop: handleOnDrop,\n    onError: handleOnError,\n    addRemoveButton: true,\n    removeButtonColor: \"#659cef\",\n    config: {\n      header: true\n    },\n    onRemoveFile: handleOnRemoveFile,\n    style: upload_box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Drop File To Upload.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \"or\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Choose File\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...text_grey,\n      ...normal_padidng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, \"Your data is private. We don't share relationships with anyone\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: sample_table_area,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...big_text,\n      ...padding_div_top\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Preferred File Setup\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...big_grey_text,\n      ...normal_padidng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"A CSV with these columns will yield good results\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    style: normal_padidng,\n    onClick: () => {\n      return false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Download over CSV template and add your information\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...padding_div_top\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    style: style_papaer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Street Address\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"Zip\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, \"Phone Number\"))), /*#__PURE__*/React.createElement(TableBody, {\n    style: table_body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, rows.map((row, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i + row.first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, row.first_name), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, row.last_name), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, row.address), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, row.city), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, row.state), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, row.zip), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, row.email), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, row.phone))))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...small_grey_text,\n      ...normal_padidng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, \"Sample data of CSV file\")));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/BulkUpload/components/CSVFileReader.js"],"names":["React","useContext","useEffect","useRef","AppContext","Button","CSVReader","makeStyles","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","margin","fontSize","createData","first_name","last_name","address","city","state","zip","email","phone","rows","main_div","textAlign","padding","upload_box","width","borderRadius","upload_box_div","height","big_text","fontWeight","color","small_grey_text","big_grey_text","padding_div_top","paddingTop","normal_padidng","text_grey","sample_table_area","background","table_body","style_papaer","StyledTableCell","theme","head","border","body","CSVFileReader","props","stateApp","setStateApp","classes","unmounted","current","handleOnDrop","data","mapped_headers_from_CSV","csvContactsList","activeStepNumber","length","uniqueKeys","Object","keys","index","mapped_key","required","actual_key","label","mappedHeadersFromCSV","handleOnError","err","file","inputElem","reason","console","log","handleOnRemoveFile","header","map","row","i"],"mappings":"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","sourcesContent":["import React, {\r\n  useContext,\r\n  useEffect,\r\n  useRef\r\n} from \"react\";\r\nimport {AppContext} from '../../../AppContext'\r\nimport {Button} from '@material-ui/core'\r\n\r\nimport { CSVReader } from 'react-papaparse'\r\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    margin: '0px auto',\r\n    fontSize: '14px'\r\n  }\r\n});\r\n\r\nfunction createData(first_name, last_name, address, city, state, zip, email, phone) {\r\n  return { first_name, last_name, address, city, state, zip, email, phone };\r\n}\r\n\r\nconst rows = [\r\n  createData('John', 'Doe', 'H.no: 776', 'Florida', 'VA', '1121', 'unknown@ukmansul.com', '9982--1928'),\r\n  createData('John', 'Doe', 'H.no: 776', 'Florida', 'VA', '1121', 'unknown@ukmansul.com', '9982--1928'),\r\n  createData('John', 'Doe', 'H.no: 776', 'Florida', 'VA', '1121', 'unknown@ukmansul.com', '9982--1928'),\r\n  createData('John', 'Doe', 'H.no: 776', 'Florida', 'VA', '1121', 'unknown@ukmansul.com', '9982--1928'),\r\n];\r\n\r\n\r\n\r\nconst main_div={\r\n  textAlign: 'center',\r\n  padding: '1.5vh',\r\n}\r\nconst upload_box={\r\n  margin: '0 auto',\r\n  width: '50%',\r\n  borderRadius: '0px !important',\r\n}\r\nconst upload_box_div = {\r\n  height: '30vh'\r\n}\r\nconst big_text={\r\n  fontSize: '20px',\r\n  fontWeight: 'bold',\r\n  color: '#504D4D',\r\n}\r\nconst small_grey_text={\r\n  fontSize: '10px',\r\n  fontWeight: 'bold',\r\n  color: 'grey',\r\n}\r\nconst big_grey_text={\r\n  fontSize: '20px',\r\n  color: 'grey',\r\n}\r\nconst padding_div_top={\r\n  paddingTop: '4vh'\r\n}\r\nconst normal_padidng={\r\n  padding: '1vh'\r\n}\r\nconst text_grey ={\r\n  fontSize: '12px',\r\n  fontWeight: 'bold',\r\n  color: 'grey',\r\n}\r\nconst sample_table_area={\r\n  background: '#E9E8E8',\r\n  margin: '0px auto',\r\n  width: '70%',\r\n}\r\nconst table_body={\r\n  background: 'white'\r\n}\r\nconst style_papaer = {\r\n  background: 'none',\r\n  width: '90%',\r\n  margin: '0px auto',\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    fontWeight: 'bold',\r\n    border:'1px solid grey',\r\n    fontSize: '12px',\r\n    padding: '2px 5px'\r\n  },\r\n  body: {\r\n    border:'1px solid grey',\r\n    fontSize: '12px',\r\n    padding: '2px 5px'\r\n  },\r\n}))(TableCell);\r\n\r\nexport default function CSVFileReader(props){\r\n  let [stateApp, setStateApp] = useContext(AppContext);\r\n  const classes = useStyles();\r\n  let unmounted =  useRef(false);\r\n\r\n  useEffect(()=>{\r\n    return ()=>{\r\n      unmounted.current = true\r\n    }\r\n  },[])\r\n\r\n  let handleOnDrop = (data) => {\r\n    if(!unmounted.current){\r\n      mapped_headers_from_CSV(data)\r\n      setStateApp((state) => ({ ...state, csvContactsList: data, activeStepNumber: stateApp.activeStepNumber + 1 }))\r\n    }\r\n  }\r\n\r\n  const mapped_headers_from_CSV = (data)=>{\r\n    if (data.length>0){\r\n        var uniqueKeys = Object.keys(data[0].data);\r\n        // uniqueKeys = uniqueKeys.sort();\r\n        for(let index in uniqueKeys){\r\n          uniqueKeys[index] ={\r\n              mapped_key: uniqueKeys[index],\r\n              required: false,\r\n              actual_key: \"\",\r\n              label: \"\"\r\n          }\r\n        }\r\n        setStateApp(state => ({...state, mappedHeadersFromCSV: uniqueKeys}))\r\n    }\r\n  }\r\n \r\n  let handleOnError = (err, file, inputElem, reason) => {\r\n    if(!unmounted.current){\r\n      console.log(err)\r\n    }\r\n  }\r\n \r\n  let handleOnRemoveFile = (data) => {\r\n    if(!unmounted.current){\r\n      console.log(data)\r\n    }\r\n  }\r\n \r\n  return (\r\n    <div style={main_div}>\r\n      <div style={{...big_text, ...padding_div_top}}>Select a File to Import</div>\r\n      <div style={{...text_grey, ...padding_div_top}}>Don't forget to upload CSV with first row containing the column headers</div>\r\n      <div style={{...padding_div_top, ...upload_box_div}}>\r\n        <CSVReader\r\n          onDrop={handleOnDrop}\r\n          onError={handleOnError}\r\n          addRemoveButton\r\n          removeButtonColor='#659cef'\r\n          config={{\r\n            header:true\r\n          }}\r\n          onRemoveFile={handleOnRemoveFile}\r\n          style={upload_box}\r\n        >\r\n          <span>Drop File To Upload.</span>\r\n          <span>or</span>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Choose File\r\n          </Button>\r\n        </CSVReader>\r\n      </div>\r\n      <div style={{...text_grey, ...normal_padidng}}>Your data is private. We don't share relationships with anyone</div>\r\n      <div style={sample_table_area}>\r\n        <div style={{...big_text, ...padding_div_top}}>Preferred File Setup</div>\r\n        <div style={{...big_grey_text, ...normal_padidng}}>A CSV with these columns will yield good results</div>\r\n        <a href='#' style={normal_padidng} onClick={()=>{return false}}>Download over CSV template and add your information</a>\r\n        <div style={{...padding_div_top}}>\r\n        <TableContainer component={Paper} style={style_papaer}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <StyledTableCell>First Name</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Last Name</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Street Address</StyledTableCell>\r\n                <StyledTableCell align=\"right\">City</StyledTableCell>\r\n                <StyledTableCell align=\"right\">State</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Zip</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Email</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Phone Number</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody style={table_body}>\r\n              {rows.map((row,i) => (\r\n                <TableRow key={i+ row.first_name}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.first_name}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.last_name}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.address}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.city}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.state}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.zip}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.phone}</StyledTableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        </div>\r\n        <div style={{...small_grey_text, ...normal_padidng}}>Sample data of CSV file</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}