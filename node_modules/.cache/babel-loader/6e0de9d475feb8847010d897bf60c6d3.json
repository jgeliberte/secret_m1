{"ast":null,"code":"/**\r\n * Plugin which enables annotation functionality for charts.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { fabric } from \"../../fabric/fabric.js\";\nimport { AnnotationIcons } from \"./AnnotationIcons\";\nimport { Plugin } from \"../../core/utils/Plugin\";\nimport { ExportMenu } from \"../../core/export/ExportMenu\";\nimport { registry } from \"../../core/Registry\";\nimport { color } from \"../../core/utils/Color\";\nimport { getInteraction } from \"../../core/interaction/Interaction\";\nimport { keyboard } from \"../../core/utils/Keyboard\";\nimport * as $math from \"../../core/utils/Math\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * A plugin which automatically groups [[PercenSeries]] slices that are smaller\r\n * than certain percent into one \"Other\" slice.\r\n *\r\n * By pushing an instance of [[Annnotation]] into `plugin` list of\r\n * any [[Chart]], it automatically applies the functionality.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let annotation = chart.plugins.push(new am4plugins_annotation.Annotation());\r\n * ```\r\n * ```JavaScript\r\n * let annotation = chart.plugins.push(new am4plugins_annotation.Annotation());\r\n * ```\r\n * ```JSON\r\n * {\r\n *   \"plugins\": [{\r\n *     \"type\": \"Annotation\"\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.5\r\n *\r\n * @todo resolve translations\r\n * @todo change mouse cursors based on context/tool\r\n * @todo better line selection on click\r\n * @todo arrow support\r\n * @todo undo/redo\r\n * @todo reposition/resize annotations on chart resize\r\n * @todo make annotations hold on IE (when in not annotation mode)\r\n */\n\nvar Annotation =\n/** @class */\nfunction (_super) {\n  __extends(Annotation, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Annotation() {\n    var _this = // Nothing to do here\n    _super.call(this) || this;\n    /**\r\n     * Indicates if Sprite is currently in annotating mode.\r\n     */\n\n\n    _this._active = false;\n    /**\r\n     * Currently selected tool.\r\n     */\n\n    _this._currentTool = \"draw\";\n    /**\r\n     * Current color in use.\r\n     */\n\n    _this._currentColor = color(\"#c00\");\n    /**\r\n     * Currently selected weight/width.\r\n     */\n\n    _this._currentWidth = 2;\n    /**\r\n     * Currently selected opacity.\r\n     */\n\n    _this._currentOpacity = 0.8;\n    /**\r\n     * Font size.\r\n     */\n\n    _this._currentFontSize = 20;\n    /**\r\n     * Font weight.\r\n     */\n\n    _this._currentFontWeight = 400;\n    /**\r\n     * Color selection.\r\n     */\n\n    _this._colors = [];\n    /**\r\n     * Available line widths.\r\n     */\n\n    _this._widths = [];\n    /**\r\n     * Available opacities.\r\n     */\n\n    _this._opacities = [];\n    /**\r\n     * Available font sizes.\r\n     */\n\n    _this._fontSizes = [];\n    /**\r\n     * Available font weights.\r\n     */\n\n    _this._fontWeights = [];\n    /**\r\n     * Menu enabled?\r\n     */\n\n    _this._useMenu = true;\n    /**\r\n     * Did plugin create own menu or reusing existing ExportMenu?\r\n     */\n\n    _this._ownMenu = true;\n    _this._pointerDown = false;\n    _this._exportInited = false;\n    /**\r\n     * List of icons to use in annotation\r\n     */\n\n    _this.icons = [];\n    /**\r\n     * If set to `true` plugin will try to reposition annotation relatively when\r\n     * size of the chart chanages.\r\n     *\r\n     * This feature is experimental. Use at your own risk.\r\n     *\r\n     * @default false\r\n     * @since 4.7.19\r\n     * @type {boolean}\r\n     */\n\n    _this.autoSize = false; // Set default colors\n\n    _this._colors = [color(\"#000\"), color(\"#fff\"), color(\"#c00\"), color(\"#0c0\"), color(\"#00c\")]; // Set defaults\n\n    _this._widths = [1, 2, 4, 10];\n    _this._opacities = [0.2, 0.4, 0.6, 0.8, 1]; // Set default font sizes\n\n    _this._fontSizes = [10, 15, 20, 30];\n    _this._fontWeights = [200, 300, 400, 800]; // Add default icons\n\n    _this.icons = [AnnotationIcons.pin, AnnotationIcons.heart, AnnotationIcons.check, AnnotationIcons.like, AnnotationIcons.dislike, AnnotationIcons.tag, AnnotationIcons.attention, AnnotationIcons.smiley];\n    return _this;\n  }\n\n  Annotation.prototype.init = function () {\n    _super.prototype.init.call(this);\n\n    this.initExporting();\n\n    if (this._data) {\n      this.loadData();\n    }\n  };\n  /**\r\n   * Initializes menus for the annotation.\r\n   *\r\n   * Will try to use existing [[ExportMenu]] if present.\r\n   */\n\n\n  Annotation.prototype.initExporting = function () {\n    var _this = this;\n\n    var target = this.target; // Create an export menu if it does not yet exist\n\n    if (this.useMenu) {\n      if (!target.exporting.menu) {\n        target.exporting.menu = new ExportMenu();\n        target.exporting.menu.items[0].menu = [];\n        this._ownMenu = true;\n      } else {\n        target.exporting.menu.invalidate();\n        this._ownMenu = false;\n      }\n    } // Update indicator when menu is created\n\n\n    target.exporting.events.once(\"menucreated\", this.updateIndicator);\n    target.events.on(\"sizechanged\", this.sizeAnnotations, this); // Create DEL key handler\n\n    getInteraction().body.events.on(\"keyup\", function (ev) {\n      if (_this.active && keyboard.isKey(ev.event, \"del\")) {\n        _this.deleteSelected();\n      }\n    }); // Update/show SVG annotation if currently in annotation mode and user\n    // triggers export.\n\n    target.exporting.events.on(\"exportstarted\", function (ev) {\n      if (_this.active) {\n        _this.updateSVG();\n\n        _this.fabric.wrapperEl.style.display = \"none\";\n        _this._group.style.display = \"\";\n      }\n    });\n    target.exporting.events.on(\"exportfinished\", function (ev) {\n      if (_this.active) {\n        _this._group.style.display = \"none\";\n        _this.fabric.wrapperEl.style.display = \"block\";\n      }\n    }); // Generate a unique id for indicator\n\n    this._indicatorId = registry.getUniqueId();\n\n    if (this.useMenu) {\n      // Add annotation menu\n      target.exporting.menu.items[0].menu.push({\n        label: target.language.translateAny(\"Annotate\"),\n        type: \"custom\",\n        options: {\n          callback: this.handleClick,\n          callbackTarget: this\n        }\n      }); // Color list\n\n      var colors = [];\n\n      var _loop_1 = function (i) {\n        colors.push({\n          type: \"custom\",\n          svg: AnnotationIcons.ok,\n          color: this_1.colors[i],\n          options: {\n            callback: function () {\n              _this.setColor(_this.colors[i]);\n            }\n          }\n        });\n      };\n\n      var this_1 = this;\n\n      for (var i = 0; i < this.colors.length; i++) {\n        _loop_1(i);\n      } // Width list\n\n\n      var widths = [];\n\n      var _loop_2 = function (i) {\n        widths.push({\n          type: \"custom\",\n          label: this_2.widths[i] + \"px\",\n          options: {\n            callback: function () {\n              _this.setWidth(_this.widths[i]);\n            }\n          }\n        });\n      };\n\n      var this_2 = this;\n\n      for (var i = 0; i < this.widths.length; i++) {\n        _loop_2(i);\n      } // Opacity list\n\n\n      var opacities = [];\n\n      var _loop_3 = function (i) {\n        opacities.push({\n          type: \"custom\",\n          label: \"<span style=\\\"opacity: \" + this_3.opacities[i] + \"\\\">\" + this_3.opacities[i] * 100 + \"%</span>\",\n          options: {\n            callback: function () {\n              _this.setOpacity(_this.opacities[i]);\n            }\n          }\n        });\n      };\n\n      var this_3 = this;\n\n      for (var i = 0; i < this.opacities.length; i++) {\n        _loop_3(i);\n      } // Font sizes\n\n\n      var fontSizes = [];\n\n      var _loop_4 = function (i) {\n        fontSizes.push({\n          type: \"custom\",\n          label: \"\" + this_4.fontSizes[i],\n          options: {\n            callback: function () {\n              _this.setFontSize(_this.fontSizes[i]);\n            }\n          }\n        });\n      };\n\n      var this_4 = this;\n\n      for (var i = 0; i < this.fontSizes.length; i++) {\n        _loop_4(i);\n      } // Font weights\n\n\n      var fontWeights = [];\n\n      var _loop_5 = function (i) {\n        fontWeights.push({\n          type: \"custom\",\n          label: \"\" + this_5.fontWeights[i],\n          options: {\n            callback: function () {\n              _this.setFontWeight(_this.fontWeights[i]);\n            }\n          }\n        });\n      };\n\n      var this_5 = this;\n\n      for (var i = 0; i < this.fontWeights.length; i++) {\n        _loop_5(i);\n      } // Icons\n\n\n      var icons = [];\n\n      var _loop_6 = function (i) {\n        icons.push({\n          type: \"custom\",\n          svg: this_6.icons[i],\n          options: {\n            callback: function () {\n              _this.addIcon(_this.icons[i]);\n            }\n          }\n        });\n      };\n\n      var this_6 = this;\n\n      for (var i = 0; i < this.icons.length; i++) {\n        _loop_6(i);\n      } // Construct main menu item\n\n\n      var id = this._indicatorId; //let mainitem = this.target.exporting.menu.createSvgElement(0, \"custom\", AnnotationIcons.select).outerHTML;\n\n      var mainitem = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1\\\" viewBox=\\\"0 0 24 24\\\"></svg>\";\n      mainitem += \"<span class=\\\"\" + id + \"_color\\\" style=\\\"display: block; background-color: \" + this.currentColor.hex + \"; width: 1.2em; height: 1.2em; margin: 0.2em auto 0.4em auto;\\\"></span>\"; // Add annotation tools menu\n\n      this._menu = {\n        hidden: !this.active,\n        // icon: AnnotationIcons.select,\n        label: mainitem,\n        id: this._indicatorId,\n        menu: [{\n          type: \"custom\",\n          svg: AnnotationIcons.tools,\n          label: target.language.translateAny(\"Tools\"),\n          menu: [{\n            type: \"custom\",\n            svg: AnnotationIcons.select,\n            label: target.language.translateAny(\"Select\"),\n            options: {\n              callback: this.select,\n              callbackTarget: this\n            }\n          }, {\n            type: \"custom\",\n            svg: AnnotationIcons.draw,\n            label: target.language.translateAny(\"Draw\"),\n            options: {\n              callback: this.draw,\n              callbackTarget: this\n            }\n          }, {\n            type: \"custom\",\n            svg: AnnotationIcons.line,\n            label: target.language.translateAny(\"Line\"),\n            options: {\n              callback: this.line,\n              callbackTarget: this\n            }\n          }, {\n            type: \"custom\",\n            svg: AnnotationIcons.arrow,\n            label: target.language.translateAny(\"Arrow\"),\n            options: {\n              callback: this.arrow,\n              callbackTarget: this\n            }\n          }, {\n            type: \"custom\",\n            svg: AnnotationIcons.width,\n            label: target.language.translateAny(\"Weight\"),\n            menu: widths\n          }, {\n            type: \"custom\",\n            svg: AnnotationIcons.delete,\n            label: target.language.translateAny(\"Delete\"),\n            options: {\n              callback: this.delete,\n              callbackTarget: this\n            }\n          }]\n        }, {\n          type: \"custom\",\n          svg: AnnotationIcons.text,\n          label: target.language.translateAny(\"Text\"),\n          menu: [{\n            type: \"custom\",\n            svg: AnnotationIcons.textAdd,\n            label: target.language.translateAny(\"Add\"),\n            options: {\n              callback: this.addText,\n              callbackTarget: this\n            }\n          }, {\n            type: \"custom\",\n            svg: AnnotationIcons.textWeight,\n            label: target.language.translateAny(\"Weight\"),\n            menu: fontWeights\n          }, {\n            type: \"custom\",\n            svg: AnnotationIcons.textSize,\n            label: target.language.translateAny(\"Size\"),\n            menu: fontSizes\n          }]\n        }, {\n          type: \"custom\",\n          svg: AnnotationIcons.colors,\n          label: target.language.translateAny(\"Color\"),\n          menu: colors\n        }, {\n          type: \"custom\",\n          svg: AnnotationIcons.opacity,\n          label: target.language.translateAny(\"Opacity\"),\n          menu: opacities\n        }, {\n          type: \"custom\",\n          svg: AnnotationIcons.icon,\n          label: target.language.translateAny(\"Icon\"),\n          menu: icons\n        }, {\n          type: \"custom\",\n          svg: AnnotationIcons.more,\n          label: target.language.translateAny(\"More\"),\n          menu: [{\n            type: \"custom\",\n            svg: AnnotationIcons.done,\n            label: target.language.translateAny(\"Done\"),\n            options: {\n              callback: this.deactivate,\n              callbackTarget: this\n            }\n          }, {\n            type: \"custom\",\n            svg: AnnotationIcons.discard,\n            label: target.language.translateAny(\"Discard\"),\n            options: {\n              callback: this.discard,\n              callbackTarget: this\n            }\n          }]\n        }]\n      };\n      target.exporting.menu.items.push(this._menu);\n    }\n\n    this._exportInited = true;\n  };\n  /**\r\n   * Toggles annotation mode on click of the related menu item.\r\n   *\r\n   * @ignore\r\n   * @param  options  Options\r\n   */\n\n\n  Annotation.prototype.handleClick = function (options) {\n    this.active = !this.active;\n  };\n\n  Object.defineProperty(Annotation.prototype, \"fabric\", {\n    /**\r\n     * Returns an instance of Fabric's `Canvas`.\r\n     * @return Canvas\r\n     */\n    get: function () {\n      var _this = this; // Init canvas if not yet done\n\n\n      if (!this._fabric) {\n        // Creae <canvas> element\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = this.target.pixelWidth;\n        canvas.height = this.target.pixelHeight;\n        canvas.style.position = \"absolute\";\n        canvas.style.top = \"0\";\n        canvas.style.left = \"0\";\n        this.target.svgContainer.SVGContainer.appendChild(canvas); // Create Fabric representation of the canvas\n\n        this._fabric = new fabric.Canvas(canvas, {\n          //isDrawingMode: true,\n          containerClass: \"am4plugins_annotation_canvas_container\"\n        });\n        this.fabric.wrapperEl.style.position = \"absolute\";\n        this.fabric.wrapperEl.style.top = \"0\";\n        this.fabric.wrapperEl.style.left = \"0\"; // Set up events for deletion\n\n        this.fabric.on(\"selection:created\", function (ev) {\n          if (_this.currentTool == \"delete\") {\n            _this.deleteSelected();\n          }\n        }); // Set up events for drawing lines/arrows\n\n        this._fabric.on(\"mouse:down\", function (ev) {\n          if (_this.currentTool != \"line\" && _this.currentTool != \"arrow\") {\n            return;\n          } // Line\n\n\n          _this._pointerDown = true;\n\n          var pointer = _this._fabric.getPointer(ev.e);\n\n          var points = [pointer.x, pointer.y, pointer.x, pointer.y];\n          _this._currentLine = new fabric.Line(points, {\n            strokeWidth: _this.currentWidth,\n            fill: _this.currentColor.hex,\n            stroke: _this.currentColor.hex,\n            opacity: _this.currentOpacity,\n            originX: \"center\",\n            originY: \"center\"\n          });\n\n          _this._fabric.add(_this._currentLine); // Arrowhead\n\n\n          if (_this.currentTool == \"arrow\") {\n            _this._currentArrowhead = new fabric.Triangle({\n              width: 10,\n              height: 10,\n              strokeWidth: _this.currentWidth,\n              fill: _this.currentColor.hex,\n              stroke: _this.currentColor.hex,\n              opacity: _this.currentOpacity,\n              left: pointer.x - 5,\n              top: pointer.y - 10,\n              originX: \"center\",\n              originY: \"center\",\n              angle: 0\n            });\n\n            _this._fabric.add(_this._currentArrowhead);\n          }\n        });\n\n        this._fabric.on(\"mouse:move\", function (ev) {\n          if (!_this._pointerDown || _this.currentTool != \"line\" && _this.currentTool != \"arrow\") {\n            return;\n          }\n\n          var pointer = _this._fabric.getPointer(ev.e);\n\n          _this._currentLine.set({\n            x2: pointer.x,\n            y2: pointer.y\n          }); // Move and rotate arrowhead\n\n\n          if (_this.currentTool == \"arrow\") {\n            var angle = $math.getAngle({\n              x: _this._currentLine.x1,\n              y: _this._currentLine.y1\n            }, {\n              x: _this._currentLine.x2,\n              y: _this._currentLine.y2\n            });\n\n            _this._currentArrowhead.set({\n              left: pointer.x,\n              top: pointer.y,\n              angle: angle + 90\n            });\n          }\n\n          _this._fabric.renderAll();\n        });\n\n        this._fabric.on(\"mouse:up\", function (ev) {\n          _this._pointerDown = false;\n        }); // Load data if necessary\n\n\n        if (this._data) {\n          this.loadData();\n        }\n      }\n\n      return this._fabric;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"group\", {\n    /**\r\n     * A `<g>` that holds SVG representation of the annotations in chart overlay.\r\n     *\r\n     * @return  Group element\r\n     */\n    get: function () {\n      if (!this._group) {\n        //this.group = this.target.svgContainer.container.dom.appendChild(document.createElement(\"g\"));\n        this._group = this.target.paper.add(\"g\").node;\n        this._group.style.pointerEvents = \"none\";\n\n        this._group.setAttribute(\"clip-path\", this.target.dom.getAttribute(\"clip-path\"));\n\n        this.target.svgContainer.container.dom.appendChild(this._group);\n      }\n\n      return this._group;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Activates annotation mode.\r\n   */\n\n  Annotation.prototype.activate = function () {\n    this.active = true;\n    this.updateTool();\n    this.fabric.wrapperEl.style.display = \"block\";\n    this.group.style.display = \"none\";\n  };\n  /**\r\n   * Deactivates annotation mode.\r\n   */\n\n\n  Annotation.prototype.deactivate = function () {\n    this.active = false;\n    this.updateTool();\n    this.fabric.wrapperEl.style.display = \"none\";\n    this.updateSVG();\n    this.group.style.display = \"\";\n  };\n  /**\r\n   * Updates SVG overlay to display annotations when in non-annotation mode.\r\n   *\r\n   * @todo Set contents properly (not use innerHTML)\r\n   */\n\n\n  Annotation.prototype.updateSVG = function () {\n    var svg = this.fabric.toSVG();\n    var matches = svg.replace(/[\\n\\r]*/g, \"\").match(/<g.*<\\/g>/g);\n\n    if (matches) {\n      this.group.innerHTML = matches[0];\n    } else {\n      this.group.innerHTML = \"\";\n    }\n  };\n\n  Object.defineProperty(Annotation.prototype, \"active\", {\n    /**\r\n     * @return Active?\r\n     */\n    get: function () {\n      return this._active;\n    },\n\n    /**\r\n     * Seting to `true` puts the chart in annotation mode.\r\n     *\r\n     * Setting to `false` returns chart to regular mode of operation.\r\n     *\r\n     * @default false\r\n     * @param  value  Active?\r\n     */\n    set: function (value) {\n      if (this._active != value) {\n        this._active = value;\n\n        if (value) {\n          this.activate();\n\n          if (this.useMenu) {\n            this.target.exporting.menu.showBranch(this._menu);\n          }\n        } else {\n          this.deactivate();\n\n          if (this.useMenu) {\n            this.target.exporting.menu.hideBranch(this._menu);\n          }\n        }\n\n        this.updateIndicator();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"currentColor\", {\n    /**\r\n     * @return Color\r\n     */\n    get: function () {\n      return this._currentColor;\n    },\n\n    /**\r\n     * Currently selected color.\r\n     *\r\n     * @default #000\r\n     * @param  value  Color\r\n     */\n    set: function (value) {\n      if (this._currentColor != value) {\n        this._currentColor = value;\n        this.updateIndicator();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"colors\", {\n    /**\r\n     * @return Colors\r\n     */\n    get: function () {\n      return this._colors;\n    },\n\n    /**\r\n     * List of colors to show in selection.\r\n     *\r\n     * @param  value  Colors\r\n     */\n    set: function (value) {\n      if (this._colors != value) {\n        this._colors = value;\n        this.updateIndicator();\n        this.setColor(this._currentColor);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"currentWidth\", {\n    /**\r\n     * @return Width\r\n     */\n    get: function () {\n      return this._currentWidth;\n    },\n\n    /**\r\n     * Currently selected width.\r\n     *\r\n     * @default 1\r\n     * @param  value  Width\r\n     */\n    set: function (value) {\n      if (this._currentWidth != value) {\n        this._currentWidth = value;\n        this.updateIndicator();\n        this.setWidth(this._currentWidth);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"widths\", {\n    /**\r\n     * @return Widths\r\n     */\n    get: function () {\n      return this._widths;\n    },\n\n    /**\r\n     * List of widths in pixels for line and free-draw tool.\r\n     *\r\n     * @param  value  Widths\r\n     */\n    set: function (value) {\n      if (this._widths != value) {\n        this._widths = value;\n        this.updateIndicator();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"currentOpacity\", {\n    /**\r\n     * @return Opacity\r\n     */\n    get: function () {\n      return this._currentOpacity;\n    },\n\n    /**\r\n     * Currently selected opacity.\r\n     *\r\n     * @default 1\r\n     * @param  value  Opacity\r\n     */\n    set: function (value) {\n      if (this._currentOpacity != value) {\n        this._currentOpacity = value;\n        this.updateIndicator();\n        this.setOpacity(this._currentOpacity);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"opacities\", {\n    /**\r\n     * @return Opacities\r\n     */\n    get: function () {\n      return this._opacities;\n    },\n\n    /**\r\n     * List of opacities available for selection.\r\n     *\r\n     * @param  value  Opacities\r\n     */\n    set: function (value) {\n      if (this._opacities != value) {\n        this._opacities = value;\n        this.updateIndicator();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"currentFontSize\", {\n    /**\r\n     * @return Font size\r\n     */\n    get: function () {\n      return this._currentFontSize;\n    },\n\n    /**\r\n     * Currently selected font size.\r\n     *\r\n     * @default 10\r\n     * @param  value  Font size\r\n     */\n    set: function (value) {\n      if (this._currentFontSize != value) {\n        this._currentFontSize = value;\n        this.updateIndicator();\n        this.setFontSize(this._currentFontSize);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"fontSizes\", {\n    /**\r\n     * @return Font sizes\r\n     */\n    get: function () {\n      return this._fontSizes;\n    },\n\n    /**\r\n     * List of available font sizes.\r\n     *\r\n     * @param  value  Font sizes\r\n     */\n    set: function (value) {\n      if (this._fontSizes != value) {\n        this._fontSizes = value;\n        this.updateIndicator();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"currentFontWeight\", {\n    /**\r\n     * @return Font weight\r\n     */\n    get: function () {\n      return this._currentFontWeight;\n    },\n\n    /**\r\n     * Currently selected font weight.\r\n     *\r\n     * @default 400\r\n     * @param  value  Font weight\r\n     */\n    set: function (value) {\n      if (this._currentFontWeight != value) {\n        this._currentFontWeight = value;\n        this.updateIndicator(); //this.setFontWeight(this._currentFontWeight);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"fontWeights\", {\n    /**\r\n     * @return Font weights\r\n     */\n    get: function () {\n      return this._fontWeights;\n    },\n\n    /**\r\n     * List of available font weights.\r\n     *\r\n     * @param  value  Font weights\r\n     */\n    set: function (value) {\n      if (this._fontWeights != value) {\n        this._fontWeights = value;\n        this.updateIndicator();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"currentTool\", {\n    /**\r\n     * @return Tool\r\n     */\n    get: function () {\n      return this._currentTool;\n    },\n\n    /**\r\n     * Currently selected tool.\r\n     *\r\n     * @default select\r\n     * @param  value  Tool\r\n     */\n    set: function (value) {\n      if (this._currentTool != value) {\n        this._currentTool = value;\n        this.updateTool();\n        this.updateIndicator();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Initiates tool.\r\n   */\n\n  Annotation.prototype.updateTool = function () {\n    switch (this.currentTool) {\n      case \"select\":\n        this.select();\n        break;\n\n      case \"draw\":\n        this.draw();\n        break;\n\n      case \"delete\":\n        this.delete();\n        break;\n\n      case \"line\":\n        this.line();\n        break;\n\n      case \"arrow\":\n        this.arrow();\n        break;\n    }\n  };\n  /**\r\n   * Updates currently selected tool/color indicator.\r\n   */\n\n\n  Annotation.prototype.updateIndicator = function () {\n    if (this.indicator) {\n      // Update tool icon\n      var container = this.indicator.getElementsByTagName(\"a\")[0];\n      var newicon = this.target.exporting.menu.createSvgElement(0, \"custom\", AnnotationIcons[this.currentTool]);\n      var oldicon = this.indicator.getElementsByTagName(\"svg\")[0];\n      container.insertBefore(newicon, oldicon);\n      container.removeChild(oldicon); // Update color\n\n      this.indicator.getElementsByClassName(this._indicatorId + \"_color\")[0].style.backgroundColor = this.currentColor.hex;\n    }\n  };\n\n  Object.defineProperty(Annotation.prototype, \"indicator\", {\n    /**\r\n     * Current tool/color indicator element.\r\n     *\r\n     * @return  Indicator\r\n     */\n    get: function () {\n      return document.getElementById(this._indicatorId);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets color.\r\n   *\r\n   * @param  value  Color\r\n   */\n\n  Annotation.prototype.setColor = function (value) {\n    this.currentColor = value;\n    var brushColor = color(value);\n    brushColor.alpha = this.currentOpacity;\n    this.fabric.freeDrawingBrush.color = brushColor.rgba; // Update selected objects\n\n    var selected = this.fabric.getActiveObjects();\n\n    for (var i = 0; i < selected.length; i++) {\n      if (selected[i].isType(\"textbox\") || selected[i].isType(\"path\") && selected[i].fill) {\n        selected[i].set(\"fill\", value.hex);\n      } else if (selected[i].isType(\"triangle\")) {\n        selected[i].set(\"stroke\", value.hex);\n        selected[i].set(\"fill\", value.hex);\n      } else if (selected[i].getSrc) {\n        this.setIconFill(selected[i]);\n      } else {\n        selected[i].set(\"stroke\", value.hex);\n      }\n    }\n\n    this.fabric.requestRenderAll();\n  };\n  /**\r\n   * Sets line width.\r\n   *\r\n   * @param  value  Width\r\n   */\n\n\n  Annotation.prototype.setWidth = function (value) {\n    this.currentWidth = value;\n    this.fabric.freeDrawingBrush.width = value; // Update selected objects\n\n    var selected = this.fabric.getActiveObjects();\n\n    for (var i = 0; i < selected.length; i++) {\n      selected[i].set(\"strokeWidth\", value);\n    }\n\n    this.fabric.requestRenderAll();\n  };\n  /**\r\n   * Sets opacity.\r\n   *\r\n   * @param  value  Opacity\r\n   */\n\n\n  Annotation.prototype.setOpacity = function (value) {\n    this.currentOpacity = value;\n    var brushColor = color(this.currentColor);\n    brushColor.alpha = this.currentOpacity;\n    this.fabric.freeDrawingBrush.color = brushColor.rgba; // Update selected objects\n\n    var selected = this.fabric.getActiveObjects();\n\n    for (var i = 0; i < selected.length; i++) {\n      if (selected[i].isType(\"path\")) {\n        selected[i].set(\"stroke\", this.currentColor.hex);\n      }\n\n      selected[i].set(\"opacity\", value);\n    }\n\n    this.fabric.requestRenderAll();\n  };\n  /**\r\n   * Sets font size.\r\n   *\r\n   * @param  value  Font size\r\n   */\n\n\n  Annotation.prototype.setFontSize = function (value) {\n    this.currentFontSize = value; // Update selected objects\n\n    var selected = this.fabric.getActiveObjects();\n\n    for (var i = 0; i < selected.length; i++) {\n      if (selected[i].text) {\n        selected[i].set(\"fontSize\", value);\n      }\n    }\n\n    this.fabric.requestRenderAll();\n  };\n  /**\r\n   * Sets font weight.\r\n   *\r\n   * @param  value  Font weight\r\n   */\n\n\n  Annotation.prototype.setFontWeight = function (value) {\n    this.currentFontWeight = value; // Update selected objects\n\n    var selected = this.fabric.getActiveObjects();\n\n    for (var i = 0; i < selected.length; i++) {\n      if (selected[i].text) {\n        selected[i].set(\"fontWeight\", value);\n      }\n    }\n\n    this.fabric.requestRenderAll();\n  };\n  /**\r\n   * Does nothing.\r\n   */\n\n\n  Annotation.prototype.underConstruction = function () {\n    alert(\"This feature is not yet implemented\");\n  };\n  /**\r\n   * Puts annotator in object selection mode.\r\n   */\n\n\n  Annotation.prototype.select = function () {\n    this.currentTool = \"select\";\n    this.fabric.isDrawingMode = false;\n    this.fabric.selection = true;\n  };\n  /**\r\n   * Puts annotator in free-drawing mode.\r\n   */\n\n\n  Annotation.prototype.draw = function () {\n    this.currentTool = \"draw\";\n    this.fabric.isDrawingMode = true;\n    this.fabric.selection = false;\n    var brushColor = color(this.currentColor);\n    brushColor.alpha = this.currentOpacity;\n    this.fabric.freeDrawingBrush.color = brushColor.rgba;\n    this.fabric.freeDrawingBrush.width = this.currentWidth;\n  };\n  /**\r\n   * Puts annotator in line drawing mode.\r\n   */\n\n\n  Annotation.prototype.line = function () {\n    this.currentTool = \"line\";\n    this.fabric.isDrawingMode = false;\n    this.fabric.selection = false;\n  };\n  /**\r\n   * Puts annotator in arrow drawing mode.\r\n   */\n\n\n  Annotation.prototype.arrow = function () {\n    this.currentTool = \"arrow\";\n    this.fabric.isDrawingMode = false;\n    this.fabric.selection = false;\n  };\n  /**\r\n   * Adds an editable text object to canvas.\r\n   */\n\n\n  Annotation.prototype.addText = function () {\n    this.fabric.isDrawingMode = false;\n    this.fabric.selection = true;\n    this.select();\n    var text = new fabric.Textbox(this.target.language.translateAny(\"Type...\"), {\n      //left: this.target.pixelWidth / 2,\n      //top: this.target.pixelHeight / 2,\n      fontSize: this.currentFontSize,\n      fontWeight: this.currentFontWeight,\n      fill: this.currentColor.hex,\n      opacity: this.currentOpacity\n    });\n    this.fabric.add(text);\n    this.fabric.centerObject(text);\n    text.enterEditing();\n    text.selectAll();\n    this.fabric.setActiveObject(text);\n  };\n  /**\r\n   * Adds an image to canvas.\r\n   */\n\n\n  Annotation.prototype.addIcon = function (url) {\n    var _this = this;\n\n    this.fabric.isDrawingMode = false;\n    this.fabric.selection = true;\n    this.select();\n    fabric.loadSVGFromString(url, function (res) {\n      for (var i = 0; i < res.length; i++) {\n        _this.fabric.add(res[i]);\n\n        _this.fabric.centerObject(res[i]);\n\n        _this.fabric.setActiveObject(res[i]);\n\n        _this.fabric.setActiveObject(res[i]);\n\n        res[i].opacity = _this.currentOpacity;\n        res[i].fill = _this.currentColor.hex;\n      }\n    }); // fabric.Image.fromElement(element, (img: any) => {\n    // \tconsole.log(img)\n    // \tthis.fabric.add(img);\n    // \tthis.fabric.centerObject(img);\n    // \tthis.fabric.setActiveObject(img);\n    // \t// img.fill = this.currentColor.hex;\n    // \t//this.fabric.requestRenderAll();\n    // \timg.opacity = this.currentOpacity;\n    // \tthis.setIconFill(img);\n    // });\n  };\n  /**\r\n   * Attemps to set a fill to the SVG icon.\r\n   * @param  img  Fabric image reference\r\n   */\n\n\n  Annotation.prototype.setIconFill = function (img) {\n    var src = img.getSrc();\n    var svg = \"\";\n\n    if (src.match(/;base64\\,/)) {\n      try {\n        svg = atob(src.replace(/^.*;base64\\,/g, \"\"));\n        svg = svg.replace(/fill=\"[^\"]+\"/, \"\");\n        svg = svg.replace(/\\/>/g, \" fill=\\\"\" + this.currentColor.hex + \"\\\" \\/>\");\n        src = src.replace(/(^.*;base64\\,).*$/, \"$1\") + btoa(svg);\n        img.setSrc(src);\n      } catch (e) {\n        return;\n      }\n    } else if (src.match(/^data:/)) {\n      svg = src.replace(/^data:[^,]*\\,/, \"\");\n      svg = svg.replace(/fill=\"[^\"]+\"/, \"\");\n      svg = svg.replace(/\\/>/g, \" fill=\\\"\" + this.currentColor.hex + \"\\\" \\/>\");\n      src = src.replace(/(^.*;base64\\,).*$/, \"$1\") + svg;\n      img.setSrc(src);\n    }\n  };\n  /**\r\n   * Puts annotator in object deletion mode\r\n   */\n\n\n  Annotation.prototype.delete = function () {\n    this.currentTool = \"delete\";\n    this.fabric.isDrawingMode = false;\n  };\n  /**\r\n   * Clears all annotations.\r\n   */\n\n\n  Annotation.prototype.clear = function () {\n    this.fabric.clear();\n  };\n  /**\r\n   * Clears all annotations and exits annotation mode.\r\n   */\n\n\n  Annotation.prototype.discard = function () {\n    this.fabric.clear();\n    this.updateSVG();\n    this.deactivate();\n  };\n  /**\r\n   * Deletes selected objects\r\n   */\n\n\n  Annotation.prototype.deleteSelected = function () {\n    var selected = this.fabric.getActiveObjects();\n\n    for (var i = 0; i < selected.length; i++) {\n      this.fabric.remove(selected[i]);\n    }\n\n    this.fabric.requestRenderAll();\n  };\n\n  Object.defineProperty(Annotation.prototype, \"data\", {\n    /**\r\n     * @return Data\r\n     */\n    get: function () {\n      if (this._fabric) {\n        return this.fabric.toObject();\n      } else {\n        return this._data;\n      }\n    },\n\n    /**\r\n     * Set or get annotation data.\r\n     *\r\n     * @since 4.5.6\r\n     * @param  value  Data\r\n     */\n    set: function (value) {\n      this._data = value;\n\n      if (this._fabric || this._exportInited) {\n        // Canvas is ready, update now\n        this.loadData();\n      } else {// Canvas is not yeat ready, just save data for later\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Annotation.prototype, \"useMenu\", {\n    /**\r\n     * @return Use menu?\r\n     */\n    get: function () {\n      return this._useMenu;\n    },\n\n    /**\r\n     * If set to `false` the plugin will not create own menu nor will add its\r\n     * items to existing Export menu.\r\n     *\r\n     * In such case, annotation functionality will be available only via API.\r\n     *\r\n     * @since 4.8.0\r\n     * @default true\r\n     * @param  value  Use menu?\r\n     */\n    set: function (value) {\n      this._useMenu = value;\n\n      if (!value && this.target.exporting.menu) {\n        if (this._ownMenu) {\n          this.target.exporting.menu.items[0].menu = [];\n          this.target.exporting.menu.invalidate();\n        } else {\n          this.target.exporting.menu.items[0].menu.pop();\n          this.target.exporting.menu.invalidate();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Loads data onto canvas.\r\n   */\n\n  Annotation.prototype.loadData = function () {\n    var _this = this;\n\n    this.fabric.loadFromJSON(this._data, function (e) {\n      _this.updateSVG();\n\n      _this._data = undefined;\n    });\n  };\n  /**\r\n   * Resizes annotation as per trget chart size.\r\n   */\n\n\n  Annotation.prototype.sizeAnnotations = function () {\n    if (this.autoSize) {\n      if (!this._originalBbox) {\n        var bbox = this.group.getBBox();\n        this._originalBbox = {\n          width: bbox.width,\n          height: bbox.height\n        };\n      } //console.log(bbox.width);\n\n\n      var w = this.target.pixelWidth;\n      var h = this.target.pixelHeight;\n      var dx = w / this._originalBbox.width;\n      var dy = h / this._originalBbox.height;\n      var data = this.data;\n\n      for (var i = 0; i < data.objects.length; i++) {\n        var item = data.objects[i];\n        item.left *= dx;\n        item.top *= dy;\n      }\n\n      this.data = data;\n      this._originalBbox = {\n        width: w,\n        height: h\n      };\n    }\n  };\n\n  return Annotation;\n}(Plugin);\n\nexport { Annotation };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Annotation\"] = Annotation;","map":{"version":3,"sources":["../../../../../src/.internal/plugins/annotation/Annotation.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Plugin which enables annotation functionality for charts.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { fabric } from \"../../fabric/fabric.js\";\r\nimport { AnnotationIcons } from \"./AnnotationIcons\";\r\nimport { Plugin } from \"../../core/utils/Plugin\";\r\nimport { IExportCustomOptions } from \"../../core/export/Export\";\r\nimport { ExportMenu, IExportMenuItem } from \"../../core/export/ExportMenu\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Color, color } from \"../../core/utils/Color\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A plugin which automatically groups [[PercenSeries]] slices that are smaller\r\n * than certain percent into one \"Other\" slice.\r\n *\r\n * By pushing an instance of [[Annnotation]] into `plugin` list of\r\n * any [[Chart]], it automatically applies the functionality.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let annotation = chart.plugins.push(new am4plugins_annotation.Annotation());\r\n * ```\r\n * ```JavaScript\r\n * let annotation = chart.plugins.push(new am4plugins_annotation.Annotation());\r\n * ```\r\n * ```JSON\r\n * {\r\n *   \"plugins\": [{\r\n *     \"type\": \"Annotation\"\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.5\r\n *\r\n * @todo resolve translations\r\n * @todo change mouse cursors based on context/tool\r\n * @todo better line selection on click\r\n * @todo arrow support\r\n * @todo undo/redo\r\n * @todo reposition/resize annotations on chart resize\r\n * @todo make annotations hold on IE (when in not annotation mode)\r\n */\r\nexport class Annotation extends Plugin {\r\n\r\n\t/**\r\n\t * Indicates if Sprite is currently in annotating mode.\r\n\t */\r\n\tprivate _active: boolean = false;\r\n\r\n\t/**\r\n\t * A reference to menu item that holds annotation tools.\r\n\t */\r\n\tprivate _menu: IExportMenuItem;\r\n\r\n\t/**\r\n\t * An ID of an element that represents the currently selected tool indicator.\r\n\t */\r\n\tprivate _indicatorId: string;\r\n\r\n\t/**\r\n\t * Currently selected tool.\r\n\t */\r\n\tprivate _currentTool: string = \"draw\";\r\n\r\n\t/**\r\n\t * Current color in use.\r\n\t */\r\n\tprivate _currentColor: Color = color(\"#c00\");\r\n\r\n\t/**\r\n\t * Currently selected weight/width.\r\n\t */\r\n\tprivate _currentWidth: number = 2;\r\n\r\n\t/**\r\n\t * Currently selected opacity.\r\n\t */\r\n\tprivate _currentOpacity: number = 0.8;\r\n\r\n\t/**\r\n\t * Font size.\r\n\t */\r\n\tprivate _currentFontSize: number = 20;\r\n\r\n\t/**\r\n\t * Font weight.\r\n\t */\r\n\tprivate _currentFontWeight: number = 400;\r\n\r\n\t/**\r\n\t * Color selection.\r\n\t */\r\n\tprivate _colors: Array<Color> = [];\r\n\r\n\t/**\r\n\t * Available line widths.\r\n\t */\r\n\tprivate _widths: Array<number> = [];\r\n\r\n\t/**\r\n\t * Available opacities.\r\n\t */\r\n\tprivate _opacities: Array<number> = [];\r\n\r\n\t/**\r\n\t * Available font sizes.\r\n\t */\r\n\tprivate _fontSizes: Array<number> = [];\r\n\r\n\t/**\r\n\t * Available font weights.\r\n\t */\r\n\tprivate _fontWeights: Array<number> = [];\r\n\r\n\t/**\r\n\t * Menu enabled?\r\n\t */\r\n\tprivate _useMenu: boolean = true;\r\n\r\n\t/**\r\n\t * Did plugin create own menu or reusing existing ExportMenu?\r\n\t */\r\n\tprivate _ownMenu: boolean = true;\r\n\r\n\t/**\r\n\t * A Fabric's Canvas element.\r\n\t *\r\n\t * @see {@link http://fabricjs.com/docs/fabric.Canvas.html}\r\n\t */\r\n\tprivate _fabric: fabric.Canvas;\r\n\r\n\t/**\r\n\t * Reference to `<g>` element that holds annotation objects.\r\n\t */\r\n\tprivate _group: SVGGElement;\r\n\r\n\tprivate _pointerDown: boolean = false;\r\n\tprivate _currentLine: any;\r\n\tprivate _currentArrowhead: any;\r\n\tprivate _data: any;\r\n\tprivate _exportInited: boolean = false;\r\n\r\n\t/**\r\n\t * List of icons to use in annotation\r\n\t */\r\n\tpublic icons: Array<string> = [];\r\n\r\n\t/**\r\n\t * Logs orinal size of the chart so that annotations can be repositioned\r\n\t * relatively when that changes.\r\n\t * @type {number}\r\n\t */\r\n\tprivate _originalBbox: { width: number, height: number };\r\n\r\n\t/**\r\n\t * If set to `true` plugin will try to reposition annotation relatively when\r\n\t * size of the chart chanages.\r\n\t *\r\n\t * This feature is experimental. Use at your own risk.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.19\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic autoSize: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t// Nothing to do here\r\n\t\tsuper();\r\n\r\n\t\t// Set default colors\r\n\t\tthis._colors = [\r\n\t\t\tcolor(\"#000\"),\r\n\t\t\tcolor(\"#fff\"),\r\n\t\t\tcolor(\"#c00\"),\r\n\t\t\tcolor(\"#0c0\"),\r\n\t\t\tcolor(\"#00c\")\r\n\t\t];\r\n\r\n\t\t// Set defaults\r\n\t\tthis._widths = [1, 2, 4, 10];\r\n\t\tthis._opacities = [0.2, 0.4, 0.6, 0.8, 1];\r\n\r\n\t\t// Set default font sizes\r\n\t\tthis._fontSizes = [10, 15, 20, 30];\r\n\t\tthis._fontWeights = [200, 300, 400, 800];\r\n\r\n\t\t// Add default icons\r\n\t\tthis.icons = [\r\n\t\t\tAnnotationIcons.pin,\r\n\t\t\tAnnotationIcons.heart,\r\n\t\t\tAnnotationIcons.check,\r\n\t\t\tAnnotationIcons.like,\r\n\t\t\tAnnotationIcons.dislike,\r\n\t\t\tAnnotationIcons.tag,\r\n\t\t\tAnnotationIcons.attention,\r\n\t\t\tAnnotationIcons.smiley\r\n\t\t];\r\n\t}\r\n\r\n\tpublic init() {\r\n\t\tsuper.init();\r\n\t\tthis.initExporting();\r\n\t\tif (this._data) {\r\n\t\t\tthis.loadData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes menus for the annotation.\r\n\t *\r\n\t * Will try to use existing [[ExportMenu]] if present.\r\n\t */\r\n\tprotected initExporting(): void {\r\n\t\tconst target = this.target;\r\n\r\n\t\t// Create an export menu if it does not yet exist\r\n\t\tif (this.useMenu) {\r\n\t\t\tif (!target.exporting.menu) {\r\n\t\t\t\ttarget.exporting.menu = new ExportMenu();\r\n\t\t\t\ttarget.exporting.menu.items[0].menu = [];\r\n\t\t\t\tthis._ownMenu = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttarget.exporting.menu.invalidate();\r\n\t\t\t\tthis._ownMenu = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Update indicator when menu is created\r\n\t\ttarget.exporting.events.once(\"menucreated\", this.updateIndicator);\r\n\r\n\t\ttarget.events.on(\"sizechanged\", this.sizeAnnotations, this);\r\n\r\n\t\t// Create DEL key handler\r\n\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (this.active && keyboard.isKey(ev.event, \"del\")) {\r\n\t\t\t\tthis.deleteSelected();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Update/show SVG annotation if currently in annotation mode and user\r\n\t\t// triggers export.\r\n\t\ttarget.exporting.events.on(\"exportstarted\", (ev) => {\r\n\t\t\tif (this.active) {\r\n\t\t\t\tthis.updateSVG();\r\n\t\t\t\t(<any>this).fabric.wrapperEl.style.display = \"none\";\r\n\t\t\t\tthis._group.style.display = \"\";\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\ttarget.exporting.events.on(\"exportfinished\", (ev) => {\r\n\t\t\tif (this.active) {\r\n\t\t\t\tthis._group.style.display = \"none\";\r\n\t\t\t\t(<any>this).fabric.wrapperEl.style.display = \"block\";\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Generate a unique id for indicator\r\n\t\tthis._indicatorId = registry.getUniqueId();\r\n\r\n\t\tif (this.useMenu) {\r\n\r\n\t\t\t// Add annotation menu\r\n\t\t\ttarget.exporting.menu.items[0].menu.push({\r\n\t\t\t\tlabel: target.language.translateAny(\"Annotate\"),\r\n\t\t\t\ttype: \"custom\",\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tcallback: this.handleClick,\r\n\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Color list\r\n\t\t\tlet colors: Array<IExportMenuItem> = [];\r\n\t\t\tfor (let i = 0; i < this.colors.length; i++) {\r\n\t\t\t\tcolors.push({\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tsvg: AnnotationIcons.ok,\r\n\t\t\t\t\tcolor: this.colors[i],\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\t\tthis.setColor(this.colors[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Width list\r\n\t\t\tlet widths: Array<IExportMenuItem> = [];\r\n\t\t\tfor (let i = 0; i < this.widths.length; i++) {\r\n\t\t\t\twidths.push({\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tlabel: this.widths[i] + \"px\",\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\t\tthis.setWidth(this.widths[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Opacity list\r\n\t\t\tlet opacities: Array<IExportMenuItem> = [];\r\n\t\t\tfor (let i = 0; i < this.opacities.length; i++) {\r\n\t\t\t\topacities.push({\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tlabel: \"<span style=\\\"opacity: \" + this.opacities[i] + \"\\\">\" + (this.opacities[i] * 100) + \"%</span>\",\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\t\tthis.setOpacity(this.opacities[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Font sizes\r\n\t\t\tlet fontSizes: Array<IExportMenuItem> = [];\r\n\t\t\tfor (let i = 0; i < this.fontSizes.length; i++) {\r\n\t\t\t\tfontSizes.push({\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tlabel: \"\" + this.fontSizes[i],\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\t\tthis.setFontSize(this.fontSizes[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Font weights\r\n\t\t\tlet fontWeights: Array<IExportMenuItem> = [];\r\n\t\t\tfor (let i = 0; i < this.fontWeights.length; i++) {\r\n\t\t\t\tfontWeights.push({\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tlabel: \"\" + this.fontWeights[i],\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\t\tthis.setFontWeight(this.fontWeights[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Icons\r\n\t\t\tlet icons: Array<IExportMenuItem> = [];\r\n\t\t\tfor (let i = 0; i < this.icons.length; i++) {\r\n\t\t\t\ticons.push({\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tsvg: this.icons[i],\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\t\tthis.addIcon(this.icons[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Construct main menu item\r\n\t\t\tconst id = this._indicatorId;\r\n\t\t\t//let mainitem = this.target.exporting.menu.createSvgElement(0, \"custom\", AnnotationIcons.select).outerHTML;\r\n\t\t\tlet mainitem = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1\\\" viewBox=\\\"0 0 24 24\\\"></svg>\";\r\n\t\t\tmainitem += \"<span class=\\\"\" + id + \"_color\\\" style=\\\"display: block; background-color: \" + this.currentColor.hex + \"; width: 1.2em; height: 1.2em; margin: 0.2em auto 0.4em auto;\\\"></span>\";\r\n\r\n\t\t\t// Add annotation tools menu\r\n\t\t\tthis._menu = {\r\n\t\t\t\thidden: !this.active,\r\n\t\t\t\t// icon: AnnotationIcons.select,\r\n\t\t\t\tlabel: mainitem,\r\n\t\t\t\tid: this._indicatorId,\r\n\t\t\t\tmenu: [{\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tsvg: AnnotationIcons.tools,\r\n\t\t\t\t\tlabel: target.language.translateAny(\"Tools\"),\r\n\t\t\t\t\tmenu: [{\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.select,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Select\"),\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tcallback: this.select,\r\n\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.draw,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Draw\"),\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tcallback: this.draw,\r\n\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.line,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Line\"),\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tcallback: this.line,\r\n\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.arrow,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Arrow\"),\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tcallback: this.arrow,\r\n\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.width,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Weight\"),\r\n\t\t\t\t\t\tmenu: widths\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.delete,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Delete\"),\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tcallback: this.delete,\r\n\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}]\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tsvg: AnnotationIcons.text,\r\n\t\t\t\t\tlabel: target.language.translateAny(\"Text\"),\r\n\t\t\t\t\tmenu: [{\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.textAdd,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Add\"),\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tcallback: this.addText,\r\n\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.textWeight,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Weight\"),\r\n\t\t\t\t\t\tmenu: fontWeights\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.textSize,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Size\"),\r\n\t\t\t\t\t\tmenu: fontSizes\r\n\t\t\t\t\t}]\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tsvg: AnnotationIcons.colors,\r\n\t\t\t\t\tlabel: target.language.translateAny(\"Color\"),\r\n\t\t\t\t\tmenu: colors\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tsvg: AnnotationIcons.opacity,\r\n\t\t\t\t\tlabel: target.language.translateAny(\"Opacity\"),\r\n\t\t\t\t\tmenu: opacities\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tsvg: AnnotationIcons.icon,\r\n\t\t\t\t\tlabel: target.language.translateAny(\"Icon\"),\r\n\t\t\t\t\tmenu: icons\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\tsvg: AnnotationIcons.more,\r\n\t\t\t\t\tlabel: target.language.translateAny(\"More\"),\r\n\t\t\t\t\tmenu: [/*{\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.undo,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Undo\"),\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tcallback: this.underConstruction,\r\n\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\tsvg: AnnotationIcons.redo,\r\n\t\t\t\t\t\tlabel: target.language.translateAny(\"Redo\"),\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tcallback: this.underConstruction,\r\n\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, */{\r\n\t\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\t\tsvg: AnnotationIcons.done,\r\n\t\t\t\t\t\t\tlabel: target.language.translateAny(\"Done\"),\r\n\t\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\t\tcallback: this.deactivate,\r\n\t\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\ttype: \"custom\",\r\n\t\t\t\t\t\t\tsvg: AnnotationIcons.discard,\r\n\t\t\t\t\t\t\tlabel: target.language.translateAny(\"Discard\"),\r\n\t\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\t\tcallback: this.discard,\r\n\t\t\t\t\t\t\t\tcallbackTarget: this\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t}]\r\n\t\t\t};\r\n\t\t\ttarget.exporting.menu.items.push(this._menu);\r\n\t\t}\r\n\r\n\t\tthis._exportInited = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles annotation mode on click of the related menu item.\r\n\t *\r\n\t * @ignore\r\n\t * @param  options  Options\r\n\t */\r\n\tpublic handleClick(options: IExportCustomOptions): void {\r\n\t\tthis.active = !this.active;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an instance of Fabric's `Canvas`.\r\n\t * @return Canvas\r\n\t */\r\n\tpublic get fabric(): fabric.Canvas {\r\n\t\t// Init canvas if not yet done\r\n\t\tif (!this._fabric) {\r\n\r\n\t\t\t// Creae <canvas> element\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = this.target.pixelWidth;\r\n\t\t\tcanvas.height = this.target.pixelHeight;\r\n\t\t\tcanvas.style.position = \"absolute\";\r\n\t\t\tcanvas.style.top = \"0\";\r\n\t\t\tcanvas.style.left = \"0\";\r\n\t\t\tthis.target.svgContainer.SVGContainer.appendChild(canvas);\r\n\r\n\t\t\t// Create Fabric representation of the canvas\r\n\t\t\tthis._fabric = new fabric.Canvas(canvas, {\r\n\t\t\t\t//isDrawingMode: true,\r\n\t\t\t\tcontainerClass: \"am4plugins_annotation_canvas_container\"\r\n\t\t\t});\r\n\t\t\t(<any>this).fabric.wrapperEl.style.position = \"absolute\";\r\n\t\t\t(<any>this).fabric.wrapperEl.style.top = \"0\";\r\n\t\t\t(<any>this).fabric.wrapperEl.style.left = \"0\";\r\n\r\n\t\t\t// Set up events for deletion\r\n\t\t\tthis.fabric.on(\"selection:created\", (ev) => {\r\n\t\t\t\tif (this.currentTool == \"delete\") {\r\n\t\t\t\t\tthis.deleteSelected();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Set up events for drawing lines/arrows\r\n\t\t\tthis._fabric.on(\"mouse:down\", (ev) => {\r\n\r\n\t\t\t\tif (this.currentTool != \"line\" && this.currentTool != \"arrow\") {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Line\r\n\t\t\t\tthis._pointerDown = true;\r\n\t\t\t\tlet pointer = this._fabric.getPointer(ev.e);\r\n\t\t\t\tlet points = [pointer.x, pointer.y, pointer.x, pointer.y];\r\n\r\n\t\t\t\tthis._currentLine = new fabric.Line(points, {\r\n\t\t\t\t\tstrokeWidth: this.currentWidth,\r\n\t\t\t\t\tfill: this.currentColor.hex,\r\n\t\t\t\t\tstroke: this.currentColor.hex,\r\n\t\t\t\t\topacity: this.currentOpacity,\r\n\t\t\t\t\toriginX: \"center\",\r\n\t\t\t\t\toriginY: \"center\"\r\n\t\t\t\t});\r\n\t\t\t\tthis._fabric.add(this._currentLine);\r\n\r\n\t\t\t\t// Arrowhead\r\n\t\t\t\tif (this.currentTool == \"arrow\") {\r\n\t\t\t\t\tthis._currentArrowhead = new fabric.Triangle({\r\n\t\t\t\t\t\twidth: 10,\r\n\t\t\t\t\t\theight: 10,\r\n\t\t\t\t\t\tstrokeWidth: this.currentWidth,\r\n\t\t\t\t\t\tfill: this.currentColor.hex,\r\n\t\t\t\t\t\tstroke: this.currentColor.hex,\r\n\t\t\t\t\t\topacity: this.currentOpacity,\r\n\t\t\t\t\t\tleft: pointer.x - 5,\r\n\t\t\t\t\t\ttop: pointer.y - 10,\r\n\t\t\t\t\t\toriginX: \"center\",\r\n\t\t\t\t\t\toriginY: \"center\",\r\n\t\t\t\t\t\tangle: 0\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._fabric.add(this._currentArrowhead);\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t\tthis._fabric.on(\"mouse:move\", (ev) => {\r\n\t\t\t\tif (!this._pointerDown || (this.currentTool != \"line\" && this.currentTool != \"arrow\")) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet pointer = this._fabric.getPointer(ev.e);\r\n\t\t\t\tthis._currentLine.set({ x2: pointer.x, y2: pointer.y });\r\n\r\n\t\t\t\t// Move and rotate arrowhead\r\n\t\t\t\tif (this.currentTool == \"arrow\") {\r\n\t\t\t\t\tconst angle = $math.getAngle(\r\n\t\t\t\t\t\t{ x: this._currentLine.x1, y: this._currentLine.y1 },\r\n\t\t\t\t\t\t{ x: this._currentLine.x2, y: this._currentLine.y2 }\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis._currentArrowhead.set({\r\n\t\t\t\t\t\tleft: pointer.x,\r\n\t\t\t\t\t\ttop: pointer.y,\r\n\t\t\t\t\t\tangle: angle + 90\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._fabric.renderAll();\r\n\r\n\t\t\t});\r\n\r\n\t\t\tthis._fabric.on(\"mouse:up\", (ev) => {\r\n\t\t\t\tthis._pointerDown = false;\r\n\t\t\t});\r\n\r\n\t\t\t// Load data if necessary\r\n\t\t\tif (this._data) {\r\n\t\t\t\tthis.loadData();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._fabric;\r\n\t}\r\n\r\n\t/**\r\n\t * A `<g>` that holds SVG representation of the annotations in chart overlay.\r\n\t *\r\n\t * @return  Group element\r\n\t */\r\n\tpublic get group(): SVGGElement {\r\n\t\tif (!this._group) {\r\n\t\t\t//this.group = this.target.svgContainer.container.dom.appendChild(document.createElement(\"g\"));\r\n\t\t\tthis._group = this.target.paper.add(\"g\").node;\r\n\t\t\tthis._group.style.pointerEvents = \"none\";\r\n\t\t\tthis._group.setAttribute(\"clip-path\", this.target.dom.getAttribute(\"clip-path\"));\r\n\t\t\tthis.target.svgContainer.container.dom.appendChild(this._group);\r\n\t\t}\r\n\t\treturn this._group;\r\n\t}\r\n\r\n\t/**\r\n\t * Activates annotation mode.\r\n\t */\r\n\tpublic activate(): void {\r\n\t\tthis.active = true;\r\n\t\tthis.updateTool();\r\n\t\t(<any>this).fabric.wrapperEl.style.display = \"block\";\r\n\t\tthis.group.style.display = \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * Deactivates annotation mode.\r\n\t */\r\n\tpublic deactivate(): void {\r\n\t\tthis.active = false;\r\n\t\tthis.updateTool();\r\n\t\t(<any>this).fabric.wrapperEl.style.display = \"none\";\r\n\t\tthis.updateSVG();\r\n\t\tthis.group.style.display = \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Updates SVG overlay to display annotations when in non-annotation mode.\r\n\t *\r\n\t * @todo Set contents properly (not use innerHTML)\r\n\t */\r\n\tprivate updateSVG(): void {\r\n\t\tlet svg = this.fabric.toSVG();\r\n\t\tconst matches = svg.replace(/[\\n\\r]*/g, \"\").match(/<g.*<\\/g>/g);\r\n\t\tif (matches) {\r\n\t\t\tthis.group.innerHTML = matches[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.group.innerHTML = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Seting to `true` puts the chart in annotation mode.\r\n\t *\r\n\t * Setting to `false` returns chart to regular mode of operation.\r\n\t *\r\n\t * @default false\r\n\t * @param  value  Active?\r\n\t */\r\n\tpublic set active(value: boolean) {\r\n\t\tif (this._active != value) {\r\n\t\t\tthis._active = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.activate();\r\n\t\t\t\tif (this.useMenu) {\r\n\t\t\t\t\tthis.target.exporting.menu.showBranch(this._menu);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.deactivate();\r\n\t\t\t\tif (this.useMenu) {\r\n\t\t\t\t\tthis.target.exporting.menu.hideBranch(this._menu);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.updateIndicator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Active?\r\n\t */\r\n\tpublic get active(): boolean {\r\n\t\treturn this._active;\r\n\t}\r\n\r\n\t/**\r\n\t * Currently selected color.\r\n\t *\r\n\t * @default #000\r\n\t * @param  value  Color\r\n\t */\r\n\tpublic set currentColor(value: Color) {\r\n\t\tif (this._currentColor != value) {\r\n\t\t\tthis._currentColor = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get currentColor(): Color {\r\n\t\treturn this._currentColor;\r\n\t}\r\n\r\n\t/**\r\n\t * List of colors to show in selection.\r\n\t *\r\n\t * @param  value  Colors\r\n\t */\r\n\tpublic set colors(value: Array<Color>) {\r\n\t\tif (this._colors != value) {\r\n\t\t\tthis._colors = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t\tthis.setColor(this._currentColor);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Colors\r\n\t */\r\n\tpublic get colors(): Array<Color> {\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * Currently selected width.\r\n\t *\r\n\t * @default 1\r\n\t * @param  value  Width\r\n\t */\r\n\tpublic set currentWidth(value: number) {\r\n\t\tif (this._currentWidth != value) {\r\n\t\t\tthis._currentWidth = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t\tthis.setWidth(this._currentWidth);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width\r\n\t */\r\n\tpublic get currentWidth(): number {\r\n\t\treturn this._currentWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * List of widths in pixels for line and free-draw tool.\r\n\t *\r\n\t * @param  value  Widths\r\n\t */\r\n\tpublic set widths(value: Array<number>) {\r\n\t\tif (this._widths != value) {\r\n\t\t\tthis._widths = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Widths\r\n\t */\r\n\tpublic get widths(): Array<number> {\r\n\t\treturn this._widths;\r\n\t}\r\n\r\n\t/**\r\n\t * Currently selected opacity.\r\n\t *\r\n\t * @default 1\r\n\t * @param  value  Opacity\r\n\t */\r\n\tpublic set currentOpacity(value: number) {\r\n\t\tif (this._currentOpacity != value) {\r\n\t\t\tthis._currentOpacity = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t\tthis.setOpacity(this._currentOpacity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacity\r\n\t */\r\n\tpublic get currentOpacity(): number {\r\n\t\treturn this._currentOpacity;\r\n\t}\r\n\r\n\t/**\r\n\t * List of opacities available for selection.\r\n\t *\r\n\t * @param  value  Opacities\r\n\t */\r\n\tpublic set opacities(value: Array<number>) {\r\n\t\tif (this._opacities != value) {\r\n\t\t\tthis._opacities = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacities\r\n\t */\r\n\tpublic get opacities(): Array<number> {\r\n\t\treturn this._opacities;\r\n\t}\r\n\r\n\t/**\r\n\t * Currently selected font size.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value  Font size\r\n\t */\r\n\tpublic set currentFontSize(value: number) {\r\n\t\tif (this._currentFontSize != value) {\r\n\t\t\tthis._currentFontSize = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t\tthis.setFontSize(this._currentFontSize);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Font size\r\n\t */\r\n\tpublic get currentFontSize(): number {\r\n\t\treturn this._currentFontSize;\r\n\t}\r\n\r\n\t/**\r\n\t * List of available font sizes.\r\n\t *\r\n\t * @param  value  Font sizes\r\n\t */\r\n\tpublic set fontSizes(value: Array<number>) {\r\n\t\tif (this._fontSizes != value) {\r\n\t\t\tthis._fontSizes = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Font sizes\r\n\t */\r\n\tpublic get fontSizes(): Array<number> {\r\n\t\treturn this._fontSizes;\r\n\t}\r\n\r\n\t/**\r\n\t * Currently selected font weight.\r\n\t *\r\n\t * @default 400\r\n\t * @param  value  Font weight\r\n\t */\r\n\tpublic set currentFontWeight(value: number) {\r\n\t\tif (this._currentFontWeight != value) {\r\n\t\t\tthis._currentFontWeight = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t\t//this.setFontWeight(this._currentFontWeight);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Font weight\r\n\t */\r\n\tpublic get currentFontWeight(): number {\r\n\t\treturn this._currentFontWeight;\r\n\t}\r\n\r\n\t/**\r\n\t * List of available font weights.\r\n\t *\r\n\t * @param  value  Font weights\r\n\t */\r\n\tpublic set fontWeights(value: Array<number>) {\r\n\t\tif (this._fontWeights != value) {\r\n\t\t\tthis._fontWeights = value;\r\n\t\t\tthis.updateIndicator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Font weights\r\n\t */\r\n\tpublic get fontWeights(): Array<number> {\r\n\t\treturn this._fontWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * Currently selected tool.\r\n\t *\r\n\t * @default select\r\n\t * @param  value  Tool\r\n\t */\r\n\tpublic set currentTool(value: string) {\r\n\t\tif (this._currentTool != value) {\r\n\t\t\tthis._currentTool = value;\r\n\t\t\tthis.updateTool();\r\n\t\t\tthis.updateIndicator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tool\r\n\t */\r\n\tpublic get currentTool(): string {\r\n\t\treturn this._currentTool;\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates tool.\r\n\t */\r\n\tprivate updateTool(): void {\r\n\t\tswitch (this.currentTool) {\r\n\t\t\tcase \"select\":\r\n\t\t\t\tthis.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"draw\":\r\n\t\t\t\tthis.draw();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"delete\":\r\n\t\t\t\tthis.delete();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"line\":\r\n\t\t\t\tthis.line();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arrow\":\r\n\t\t\t\tthis.arrow();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates currently selected tool/color indicator.\r\n\t */\r\n\tprivate updateIndicator(): void {\r\n\t\tif (this.indicator) {\r\n\r\n\t\t\t// Update tool icon\r\n\t\t\tlet container = this.indicator.getElementsByTagName(\"a\")[0];\r\n\t\t\tlet newicon = this.target.exporting.menu.createSvgElement(0, \"custom\", (<any>AnnotationIcons)[this.currentTool]);\r\n\t\t\tlet oldicon = this.indicator.getElementsByTagName(\"svg\")[0];\r\n\t\t\tcontainer.insertBefore(newicon, oldicon);\r\n\t\t\tcontainer.removeChild(oldicon);\r\n\r\n\t\t\t// Update color\r\n\t\t\t(<any>this.indicator.getElementsByClassName(this._indicatorId + \"_color\"))[0].style.backgroundColor = this.currentColor.hex;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Current tool/color indicator element.\r\n\t *\r\n\t * @return  Indicator\r\n\t */\r\n\tpublic get indicator(): HTMLElement {\r\n\t\treturn document.getElementById(this._indicatorId);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets color.\r\n\t *\r\n\t * @param  value  Color\r\n\t */\r\n\tpublic setColor(value: Color): void {\r\n\t\tthis.currentColor = value;\r\n\r\n\t\tlet brushColor = color(value);\r\n\t\tbrushColor.alpha = this.currentOpacity;\r\n\t\tthis.fabric.freeDrawingBrush.color = brushColor.rgba;\r\n\r\n\t\t// Update selected objects\r\n\t\tlet selected: any = this.fabric.getActiveObjects();\r\n\t\tfor (let i = 0; i < selected.length; i++) {\r\n\t\t\tif (selected[i].isType(\"textbox\") || (selected[i].isType(\"path\") && selected[i].fill)) {\r\n\t\t\t\tselected[i].set(\"fill\", value.hex);\r\n\t\t\t}\r\n\t\t\telse if (selected[i].isType(\"triangle\")) {\r\n\t\t\t\tselected[i].set(\"stroke\", value.hex);\r\n\t\t\t\tselected[i].set(\"fill\", value.hex);\r\n\t\t\t}\r\n\t\t\telse if ((<any>selected[i]).getSrc) {\r\n\t\t\t\tthis.setIconFill(<fabric.Image>selected[i]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselected[i].set(\"stroke\", value.hex);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.fabric.requestRenderAll();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets line width.\r\n\t *\r\n\t * @param  value  Width\r\n\t */\r\n\tpublic setWidth(value: number): void {\r\n\t\tthis.currentWidth = value;\r\n\t\tthis.fabric.freeDrawingBrush.width = value;\r\n\r\n\t\t// Update selected objects\r\n\t\tlet selected = this.fabric.getActiveObjects();\r\n\t\tfor (let i = 0; i < selected.length; i++) {\r\n\t\t\tselected[i].set(\"strokeWidth\", value);\r\n\t\t}\r\n\t\tthis.fabric.requestRenderAll();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets opacity.\r\n\t *\r\n\t * @param  value  Opacity\r\n\t */\r\n\tpublic setOpacity(value: number): void {\r\n\t\tthis.currentOpacity = value;\r\n\r\n\t\tlet brushColor = color(this.currentColor);\r\n\t\tbrushColor.alpha = this.currentOpacity;\r\n\t\tthis.fabric.freeDrawingBrush.color = brushColor.rgba;\r\n\r\n\t\t// Update selected objects\r\n\t\tlet selected = this.fabric.getActiveObjects();\r\n\t\tfor (let i = 0; i < selected.length; i++) {\r\n\t\t\tif (selected[i].isType(\"path\")) {\r\n\t\t\t\tselected[i].set(\"stroke\", this.currentColor.hex);\r\n\t\t\t}\r\n\t\t\tselected[i].set(\"opacity\", value);\r\n\t\t}\r\n\t\tthis.fabric.requestRenderAll();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets font size.\r\n\t *\r\n\t * @param  value  Font size\r\n\t */\r\n\tpublic setFontSize(value: number): void {\r\n\t\tthis.currentFontSize = value;\r\n\r\n\t\t// Update selected objects\r\n\t\tlet selected = this.fabric.getActiveObjects();\r\n\t\tfor (let i = 0; i < selected.length; i++) {\r\n\t\t\tif ((<any>selected[i]).text) {\r\n\t\t\t\t(<any>selected[i]).set(\"fontSize\", value);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.fabric.requestRenderAll();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets font weight.\r\n\t *\r\n\t * @param  value  Font weight\r\n\t */\r\n\tpublic setFontWeight(value: number): void {\r\n\t\tthis.currentFontWeight = value;\r\n\r\n\t\t// Update selected objects\r\n\t\tlet selected = this.fabric.getActiveObjects();\r\n\t\tfor (let i = 0; i < selected.length; i++) {\r\n\t\t\tif ((<any>selected[i]).text) {\r\n\t\t\t\t(<any>selected[i]).set(\"fontWeight\", value);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.fabric.requestRenderAll();\r\n\t}\r\n\r\n\t/**\r\n\t * Does nothing.\r\n\t */\r\n\tpublic underConstruction(): void {\r\n\t\talert(\"This feature is not yet implemented\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts annotator in object selection mode.\r\n\t */\r\n\tpublic select(): void {\r\n\t\tthis.currentTool = \"select\";\r\n\t\tthis.fabric.isDrawingMode = false;\r\n\t\tthis.fabric.selection = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Puts annotator in free-drawing mode.\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.currentTool = \"draw\";\r\n\t\tthis.fabric.isDrawingMode = true;\r\n\t\tthis.fabric.selection = false;\r\n\r\n\t\tlet brushColor = color(this.currentColor);\r\n\t\tbrushColor.alpha = this.currentOpacity;\r\n\t\tthis.fabric.freeDrawingBrush.color = brushColor.rgba;\r\n\t\tthis.fabric.freeDrawingBrush.width = this.currentWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Puts annotator in line drawing mode.\r\n\t */\r\n\tpublic line(): void {\r\n\t\tthis.currentTool = \"line\";\r\n\t\tthis.fabric.isDrawingMode = false;\r\n\t\tthis.fabric.selection = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Puts annotator in arrow drawing mode.\r\n\t */\r\n\tpublic arrow(): void {\r\n\t\tthis.currentTool = \"arrow\";\r\n\t\tthis.fabric.isDrawingMode = false;\r\n\t\tthis.fabric.selection = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an editable text object to canvas.\r\n\t */\r\n\tpublic addText(): void {\r\n\t\tthis.fabric.isDrawingMode = false;\r\n\t\tthis.fabric.selection = true;\r\n\t\tthis.select();\r\n\t\tlet text = new fabric.Textbox(this.target.language.translateAny(\"Type...\"), {\r\n\t\t\t//left: this.target.pixelWidth / 2,\r\n\t\t\t//top: this.target.pixelHeight / 2,\r\n\t\t\tfontSize: this.currentFontSize,\r\n\t\t\tfontWeight: this.currentFontWeight,\r\n\t\t\tfill: this.currentColor.hex,\r\n\t\t\topacity: this.currentOpacity\r\n\t\t});\r\n\t\tthis.fabric.add(text);\r\n\t\tthis.fabric.centerObject(text);\r\n\t\ttext.enterEditing();\r\n\t\ttext.selectAll();\r\n\t\tthis.fabric.setActiveObject(text);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an image to canvas.\r\n\t */\r\n\tpublic addIcon(url: string): void {\r\n\t\tthis.fabric.isDrawingMode = false;\r\n\t\tthis.fabric.selection = true;\r\n\t\tthis.select();\r\n\r\n\t\tfabric.loadSVGFromString(url, (res) => {\r\n\t\t\tfor (let i = 0; i < res.length; i++) {\r\n\t\t\t\tthis.fabric.add(res[i]);\r\n\t\t\t\tthis.fabric.centerObject(res[i]);\r\n\t\t\t\tthis.fabric.setActiveObject(res[i]);\r\n\t\t\t\tthis.fabric.setActiveObject(res[i]);\r\n\t\t\t\tres[i].opacity = this.currentOpacity;\r\n\t\t\t\tres[i].fill = this.currentColor.hex;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// fabric.Image.fromElement(element, (img: any) => {\r\n\t\t// \tconsole.log(img)\r\n\t\t// \tthis.fabric.add(img);\r\n\t\t// \tthis.fabric.centerObject(img);\r\n\t\t// \tthis.fabric.setActiveObject(img);\r\n\t\t// \t// img.fill = this.currentColor.hex;\r\n\t\t// \t//this.fabric.requestRenderAll();\r\n\t\t// \timg.opacity = this.currentOpacity;\r\n\t\t// \tthis.setIconFill(img);\r\n\t\t// });\r\n\t}\r\n\r\n\t/**\r\n\t * Attemps to set a fill to the SVG icon.\r\n\t * @param  img  Fabric image reference\r\n\t */\r\n\tpublic setIconFill(img: fabric.Image): void {\r\n\t\tlet src = img.getSrc();\r\n\t\tlet svg = \"\";\r\n\t\tif (src.match(/;base64\\,/)) {\r\n\t\t\ttry {\r\n\t\t\t\tsvg = atob(src.replace(/^.*;base64\\,/g, \"\"));\r\n\t\t\t\tsvg = svg.replace(/fill=\"[^\"]+\"/, \"\");\r\n\t\t\t\tsvg = svg.replace(/\\/>/g, \" fill=\\\"\" + this.currentColor.hex + \"\\\" \\/>\");\r\n\t\t\t\tsrc = src.replace(/(^.*;base64\\,).*$/, \"$1\") + btoa(svg);\r\n\t\t\t\timg.setSrc(src);\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (src.match(/^data:/)) {\r\n\t\t\tsvg = src.replace(/^data:[^,]*\\,/, \"\");\r\n\t\t\tsvg = svg.replace(/fill=\"[^\"]+\"/, \"\");\r\n\t\t\tsvg = svg.replace(/\\/>/g, \" fill=\\\"\" + this.currentColor.hex + \"\\\" \\/>\");\r\n\t\t\tsrc = src.replace(/(^.*;base64\\,).*$/, \"$1\") + svg;\r\n\t\t\timg.setSrc(src);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Puts annotator in object deletion mode\r\n\t */\r\n\tpublic delete(): void {\r\n\t\tthis.currentTool = \"delete\";\r\n\t\tthis.fabric.isDrawingMode = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all annotations.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis.fabric.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all annotations and exits annotation mode.\r\n\t */\r\n\tpublic discard(): void {\r\n\t\tthis.fabric.clear();\r\n\t\tthis.updateSVG();\r\n\t\tthis.deactivate();\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes selected objects\r\n\t */\r\n\tpublic deleteSelected(): void {\r\n\t\tlet selected = this.fabric.getActiveObjects();\r\n\t\tfor (let i = 0; i < selected.length; i++) {\r\n\t\t\tthis.fabric.remove(selected[i]);\r\n\t\t}\r\n\t\tthis.fabric.requestRenderAll();\r\n\t}\r\n\r\n\t/**\r\n\t * Set or get annotation data.\r\n\t *\r\n\t * @since 4.5.6\r\n\t * @param  value  Data\r\n\t */\r\n\tpublic set data(value: any) {\r\n\t\tthis._data = value;\r\n\t\tif (this._fabric || this._exportInited) {\r\n\t\t\t// Canvas is ready, update now\r\n\t\t\tthis.loadData();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Canvas is not yeat ready, just save data for later\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data\r\n\t */\r\n\tpublic get data(): any {\r\n\t\tif (this._fabric) {\r\n\t\t\treturn this.fabric.toObject();\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `false` the plugin will not create own menu nor will add its\r\n\t * items to existing Export menu.\r\n\t *\r\n\t * In such case, annotation functionality will be available only via API.\r\n\t *\r\n\t * @since 4.8.0\r\n\t * @default true\r\n\t * @param  value  Use menu?\r\n\t */\r\n\tpublic set useMenu(value: boolean) {\r\n\t\tthis._useMenu = value;\r\n\t\tif (!value && this.target.exporting.menu) {\r\n\t\t\tif (this._ownMenu) {\r\n\t\t\t\tthis.target.exporting.menu.items[0].menu = [];\r\n\t\t\t\tthis.target.exporting.menu.invalidate();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.target.exporting.menu.items[0].menu.pop();\r\n\t\t\t\tthis.target.exporting.menu.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use menu?\r\n\t */\r\n\tpublic get useMenu(): boolean {\r\n\t\treturn this._useMenu;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads data onto canvas.\r\n\t */\r\n\tprivate loadData(): void {\r\n\t\tthis.fabric.loadFromJSON(this._data, (e: any) => {\r\n\t\t\tthis.updateSVG();\r\n\t\t\tthis._data = undefined;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Resizes annotation as per trget chart size.\r\n\t */\r\n\tprivate sizeAnnotations(): void {\r\n\t\tif (this.autoSize) {\r\n\t\t\tif (!this._originalBbox) {\r\n\t\t\t\tconst bbox = this.group.getBBox();\r\n\t\t\t\tthis._originalBbox = {\r\n\t\t\t\t\twidth: bbox.width,\r\n\t\t\t\t\theight: bbox.height\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(bbox.width);\r\n\t\t\tconst w = this.target.pixelWidth;\r\n\t\t\tconst h = this.target.pixelHeight;\r\n\t\t\tconst dx = (w / this._originalBbox.width);\r\n\t\t\tconst dy = (h / this._originalBbox.height);\r\n\t\t\tconst data = this.data;\r\n\r\n\t\t\tfor (let i = 0; i < data.objects.length; i++) {\r\n\t\t\t\tconst item = <any>data.objects[i];\r\n\t\t\t\titem.left *= dx;\r\n\t\t\t\titem.top *= dy;\r\n\t\t\t}\r\n\r\n\t\t\tthis.data = data;\r\n\t\t\tthis._originalBbox = {\r\n\t\t\t\twidth: w,\r\n\t\t\t\theight: h\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Annotation\"] = Annotation;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}