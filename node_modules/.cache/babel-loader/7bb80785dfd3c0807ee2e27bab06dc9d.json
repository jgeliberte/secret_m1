{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterStateName.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { NavigationContext } from \"../NavigationContext\";\nimport { statesAbbNames, statesNames } from \"./Utils/USAStates&Abb\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 249,\n    color: \"black\"\n  },\n  autoC: {\n    \"& input\": {\n      color: \"#17AADD\"\n    }\n  }\n}));\nexport default function FilterStateName() {\n  const classes = useStyles();\n  const [stateNav, setStateNav] = useContext(NavigationContext);\n  const nullDesc = {\n    GrId1: null,\n    GrId2: null,\n    GrId3: null,\n    GrId4: null,\n    GrId5: null,\n    filterGeography: null\n  };\n\n  const handleStateNameChange = (event, newValue) => {\n    if (newValue == null) {\n      setStateNav(stateNav => ({ ...stateNav,\n        stateName: null,\n        displayStateName: null,\n        countyName: null,\n        ...nullDesc\n      }));\n    } else {\n      const AbbName = statesAbbNames[statesNames.indexOf(newValue)];\n      setStateNav(stateNav => ({ ...stateNav,\n        stateName: AbbName,\n        displayStateName: newValue,\n        countyName: false,\n        ...nullDesc\n      }));\n    }\n  };\n\n  const onEnterKey = event => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    className: classes.autoC,\n    options: statesNames,\n    getOptionLabel: option => option,\n    autoSelect: true,\n    disableListWrap: true,\n    includeInputInList: true,\n    value: stateNav.displayStateName,\n    onChange: (event, newValue) => {\n      handleStateNameChange(event, newValue);\n    },\n    onKeyDown: event => onEnterKey(event),\n    renderInput: params => /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      fullWidth: true,\n      label: \"State\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }))),\n    renderOption: option => /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 35\n      }\n    }, option),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterStateName.js"],"names":["React","useState","useContext","useEffect","makeStyles","Typography","FormControl","TextField","Autocomplete","NavigationContext","statesAbbNames","statesNames","useStyles","theme","formControl","minWidth","color","autoC","FilterStateName","classes","stateNav","setStateNav","nullDesc","GrId1","GrId2","GrId3","GrId4","GrId5","filterGeography","handleStateNameChange","event","newValue","stateName","displayStateName","countyName","AbbName","indexOf","onEnterKey","keyCode","preventDefault","option","params"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\nimport { statesAbbNames, statesNames } from \"./Utils/USAStates&Abb\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 249,\r\n    color: \"black\",\r\n  },\r\n  autoC: { \"& input\": { color: \"#17AADD\" } },\r\n}));\r\n\r\nexport default function FilterStateName() {\r\n  const classes = useStyles();\r\n  const [stateNav, setStateNav] = useContext(NavigationContext);\r\n\r\n  const nullDesc = {\r\n    GrId1: null,\r\n    GrId2: null,\r\n    GrId3: null,\r\n    GrId4: null,\r\n    GrId5: null,\r\n    filterGeography: null,\r\n  };\r\n\r\n  const handleStateNameChange = (event, newValue) => {\r\n    if (newValue == null) {\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        stateName: null,\r\n        displayStateName: null,\r\n        countyName: null,\r\n        ...nullDesc,\r\n      }));\r\n    } else {\r\n      const AbbName = statesAbbNames[statesNames.indexOf(newValue)];\r\n\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        stateName: AbbName,\r\n        displayStateName: newValue,\r\n        countyName: false,\r\n        ...nullDesc,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const onEnterKey = (event) => {\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n      <Autocomplete\r\n        className={classes.autoC}\r\n        options={statesNames}\r\n        getOptionLabel={(option) => option}\r\n        autoSelect\r\n        disableListWrap\r\n        includeInputInList\r\n        value={stateNav.displayStateName}\r\n        onChange={(event, newValue) => {\r\n          handleStateNameChange(event, newValue);\r\n        }}\r\n        onKeyDown={(event) => onEnterKey(event)}\r\n        renderInput={(params) => (\r\n          <form autoComplete=\"off\">\r\n            <TextField {...params} fullWidth label=\"State\" variant=\"outlined\" />\r\n          </form>\r\n        )}\r\n        renderOption={(option) => <Typography>{option}</Typography>}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}