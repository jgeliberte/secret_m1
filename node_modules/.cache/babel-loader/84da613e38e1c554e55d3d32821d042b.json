{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Shared\\\\Taps.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    style: {\n      padding: \"0\",\n      margin: \"10px\"\n    },\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  WellsDetailsCardAppBar: {\n    backgroundColor: props => props.white ? \"#FFFFFF\" : \"rgb(1,17,51)\",\n    color: props => props.white ? \"rgb(1,17,51)\" : \"#FFFFFF\"\n  }\n}));\nexport default function Taps(props) {\n  const classes = useStyles(props);\n  const [value, setValue] = React.useState(0); ////props.tabLabels brings an array of labels////\n  ////props.tabPanels brings an array of panels////\n  ////props.whichTapIsActive is an optional function to return the active index////\n  ////props.white is an optional, a white taps version////\n  ////props.backgroundColor is an optional////\n\n  const {\n    tabLabels,\n    tabPanels\n  } = props;\n\n  const handleChange = (event, newValue) => {\n    if (props.whichTapIsActive) {\n      props.whichTapIsActive(newValue);\n    }\n\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: props.backgroundColor ? props.backgroundColor : \"#efefef\"\n    },\n    className: classes.root,\n    id: \"M1nTaps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.WellsDetailsCardAppBar,\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"secondary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    \"aria-label\": \"scrollable auto tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, tabLabels.map((label, i) => {\n    return /*#__PURE__*/React.createElement(Tab, Object.assign({\n      key: i,\n      label: label\n    }, a11yProps(i), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }\n    }));\n  }))), tabPanels.map((panel, i) => /*#__PURE__*/React.createElement(TabPanel\n  /*style={{background: \"#efefef\"}}*/\n  , {\n    key: i,\n    value: value,\n    index: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, panel)));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Shared/Taps.js"],"names":["React","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","TabPanel","props","children","value","index","other","padding","margin","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","WellsDetailsCardAppBar","white","color","Taps","classes","setValue","useState","tabLabels","tabPanels","handleChange","event","newValue","whichTapIsActive","map","label","i","panel"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box style={{ padding: \"0\", margin: \"10px\" }} p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  WellsDetailsCardAppBar: {\r\n    backgroundColor: (props) => (props.white ? \"#FFFFFF\" : \"rgb(1,17,51)\"),\r\n    color: (props) => (props.white ? \"rgb(1,17,51)\" : \"#FFFFFF\"),\r\n  },\r\n}));\r\n\r\nexport default function Taps(props) {\r\n  const classes = useStyles(props);\r\n  const [value, setValue] = React.useState(0);\r\n  ////props.tabLabels brings an array of labels////\r\n  ////props.tabPanels brings an array of panels////\r\n  ////props.whichTapIsActive is an optional function to return the active index////\r\n  ////props.white is an optional, a white taps version////\r\n  ////props.backgroundColor is an optional////\r\n  const { tabLabels, tabPanels } = props;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    if (props.whichTapIsActive) {\r\n      props.whichTapIsActive(newValue);\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: props.backgroundColor\r\n          ? props.backgroundColor\r\n          : \"#efefef\",\r\n      }}\r\n      className={classes.root}\r\n      id=\"M1nTaps\"\r\n    >\r\n      <AppBar\r\n        className={classes.WellsDetailsCardAppBar}\r\n        position=\"static\"\r\n        color=\"default\"\r\n      >\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {tabLabels.map((label, i) => {\r\n            return <Tab key={i} label={label} {...a11yProps(i)} />;\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tabPanels.map((panel, i) => (\r\n        <TabPanel\r\n          /*style={{background: \"#efefef\"}}*/ key={i}\r\n          value={value}\r\n          index={i}\r\n        >\r\n          {panel}\r\n        </TabPanel>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}