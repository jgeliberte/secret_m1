{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Shared\\\\M1nTable\\\\components\\\\SubComponents\\\\AddOwnerToContactDialogContent.js\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport parse from \"autosuggest-highlight/parse\";\nimport throttle from \"lodash/throttle\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport { ADDREMOVEOWNERTOACONTACT } from \"../../../../../graphQL/useMutationAddRemoveOwnerToAContact\";\nimport { AppContext } from \"../../../../../AppContext\";\nconst useStyles = makeStyles(theme => ({\n  dialogContent: {\n    width: \"400px\",\n    overflowY: \"hidden\"\n  },\n  dialogTitle: {\n    paddingBottom: \"16px\"\n  }\n}));\nexport default function AddOwnerToContactDialogContent(props) {\n  const classes = useStyles();\n  const [stateApp, setStateApp] = React.useContext(AppContext);\n  const [value, setValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [options, setOptions] = React.useState([]);\n  const [loadingOwners, setLoadingOwners] = React.useState(false);\n  const [addRemoveOwnerToAContact] = useMutation(ADDREMOVEOWNERTOACONTACT);\n  const callOwnerSearch = React.useMemo(() => throttle((request, top, callback) => {\n    const endpoint = \"https://m1search.search.windows.net/indexes/lod2019-index/docs?api-version=2019-05-06&%24count=true&searchFields=OwnerName%2CAddress1&%24top=\" + top + \"&search=\" + request.input;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\n    const options = {\n      method: \"GET\",\n      headers: headers\n    };\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  React.useEffect(() => {\n    if (inputValue === \"\") {\n      return undefined;\n    }\n\n    (async () => {\n      let newOptions = [];\n      Promise.all([callOwnerSearch({\n        input: inputValue\n      }, 20, results => {\n        if (results) {\n          const indexSource = results[\"@odata.context\"].substring(results[\"@odata.context\"].indexOf(\"('\") + 2, results[\"@odata.context\"].indexOf(\"')\"));\n          newOptions = [...results.value.map(result => {\n            return { ...result,\n              Source: indexSource,\n              Primary: result.OwnerName,\n              Secondary: `${result.Address1}\\n${result.Address2}\\n${result.City}\\n${result.State}\\n${result.Zip}`\n            };\n          }), ...newOptions];\n        }\n\n        setOptions(newOptions.filter(owner => props.existingOwners.indexOf(owner.Id) === -1));\n        setLoadingOwners(false);\n      })]);\n    })();\n  }, [inputValue, callOwnerSearch]);\n\n  const handleClickAdd = () => {\n    if (value && value.Id) {\n      addRemoveOwnerToAContact({\n        variables: {\n          contactId: props.parent,\n          ownerId: value.Id\n        },\n        refetchQueries: [\"getContacts\", \"getContactsByOwnerId\", \"getContactsCounter\", \"getContact\", \"getContactInM1nTable\"],\n        awaitRefetchQueries: true\n      });\n      props.onClose();\n      setStateApp(state => ({ ...state,\n        universalCircularLoaderAct: true\n      }));\n    }\n  };\n\n  const handleChange = newValue => {\n    if (!value || newValue && (value.Id !== newValue.Id || value.Source !== newValue.Source || value.Primary !== newValue.Primary || value.Secondary !== newValue.Secondary)) {\n      setValue(newValue);\n    }\n  }; //// adding loader ////\n\n\n  const loader = {\n    Source: \"loader\",\n    Score: 0,\n    Id: \"0\",\n    Primary: \"\",\n    Secondary: \"\"\n  };\n  let optionsWithLoader = options;\n\n  if (loadingOwners) {\n    optionsWithLoader = [loader];\n  }\n\n  if (value) {\n    optionsWithLoader = [...optionsWithLoader, value];\n  }\n\n  const searchAutocomplete = /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"add-owner-to-contact-autocomplete\",\n    getOptionLabel: (option, value) => option && option.Primary ? option.Primary : option ? option : \"\",\n    forcePopupIcon: true,\n    filterOptions: x => x,\n    options: optionsWithLoader,\n    groupBy: option => {\n      if (option.Source === \"lod2019-index\") return \"Owners\";\n      if (option.Source === \"loader\") return \"loader\";\n      return \"textField text\";\n    },\n    renderGroup: option => {\n      if (option.group === \"loader\") return /*#__PURE__*/React.createElement(CircularProgress, {\n        key: \"loader\",\n        style: {\n          margin: \"10px 0 0 48%\"\n        },\n        size: 28,\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      });\n      if (option.group === \"Owners\") return /*#__PURE__*/React.createElement(Grid, {\n        key: option.group,\n        container: true,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, option.children));\n    },\n    autoComplete: true,\n    includeInputInList: true,\n    value: value,\n    onChange: (event, newValue) => {\n      handleChange(newValue);\n    },\n    onInputChange: (event, newInputValue, reason) => {\n      if (reason == \"input\") {\n        setInputValue(newInputValue);\n\n        if (newInputValue !== \"\") {\n          setValue(newInputValue);\n          setLoadingOwners(true);\n        } else {\n          setOptions([]);\n          setValue(null);\n          setLoadingOwners(false);\n        }\n      }\n\n      if (reason == \"clear\") {\n        setInputValue(\"\");\n        setOptions([]);\n        setValue(null);\n      }\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by owner name or address\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    })),\n    renderOption: option => {\n      if (option.group === \"loader\") {\n        console.log(\"rrrrrrrrr\", option); /////////////////////////////////////////\n\n        return null;\n      }\n\n      if (option.Source === \"lod2019-index\") {\n        const parts = parse(option.Primary, Array());\n        return /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          item: true,\n          xs: 12,\n          alignItems: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }\n        }, parts.map((part, index) => /*#__PURE__*/React.createElement(\"span\", {\n          key: index,\n          style: {\n            fontWeight: part.highlight ? 700 : 400\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }\n        }, part.text)), option && option.Secondary && /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }\n        }, option.Secondary))));\n      }\n\n      return null; //////////////////////////////////\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    className: classes.dialogTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, \"Add an Owner\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    className: classes.dialogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, searchAutocomplete), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      props.onClose();\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: !value || value && !value.Id,\n    onClick: handleClickAdd,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Shared/M1nTable/components/SubComponents/AddOwnerToContactDialogContent.js"],"names":["React","TextField","Autocomplete","Grid","Typography","makeStyles","parse","throttle","useMutation","CircularProgress","DialogActions","DialogContent","DialogTitle","Button","ADDREMOVEOWNERTOACONTACT","AppContext","useStyles","theme","dialogContent","width","overflowY","dialogTitle","paddingBottom","AddOwnerToContactDialogContent","props","classes","stateApp","setStateApp","useContext","value","setValue","useState","inputValue","setInputValue","options","setOptions","loadingOwners","setLoadingOwners","addRemoveOwnerToAContact","callOwnerSearch","useMemo","request","top","callback","endpoint","input","headers","Headers","append","method","fetch","then","response","json","catch","error","console","log","useEffect","undefined","newOptions","Promise","all","results","indexSource","substring","indexOf","map","result","Source","Primary","OwnerName","Secondary","Address1","Address2","City","State","Zip","filter","owner","existingOwners","Id","handleClickAdd","variables","contactId","parent","ownerId","refetchQueries","awaitRefetchQueries","onClose","state","universalCircularLoaderAct","handleChange","newValue","loader","Score","optionsWithLoader","searchAutocomplete","option","x","group","margin","children","event","newInputValue","reason","params","parts","Array","part","index","fontWeight","highlight","text"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport throttle from \"lodash/throttle\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ADDREMOVEOWNERTOACONTACT } from \"../../../../../graphQL/useMutationAddRemoveOwnerToAContact\";\r\nimport { AppContext } from \"../../../../../AppContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogContent: {\r\n    width: \"400px\",\r\n    overflowY: \"hidden\",\r\n  },\r\n  dialogTitle: {\r\n    paddingBottom: \"16px\",\r\n  },\r\n}));\r\n\r\nexport default function AddOwnerToContactDialogContent(props) {\r\n  const classes = useStyles();\r\n  const [stateApp, setStateApp] = React.useContext(AppContext);\r\n  const [value, setValue] = React.useState(null);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [options, setOptions] = React.useState([]);\r\n  const [loadingOwners, setLoadingOwners] = React.useState(false);\r\n\r\n  const [addRemoveOwnerToAContact] = useMutation(ADDREMOVEOWNERTOACONTACT);\r\n\r\n  const callOwnerSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, top, callback) => {\r\n        const endpoint =\r\n          \"https://m1search.search.windows.net/indexes/lod2019-index/docs?api-version=2019-05-06&%24count=true&searchFields=OwnerName%2CAddress1&%24top=\" +\r\n          top +\r\n          \"&search=\" +\r\n          request.input;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        };\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (inputValue === \"\") {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      let newOptions = [];\r\n\r\n      Promise.all([\r\n        callOwnerSearch({ input: inputValue }, 20, (results) => {\r\n          if (results) {\r\n            const indexSource = results[\"@odata.context\"].substring(\r\n              results[\"@odata.context\"].indexOf(\"('\") + 2,\r\n              results[\"@odata.context\"].indexOf(\"')\")\r\n            );\r\n            newOptions = [\r\n              ...results.value.map((result) => {\r\n                return {\r\n                  ...result,\r\n                  Source: indexSource,\r\n                  Primary: result.OwnerName,\r\n                  Secondary: `${result.Address1}\\n${result.Address2}\\n${result.City}\\n${result.State}\\n${result.Zip}`,\r\n                };\r\n              }),\r\n              ...newOptions,\r\n            ];\r\n          }\r\n\r\n          setOptions(\r\n            newOptions.filter(\r\n              (owner) => props.existingOwners.indexOf(owner.Id) === -1\r\n            )\r\n          );\r\n          setLoadingOwners(false);\r\n        }),\r\n      ]);\r\n    })();\r\n  }, [inputValue, callOwnerSearch]);\r\n\r\n  const handleClickAdd = () => {\r\n    if (value && value.Id) {\r\n      addRemoveOwnerToAContact({\r\n        variables: {\r\n          contactId: props.parent,\r\n          ownerId: value.Id,\r\n        },\r\n        refetchQueries: [\r\n          \"getContacts\",\r\n          \"getContactsByOwnerId\",\r\n          \"getContactsCounter\",\r\n          \"getContact\",\r\n          \"getContactInM1nTable\",\r\n        ],\r\n        awaitRefetchQueries: true,\r\n      });\r\n      props.onClose();\r\n      setStateApp((state) => ({ ...state, universalCircularLoaderAct: true }));\r\n    }\r\n  };\r\n\r\n  const handleChange = (newValue) => {\r\n    if (\r\n      !value ||\r\n      (newValue &&\r\n        (value.Id !== newValue.Id ||\r\n          value.Source !== newValue.Source ||\r\n          value.Primary !== newValue.Primary ||\r\n          value.Secondary !== newValue.Secondary))\r\n    ) {\r\n      setValue(newValue);\r\n    }\r\n  };\r\n\r\n  //// adding loader ////\r\n  const loader = {\r\n    Source: \"loader\",\r\n    Score: 0,\r\n    Id: \"0\",\r\n    Primary: \"\",\r\n    Secondary: \"\",\r\n  };\r\n  let optionsWithLoader = options;\r\n  if (loadingOwners) {\r\n    optionsWithLoader = [loader];\r\n  }\r\n  if (value) {\r\n    optionsWithLoader = [...optionsWithLoader, value];\r\n  }\r\n  const searchAutocomplete = (\r\n    <Autocomplete\r\n      id=\"add-owner-to-contact-autocomplete\"\r\n      getOptionLabel={(option, value) =>\r\n        option && option.Primary ? option.Primary : option ? option : \"\"\r\n      }\r\n      forcePopupIcon\r\n      filterOptions={(x) => x}\r\n      options={optionsWithLoader}\r\n      groupBy={(option) => {\r\n        if (option.Source === \"lod2019-index\") return \"Owners\";\r\n        if (option.Source === \"loader\") return \"loader\";\r\n        return \"textField text\";\r\n      }}\r\n      renderGroup={(option) => {\r\n        if (option.group === \"loader\")\r\n          return (\r\n            <CircularProgress\r\n              key=\"loader\"\r\n              style={{ margin: \"10px 0 0 48%\" }}\r\n              size={28}\r\n              color=\"secondary\"\r\n            />\r\n          );\r\n        if (option.group === \"Owners\")\r\n          return (\r\n            <Grid key={option.group} container item>\r\n              <Grid item xs={12}>\r\n                {option.children}\r\n              </Grid>\r\n            </Grid>\r\n          );\r\n      }}\r\n      autoComplete\r\n      includeInputInList\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        handleChange(newValue);\r\n      }}\r\n      onInputChange={(event, newInputValue, reason) => {\r\n        if (reason == \"input\") {\r\n          setInputValue(newInputValue);\r\n\r\n          if (newInputValue !== \"\") {\r\n            setValue(newInputValue);\r\n            setLoadingOwners(true);\r\n          } else {\r\n            setOptions([]);\r\n            setValue(null);\r\n            setLoadingOwners(false);\r\n          }\r\n        }\r\n        if (reason == \"clear\") {\r\n          setInputValue(\"\");\r\n          setOptions([]);\r\n          setValue(null);\r\n        }\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Search by owner name or address\"\r\n          variant=\"outlined\"\r\n        />\r\n      )}\r\n      renderOption={(option) => {\r\n        if (option.group === \"loader\") {\r\n          console.log(\"rrrrrrrrr\", option); /////////////////////////////////////////\r\n          return null;\r\n        }\r\n\r\n        if (option.Source === \"lod2019-index\") {\r\n          const parts = parse(option.Primary, Array());\r\n          return (\r\n            <Grid container spacing={0}>\r\n              <Grid container item xs={12} alignItems=\"center\">\r\n                <Grid item xs>\r\n                  {parts.map((part, index) => (\r\n                    <span\r\n                      key={index}\r\n                      style={{ fontWeight: part.highlight ? 700 : 400 }}\r\n                    >\r\n                      {part.text}\r\n                    </span>\r\n                  ))}\r\n\r\n                  {option && option.Secondary && (\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      {option.Secondary}\r\n                    </Typography>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          );\r\n        }\r\n        return null; //////////////////////////////////\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        className={classes.dialogTitle}\r\n      >\r\n        Add an Owner\r\n      </DialogTitle>\r\n      <DialogContent dividers className={classes.dialogContent}>\r\n        {searchAutocomplete}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            props.onClose();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={!value || (value && !value.Id)}\r\n          onClick={handleClickAdd}\r\n          color=\"secondary\"\r\n        >\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}