{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\MapControls\\\\components\\\\CheckboxListHeatmaps.js\";\nimport React, { useContext, forwardRef } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\"; //import Button from '@material-ui/core/Button';\n\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\"; //import List from '@material-ui/core/List';\n//import ListItem from '@material-ui/core/ListItem';\n\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"; //import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\"; //import IconButton from '@material-ui/core/IconButton';\n//import EditIcon from '@material-ui/icons/Edit';\n\nimport { MapControlsContext } from \"../MapControlsContext\";\nimport { AppContext } from \"../../../AppContext\";\nimport { Divider } from \"@material-ui/core\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport DragIndicator from \"@material-ui/icons/DragIndicator\";\nimport RootRef from \"@material-ui/core/RootRef\";\nconst useStyles = makeStyles(theme => ({\n  subHeaderItem: {\n    backgroundColor: \"#011133 !important\",\n    width: '350px'\n  },\n  list: {\n    padding: 0\n  }\n}));\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nexport default function CheckboxListHeatmaps(props) {\n  const [stateMapControls, setStateMapControls] = useContext(MapControlsContext);\n  const [stateApp, setStateApp] = useContext(AppContext); //const theme = useTheme()\n\n  const classes = useStyles();\n\n  const handleToggle = idx => () => {\n    console.log(idx);\n    console.log(\"toggle stateApp.checkedHeats before\", stateApp.checkedHeats);\n    const currentIndex = stateApp.checkedHeats.indexOf(idx);\n    const newChecked = [...stateApp.checkedHeats];\n\n    if (currentIndex === -1) {\n      newChecked.push(idx);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    console.log(\"newchecked\", newChecked);\n    setStateApp(stateApp => ({ ...stateApp,\n      checkedHeats: newChecked\n    }));\n    console.log(\"toggle stateApp.checkedHeats after\", stateApp.checkedHeats);\n  };\n\n  const onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(stateApp.heatLayers, result.source.index, result.destination.index);\n    let checkedHeats = stateApp.checkedHeats.slice(0);\n    const sourceIndex = checkedHeats.indexOf(result.source.index);\n    let direction = 0;\n    let from,\n        to = 0;\n\n    if (result.destination.index > result.source.index) {\n      direction = -1;\n      from = result.source.index;\n      to = result.destination.index;\n    } else {\n      direction = 1;\n      to = result.source.index;\n      from = result.destination.index;\n    }\n\n    for (let i = 0; i < checkedHeats.length; i++) {\n      if (checkedHeats[i] <= to && checkedHeats[i] >= from) {\n        checkedHeats[i] += direction;\n      }\n    }\n\n    if (sourceIndex !== -1) {\n      checkedHeats[sourceIndex] = result.destination.index;\n    }\n\n    setStateApp({ ...stateApp,\n      heatLayers: items,\n      checkedHeats: checkedHeats\n    });\n  };\n\n  const StyledListItem = withStyles(theme => ({\n    root: {\n      fontFamily: \"Poppins\",\n      \"&:hover\": {\n        background: \"#4B618F\"\n      },\n      backgroundColor: \"#263451\",\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: theme.palette.common.white // },\n\n      }\n    }\n  }))(ListItem);\n  const StyledMenu = withStyles({\n    paper: {\n      border: \"1px solid #011133\",\n      left: \"unset !important\",\n      right: \"80px !important\"\n    }\n  })(props => /*#__PURE__*/React.createElement(Menu, Object.assign({\n    elevation: 0,\n    variant: \"menu\",\n    transitionDuration: 0,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    MenuListProps: {\n      disablePadding: true\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  })));\n  const StyledMenuItem = withStyles(theme => ({\n    root: {\n      fontFamily: \"Poppins\",\n      \"&:hover\": {\n        background: \"#4B618F\"\n      },\n      backgroundColor: \"#263451\",\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: theme.palette.common.white // },\n\n      }\n    }\n  }))(MenuItem);\n\n  const handleClose = () => {\n    setStateMapControls(stateMapControls => ({ ...stateMapControls,\n      anchorEl: null\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledMenu, {\n    id: \"checklist-menu\",\n    anchorEl: stateMapControls.anchorEl,\n    keepMounted: true,\n    open: Boolean(stateMapControls.anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledMenuItem, {\n    disableRipple: true,\n    key: \"subheader\",\n    role: undefined,\n    dense: true,\n    className: classes.subHeaderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Heatmaps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"droppable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(RootRef, {\n    rootRef: provided.innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 19\n    }\n  }, stateApp.heatLayers.map((layer, index) => {\n    const labelId = `checkbox-list-label-${index}`;\n    return /*#__PURE__*/React.createElement(Draggable, {\n      key: labelId,\n      draggableId: labelId,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(StyledListItem, Object.assign({\n      ContainerComponent: \"li\",\n      ref: provided.innerRef\n    }, provided.draggableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ListItemIcon, Object.assign({}, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(DragIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: layer.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      icon: /*#__PURE__*/React.createElement(VisibilityOffIcon, {\n        htmlColor: \"#fff\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 41\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(VisibilityIcon, {\n        htmlColor: \"#fff\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 48\n        }\n      }),\n      edge: \"start\",\n      checked: stateApp.checkedHeats ? stateApp.checkedHeats.indexOf(index) !== -1 : false,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        \"aria-labelledby\": labelId\n      },\n      onChange: handleToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 31\n      }\n    })));\n  })))))));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/MapControls/components/CheckboxListHeatmaps.js"],"names":["React","useContext","forwardRef","withStyles","makeStyles","Menu","MenuItem","ClickAwayListener","ListItemIcon","ListItemText","Checkbox","VisibilityIcon","VisibilityOffIcon","MapControlsContext","AppContext","Divider","DragDropContext","Droppable","Draggable","Collapse","List","ListItem","ExpandLess","ExpandMore","DragIndicator","RootRef","useStyles","theme","subHeaderItem","backgroundColor","width","list","padding","reorder","startIndex","endIndex","result","Array","from","removed","splice","CheckboxListHeatmaps","props","stateMapControls","setStateMapControls","stateApp","setStateApp","classes","handleToggle","idx","console","log","checkedHeats","currentIndex","indexOf","newChecked","push","onDragEnd","destination","items","heatLayers","source","index","slice","sourceIndex","direction","to","i","length","StyledListItem","root","fontFamily","background","color","palette","common","white","StyledMenu","paper","border","left","right","vertical","horizontal","disablePadding","StyledMenuItem","handleClose","anchorEl","Boolean","undefined","provided","snapshot","innerRef","map","layer","labelId","draggableProps","dragHandleProps","name"],"mappings":"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","sourcesContent":["import React, { useContext, forwardRef } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\n//import Button from '@material-ui/core/Button';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n//import List from '@material-ui/core/List';\r\n//import ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n//import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n//import IconButton from '@material-ui/core/IconButton';\r\n//import EditIcon from '@material-ui/icons/Edit';\r\nimport { MapControlsContext } from \"../MapControlsContext\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport DragIndicator from \"@material-ui/icons/DragIndicator\";\r\nimport RootRef from \"@material-ui/core/RootRef\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  subHeaderItem: {\r\n    backgroundColor: \"#011133 !important\",\r\n    width: '350px'\r\n  },\r\n  list: {\r\n    padding: 0\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n\r\nexport default function CheckboxListHeatmaps(props) {\r\n  const [stateMapControls, setStateMapControls] = useContext(\r\n    MapControlsContext\r\n  );\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n  //const theme = useTheme()\r\n  const classes = useStyles();\r\n  const handleToggle = idx => () => {\r\n    console.log(idx);\r\n    console.log(\"toggle stateApp.checkedHeats before\", stateApp.checkedHeats);\r\n    const currentIndex = stateApp.checkedHeats.indexOf(idx);\r\n    const newChecked = [...stateApp.checkedHeats];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(idx);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    console.log(\"newchecked\", newChecked);\r\n\r\n    setStateApp(stateApp => ({ ...stateApp, checkedHeats: newChecked }));\r\n\r\n    console.log(\"toggle stateApp.checkedHeats after\", stateApp.checkedHeats);\r\n  };\r\n\r\n\r\n\r\n  const onDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n  \r\n    const items = reorder(\r\n      stateApp.heatLayers,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n  \r\n    let checkedHeats = stateApp.checkedHeats.slice(0);\r\n    const sourceIndex = checkedHeats.indexOf(result.source.index)\r\n    \r\n    let direction = 0;\r\n    let from, to = 0;\r\n    if (result.destination.index > result.source.index) {\r\n      direction = -1;\r\n      from = result.source.index;\r\n      to = result.destination.index;\r\n    } else {\r\n      direction = 1;\r\n      to = result.source.index;\r\n      from = result.destination.index;\r\n    }\r\n  \r\n    for (let i = 0; i < checkedHeats.length; i ++) {\r\n      if (checkedHeats[i] <= to && checkedHeats[i] >= from) {\r\n        checkedHeats[i] += direction;\r\n      } \r\n    }\r\n  \r\n    if (sourceIndex !== -1) {\r\n      checkedHeats[sourceIndex] = result.destination.index;\r\n    }\r\n  \r\n    setStateApp({\r\n      ...stateApp, \r\n      heatLayers: items,\r\n      checkedHeats: checkedHeats\r\n    });\r\n  }\r\n  \r\n\r\n  const StyledListItem = withStyles(theme => ({\r\n    root: {\r\n      fontFamily: \"Poppins\",\r\n      \"&:hover\": {\r\n        background: \"#4B618F\"\r\n      },\r\n      backgroundColor: \"#263451\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n        // },\r\n      }\r\n    }\r\n  }))(ListItem);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const StyledMenu = withStyles({\r\n    paper: {\r\n      border: \"1px solid #011133\",\r\n      left: \"unset !important\",\r\n      right: \"80px !important\"\r\n    }\r\n  })(props => (\r\n    <Menu\r\n      elevation={0}\r\n      variant=\"menu\"\r\n      transitionDuration={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"left\"\r\n      }}\r\n      MenuListProps={{\r\n        disablePadding: true\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\"\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n\r\n  const StyledMenuItem = withStyles(theme => ({\r\n    root: {\r\n      fontFamily: \"Poppins\",\r\n      \"&:hover\": {\r\n        background: \"#4B618F\"\r\n      },\r\n      backgroundColor: \"#263451\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n        // },\r\n      }\r\n    }\r\n  }))(MenuItem);\r\n\r\n  const handleClose = () => {\r\n    setStateMapControls(stateMapControls => ({\r\n      ...stateMapControls,\r\n      anchorEl: null\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClose}>\r\n      <StyledMenu\r\n        id=\"checklist-menu\"\r\n        anchorEl={stateMapControls.anchorEl}\r\n        keepMounted\r\n        open={Boolean(stateMapControls.anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem\r\n          disableRipple\r\n          key=\"subheader\"\r\n          role={undefined}\r\n          dense\r\n          className={classes.subHeaderItem}\r\n        >\r\n          <ListItemText primary=\"Heatmaps\" />\r\n        </StyledMenuItem>\r\n\r\n\r\n        {/* \r\n        {stateApp.heatLayers.map((layer, index) => {\r\n          const labelId = `checkbox-list-label-${index}`;\r\n\r\n          return (\r\n            <StyledMenuItem disableRipple key={index} role={undefined} dense>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  icon={<VisibilityOffIcon htmlColor=\"#fff\" />}\r\n                  checkedIcon={<VisibilityIcon htmlColor=\"#fff\" />}\r\n                  edge=\"start\"\r\n                  checked={\r\n                    stateApp.checkedHeats\r\n                      ? stateApp.checkedHeats.indexOf(index) !== -1\r\n                      : false\r\n                  }\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                  onChange={handleToggle(index)}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={layer.name} />\r\n            </StyledMenuItem>\r\n          );\r\n        })} */}\r\n\r\n\r\n        {/* <Collapse in={open} timeout=\"auto\" unmountOnExit> */}\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n              {(provided, snapshot) => (\r\n                <RootRef rootRef={provided.innerRef}>\r\n                  <List className={classes.list}>\r\n                    {stateApp.heatLayers.map((layer, index) => {\r\n                      const labelId = `checkbox-list-label-${index}`;\r\n                      return (\r\n                        <Draggable key={labelId} draggableId={labelId} index={index}>\r\n                          {(provided, snapshot) => (\r\n                            <StyledListItem \r\n                              ContainerComponent=\"li\"\r\n                              ref={ provided.innerRef }\r\n                              {...provided.draggableProps}\r\n                            >\r\n                              <ListItemIcon {...provided.dragHandleProps}>\r\n                                <DragIndicator />\r\n                              </ListItemIcon>\r\n\r\n                              <ListItemText id={labelId} primary={layer.name} />\r\n                            \r\n                              <Checkbox\r\n                                  icon={<VisibilityOffIcon htmlColor=\"#fff\" />}\r\n                                  checkedIcon={<VisibilityIcon htmlColor=\"#fff\" />}\r\n                                  edge=\"start\"\r\n                                  checked={\r\n                                    stateApp.checkedHeats\r\n                                      ? stateApp.checkedHeats.indexOf(index) !== -1\r\n                                      : false\r\n                                  }\r\n                                  tabIndex={-1}\r\n                                  disableRipple\r\n                                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                                  onChange={handleToggle(index)}\r\n                                />\r\n\r\n                            </StyledListItem>\r\n                          )}\r\n                        </Draggable>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </RootRef>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        {/* </Collapse> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </StyledMenu>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}