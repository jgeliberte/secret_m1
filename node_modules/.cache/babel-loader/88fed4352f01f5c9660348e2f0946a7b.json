{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\MapControls\\\\MapControls.js\";\nimport React, { useContext } from \"react\";\nimport { MapControlsContext } from \"./MapControlsContext\";\nimport { AppContext } from \"../../AppContext\"; //material-ui components\n\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport QueueIcon from \"@material-ui/icons/Queue\"; //import ToggleButton from \"@material-ui/lab/ToggleButton\";\n// import ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n// import ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //components\n\nimport BaseMapStyles from \"./components/BaseMapStyles\";\nimport CheckboxList from \"./components/CheckboxList\";\nimport CheckboxListHeatmaps from \"./components/CheckboxListHeatmaps\";\nimport AddUserData from \"./components/addUserData\";\nimport DrawShapes from \"./components/DrawShapes/DrawShapes\";\nimport TrackedWellsMapCard from \"./components/TrackedWellsMapCard\";\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\nimport GpsNotFixedIcon from \"@material-ui/icons/GpsNotFixed\";\nimport GradientIcon from \"@material-ui/icons/Gradient\";\nimport { default as Cube3d } from \"../Shared/svgIcons/cube-3d\";\nimport AspectRatioOutlinedIcon from \"@material-ui/icons/AspectRatioOutlined\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // backgroundColor:'rgba(1, 17, 51, 0.97)',\n    borderRadius: \"50%\",\n    border: 0,\n    backgroundColor: \"rgba(1, 17, 51, 0.97)\",\n    color: \"lightGray\",\n    \"&:hover\": {\n      color: \"#fff\",\n      background: \"rgba(1, 17, 51, 1.0)\"\n    }\n  },\n  selected: {\n    color: \"lightGray !important\",\n    background: \"rgba(1, 17, 51, 0.0) !important\"\n  },\n  speedDial: {\n    position: \"absolute\",\n    top: \"100px\",\n    right: theme.spacing(2),\n    backgroundColor: \"rgba(1, 17, 51, 0.0)\",\n    padding: \"0px\",\n    zIndex: 5\n  },\n  menuIcon: {\n    padding: \"0px\",\n    margin: \"0px\",\n    backgroundColor: \"rgba(1, 17, 51, 0.97)\",\n    color: \"lightGray\",\n    \"&:hover\": {\n      color: \"#fff\",\n      background: \"rgba(1, 17, 51, 1.0)\"\n    }\n  },\n  speedIcon: {\n    backgroundColor: \"rgba(1, 17, 51, 0.97)\",\n    color: \"lightGray\",\n    \"&:hover\": {\n      color: \"#fff\",\n      background: \"rgba(1, 17, 51, 1.0)\"\n    }\n  },\n  fab: {\n    backgroundColor: \"rgba(1, 17, 51, 0.97)\",\n    color: \"lightGray\",\n    \"&:hover\": {\n      color: \"#fff\",\n      background: \"rgba(1, 17, 51, 1.0)\"\n    }\n  },\n  toggleButton: {\n    backgroundColor: \"rgba(1, 17, 51, 0)\",\n    border: \"0px\"\n  }\n}));\nexport default function MapControls(props) {\n  const [stateMapControls, setStateMapControls] = useContext(MapControlsContext);\n  const [stateApp, setStateApp] = useContext(AppContext);\n  const classes = useStyles();\n  const {\n    changeHeatmaps,\n    changeLayers\n  } = props;\n\n  const toggleSpeedDial = event => {\n    setStateMapControls({ ...stateMapControls,\n      openSpeedDial: !stateMapControls.openSpeedDial\n    });\n  };\n\n  const handleOpen = () => {\n    setStateMapControls({ ...stateMapControls,\n      openSpeedDial: true\n    });\n  };\n\n  const handleFabClick = (e, action) => {\n    let anchorEl = e.currentTarget;\n\n    if (action === \"track\") {\n      anchorEl = null;\n\n      if (stateApp.mapGridCardActivated === \"track\") {\n        setStateApp(state => ({ ...state,\n          mapGridCardActivated: false\n        }));\n      } else {\n        setStateApp(state => ({ ...state,\n          mapGridCardActivated: \"track\"\n        }));\n      }\n    }\n\n    setStateMapControls({ ...stateMapControls,\n      selectedControl: action,\n      anchorEl: anchorEl\n    });\n    setStateApp(stateApp => ({ ...stateApp,\n      toggle3d: action === \"threed\" ? !stateApp.toggle3d : stateApp.toggle3d,\n      toggleZoomOut: action === \"zoomout\" ? !stateApp.toggleZoomOut : stateApp.toggleZoomOut\n    }));\n\n    if (stateApp.draw.getMode() !== \"simple_select\") {\n      setStateApp({ ...stateApp,\n        editDraw: false\n      });\n      stateApp.draw.changeMode(\"simple_select\");\n    }\n  };\n\n  const createSpeedDialActions = () => {\n    const actions = [{\n      icon: stateApp.mapGridCardActivated !== \"track\" ? /*#__PURE__*/React.createElement(GpsNotFixedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(GpsFixedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }),\n      name: \"Tracked\",\n      action: \"track\"\n    }, {\n      icon: /*#__PURE__*/React.createElement(LanguageIcon, {\n        id: \"base\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }),\n      name: \"Base Map\",\n      action: \"base\"\n    }, {\n      icon: /*#__PURE__*/React.createElement(LayersIcon, {\n        id: \"layer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      }),\n      name: \"Layers\",\n      action: \"layer\"\n    }, {\n      icon: /*#__PURE__*/React.createElement(GradientIcon, {\n        id: \"heatMaps\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }),\n      name: \"Heatmaps\",\n      action: \"heatMaps\"\n    }, {\n      icon: /*#__PURE__*/React.createElement(QueueIcon, {\n        id: \"add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }),\n      name: \"Add Data\",\n      action: \"add\"\n    }, {\n      icon: !stateApp.editDraw ? /*#__PURE__*/React.createElement(EditIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 36\n        }\n      }) : /*#__PURE__*/React.createElement(CancelIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 51\n        }\n      }),\n      name: \"Draw\",\n      action: \"draw\"\n    }, {\n      icon: /*#__PURE__*/React.createElement(Cube3d, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }),\n      name: \"Toggle 3D\",\n      action: \"threed\"\n    }, {\n      icon: /*#__PURE__*/React.createElement(AspectRatioOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }),\n      name: \"Toggle Zoom Out\",\n      action: \"zoomout\"\n    }];\n    return actions.map(action => /*#__PURE__*/React.createElement(SpeedDialAction, {\n      classes: {\n        fab: classes.fab\n      },\n      id: action.name,\n      key: action.name,\n      icon: action.icon,\n      tooltipTitle: action.name,\n      onClick: e => {\n        handleFabClick(e, action.action);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const openSelectedControl = () => {\n    const {\n      selectedControl\n    } = stateMapControls;\n\n    switch (selectedControl) {\n      case \"base\":\n        return /*#__PURE__*/React.createElement(BaseMapStyles, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 16\n          }\n        });\n\n      case \"layer\":\n        return /*#__PURE__*/React.createElement(CheckboxList, {\n          changeLayers: changeLayers,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 16\n          }\n        });\n\n      case \"heatMaps\":\n        return /*#__PURE__*/React.createElement(CheckboxListHeatmaps, {\n          changeHeatmaps: changeHeatmaps,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 16\n          }\n        });\n\n      case \"add\":\n        return /*#__PURE__*/React.createElement(AddUserData, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 16\n          }\n        });\n\n      case \"draw\":\n        return /*#__PURE__*/React.createElement(DrawShapes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 16\n          }\n        });\n      // case \"track\":\n      //   return <TrackedWellsMapCard />;\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SpeedDial, {\n    id: \"speed\",\n    ariaLabel: \"SpeedDial\",\n    className: classes.speedDial,\n    icon: /*#__PURE__*/React.createElement(MenuIcon, {\n      fontSize: \"small\",\n      onClick: toggleSpeedDial,\n      className: classes.menuIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }),\n    onOpen: handleOpen,\n    open: stateMapControls.openSpeedDial,\n    direction: \"down\",\n    FabProps: {\n      size: \"medium\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, createSpeedDialActions()), stateMapControls.selectedControl ? openSelectedControl() : null);\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/MapControls/MapControls.js"],"names":["React","useContext","MapControlsContext","AppContext","SpeedDial","SpeedDialAction","LayersIcon","LanguageIcon","EditIcon","MenuIcon","AddCircleIcon","QueueIcon","CancelIcon","makeStyles","BaseMapStyles","CheckboxList","CheckboxListHeatmaps","AddUserData","DrawShapes","TrackedWellsMapCard","GpsFixedIcon","GpsNotFixedIcon","GradientIcon","default","Cube3d","AspectRatioOutlinedIcon","useStyles","theme","root","borderRadius","border","backgroundColor","color","background","selected","speedDial","position","top","right","spacing","padding","zIndex","menuIcon","margin","speedIcon","fab","toggleButton","MapControls","props","stateMapControls","setStateMapControls","stateApp","setStateApp","classes","changeHeatmaps","changeLayers","toggleSpeedDial","event","openSpeedDial","handleOpen","handleFabClick","e","action","anchorEl","currentTarget","mapGridCardActivated","state","selectedControl","toggle3d","toggleZoomOut","draw","getMode","editDraw","changeMode","createSpeedDialActions","actions","icon","name","map","openSelectedControl","size"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { MapControlsContext } from \"./MapControlsContext\";\r\nimport { AppContext } from \"../../AppContext\";\r\n\r\n//material-ui components\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport QueueIcon from \"@material-ui/icons/Queue\";\r\n//import ToggleButton from \"@material-ui/lab/ToggleButton\";\r\n// import ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n// import ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//components\r\nimport BaseMapStyles from \"./components/BaseMapStyles\";\r\nimport CheckboxList from \"./components/CheckboxList\";\r\nimport CheckboxListHeatmaps from \"./components/CheckboxListHeatmaps\";\r\nimport AddUserData from \"./components/addUserData\";\r\nimport DrawShapes from \"./components/DrawShapes/DrawShapes\";\r\nimport TrackedWellsMapCard from \"./components/TrackedWellsMapCard\";\r\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\r\nimport GpsNotFixedIcon from \"@material-ui/icons/GpsNotFixed\";\r\nimport GradientIcon from \"@material-ui/icons/Gradient\";\r\nimport { default as Cube3d } from \"../Shared/svgIcons/cube-3d\";\r\nimport AspectRatioOutlinedIcon from \"@material-ui/icons/AspectRatioOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // backgroundColor:'rgba(1, 17, 51, 0.97)',\r\n    borderRadius: \"50%\",\r\n    border: 0,\r\n    backgroundColor: \"rgba(1, 17, 51, 0.97)\",\r\n    color: \"lightGray\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n      background: \"rgba(1, 17, 51, 1.0)\",\r\n    },\r\n  },\r\n  selected: {\r\n    color: \"lightGray !important\",\r\n    background: \"rgba(1, 17, 51, 0.0) !important\",\r\n  },\r\n  speedDial: {\r\n    position: \"absolute\",\r\n    top: \"100px\",\r\n    right: theme.spacing(2),\r\n    backgroundColor: \"rgba(1, 17, 51, 0.0)\",\r\n    padding: \"0px\",\r\n    zIndex: 5,\r\n  },\r\n  menuIcon: {\r\n    padding: \"0px\",\r\n    margin: \"0px\",\r\n    backgroundColor: \"rgba(1, 17, 51, 0.97)\",\r\n    color: \"lightGray\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n      background: \"rgba(1, 17, 51, 1.0)\",\r\n    },\r\n  },\r\n  speedIcon: {\r\n    backgroundColor: \"rgba(1, 17, 51, 0.97)\",\r\n    color: \"lightGray\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n      background: \"rgba(1, 17, 51, 1.0)\",\r\n    },\r\n  },\r\n  fab: {\r\n    backgroundColor: \"rgba(1, 17, 51, 0.97)\",\r\n    color: \"lightGray\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n      background: \"rgba(1, 17, 51, 1.0)\",\r\n    },\r\n  },\r\n  toggleButton: {\r\n    backgroundColor: \"rgba(1, 17, 51, 0)\",\r\n    border: \"0px\",\r\n  },\r\n}));\r\n\r\nexport default function MapControls(props) {\r\n  const [stateMapControls, setStateMapControls] = useContext(\r\n    MapControlsContext\r\n  );\r\n\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n  const classes = useStyles();\r\n  const { changeHeatmaps, changeLayers } = props;\r\n\r\n  const toggleSpeedDial = (event) => {\r\n    setStateMapControls({\r\n      ...stateMapControls,\r\n      openSpeedDial: !stateMapControls.openSpeedDial,\r\n    });\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setStateMapControls({ ...stateMapControls, openSpeedDial: true });\r\n  };\r\n\r\n  const handleFabClick = (e, action) => {\r\n    let anchorEl = e.currentTarget;\r\n    if (action === \"track\") {\r\n      anchorEl = null;\r\n      if (stateApp.mapGridCardActivated === \"track\") {\r\n        setStateApp((state) => ({\r\n          ...state,\r\n          mapGridCardActivated: false,\r\n        }));\r\n      } else {\r\n        setStateApp((state) => ({\r\n          ...state,\r\n          mapGridCardActivated: \"track\",\r\n        }));\r\n      }\r\n    }\r\n\r\n    setStateMapControls({\r\n      ...stateMapControls,\r\n      selectedControl: action,\r\n      anchorEl: anchorEl,\r\n    });\r\n\r\n    setStateApp((stateApp) => ({\r\n      ...stateApp,\r\n      toggle3d: action === \"threed\" ? !stateApp.toggle3d : stateApp.toggle3d,\r\n      toggleZoomOut:\r\n        action === \"zoomout\" ? !stateApp.toggleZoomOut : stateApp.toggleZoomOut,\r\n    }));\r\n\r\n    if (stateApp.draw.getMode() !== \"simple_select\") {\r\n      setStateApp({ ...stateApp, editDraw: false });\r\n      stateApp.draw.changeMode(\"simple_select\");\r\n    }\r\n  };\r\n\r\n  const createSpeedDialActions = () => {\r\n    const actions = [\r\n      {\r\n        icon:\r\n          stateApp.mapGridCardActivated !== \"track\" ? (\r\n            <GpsNotFixedIcon />\r\n          ) : (\r\n            <GpsFixedIcon />\r\n          ),\r\n        name: \"Tracked\",\r\n        action: \"track\",\r\n      },\r\n      { icon: <LanguageIcon id=\"base\" />, name: \"Base Map\", action: \"base\" },\r\n      { icon: <LayersIcon id=\"layer\" />, name: \"Layers\", action: \"layer\" },\r\n      {\r\n        icon: <GradientIcon id=\"heatMaps\" />,\r\n        name: \"Heatmaps\",\r\n        action: \"heatMaps\",\r\n      },\r\n      { icon: <QueueIcon id=\"add\" />, name: \"Add Data\", action: \"add\" },\r\n      {\r\n        icon: !stateApp.editDraw ? <EditIcon /> : <CancelIcon />,\r\n        name: \"Draw\",\r\n        action: \"draw\",\r\n      },\r\n      {\r\n        icon: <Cube3d />,\r\n        name: \"Toggle 3D\",\r\n        action: \"threed\",\r\n      },\r\n      {\r\n        icon: <AspectRatioOutlinedIcon />,\r\n        name: \"Toggle Zoom Out\",\r\n        action: \"zoomout\",\r\n      },\r\n    ];\r\n\r\n    return actions.map((action) => (\r\n      <SpeedDialAction\r\n        classes={{\r\n          fab: classes.fab,\r\n        }}\r\n        id={action.name}\r\n        key={action.name}\r\n        icon={action.icon}\r\n        tooltipTitle={action.name}\r\n        onClick={(e) => {\r\n          handleFabClick(e, action.action);\r\n        }}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const openSelectedControl = () => {\r\n    const { selectedControl } = stateMapControls;\r\n    switch (selectedControl) {\r\n      case \"base\":\r\n        return <BaseMapStyles />;\r\n      case \"layer\":\r\n        return <CheckboxList changeLayers={changeLayers} />;\r\n      case \"heatMaps\":\r\n        return <CheckboxListHeatmaps changeHeatmaps={changeHeatmaps} />;\r\n      case \"add\":\r\n        return <AddUserData />;\r\n      case \"draw\":\r\n        return <DrawShapes />;\r\n      // case \"track\":\r\n      //   return <TrackedWellsMapCard />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SpeedDial\r\n        id=\"speed\"\r\n        ariaLabel=\"SpeedDial\"\r\n        className={classes.speedDial}\r\n        icon={\r\n          <MenuIcon\r\n            fontSize=\"small\"\r\n            onClick={toggleSpeedDial}\r\n            className={classes.menuIcon}\r\n          />\r\n        }\r\n        onOpen={handleOpen}\r\n        open={stateMapControls.openSpeedDial}\r\n        direction=\"down\"\r\n        FabProps={{ size: \"medium\" }}\r\n      >\r\n        {createSpeedDialActions()}\r\n      </SpeedDial>\r\n      {stateMapControls.selectedControl ? openSelectedControl() : null}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}