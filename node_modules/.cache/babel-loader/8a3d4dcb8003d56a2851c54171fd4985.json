{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterDefaultListOwner.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  paparMain: {\n    boxShadow: \"none\",\n    padding: \"2px 6px\"\n  },\n  listItem: {\n    margin: 4,\n    flex: \"1 1 auto\",\n    justifyContent: \"space-between\",\n    minWidth: 278\n  },\n  chip: {\n    textAlign: \"center\"\n  },\n  chipContainer: {\n    height: \"100%\",\n    margin: \"6px 6px\"\n  },\n  chipRow: {\n    display: \"inline-flex\",\n    padding: \"1px 0px\"\n  },\n  deleteButton: {\n    float: \"right\"\n  },\n  listLabel: {\n    padding: \"6px 30px\",\n    display: \"inline-flex\"\n  },\n  listItemContainer: {\n    display: \"inherit\",\n    \"&:hover\": {\n      color: \"transparent\"\n    }\n  }\n}));\nexport default function FilterDedaultListInterest(props) {\n  const [filtersTypeArr, setFiltersTypeArr] = useState(null);\n  const [filterNameType, setFilterNameType] = useState(null);\n  const [filtersTypeArrInterest, setFiltersTypeArrInterest] = useState(null);\n  const classes = useStyles();\n  useEffect(() => {\n    if (props) {\n      setFilterNameType(props.type);\n      setFiltersTypeArr(props.filters[0]);\n      setFiltersTypeArrInterest(props.filters[1]);\n    }\n  }, [props]);\n\n  const removeNameFromTypeInterest = string => {\n    // console.log(string);\n    if (string.includes(\"interestTypeOverrideRoyalty\")) {\n      return string.replace(\"interestTypeOverrideRoyalty\", \"OVERRIDE\");\n    }\n\n    if (string.includes(\"interestTypeProductionPayment\")) {\n      return string.replace(\"interestTypeProductionPayment\", \"PRODUCTION PAYMENT\");\n    }\n\n    if (string.includes(\"interestTypeWorkingInterest\")) {\n      return string.replace(\"interestTypeWorkingInterest\", \"WORKING INTEREST\");\n    }\n\n    if (string.includes(\"interestTypeRoyaltyInterest\")) {\n      return string.replace(\"interestTypeRoyaltyInterest\", \"ROYALTY\");\n    }\n  };\n\n  const removeChipInterest = e => () => {\n    const {\n      deleteChipInterest\n    } = props;\n    deleteChipInterest(e);\n  };\n\n  const removeChipOwner = e => () => {\n    const {\n      deleteChip\n    } = props;\n    deleteChip(e);\n  };\n\n  const removeNameFromType = string => {\n    if (string.includes(\"ownershipTypeEducationalInstitutions\")) {\n      return string.replace(\"ownershipTypeEducationalInstitutions\", \"EDUCATIONAL INSTITUTIONS\");\n    }\n\n    if (string.includes(\"ownershipTypeReligiousInstitutions\")) {\n      return string.replace(\"ownershipTypeReligiousInstitutions\", \"RELIGIOUS INSTITUTIONS\");\n    }\n\n    if (string.includes(\"ownershipTypeTrusts\")) {\n      return string.replace(\"ownershipTypeTrusts\", \"TRUSTS\");\n    }\n\n    if (string.includes(\"ownershipTypeNonProfits\")) {\n      return string.replace(\"ownershipTypeNonProfits\", \"NON PROFITS\");\n    }\n\n    if (string.includes(\"ownershipTypeCorporations\")) {\n      return string.replace(\"ownershipTypeCorporations\", \"COMPANIES\");\n    }\n\n    if (string.includes(\"ownershipTypeGovernmentalBodies\")) {\n      return string.replace(\"ownershipTypeGovernmentalBodies\", \"GOVERNMENTAL BODIES\");\n    }\n\n    if (string.includes(\"ownershipTypeIndividuals\")) {\n      return string.replace(\"ownershipTypeIndividuals\", \"INDIVIDUALS\");\n    }\n\n    if (string.includes(\"ownershipTypeUnknown\")) {\n      return string.replace(\"ownershipTypeUnknown\", \"UNKNOWN\");\n    }\n\n    if (string.includes(\"<=\")) {\n      return string.replace(\"<=\", \"Max Owner Count\");\n    }\n\n    if (string.includes(\">=\")) {\n      return string.replace(\">=\", \"Min Owner Count\");\n    }\n  };\n\n  const removeAllFilters = () => {\n    const {\n      removeAll\n    } = props;\n    removeAll();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, props.filters && props.filters.length > 0 ? /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paparMain,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    \"aria-label\": \"mailbox folders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.listLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, filterNameType), /*#__PURE__*/React.createElement(Button, {\n    className: classes.deleteButton,\n    endIcon: /*#__PURE__*/React.createElement(HighlightOffIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 24\n      }\n    }),\n    \"aria-label\": \"delete\",\n    onClick: removeAllFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Clear All\"), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItemContainer,\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, filtersTypeArrInterest ? filtersTypeArrInterest.map(elm => elm[1][1] ? /*#__PURE__*/React.createElement(Chip, {\n    key: elm[1],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 31\n      }\n    }, \"Interest Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 31\n      }\n    }, removeNameFromTypeInterest(elm[1][1][1]))),\n    onDelete: removeChipInterest(elm[1][1][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }) : null) : null, filtersTypeArrInterest ? filtersTypeArrInterest.map(elm => elm[1][2] ? /*#__PURE__*/React.createElement(Chip, {\n    key: elm[2],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 31\n      }\n    }, \"Interest Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 31\n      }\n    }, removeNameFromTypeInterest(elm[1][2][1]))),\n    onDelete: removeChipInterest(elm[1][2][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }) : null) : null, filtersTypeArrInterest ? filtersTypeArrInterest.map(elm => elm[1][3] ? /*#__PURE__*/React.createElement(Chip, {\n    key: elm[3],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 31\n      }\n    }, \"Interest Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 31\n      }\n    }, removeNameFromTypeInterest(elm[1][3][1]))),\n    onDelete: removeChipInterest(elm[1][3][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }) : null) : null, filtersTypeArrInterest ? filtersTypeArrInterest.map(elm => elm[1][4] ? /*#__PURE__*/React.createElement(Chip, {\n    key: elm[4],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 31\n      }\n    }, \"Interest Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 31\n      }\n    }, removeNameFromTypeInterest(elm[1][4][1]))),\n    onDelete: removeChipInterest(elm[1][4][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(b => b[0] === \"filterNoOwnerCount\" ? /*#__PURE__*/React.createElement(Chip, {\n    key: b[1],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, \"Wells w/o Owners\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }, \"TRUE\")),\n    onDelete: removeChipOwner(\"noOwners\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(c => c[0] === \"filterHasOwnerCount\" ? /*#__PURE__*/React.createElement(Chip, {\n    key: c[1],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }, \"Wells With Owners\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 29\n      }\n    }, \"TRUE\")),\n    onDelete: removeChipOwner(\"hasOwners\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(v => v[0] === \"filterOwnerCount\" && v[1][1] ? /*#__PURE__*/React.createElement(Chip, {\n    key: v[1],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, removeNameFromType(v[1][1][0])), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 29\n      }\n    }, v[1][1][2])),\n    onDelete: removeChipOwner(v[1][1][0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(c => c[0] === \"filterOwnerCount\" && c[1][2] ? /*#__PURE__*/React.createElement(Chip, {\n    key: c[2],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 29\n      }\n    }, removeNameFromType(c[1][2][0])), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 29\n      }\n    }, c[1][2][2])),\n    onDelete: removeChipOwner(c[1][2][0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(a => a[0] === \"filterAllOwnershipTypes\" && a[1][1] ? /*#__PURE__*/React.createElement(Chip, {\n    key: a[1],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }\n    }, \"Owner Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }, removeNameFromType(a[1][1][1]))),\n    onDelete: removeChipOwner(a[1][1][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(o => o[0] === \"filterAllOwnershipTypes\" && o[1][2] ? /*#__PURE__*/React.createElement(Chip, {\n    key: o[2],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }, \"Owner Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 29\n      }\n    }, removeNameFromType(o[1][2][1]))),\n    onDelete: removeChipOwner(o[1][2][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(l => l[0] === \"filterAllOwnershipTypes\" && l[1][3] ? /*#__PURE__*/React.createElement(Chip, {\n    key: l[3],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, \"Owner Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 29\n      }\n    }, removeNameFromType(l[1][3][1]))),\n    onDelete: removeChipOwner(l[1][3][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(m => m[0] === \"filterAllOwnershipTypes\" && m[1][4] ? /*#__PURE__*/React.createElement(Chip, {\n    key: m[4],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 29\n      }\n    }, \"Owner Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 29\n      }\n    }, removeNameFromType(m[1][4][1]))),\n    onDelete: removeChipOwner(m[1][4][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(el => el[0] === \"filterAllOwnershipTypes\" && el[1][5] ? /*#__PURE__*/React.createElement(Chip, {\n    key: el[5],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 29\n      }\n    }, \"Owner Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 29\n      }\n    }, removeNameFromType(el[1][5][1]))),\n    onDelete: removeChipOwner(el[1][5][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(em => em[0] === \"filterAllOwnershipTypes\" && em[1][6] ? /*#__PURE__*/React.createElement(Chip, {\n    key: em[6],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 29\n      }\n    }, \"Owner Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 29\n      }\n    }, removeNameFromType(em[1][6][1]))),\n    onDelete: removeChipOwner(em[1][6][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(elment => elment[0] === \"filterAllOwnershipTypes\" && elment[1][7] ? /*#__PURE__*/React.createElement(Chip, {\n    key: elment[7],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 29\n      }\n    }, \"Owner Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 29\n      }\n    }, removeNameFromType(elment[1][7][1]))),\n    onDelete: removeChipOwner(elment[1][7][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 23\n    }\n  }) : null) : null, filtersTypeArr ? filtersTypeArr.map(e => e[0] === \"filterAllOwnershipTypes\" && e[1][8] ? /*#__PURE__*/React.createElement(Chip, {\n    key: e[8],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 29\n      }\n    }, \"Owner Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 29\n      }\n    }, removeNameFromType(e[1][8][1]))),\n    onDelete: removeChipOwner(e[1][8][1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 23\n    }\n  }) : null) : null), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }\n  })))) : null);\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterDefaultListOwner.js"],"names":["React","useEffect","useState","Paper","List","Chip","ListItem","Divider","HighlightOffIcon","makeStyles","Button","useStyles","theme","paparMain","boxShadow","padding","listItem","margin","flex","justifyContent","minWidth","chip","textAlign","chipContainer","height","chipRow","display","deleteButton","float","listLabel","listItemContainer","color","FilterDedaultListInterest","props","filtersTypeArr","setFiltersTypeArr","filterNameType","setFilterNameType","filtersTypeArrInterest","setFiltersTypeArrInterest","classes","type","filters","removeNameFromTypeInterest","string","includes","replace","removeChipInterest","e","deleteChipInterest","removeChipOwner","deleteChip","removeNameFromType","removeAllFilters","removeAll","length","map","elm","b","c","v","a","o","l","m","el","em","elment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paparMain: {\r\n    boxShadow: \"none\",\r\n    padding: \"2px 6px\",\r\n  },\r\n  listItem: {\r\n    margin: 4,\r\n    flex: \"1 1 auto\",\r\n    justifyContent: \"space-between\",\r\n    minWidth: 278,\r\n  },\r\n  chip: {\r\n    textAlign: \"center\",\r\n  },\r\n  chipContainer: {\r\n    height: \"100%\",\r\n    margin: \"6px 6px\",\r\n  },\r\n  chipRow: {\r\n    display: \"inline-flex\",\r\n    padding: \"1px 0px\",\r\n  },\r\n  deleteButton: {\r\n    float: \"right\",\r\n  },\r\n  listLabel: {\r\n    padding: \"6px 30px\",\r\n    display: \"inline-flex\",\r\n  },\r\n  listItemContainer: {\r\n    display: \"inherit\",\r\n    \"&:hover\": {\r\n      color: \"transparent\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FilterDedaultListInterest(props) {\r\n  const [filtersTypeArr, setFiltersTypeArr] = useState(null);\r\n  const [filterNameType, setFilterNameType] = useState(null);\r\n  const [filtersTypeArrInterest, setFiltersTypeArrInterest] = useState(null);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (props) {\r\n      setFilterNameType(props.type);\r\n      setFiltersTypeArr(props.filters[0]);\r\n      setFiltersTypeArrInterest(props.filters[1]);\r\n    }\r\n  }, [props]);\r\n\r\n  const removeNameFromTypeInterest = (string) => {\r\n    // console.log(string);\r\n    if (string.includes(\"interestTypeOverrideRoyalty\")) {\r\n      return string.replace(\"interestTypeOverrideRoyalty\", \"OVERRIDE\");\r\n    }\r\n    if (string.includes(\"interestTypeProductionPayment\")) {\r\n      return string.replace(\r\n        \"interestTypeProductionPayment\",\r\n        \"PRODUCTION PAYMENT\"\r\n      );\r\n    }\r\n    if (string.includes(\"interestTypeWorkingInterest\")) {\r\n      return string.replace(\"interestTypeWorkingInterest\", \"WORKING INTEREST\");\r\n    }\r\n    if (string.includes(\"interestTypeRoyaltyInterest\")) {\r\n      return string.replace(\"interestTypeRoyaltyInterest\", \"ROYALTY\");\r\n    }\r\n  };\r\n\r\n  const removeChipInterest = (e) => () => {\r\n    const { deleteChipInterest } = props;\r\n    deleteChipInterest(e);\r\n  };\r\n\r\n  const removeChipOwner = (e) => () => {\r\n    const { deleteChip } = props;\r\n    deleteChip(e);\r\n  };\r\n\r\n  const removeNameFromType = (string) => {\r\n    if (string.includes(\"ownershipTypeEducationalInstitutions\")) {\r\n      return string.replace(\r\n        \"ownershipTypeEducationalInstitutions\",\r\n        \"EDUCATIONAL INSTITUTIONS\"\r\n      );\r\n    }\r\n    if (string.includes(\"ownershipTypeReligiousInstitutions\")) {\r\n      return string.replace(\r\n        \"ownershipTypeReligiousInstitutions\",\r\n        \"RELIGIOUS INSTITUTIONS\"\r\n      );\r\n    }\r\n    if (string.includes(\"ownershipTypeTrusts\")) {\r\n      return string.replace(\"ownershipTypeTrusts\", \"TRUSTS\");\r\n    }\r\n    if (string.includes(\"ownershipTypeNonProfits\")) {\r\n      return string.replace(\"ownershipTypeNonProfits\", \"NON PROFITS\");\r\n    }\r\n    if (string.includes(\"ownershipTypeCorporations\")) {\r\n      return string.replace(\"ownershipTypeCorporations\", \"COMPANIES\");\r\n    }\r\n    if (string.includes(\"ownershipTypeGovernmentalBodies\")) {\r\n      return string.replace(\r\n        \"ownershipTypeGovernmentalBodies\",\r\n        \"GOVERNMENTAL BODIES\"\r\n      );\r\n    }\r\n    if (string.includes(\"ownershipTypeIndividuals\")) {\r\n      return string.replace(\"ownershipTypeIndividuals\", \"INDIVIDUALS\");\r\n    }\r\n    if (string.includes(\"ownershipTypeUnknown\")) {\r\n      return string.replace(\"ownershipTypeUnknown\", \"UNKNOWN\");\r\n    }\r\n    if (string.includes(\"<=\")) {\r\n      return string.replace(\"<=\", \"Max Owner Count\");\r\n    }\r\n    if (string.includes(\">=\")) {\r\n      return string.replace(\">=\", \"Min Owner Count\");\r\n    }\r\n  };\r\n\r\n  const removeAllFilters = () => {\r\n    const { removeAll } = props;\r\n    removeAll();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.filters && props.filters.length > 0 ? (\r\n      <Paper className={classes.paparMain} square>\r\n        <List aria-label=\"mailbox folders\">\r\n          <div>\r\n            <div className={classes.listLabel}>{filterNameType}</div>\r\n            <Button\r\n              className={classes.deleteButton}\r\n              endIcon={<HighlightOffIcon />}\r\n              aria-label=\"delete\"\r\n              onClick={removeAllFilters} \r\n            >\r\n              Clear All\r\n            </Button>\r\n            <ListItem className={classes.listItemContainer} button>\r\n            {filtersTypeArrInterest\r\n                  ? filtersTypeArrInterest.map((elm) =>\r\n                      elm[1][1] ? (\r\n                        <Chip\r\n                          key={elm[1]}\r\n                          className={classes.chipContainer}\r\n                          label={\r\n                            <section>\r\n                              <div className={classes.chip}>Interest Type</div>\r\n                              <div className={classes.chipRow}>\r\n                                {removeNameFromTypeInterest(elm[1][1][1])}\r\n                              </div>\r\n                            </section>\r\n                          }\r\n                          onDelete={removeChipInterest(elm[1][1][1])}\r\n                        />\r\n                      ) : null\r\n                    )\r\n                  : null}\r\n                {filtersTypeArrInterest\r\n                  ? filtersTypeArrInterest.map((elm) =>\r\n                      elm[1][2] ? (\r\n                        <Chip\r\n                          key={elm[2]}\r\n                          className={classes.chipContainer}\r\n                          label={\r\n                            <section>\r\n                              <div className={classes.chip}>Interest Type</div>\r\n                              <div className={classes.chipRow}>\r\n                                {removeNameFromTypeInterest(elm[1][2][1])}\r\n                              </div>\r\n                            </section>\r\n                          }\r\n                          onDelete={removeChipInterest(elm[1][2][1])}\r\n                        />\r\n                      ) : null\r\n                    )\r\n                  : null}\r\n                {filtersTypeArrInterest\r\n                  ? filtersTypeArrInterest.map((elm) =>\r\n                      elm[1][3] ? (\r\n                        <Chip\r\n                          key={elm[3]}\r\n                          className={classes.chipContainer}\r\n                          label={\r\n                            <section>\r\n                              <div className={classes.chip}>Interest Type</div>\r\n                              <div className={classes.chipRow}>\r\n                                {removeNameFromTypeInterest(elm[1][3][1])}\r\n                              </div>\r\n                            </section>\r\n                          }\r\n                          onDelete={removeChipInterest(elm[1][3][1])}\r\n                        />\r\n                      ) : null\r\n                    )\r\n                  : null}\r\n                {filtersTypeArrInterest\r\n                  ? filtersTypeArrInterest.map((elm) =>\r\n                      elm[1][4] ? (\r\n                        <Chip\r\n                          key={elm[4]}\r\n                          className={classes.chipContainer}\r\n                          label={\r\n                            <section>\r\n                              <div className={classes.chip}>Interest Type</div>\r\n                              <div className={classes.chipRow}>\r\n                                {removeNameFromTypeInterest(elm[1][4][1])}\r\n                              </div>\r\n                            </section>\r\n                          }\r\n                          onDelete={removeChipInterest(elm[1][4][1])}\r\n                        />\r\n                      ) : null\r\n                    )\r\n                  : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((b) =>\r\n                    b[0] === \"filterNoOwnerCount\" ? (\r\n                      <Chip\r\n                        key={b[1]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Wells w/o Owners</div>\r\n                            <div className={classes.chipRow}>TRUE</div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(\"noOwners\")}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((c) =>\r\n                    c[0] === \"filterHasOwnerCount\" ? (\r\n                      <Chip\r\n                        key={c[1]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Wells With Owners</div>\r\n                            <div className={classes.chipRow}>TRUE</div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(\"hasOwners\")}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((v) =>\r\n                    v[0] === \"filterOwnerCount\" && v[1][1] ? (\r\n                      <Chip\r\n                        key={v[1]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>\r\n                              {removeNameFromType(v[1][1][0])}\r\n                            </div>\r\n                            <div className={classes.chipRow}>\r\n                              {v[1][1][2]}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(v[1][1][0])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((c) =>\r\n                    c[0] === \"filterOwnerCount\" && c[1][2] ? (\r\n                      <Chip\r\n                        key={c[2]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>\r\n                              {removeNameFromType(c[1][2][0])}\r\n                            </div>\r\n                            <div className={classes.chipRow}>\r\n                              {c[1][2][2]}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(c[1][2][0])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((a) =>\r\n                    a[0] === \"filterAllOwnershipTypes\" && a[1][1] ? (\r\n                      <Chip\r\n                        key={a[1]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Owner Type</div>\r\n                            <div className={classes.chipRow}>\r\n                              {removeNameFromType(a[1][1][1])}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(a[1][1][1])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((o) =>\r\n                    o[0] === \"filterAllOwnershipTypes\" && o[1][2] ? (\r\n                      <Chip\r\n                        key={o[2]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Owner Type</div>\r\n                            <div className={classes.chipRow}>\r\n                              {removeNameFromType(o[1][2][1])}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(o[1][2][1])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((l) =>\r\n                    l[0] === \"filterAllOwnershipTypes\" && l[1][3] ? (\r\n                      <Chip\r\n                        key={l[3]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Owner Type</div>\r\n                            <div className={classes.chipRow}>\r\n                              {removeNameFromType(l[1][3][1])}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(l[1][3][1])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((m) =>\r\n                    m[0] === \"filterAllOwnershipTypes\" && m[1][4] ? (\r\n                      <Chip\r\n                        key={m[4]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Owner Type</div>\r\n                            <div className={classes.chipRow}>\r\n                              {removeNameFromType(m[1][4][1])}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(m[1][4][1])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((el) =>\r\n                    el[0] === \"filterAllOwnershipTypes\" && el[1][5] ? (\r\n                      <Chip\r\n                        key={el[5]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Owner Type</div>\r\n                            <div className={classes.chipRow}>\r\n                              {removeNameFromType(el[1][5][1])}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(el[1][5][1])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((em) =>\r\n                    em[0] === \"filterAllOwnershipTypes\" && em[1][6] ? (\r\n                      <Chip\r\n                        key={em[6]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Owner Type</div>\r\n                            <div className={classes.chipRow}>\r\n                              {removeNameFromType(em[1][6][1])}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(em[1][6][1])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((elment) =>\r\n                elment[0] === \"filterAllOwnershipTypes\" && elment[1][7] ? (\r\n                      <Chip\r\n                        key={elment[7]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Owner Type</div>\r\n                            <div className={classes.chipRow}>\r\n                              {removeNameFromType(elment[1][7][1])}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(elment[1][7][1])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n              {filtersTypeArr\r\n                ? filtersTypeArr.map((e) =>\r\n                    e[0] === \"filterAllOwnershipTypes\" && e[1][8] ? (\r\n                      <Chip\r\n                        key={e[8]}\r\n                        className={classes.chipContainer}\r\n                        label={\r\n                          <section>\r\n                            <div className={classes.chip}>Owner Type</div>\r\n                            <div className={classes.chipRow}>\r\n                              {removeNameFromType(e[1][8][1])}\r\n                            </div>\r\n                          </section>\r\n                        }\r\n                        onDelete={removeChipOwner(e[1][8][1])}\r\n                      />\r\n                    ) : null\r\n                  )\r\n                : null}\r\n            </ListItem>\r\n            <Divider />\r\n          </div>\r\n        </List>\r\n      </Paper>\r\n      )\r\n      : null}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}