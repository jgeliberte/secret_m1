{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterOwnerConfidence.js\";\nimport React, { useState, useContext, useCallback, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NumberFormat from \"react-number-format\";\nimport { NavigationContext } from \"../NavigationContext\";\nimport { FormLabel } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  divBordersMinMax: {\n    display: \"flow-root\",\n    padding: \"3.5px 15px 5.5px 15px\",\n    border: \"1px solid #C4C4C4\",\n    borderRadius: \"4px\",\n    \"&:hover\": {\n      border: \"1px solid black\"\n    }\n  },\n  input: {\n    marginLeft: \"30px\",\n    width: \"160px\",\n    //float: \"right\",\n    \"& input\": {\n      color: \"#17AADD\"\n    }\n  },\n  inputLabel: {\n    position: \"relative\",\n    top: \"11.5px\"\n  },\n  ownersToggle: {\n    paddingLeft: \"20px\"\n  }\n});\nexport default function FilterOwnerConfidence() {\n  const classes = useStyles();\n  const [stateNav, setStateNav] = useContext(NavigationContext);\n  const [valueMinDisplay, setValueMinDisplay] = useState(\"\");\n  const [valueMaxDisplay, setValueMaxDisplay] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [ownerConfidenceWell, setOwnerConfidenceWell] = useState(stateNav.ownerConfidenceWell ? stateNav.ownerConfidenceWell : []);\n  const setFilter = useCallback(() => {\n    let filter;\n    let min = parseInt(valueMinDisplay);\n    let max = parseInt(valueMaxDisplay);\n\n    if (!min && !max) {\n      filter = null;\n    }\n\n    if (!min && max) {\n      filter = [\"all\", [\"<=\", [\"get\", \"ownerMatchConfidence\"], max / 100]];\n      console.log(\"add filter\", filter);\n    } else if (min && !max) {\n      filter = [\"all\", [\">=\", [\"get\", \"ownerMatchConfidence\"], min / 100]];\n      console.log(\"add filter\", filter);\n    } else if (min && max) {\n      if (min < max) {\n        filter = [\"all\", [\">=\", [\"get\", \"ownerMatchConfidence\"], min / 100], [\"<=\", [\"get\", \"ownerMatchConfidence\"], max / 100]];\n        console.log(\"add filter\", filter);\n      }\n    } else {\n      filter = null;\n    }\n\n    setStateNav(stateNav => ({ ...stateNav,\n      filterOwnerConfidence: filter\n    }));\n  }, [setStateNav, valueMaxDisplay, valueMinDisplay]);\n  useEffect(() => {\n    const recall = () => {\n      let checkStateNav = stateNav.filterOwnerConfidence;\n\n      if (!valueMinDisplay && !valueMaxDisplay) {\n        if (checkStateNav && checkStateNav.length === 3) {\n          const recallMin = checkStateNav[1][2];\n          const recallMax = checkStateNav[2][2];\n          setValueMinDisplay(recallMin * 100);\n          setValueMaxDisplay(recallMax * 100);\n        }\n      }\n\n      if (!valueMaxDisplay) {\n        if (checkStateNav && checkStateNav[1][0] === \"<=\") {\n          const recallMax = checkStateNav[1][2];\n          setValueMaxDisplay(recallMax * 100);\n        }\n      }\n\n      if (!valueMinDisplay) {\n        if (checkStateNav && checkStateNav[1][0] === \">=\") {\n          const recallMin = checkStateNav[1][2];\n          setValueMinDisplay(recallMin * 100);\n        }\n      }\n    };\n\n    recall();\n    return () => {\n      recall();\n    };\n  }, [stateNav, valueMaxDisplay, valueMinDisplay]);\n  useEffect(() => {\n    if (stateNav.ownerConfidenceWell) {\n      setFilter();\n    }\n  }, [setFilter, stateNav.ownerConfidenceWell]);\n\n  const handleChangeMin = event => {\n    setValueMinDisplay(event.target.value.replace(/,/g, \"\"));\n    setOwnerConfidenceWell(event.target.id);\n    setStateNav(stateNav => ({ ...stateNav,\n      ownerConfidenceWell: event.target.id\n    }));\n\n    if (event.target.value === \"\") {\n      setStateNav(stateNav => ({ ...stateNav,\n        filterOwnerConfidence: null\n      }));\n    }\n  };\n\n  const handleChangeMax = event => {\n    setValueMaxDisplay(event.target.value.replace(/,/g, \"\"));\n    setOwnerConfidenceWell(event.target.id);\n    setStateNav(stateNav => ({ ...stateNav,\n      ownerConfidenceWell: event.target.id\n    }));\n\n    if (event.target.value === \"\") {\n      setStateNav(stateNav => ({ ...stateNav,\n        filterOwnerConfidence: null\n      }));\n    }\n  };\n\n  useEffect(() => {\n    if (valueMinDisplay && valueMaxDisplay) {\n      if (valueMinDisplay >= valueMaxDisplay) {\n        setError(true);\n        setErrorText(\"Min value is greater than Max value\");\n      } else {\n        setError(false);\n        setErrorText(\"\");\n      }\n    }\n  }, [valueMaxDisplay, valueMinDisplay]);\n\n  const allowNumbersOnly = e => {\n    let code = e.which ? e.which : e.keyCode;\n\n    if (code > 31 && (code < 48 || code > 57)) {\n      e.preventDefault();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divBordersMinMax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    className: classes.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, \"Owner Confidence Score\"), /*#__PURE__*/React.createElement(NumberFormat, {\n    id: \"OwnerConfidenceMin\",\n    value: valueMinDisplay,\n    onChange: handleChangeMin,\n    thousandSeparator: true,\n    customInput: TextField,\n    className: classes.input,\n    \"aria-labelledby\": \"range-number\",\n    type: \"text\",\n    label: \"Min\",\n    size: \"small\",\n    onKeyPress: e => allowNumbersOnly(e),\n    InputProps: {\n      inputProps: {\n        min: 0,\n        max: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(NumberFormat, {\n    id: \"OwnerConfidenceMax\",\n    value: valueMaxDisplay,\n    onChange: handleChangeMax,\n    thousandSeparator: true,\n    customInput: TextField,\n    className: classes.input,\n    \"aria-labelledby\": \"range-number\",\n    type: \"text\",\n    label: \"Max\",\n    size: \"small\",\n    onKeyPress: e => allowNumbersOnly(e),\n    error: error,\n    helperText: errorText,\n    InputProps: {\n      inputProps: {\n        min: 0,\n        max: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, \"*M1neral\\u2019s proprietary owner confidence score enriches public and consumer datasets with intelligence to attach a confidence metric on owner records in relation to a well asset.\")));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterOwnerConfidence.js"],"names":["React","useState","useContext","useCallback","useEffect","makeStyles","TextField","Typography","NumberFormat","NavigationContext","FormLabel","useStyles","divBordersMinMax","display","padding","border","borderRadius","input","marginLeft","width","color","inputLabel","position","top","ownersToggle","paddingLeft","FilterOwnerConfidence","classes","stateNav","setStateNav","valueMinDisplay","setValueMinDisplay","valueMaxDisplay","setValueMaxDisplay","error","setError","errorText","setErrorText","type","setType","ownerConfidenceWell","setOwnerConfidenceWell","setFilter","filter","min","parseInt","max","console","log","filterOwnerConfidence","recall","checkStateNav","length","recallMin","recallMax","handleChangeMin","event","target","value","replace","id","handleChangeMax","allowNumbersOnly","e","code","which","keyCode","preventDefault","inputProps","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useCallback, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\nimport { FormLabel } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  divBordersMinMax: {\r\n    display: \"flow-root\",\r\n    padding: \"3.5px 15px 5.5px 15px\",\r\n    border: \"1px solid #C4C4C4\",\r\n    borderRadius: \"4px\",\r\n    \"&:hover\": {\r\n      border: \"1px solid black\",\r\n    },\r\n  },\r\n  input: {\r\n    marginLeft: \"30px\",\r\n    width: \"160px\",\r\n    //float: \"right\",\r\n    \"& input\": { color: \"#17AADD\" },\r\n  },\r\n  inputLabel: {\r\n    position: \"relative\",\r\n    top: \"11.5px\",\r\n  },\r\n  ownersToggle: {\r\n    paddingLeft: \"20px\",\r\n  },\r\n});\r\n\r\nexport default function FilterOwnerConfidence() {\r\n  const classes = useStyles();\r\n  const [stateNav, setStateNav] = useContext(NavigationContext);\r\n  const [valueMinDisplay, setValueMinDisplay] = useState(\"\");\r\n  const [valueMaxDisplay, setValueMaxDisplay] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [errorText, setErrorText] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [ownerConfidenceWell, setOwnerConfidenceWell] = useState(\r\n    stateNav.ownerConfidenceWell ? stateNav.ownerConfidenceWell : []\r\n  );\r\n\r\n  const setFilter = useCallback(() => {\r\n    let filter;\r\n    let min = parseInt(valueMinDisplay);\r\n    let max = parseInt(valueMaxDisplay);\r\n\r\n    if (!min && !max) {\r\n      filter = null;\r\n    }\r\n    if (!min && max) {\r\n      filter = [\"all\", [\"<=\", [\"get\", \"ownerMatchConfidence\"], max / 100]];\r\n      console.log(\"add filter\", filter);\r\n    } else if (min && !max) {\r\n      filter = [\"all\", [\">=\", [\"get\", \"ownerMatchConfidence\"], min / 100]];\r\n      console.log(\"add filter\", filter);\r\n    } else if (min && max) {\r\n      if (min < max) {\r\n        filter = [\r\n          \"all\",\r\n          [\">=\", [\"get\", \"ownerMatchConfidence\"], min / 100],\r\n          [\"<=\", [\"get\", \"ownerMatchConfidence\"], max / 100],\r\n        ];\r\n        console.log(\"add filter\", filter);\r\n      }\r\n    } else {\r\n      filter = null;\r\n    }\r\n\r\n    setStateNav((stateNav) => ({\r\n      ...stateNav,\r\n      filterOwnerConfidence: filter,\r\n    }));\r\n  }, [setStateNav, valueMaxDisplay, valueMinDisplay]);\r\n\r\n  useEffect(() => {\r\n    const recall = () => {\r\n      let checkStateNav = stateNav.filterOwnerConfidence;\r\n      if (!valueMinDisplay && !valueMaxDisplay) {\r\n        if (checkStateNav && checkStateNav.length === 3) {\r\n          const recallMin = checkStateNav[1][2];\r\n          const recallMax = checkStateNav[2][2];\r\n          setValueMinDisplay(recallMin * 100);\r\n          setValueMaxDisplay(recallMax * 100);\r\n        }\r\n      }\r\n      if (!valueMaxDisplay) {\r\n        if (checkStateNav && checkStateNav[1][0] === \"<=\") {\r\n          const recallMax = checkStateNav[1][2];\r\n          setValueMaxDisplay(recallMax * 100);\r\n        }\r\n      }\r\n      if (!valueMinDisplay) {\r\n        if (checkStateNav && checkStateNav[1][0] === \">=\") {\r\n          const recallMin = checkStateNav[1][2];\r\n          setValueMinDisplay(recallMin * 100);\r\n        }\r\n      }\r\n    };\r\n    recall();\r\n    return () => {\r\n      recall();\r\n    };\r\n  }, [stateNav, valueMaxDisplay, valueMinDisplay]);\r\n\r\n  useEffect(() => {\r\n    if (stateNav.ownerConfidenceWell) {\r\n      setFilter();\r\n    }\r\n  }, [setFilter, stateNav.ownerConfidenceWell]);\r\n\r\n  const handleChangeMin = (event) => {\r\n    setValueMinDisplay(event.target.value.replace(/,/g, \"\"));\r\n    setOwnerConfidenceWell(event.target.id);\r\n    setStateNav((stateNav) => ({\r\n      ...stateNav,\r\n      ownerConfidenceWell: event.target.id,\r\n    }));\r\n    if (event.target.value === \"\") {\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        filterOwnerConfidence: null,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleChangeMax = (event) => {\r\n    setValueMaxDisplay(event.target.value.replace(/,/g, \"\"));\r\n    setOwnerConfidenceWell(event.target.id);\r\n    setStateNav((stateNav) => ({\r\n      ...stateNav,\r\n      ownerConfidenceWell: event.target.id,\r\n    }));\r\n    if (event.target.value === \"\") {\r\n      setStateNav((stateNav) => ({\r\n        ...stateNav,\r\n        filterOwnerConfidence: null,\r\n      }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (valueMinDisplay && valueMaxDisplay) {\r\n      if (valueMinDisplay >= valueMaxDisplay) {\r\n        setError(true);\r\n        setErrorText(\"Min value is greater than Max value\");\r\n      } else {\r\n        setError(false);\r\n        setErrorText(\"\");\r\n      }\r\n    }\r\n  }, [valueMaxDisplay, valueMinDisplay]);\r\n\r\n  const allowNumbersOnly = (e) => {\r\n    let code = e.which ? e.which : e.keyCode;\r\n    if (code > 31 && (code < 48 || code > 57)) {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.divBordersMinMax}>\r\n        <FormLabel className={classes.inputLabel}>\r\n          Owner Confidence Score\r\n        </FormLabel>\r\n\r\n        <NumberFormat\r\n          id=\"OwnerConfidenceMin\"\r\n          value={valueMinDisplay}\r\n          onChange={handleChangeMin}\r\n          thousandSeparator={true}\r\n          customInput={TextField}\r\n          className={classes.input}\r\n          aria-labelledby=\"range-number\"\r\n          type=\"text\"\r\n          label=\"Min\"\r\n          size=\"small\"\r\n          onKeyPress={(e) => allowNumbersOnly(e)}\r\n          InputProps={{\r\n            inputProps: {\r\n              min: 0,\r\n              max: 1,\r\n            },\r\n          }}\r\n        />\r\n        <NumberFormat\r\n          id=\"OwnerConfidenceMax\"\r\n          value={valueMaxDisplay}\r\n          onChange={handleChangeMax}\r\n          thousandSeparator={true}\r\n          customInput={TextField}\r\n          className={classes.input}\r\n          aria-labelledby=\"range-number\"\r\n          type=\"text\"\r\n          label=\"Max\"\r\n          size=\"small\"\r\n          onKeyPress={(e) => allowNumbersOnly(e)}\r\n          error={error}\r\n          helperText={errorText}\r\n          InputProps={{\r\n            inputProps: {\r\n              min: 0,\r\n              max: 1,\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Typography variant=\"caption\">\r\n          *M1neral’s proprietary owner confidence score enriches public and\r\n          consumer datasets with intelligence to attach a confidence metric on\r\n          owner records in relation to a well asset.\r\n        </Typography>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}