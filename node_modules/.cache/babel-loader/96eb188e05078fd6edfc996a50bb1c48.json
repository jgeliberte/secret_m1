{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Dashboard\\\\components\\\\RssFeed.js\";\nimport { Grid } from \"@material-ui/core\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DragIndicatorOutlinedIcon from \"@material-ui/icons/DragIndicatorOutlined\";\nimport moment from \"moment\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { sortableHandle } from \"react-sortable-hoc\";\nimport M1neralIconSvg from \"../../Shared/m1neralIconSvg\";\nimport cnbc from \"./RSSFeedIcons/cnbc1.svg\";\nimport feedimage from \"./RSSFeedIcons/feedburner.png\";\nimport ngi from \"./RSSFeedIcons/ngi.png\";\nimport oilngas from \"./RSSFeedIcons/oilngas.png\";\nimport pbgas from \"./RSSFeedIcons/pbgas.png\";\nimport rigzone from \"./RSSFeedIcons/rigzone.svg\";\nimport smag from \"./RSSFeedIcons/smag.webp\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    padding: \"8px 8px 0 8px\",\n    backgroundColor: \"#011133\",\n    color: \"white\"\n  },\n  container: {},\n  listitem: {\n    padding: \"10px\"\n  },\n  thumb: {\n    height: \"16px\",\n    maxWidth: \"16px\"\n  },\n  source: {\n    fontSize: \"8px\",\n    marginLeft: \"8px\"\n  },\n  title: {\n    fontSize: \"12px\",\n    margin: \"2px 0\",\n    fontWeight: \"bold\",\n    textDecoration: \"none\",\n    color: \"black\"\n  },\n  content: {\n    fontSize: \"10px\",\n    marginBottom: \"2px\"\n  },\n  date: {\n    fontSize: \"8px\"\n  },\n  paper: {\n    margin: \"8px 4px\"\n  },\n  image: {\n    maxHeight: \"72px\",\n    maxWwidth: \"72px\",\n    borderRadius: \"4px\"\n  }\n}));\nconst DragHandle = sortableHandle(() => /*#__PURE__*/React.createElement(IconButton, {\n  \"aria-label\": \"drag\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(DragIndicatorOutlinedIcon, {\n  fontSize: \"default\",\n  htmlColor: \"#fff\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }\n})));\nconst rsslist = [{\n  title: \"FeedBurner\",\n  url: \"https://feeds.feedburner.com/OilGasJournal-GeneralInterest\",\n  image: feedimage\n}, {\n  title: \"Rigzone\",\n  url: \"https://www.rigzone.com/news/rss/rigzone_latest.aspx\",\n  image: rigzone\n}, {\n  title: \"Oil and Gas 360\",\n  url: \"http://www.oilandgas360.com/feed/\",\n  image: oilngas\n}, {\n  title: \"CNBC\",\n  url: \"http://www.cnbc.com/id/10000030/device/rss\",\n  image: cnbc\n}, {\n  title: \"NGI Shale Daily\",\n  url: \"https://www.naturalgasintel.com/rss/1\",\n  image: ngi\n}, {\n  title: \"Shalemag\",\n  url: \"https://shalemag.com/feed/\",\n  image: smag\n}, {\n  title: \"PB Oil and Gas Magazine\",\n  url: \"http://pboilandgasmagazine.com/feed/\",\n  image: pbgas\n}];\n\nconst RssFeed = () => {\n  const classes = useStyles();\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    const proxy = \"https://api.rss2json.com/v1/api.json?rss_url=\";\n\n    const fetchRss = async ({\n      url,\n      title,\n      image\n    }) => {\n      try {\n        const res = await fetch(`${proxy}${url}`);\n        const data = await res.json();\n        const {\n          feed,\n          items\n        } = data;\n        return items.map((item, i) => ({\n          source: title,\n          feed,\n          article: item,\n          image\n        }));\n      } catch (error) {\n        console.log(error, url);\n      }\n    };\n\n    Promise.all(rsslist.map(source => fetchRss(source))).then(articles => {\n      let newArticles = [];\n      articles.forEach(a => !!a && newArticles.push(...a));\n      const sorted = newArticles.sort((a, b) => a.article.pubDate > b.article.pubDate ? -1 : 1);\n      setNews([...news, ...sorted]);\n    });\n  }, []);\n\n  const truncate = (str, num) => {\n    if (str.length <= num) {\n      return str;\n    }\n\n    return str.slice(0, num) + \"...\";\n  };\n\n  const cleanedText = text => {\n    const el = document.createElement(\"div\");\n    el.innerHTML = text;\n    const sanitized = el.textContent;\n    return sanitized;\n  };\n\n  const sentenceCase = sen => sen.split(\"\").map((c, i) => {\n    if (i == 0) return c.toUpperCase();\n    return c;\n  }).join(\"\");\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(DragHandle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }),\n    title: `Latest News`,\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    style: {\n      maxHeight: \"calc(100% - 48px)\",\n      overflow: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, news.map(({\n    feed,\n    article,\n    source,\n    image\n  }, i) => {\n    const thumbImage = image || feed.image || article.enclosure.link;\n    const mainImage = article.enclosure.link || feed.image || image;\n    const time = moment.utc(article.pubDate).local().fromNow();\n    return /*#__PURE__*/React.createElement(Paper, {\n      key: i,\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      className: classes.listitem,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      zeroMinWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, !!thumbImage ? /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.thumb,\n      component: \"img\",\n      image: thumbImage,\n      title: \"thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(M1neralIconSvg, {\n      size: {\n        height: \"16px\",\n        width: \"16px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      noWrap: true,\n      className: classes.source,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, cleanedText(feed.title)), \" \"), /*#__PURE__*/React.createElement(Typography, {\n      component: \"a\",\n      href: article.link,\n      variant: \"h2\",\n      className: classes.title,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, truncate(article.title, 50)), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, truncate(cleanedText(article.content), 100)), /*#__PURE__*/React.createElement(Typography, {\n      noWrap: true,\n      className: classes.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }, sentenceCase(time))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      style: {\n        textAlign: \"-webkit-center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, !!mainImage ? /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.image,\n      component: \"img\",\n      image: mainImage,\n      title: \"Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(M1neralIconSvg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }))));\n  })));\n};\n\nexport default RssFeed;","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Dashboard/components/RssFeed.js"],"names":["Grid","CardHeader","CardMedia","IconButton","List","Paper","makeStyles","Typography","DragIndicatorOutlinedIcon","moment","React","Fragment","useEffect","useState","sortableHandle","M1neralIconSvg","feedimage","ngi","oilngas","pbgas","smag","useStyles","theme","header","padding","backgroundColor","color","container","listitem","thumb","height","maxWidth","source","fontSize","marginLeft","title","margin","fontWeight","textDecoration","content","marginBottom","date","paper","image","maxHeight","maxWwidth","borderRadius","DragHandle","rsslist","url","rigzone","cnbc","RssFeed","classes","news","setNews","proxy","fetchRss","res","fetch","data","json","feed","items","map","item","i","article","error","console","log","Promise","all","then","articles","newArticles","forEach","a","push","sorted","sort","b","pubDate","truncate","str","num","length","slice","cleanedText","text","el","document","createElement","innerHTML","sanitized","textContent","sentenceCase","sen","split","c","toUpperCase","join","overflow","thumbImage","enclosure","link","mainImage","time","utc","local","fromNow","width","textAlign"],"mappings":"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","sourcesContent":["import { Grid } from \"@material-ui/core\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DragIndicatorOutlinedIcon from \"@material-ui/icons/DragIndicatorOutlined\";\r\nimport moment from \"moment\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { sortableHandle } from \"react-sortable-hoc\";\r\nimport M1neralIconSvg from \"../../Shared/m1neralIconSvg\";\r\nimport cnbc from \"./RSSFeedIcons/cnbc1.svg\";\r\nimport feedimage from \"./RSSFeedIcons/feedburner.png\";\r\nimport ngi from \"./RSSFeedIcons/ngi.png\";\r\nimport oilngas from \"./RSSFeedIcons/oilngas.png\";\r\nimport pbgas from \"./RSSFeedIcons/pbgas.png\";\r\nimport rigzone from \"./RSSFeedIcons/rigzone.svg\";\r\nimport smag from \"./RSSFeedIcons/smag.webp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: \"8px 8px 0 8px\",\r\n    backgroundColor: \"#011133\",\r\n    color: \"white\",\r\n  },\r\n  container: {},\r\n  listitem: {\r\n    padding: \"10px\",\r\n  },\r\n  thumb: {\r\n    height: \"16px\",\r\n    maxWidth: \"16px\",\r\n  },\r\n  source: {\r\n    fontSize: \"8px\",\r\n    marginLeft: \"8px\",\r\n  },\r\n  title: {\r\n    fontSize: \"12px\",\r\n    margin: \"2px 0\",\r\n    fontWeight: \"bold\",\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n  },\r\n  content: {\r\n    fontSize: \"10px\",\r\n    marginBottom: \"2px\",\r\n  },\r\n  date: {\r\n    fontSize: \"8px\",\r\n  },\r\n  paper: {\r\n    margin: \"8px 4px\",\r\n  },\r\n  image: {\r\n    maxHeight: \"72px\",\r\n    maxWwidth: \"72px\",\r\n    borderRadius: \"4px\",\r\n  },\r\n}));\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <IconButton aria-label=\"drag\">\r\n    <DragIndicatorOutlinedIcon fontSize=\"default\" htmlColor=\"#fff\" />\r\n  </IconButton>\r\n));\r\n\r\nconst rsslist = [\r\n  {\r\n    title: \"FeedBurner\",\r\n    url: \"https://feeds.feedburner.com/OilGasJournal-GeneralInterest\",\r\n    image: feedimage,\r\n  },\r\n  {\r\n    title: \"Rigzone\",\r\n    url: \"https://www.rigzone.com/news/rss/rigzone_latest.aspx\",\r\n    image: rigzone,\r\n  },\r\n  {\r\n    title: \"Oil and Gas 360\",\r\n    url: \"http://www.oilandgas360.com/feed/\",\r\n    image: oilngas,\r\n  },\r\n  {\r\n    title: \"CNBC\",\r\n    url: \"http://www.cnbc.com/id/10000030/device/rss\",\r\n    image: cnbc,\r\n  },\r\n  {\r\n    title: \"NGI Shale Daily\",\r\n    url: \"https://www.naturalgasintel.com/rss/1\",\r\n    image: ngi,\r\n  },\r\n  { title: \"Shalemag\", url: \"https://shalemag.com/feed/\", image: smag },\r\n  {\r\n    title: \"PB Oil and Gas Magazine\",\r\n    url: \"http://pboilandgasmagazine.com/feed/\",\r\n    image: pbgas,\r\n  },\r\n];\r\n\r\nconst RssFeed = () => {\r\n  const classes = useStyles();\r\n  const [news, setNews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const proxy = \"https://api.rss2json.com/v1/api.json?rss_url=\";\r\n    const fetchRss = async ({ url, title, image }) => {\r\n      try {\r\n        const res = await fetch(`${proxy}${url}`);\r\n        const data = await res.json();\r\n        const { feed, items } = data;\r\n        return items.map((item, i) => ({\r\n          source: title,\r\n          feed,\r\n          article: item,\r\n          image,\r\n        }));\r\n      } catch (error) {\r\n        console.log(error, url);\r\n      }\r\n    };\r\n    Promise.all(rsslist.map((source) => fetchRss(source))).then((articles) => {\r\n      let newArticles = [];\r\n      articles.forEach((a) => !!a && newArticles.push(...a));\r\n      const sorted = newArticles.sort((a, b) =>\r\n        a.article.pubDate > b.article.pubDate ? -1 : 1\r\n      );\r\n      setNews([...news, ...sorted]);\r\n    });\r\n  }, []);\r\n\r\n  const truncate = (str, num) => {\r\n    if (str.length <= num) {\r\n      return str;\r\n    }\r\n    return str.slice(0, num) + \"...\";\r\n  };\r\n\r\n  const cleanedText = (text) => {\r\n    const el = document.createElement(\"div\");\r\n    el.innerHTML = text;\r\n    const sanitized = el.textContent;\r\n    return sanitized;\r\n  };\r\n\r\n  const sentenceCase = (sen) =>\r\n    sen\r\n      .split(\"\")\r\n      .map((c, i) => {\r\n        if (i == 0) return c.toUpperCase();\r\n        return c;\r\n      })\r\n      .join(\"\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <CardHeader\r\n        action={<DragHandle />}\r\n        title={`Latest News`}\r\n        className={classes.header}\r\n      />\r\n\r\n      <List style={{ maxHeight: \"calc(100% - 48px)\", overflow: \"auto\" }}>\r\n        {news.map(({ feed, article, source, image }, i) => {\r\n          const thumbImage = image || feed.image || article.enclosure.link;\r\n          const mainImage = article.enclosure.link || feed.image || image;\r\n          const time = moment.utc(article.pubDate).local().fromNow();\r\n          return (\r\n            <Paper key={i} className={classes.paper}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n                className={classes.listitem}\r\n                spacing={1}\r\n              >\r\n                <Grid item xs={9} zeroMinWidth>\r\n                  <Grid container alignItems=\"center\">\r\n                    {!!thumbImage ? (\r\n                      <CardMedia\r\n                        className={classes.thumb}\r\n                        component={\"img\"}\r\n                        image={thumbImage}\r\n                        title=\"thumbnail\"\r\n                      />\r\n                    ) : (\r\n                      <M1neralIconSvg\r\n                        size={{ height: \"16px\", width: \"16px\" }}\r\n                      />\r\n                    )}\r\n                    <Typography noWrap className={classes.source}>\r\n                      {cleanedText(feed.title)}\r\n                    </Typography>{\" \"}\r\n                  </Grid>\r\n                  <Typography\r\n                    component=\"a\"\r\n                    href={article.link}\r\n                    variant=\"h2\"\r\n                    className={classes.title}\r\n                    target=\"_blank\"\r\n                  >\r\n                    {truncate(article.title, 50)}\r\n                  </Typography>\r\n                  <Typography className={classes.content}>\r\n                    {truncate(cleanedText(article.content), 100)}\r\n                  </Typography>\r\n                  <Typography noWrap className={classes.date}>\r\n                    {sentenceCase(time)}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3} style={{ textAlign: \"-webkit-center\" }}>\r\n                  {!!mainImage ? (\r\n                    <CardMedia\r\n                      className={classes.image}\r\n                      component={\"img\"}\r\n                      image={mainImage}\r\n                      title=\"Image\"\r\n                    />\r\n                  ) : (\r\n                    <M1neralIconSvg />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </List>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default RssFeed;\r\n"]},"metadata":{},"sourceType":"module"}