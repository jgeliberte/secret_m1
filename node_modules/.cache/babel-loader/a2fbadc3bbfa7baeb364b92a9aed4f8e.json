{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\Search.js\";\nimport React, { useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport parse from \"autosuggest-highlight/parse\";\nimport throttle from \"lodash/throttle\";\nimport { AppContext } from \"../../../AppContext\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport WellIcon from \"../../Shared/svgIcons/well\";\nimport OperatorIcon from \"../../Shared/svgIcons/operator\";\nimport LeaseIcon from \"../../Shared/svgIcons/lease\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { OWNERWELLSQUERY } from \"../../../graphQL/useQueryOwnerWells \";\nimport { useLazyQuery, useMutation } from \"@apollo/react-hooks\";\nimport { WELLSQUERY } from \"../../../graphQL/useQueryWells\";\nimport { OPERATORSLATSLONS } from \"../../../graphQL/useQueryOperatorLatsLonsArray\";\nimport { LEASELATSLONS } from \"../../../graphQL/useQueryLeaseLatsLonsArray\";\nimport { USERSEARCHHISTORY } from \"../../../graphQL/useQueryUserSearchHistory\";\nimport { ADDSEARCHHISTORY } from \"../../../graphQL/useMutationAddSearchHistory\";\nimport { UPDATESEARCHHISTORY } from \"../../../graphQL/useMutationUpdateSearchHistory\";\nimport { REMOVESEARCHHISTORY } from \"../../../graphQL/useMutationRemoveSearchHistory\";\nimport { NavigationContext } from \"../NavigationContext\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Box from \"@material-ui/core/Box\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement(\"script\");\n  script.setAttribute(\"async\", \"\");\n  script.setAttribute(\"id\", id);\n  script.src = src;\n  position.appendChild(script);\n} // const autocompleteService = { current: null };\n\n\nconst maxMinScore = options => {\n  let max = 0;\n  let min = 1000000;\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].Score > max) max = options[i].Score;\n    if (options[i].Score < min) min = options[i].Score;\n  }\n\n  return [max, min];\n};\n\nconst calcScoreOpacity = (maxMin, score) => {\n  if (maxMin[0] === maxMin[1]) return 0;\n  if (score === maxMin[1]) return 1;\n  return 1 - (score - maxMin[1]) / (maxMin[0] - maxMin[1]);\n};\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2)\n  },\n  groupsHeadersText: {\n    margin: \"0\",\n    marginTop: \"3px\",\n    padding: \"0\",\n    fontFamily: \"Poppins\",\n    color: \"#0f2046\",\n    paddingLeft: \"5px\"\n  },\n  groupsHeaders: {\n    position: \"-webkit-sticky\",\n    position: \"sticky\",\n    top: \"-9px\",\n    backgroundColor: \"#d4e7fce0\",\n    zIndex: \"4000\"\n  },\n  groupsButton: {\n    margin: \"3px\",\n    zIndex: \"2000\",\n    color: \"#5f5f5f\"\n  },\n  textF: {\n    \"& input\": {\n      color: \"#ffffffc9\",\n      height: \"5px\"\n    },\n    \"& .MuiInputBase-adornedStart, .MuiInputBase-adornedEnd\": {\n      padding: \"9px 0 !important\"\n    }\n  },\n  score: {\n    position: \"absolute\",\n    top: \"-8px\",\n    width: \"17px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    marginLeft: \"10px\"\n  },\n  headerButtons: {\n    width: \"100%\",\n    margin: \"0 4px\",\n    minWidth: \"max-content\"\n  },\n  historyPopover: {\n    \"& .MuiPopover-paper\": {\n      width: \"calc(100% - 42px) !important\",\n      maxWidth: \"none !important\",\n      minWidth: \"unset !important\",\n      maxHeight: \"55vh !important\"\n    }\n  },\n  historyRow: {\n    \"&:hover\": {\n      backgroundColor: \"#EFEFEF\",\n      cursor: \"pointer\"\n    }\n  },\n  startAdornmentIcon: {\n    padding: \"6px 8px\",\n    cursor: \"pointer\"\n  }\n}));\nexport default function Search() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [stateApp, setStateApp] = React.useContext(AppContext);\n  const [stateNav, setStateNav] = React.useContext(NavigationContext);\n  const [value, setValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [searchOption, setSearchOption] = React.useState(\"all\");\n  const [options, setOptions] = React.useState([]);\n  const [searchTop, setSearchTop] = React.useState(5);\n  const [maxMinWellsScore, setMaxMinWellsScore] = React.useState([0, 0]);\n  const [maxMinOwnersScore, setMaxMinOwnersScore] = React.useState([0, 0]);\n  const [maxMinOperatosScore, setMaxMinOperatosScore] = React.useState([0, 0]);\n  const [maxMinLeasesScore, setMaxMinLeasesScore] = React.useState([0, 0]);\n  const [maxMinMapboxSearchScore, setMaxMinMapboxSearchScore] = React.useState([0, 0]);\n  const [searchHistoryList, setSearchHistoryList] = React.useState([]);\n  const loaded = React.useRef(false);\n  const [loadingWells, setLoadingWells] = React.useState(false);\n  const [loadingOwners, setLoadingOwners] = React.useState(false);\n  const [loadingLeases, setLoadingLeases] = React.useState(false);\n  const [loadingOperators, setLoadingOperators] = React.useState(false);\n  const [loadingMapboxSearch, setLoadingMapboxSearch] = React.useState(false);\n  const [getOwnerWells, {\n    data: dataOwnerWells\n  }] = useLazyQuery(OWNERWELLSQUERY);\n  const [getWells, {\n    data: dataWells\n  }] = useLazyQuery(WELLSQUERY);\n  const [getOperatorWells, {\n    data: dataOperatorWells\n  }] = useLazyQuery(OPERATORSLATSLONS);\n  const [getLeaseWells, {\n    data: dataLeaseWells\n  }] = useLazyQuery(LEASELATSLONS); //////////// Search History Begin//////////////////\n  // Search History Queries and Mutations\n\n  const [getSearchHistory, {\n    data: searchHistoryData\n  }] = useLazyQuery(USERSEARCHHISTORY);\n  const [addSearchHistory] = useMutation(ADDSEARCHHISTORY);\n  const [updateSearchHistory] = useMutation(UPDATESEARCHHISTORY);\n  const [removeSearchHistory] = useMutation(REMOVESEARCHHISTORY);\n  useEffect(() => {\n    if (stateApp && stateApp.user && stateApp.user.mongoId) {\n      getSearchHistory({\n        variables: {\n          userId: stateApp.user.mongoId\n        }\n      });\n    }\n  }, [stateApp.user]);\n  useEffect(() => {\n    if (searchHistoryData && searchHistoryData.getSearchHistory) {\n      const compare = (a, b) => {\n        if (a.ts < b.ts) return 1;\n        if (a.ts > b.ts) return -1;\n        return 0;\n      };\n\n      let list = searchHistoryData.getSearchHistory;\n      list.sort(compare);\n      setSearchHistoryList(list);\n    }\n  }, [searchHistoryData]);\n  useEffect(() => {\n    if (searchHistoryList && searchHistoryList.length > 100) {\n      ///remove last add\n      removeSearchHistory({\n        variables: {\n          searchId: searchHistoryList[0]._id\n        },\n        refetchQueries: [\"getSearchHistory\"],\n        awaitRefetchQueries: true\n      });\n    }\n  }, [searchHistoryList]); //////////// Search History End//////////////////\n  //   if (typeof window !== 'undefined' && !loaded.current) {\n  //     if (!document.querySelector('#google-maps')) {\n  //       loadScript(\n  //         'https://maps.googleapis.com/maps/api/js?key=AIzaSyBwRp1e12ec1vOTtGiA4fcCt2sCUS78UYc&libraries=places',\n  //         document.querySelector('head'),\n  //         'google-maps',\n  //       );\n  //     }\n  //     loaded.current = true;\n  //   }\n\n  const callWellSearch = React.useMemo(() => throttle((request, top, callback) => {\n    const endpoint = \"https://m1search.search.windows.net/indexes/wellheader-index/docs?api-version=2019-05-06&$count=true&searchFields=WellName,ApiNumber&$top=\" + top + \"&search=\" + request.input;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\n    const options = {\n      method: \"GET\",\n      headers: headers\n    };\n    console.log(\"request made to wellheader-index search at: \" + new Date().toString());\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      console.log(response);\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  const callOwnerSearch = React.useMemo(() => throttle((request, top, callback) => {\n    const endpoint = \"https://m1search.search.windows.net/indexes/lod2019-index/docs?api-version=2019-05-06&%24count=true&searchFields=OwnerName%2CAddress1&%24top=\" + top + \"&search=\" + request.input;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\n    const options = {\n      method: \"GET\",\n      headers: headers\n    };\n    console.log(\"request made to lod2019-index search at: \" + new Date().toString());\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      console.log(response);\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  const callOperatorSearch = React.useMemo(() => throttle((request, top, callback) => {\n    const endpoint = \"https://m1search.search.windows.net/indexes/operator-index/docs?api-version=2019-05-06&$count=true&searchFields=Operator&$top=\" + top + \"&search=\" + request.input;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\n    const options = {\n      method: \"GET\",\n      headers: headers\n    };\n    console.log(\"request made to operator-index search at: \" + new Date().toString());\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      console.log(response);\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  const callLeaseSearch = React.useMemo(() => throttle((request, top, callback) => {\n    const endpoint = \"https://m1search.search.windows.net/indexes/lease-index/docs?api-version=2019-05-06&$count=true&searchFields=Lease,LeaseId&$top=\" + top + \"&search=\" + request.input;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\n    const options = {\n      method: \"GET\",\n      headers: headers\n    };\n    console.log(\"request made to lease-index search at: \" + new Date().toString());\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      console.log(response);\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  const callMapboxSearch = React.useMemo(() => throttle((request, top, callback) => {\n    const endpoint = `https://api.mapbox.com/geocoding/v5/mapbox.places/${request.input}.json?access_token=${stateApp.mapboxglAccessToken}&autocomplete=true&country=us%2Cca&limit=${top > 10 ? 10 : top}`;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    const options = {\n      method: \"GET\",\n      headers\n    };\n    fetch(endpoint, options).then(response => response.json()).then(response => {\n      callback(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, 200), []);\n  React.useEffect(() => {\n    // if (!autocompleteService.current && window.google) {\n    //   autocompleteService.current = new window.google.maps.places.AutocompleteService();\n    // }\n    // if (!autocompleteService.current) {\n    //   return undefined;\n    // }\n    if (inputValue === \"\") {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    (async () => {\n      let newOptions = [];\n      Promise.all([searchOption == \"all\" || searchOption == \"wells\" ? callWellSearch({\n        input: inputValue\n      }, searchTop, results => {\n        if (results) {\n          const indexSource = results[\"@odata.context\"].substring(results[\"@odata.context\"].indexOf(\"('\") + 2, results[\"@odata.context\"].indexOf(\"')\"));\n          console.log(indexSource);\n          newOptions = [...results.value.map(result => {\n            result.Score = result[\"@search.score\"];\n            delete result[\"@search.score\"];\n            return { ...result,\n              Source: indexSource,\n              Primary: result.WellName,\n              Secondary: result.ApiNumber\n            };\n          }), ...newOptions];\n          setMaxMinWellsScore(maxMinScore(results.value));\n        }\n\n        setOptions(newOptions);\n        setLoadingWells(false);\n      }) : null, searchOption == \"all\" || searchOption == \"owners\" ? callOwnerSearch({\n        input: inputValue\n      }, searchTop, results => {\n        if (results) {\n          const indexSource = results[\"@odata.context\"].substring(results[\"@odata.context\"].indexOf(\"('\") + 2, results[\"@odata.context\"].indexOf(\"')\"));\n          console.log(indexSource);\n          newOptions = [...results.value.map(result => {\n            result.Score = result[\"@search.score\"];\n            delete result[\"@search.score\"];\n            return { ...result,\n              Source: indexSource,\n              Primary: result.OwnerName,\n              Secondary: `${result.Address1}\\n${result.Address2}\\n${result.City}\\n${result.State}\\n${result.Zip}`\n            };\n          }), ...newOptions];\n          setMaxMinOwnersScore(maxMinScore(results.value));\n        }\n\n        setOptions(newOptions);\n        setLoadingOwners(false);\n      }) : null, searchOption == \"all\" || searchOption == \"operators\" ? callOperatorSearch({\n        input: inputValue\n      }, searchTop, results => {\n        if (results) {\n          const indexSource = results[\"@odata.context\"].substring(results[\"@odata.context\"].indexOf(\"('\") + 2, results[\"@odata.context\"].indexOf(\"')\"));\n          console.log(indexSource);\n          newOptions = [...results.value.map(result => {\n            result.Score = result[\"@search.score\"];\n            delete result[\"@search.score\"];\n            return { ...result,\n              Source: indexSource,\n              Primary: result.Operator,\n              Secondary: null\n            };\n          }), ...newOptions];\n          setMaxMinOperatosScore(maxMinScore(results.value));\n        }\n\n        setOptions(newOptions);\n        setLoadingOperators(false);\n      }) : null, searchOption == \"all\" || searchOption == \"leases\" ? callLeaseSearch({\n        input: inputValue\n      }, searchTop, results => {\n        if (results) {\n          const indexSource = results[\"@odata.context\"].substring(results[\"@odata.context\"].indexOf(\"('\") + 2, results[\"@odata.context\"].indexOf(\"')\"));\n          console.log(indexSource);\n          newOptions = [...results.value.map(result => {\n            result.Score = result[\"@search.score\"];\n            delete result[\"@search.score\"];\n            return { ...result,\n              Source: indexSource,\n              Primary: result.Lease && (result.Lease === \"\" || result.Lease === \"N/A\" || result.Lease === \"(N/A)\") ? \"--\" : result.Lease,\n              Secondary: result.LeaseId && (result.LeaseId === \"\" || result.LeaseId === \"N/A\" || result.LeaseId === \"(N/A)\") ? null : result.LeaseId\n            };\n          }), ...newOptions];\n          setMaxMinLeasesScore(maxMinScore(results.value));\n        }\n\n        setOptions(newOptions);\n        setLoadingLeases(false);\n      }) : null, searchOption == \"all\" || searchOption == \"locations\" ? callMapboxSearch({\n        input: inputValue\n      }, searchTop, results => {\n        if (results) {\n          let resultsMod = results.features ? results.features.map(result => {\n            return { ...result,\n              Id: result.id,\n              Source: \"mapboxSearch\",\n              Score: result.relevance ? result.relevance : 0,\n              Primary: result.text ? result.text : \"\",\n              Secondary: result.place_name ? result.place_name.indexOf(result.text + \", \") === 0 ? result.place_name.slice(result.place_name.indexOf(\", \") + 2, result.place_name.length) : result.place_name : \"\"\n            };\n          }) : [];\n          newOptions = [...newOptions, ...resultsMod];\n          setMaxMinMapboxSearchScore(maxMinScore(resultsMod));\n        }\n\n        setOptions(newOptions);\n        setLoadingMapboxSearch(false);\n      }) : null]);\n    })();\n  }, [inputValue, callWellSearch, callOwnerSearch, callOperatorSearch, callLeaseSearch, callMapboxSearch, searchOption, searchTop]); //// getting wells data from owners ////\n\n  useEffect(() => {\n    if (dataOwnerWells && dataOwnerWells.ownerWells) {\n      if (dataOwnerWells.ownerWells.length !== 0) {\n        let wellsIdsArray = dataOwnerWells.ownerWells.map(item => item.WellId);\n        getWells({\n          variables: {\n            wellIdArray: wellsIdsArray,\n            authToken: stateApp.user.authToken\n          }\n        });\n      } else {\n        console.log(\"Not wells found for the owner\");\n        stateApp.deactivateUserDefinedLayers(6);\n        setStateApp(stateApp => ({ ...stateApp,\n          wellListFromSearch: null\n        }));\n      }\n    }\n  }, [dataOwnerWells]);\n  useEffect(() => {\n    if (dataWells && dataWells.wells && dataWells.wells.results && dataWells.wells.results.length !== 0) {\n      console.log(\"wells data from search\", dataWells.wells.results);\n      setStateApp(stateApp => dataWells.wells.results.length === 1 ? { ...stateApp,\n        selectedWell: null,\n        fitBounds: null,\n        selectedWellId: dataWells.wells.results[0].id.toLowerCase(),\n        wellSelectedCoordinates: [dataWells.wells.results[0].longitude, dataWells.wells.results[0].latitude],\n        wellListFromSearch: dataWells.wells.results\n      } : { ...stateApp,\n        fitBounds: null,\n        wellListFromSearch: dataWells.wells.results\n      });\n      stateApp.activateUserDefinedLayers(6);\n    }\n  }, [dataWells]); //// getting wells data from  operators////\n\n  useEffect(() => {\n    if (dataOperatorWells && dataOperatorWells.operatorLatsLonsArray) {\n      if (dataOperatorWells.operatorLatsLonsArray.length !== 0) {\n        console.log(\"wells data from search\", dataOperatorWells.operatorLatsLonsArray);\n        setStateApp(stateApp => dataOperatorWells.operatorLatsLonsArray.length === 1 ? { ...stateApp,\n          selectedWell: null,\n          fitBounds: null,\n          selectedWellId: dataOperatorWells.operatorLatsLonsArray[0].id.toLowerCase(),\n          wellSelectedCoordinates: [dataOperatorWells.operatorLatsLonsArray[0].longitude, dataOperatorWells.operatorLatsLonsArray[0].latitude],\n          wellListFromSearch: dataOperatorWells.operatorLatsLonsArray\n        } : { ...stateApp,\n          fitBounds: null,\n          wellListFromSearch: dataOperatorWells.operatorLatsLonsArray\n        });\n        stateApp.activateUserDefinedLayers(6);\n      } else {\n        console.log(\"Not wells found for the operator\");\n        stateApp.deactivateUserDefinedLayers(6);\n        setStateApp(stateApp => ({ ...stateApp,\n          wellListFromSearch: null\n        }));\n      }\n    }\n  }, [dataOperatorWells]); //// getting wells data from  leases ////\n\n  useEffect(() => {\n    if (dataLeaseWells && dataLeaseWells.leaseLatsLonsArray) {\n      if (dataLeaseWells.leaseLatsLonsArray.length !== 0) {\n        console.log(\"wells data from search\", dataLeaseWells.leaseLatsLonsArray);\n        setStateApp(stateApp => dataLeaseWells.leaseLatsLonsArray.length === 1 ? { ...stateApp,\n          selectedWell: null,\n          fitBounds: null,\n          selectedWellId: dataLeaseWells.leaseLatsLonsArray[0].id.toLowerCase(),\n          wellSelectedCoordinates: [dataLeaseWells.leaseLatsLonsArray[0].longitude, dataLeaseWells.leaseLatsLonsArray[0].latitude],\n          wellListFromSearch: dataLeaseWells.leaseLatsLonsArray\n        } : { ...stateApp,\n          fitBounds: null,\n          wellListFromSearch: dataLeaseWells.leaseLatsLonsArray\n        });\n        stateApp.activateUserDefinedLayers(6);\n      } else {\n        console.log(\"Not wells found for the lease\");\n        stateApp.deactivateUserDefinedLayers(6);\n        setStateApp(stateApp => ({ ...stateApp,\n          wellListFromSearch: null\n        }));\n      }\n    }\n  }, [dataLeaseWells]); ///////////////////////////////////////\n\n  const handleChange = newValue => {\n    console.log(\"search Selected\", newValue);\n\n    if (!value || newValue && (value.Id !== newValue.Id || value.Source !== newValue.Source || value.Primary !== newValue.Primary || value.Secondary !== newValue.Secondary)) {\n      //// setting search history\n      const setSearchHistory = search => {\n        if (search.searchId) {\n          ///update\n          updateSearchHistory({\n            variables: {\n              searchId: search.searchId\n            },\n            refetchQueries: [\"getSearchHistory\"],\n            awaitRefetchQueries: true\n          });\n          delete newValue.searchId;\n        } else {\n          ///add\n          addSearchHistory({\n            variables: {\n              searchHistory: {\n                searchData: search,\n                user: stateApp.user.mongoId\n              }\n            },\n            refetchQueries: [\"getSearchHistory\"],\n            awaitRefetchQueries: true\n          });\n        }\n      };\n\n      setSearchHistory(newValue);\n      setValue(newValue); //// setting map loader\n\n      setStateApp(stateApp => ({ ...stateApp,\n        mapCircularLoaderAct: true\n      })); //// if well, with lat long\n\n      if (newValue && newValue.Source === \"wellheader-index\" && newValue.Longitude && newValue.Latitude) {\n        setStateApp(stateApp => ({ ...stateApp,\n          fitBounds: null,\n          selectedWell: null,\n          selectedWellId: newValue.Id ? newValue.Id.toLowerCase() : null,\n          wellSelectedCoordinates: [newValue.Longitude, newValue.Latitude],\n          wellListFromSearch: [{\n            id: newValue.Id,\n            longitude: newValue.Longitude,\n            latitude: newValue.Latitude\n          }]\n        }));\n        stateApp.activateUserDefinedLayers(6);\n      } //// if owner\n\n\n      if (newValue && newValue.Source === \"lod2019-index\" && newValue.Id) {\n        getOwnerWells({\n          variables: {\n            ownerId: newValue.Id\n          }\n        });\n      } //// if operator\n\n\n      if (newValue && newValue.Source === \"operator-index\" && newValue.Operator) {\n        getOperatorWells({\n          variables: {\n            operatorName: newValue.Operator\n          }\n        });\n      } //// if lease\n\n\n      if (newValue && newValue.Source === \"lease-index\" && (newValue.Lease && newValue.Lease !== \"\" || newValue.LeaseId && newValue.LeaseId !== \"\")) {\n        if (newValue.Lease && newValue.Lease !== \"\") {\n          getLeaseWells({\n            variables: {\n              fieldName: \"Lease\",\n              value: newValue.Lease\n            }\n          });\n        } else {\n          getLeaseWells({\n            variables: {\n              fieldName: \"LeaseId\",\n              value: newValue.LeaseId\n            }\n          });\n        }\n      } //// if mapboxSearch\n\n\n      if (newValue && newValue.Source === \"mapboxSearch\" && newValue.center) {\n        let minLong, maxLong, minLat, maxLat;\n        if (newValue.bbox) [minLong, minLat, maxLong, maxLat] = newValue.bbox;\n        setStateApp(stateApp => ({ ...stateApp,\n          selectedWell: null,\n          selectedWellId: null,\n          wellSelectedCoordinates: null,\n          wellListFromSearch: [{\n            id: newValue.Id,\n            longitude: newValue.center[0],\n            latitude: newValue.center[1]\n          }],\n          fitBounds: newValue.bbox ? {\n            maxLat,\n            minLat,\n            maxLong,\n            minLong\n          } : null\n        }));\n        stateApp.activateUserDefinedLayers(6);\n      }\n    }\n  }; //// setting the buttons header /////\n\n\n  const header = {\n    Source: \"header\",\n    Score: 0,\n    Id: \"0\",\n    Primary: \"\",\n    Secondary: \"\"\n  };\n  let optionsWithHeader = [header, ...options]; //// adding loader ////\n\n  if (searchOption === \"all\" && (loadingWells || loadingOwners || loadingOperators || loadingLeases || loadingMapboxSearch) || searchOption === \"wells\" && loadingWells || searchOption === \"owners\" && loadingOwners || searchOption === \"operators\" && loadingOperators || searchOption === \"leases\" && loadingLeases || searchOption === \"locations\" && loadingMapboxSearch) {\n    optionsWithHeader = [header, { ...header,\n      Source: \"loader\"\n    }];\n  }\n\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"cognitive-search-autocomplete\",\n    getOptionLabel: (option, value) => option.Primary,\n    forcePopupIcon: true,\n    filterOptions: x => x,\n    options: optionsWithHeader,\n    groupBy: option => {\n      if (option.Source === \"lod2019-index\") return \"Owners\";\n      if (option.Source === \"wellheader-index\") return \"Wells\";\n      if (option.Source === \"operator-index\") return \"Operators\";\n      if (option.Source === \"lease-index\") return \"Leases\";\n      if (option.Source === \"mapboxSearch\") return \"Locations\";\n      if (option.Source === \"loader\") return \"loader\";\n      return \"header\";\n    } // leftIconButton={<SearchIcon />}\n    ,\n    renderGroup: option => {\n      if (option.group === \"loader\") return /*#__PURE__*/React.createElement(CircularProgress, {\n        key: \"loader\",\n        style: {\n          margin: \"10px 0 0 48%\"\n        },\n        size: 28,\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 13\n        }\n      });\n      return option.group === \"header\" ? /*#__PURE__*/React.createElement(Grid, {\n        key: option.group,\n        container: true,\n        item: true,\n        spacing: 0,\n        style: {\n          position: \"relative\",\n          top: \"0\",\n          backgroundColor: \"#ffffff\",\n          paddingBottom: searchOption === \"all\" && (loadingWells || loadingOwners || loadingOperators || loadingLeases || loadingMapboxSearch) || searchOption === \"wells\" && loadingWells || searchOption === \"owners\" && loadingOwners || searchOption === \"operators\" && loadingOperators || searchOption === \"leases\" && loadingLeases || searchOption === \"locations\" && loadingMapboxSearch || options.length === 0 ? \"0\" : \"9px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          margin: \"0 4px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: classes.headerButtons,\n        variant: searchOption === \"all\" ? \"contained\" : \"outlined\",\n        size: \"small\",\n        color: searchOption === \"all\" ? \"secondary\" : \"primary\",\n        onClick: () => {\n          setSearchTop(5);\n          setSearchOption(\"all\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 15\n        }\n      }, \"All\"), /*#__PURE__*/React.createElement(Button, {\n        className: classes.headerButtons,\n        variant: searchOption === \"wells\" ? \"contained\" : \"outlined\",\n        size: \"small\",\n        color: searchOption === \"wells\" ? \"secondary\" : \"primary\",\n        onClick: () => {\n          setSearchTop(5);\n          setSearchOption(\"wells\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 15\n        }\n      }, \"Wells\"), /*#__PURE__*/React.createElement(Button, {\n        className: classes.headerButtons,\n        variant: searchOption === \"owners\" ? \"contained\" : \"outlined\",\n        size: \"small\",\n        color: searchOption === \"owners\" ? \"secondary\" : \"primary\",\n        onClick: () => {\n          setSearchTop(5);\n          setSearchOption(\"owners\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 15\n        }\n      }, \"Owners\"), /*#__PURE__*/React.createElement(Button, {\n        className: classes.headerButtons,\n        variant: searchOption === \"operators\" ? \"contained\" : \"outlined\",\n        size: \"small\",\n        color: searchOption === \"operators\" ? \"secondary\" : \"primary\",\n        onClick: () => {\n          setSearchTop(5);\n          setSearchOption(\"operators\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 15\n        }\n      }, \"Operators\"), /*#__PURE__*/React.createElement(Button, {\n        className: classes.headerButtons,\n        variant: searchOption === \"leases\" ? \"contained\" : \"outlined\",\n        size: \"small\",\n        color: searchOption === \"leases\" ? \"secondary\" : \"primary\",\n        onClick: () => {\n          setSearchTop(5);\n          setSearchOption(\"leases\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 15\n        }\n      }, \"Leases\"), /*#__PURE__*/React.createElement(Button, {\n        className: classes.headerButtons,\n        variant: searchOption === \"locations\" ? \"contained\" : \"outlined\",\n        size: \"small\",\n        color: searchOption === \"locations\" ? \"secondary\" : \"primary\",\n        onClick: () => {\n          setSearchTop(5);\n          setSearchOption(\"locations\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 15\n        }\n      }, \"Locations\"))) : (searchOption === \"all\" || searchOption === option.group.toLowerCase()) && /*#__PURE__*/React.createElement(Grid, {\n        key: option.group,\n        container: true,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        className: classes.groupsHeaders,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: classes.groupsHeadersText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 19\n        }\n      }, option.group)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          textAlign: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 17\n        }\n      }, searchTop === 5 ? /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        className: classes.groupsButton,\n        onClick: () => {\n          setSearchTop(200);\n          setSearchOption(option.group === \"Owners\" ? \"owners\" : option.group === \"Wells\" ? \"wells\" : option.group === \"Operators\" ? \"operators\" : option.group === \"Leases\" ? \"leases\" : option.group === \"Locations\" ? \"locations\" : \"all\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 21\n        }\n      }, \"See All Results\") : /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        className: classes.groupsButton,\n        onClick: () => {\n          setSearchTop(5);\n          setSearchOption(\"all\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 21\n        }\n      }, \"See Less\"))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 15\n        }\n      }, option.children));\n    },\n    autoComplete: true,\n    includeInputInList: true,\n    value: value,\n    onChange: (event, newValue) => {\n      handleChange(newValue);\n    },\n    onInputChange: (event, newInputValue, reason) => {\n      if (reason == \"input\") {\n        setInputValue(newInputValue);\n\n        if (newInputValue !== \"\") {\n          //// setting loader\n          if (searchOption === \"all\") {\n            setLoadingWells(true);\n            setLoadingOwners(true);\n            setLoadingOperators(true);\n            setLoadingLeases(true);\n            setLoadingMapboxSearch(true);\n          }\n\n          if (searchOption === \"wells\") setLoadingWells(true);\n          if (searchOption === \"owners\") setLoadingOwners(true);\n          if (searchOption === \"operators\") setLoadingOperators(true);\n          if (searchOption === \"leases\") setLoadingLeases(true);\n          if (searchOption === \"locations\") setLoadingMapboxSearch(true);\n        } else {\n          // setValue(null);\n          setOptions([]);\n          setLoadingWells(false);\n          setLoadingOwners(false);\n          setLoadingOperators(false);\n          setLoadingLeases(false);\n          setLoadingMapboxSearch(false);\n        }\n      }\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      fullWidth: true,\n      placeholder: \"Search by well name, API, owner, operator, lease or a location\",\n      InputProps: { ...params.InputProps,\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1133,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.startAdornmentIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(SearchIcon, {\n          htmlColor: \"#fff\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 19\n          }\n        }))),\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          title: \"Search History\",\n          placement: \"top\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          onClick: event => {\n            setAnchorEl(event.currentTarget);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n          htmlColor: \"#fff\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(Popover, {\n          onBlur: () => {\n            setAnchorEl(null);\n          },\n          open: Boolean(anchorEl),\n          anchorEl: anchorEl,\n          onClose: () => {\n            setAnchorEl(null);\n          },\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"right\"\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"right\"\n          },\n          style: {\n            width: document.getElementById(\"searchBarDivParent\") ? document.getElementById(\"searchBarDivParent\").offsetWidth : \"400px\"\n          },\n          className: classes.historyPopover,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 19\n          }\n        }, searchHistoryList && searchHistoryList.length > 0 ? searchHistoryList.map((search, i) => {\n          let option = search.searchData;\n          const parts = parse(option.Primary, Array());\n          return /*#__PURE__*/React.createElement(Box, {\n            p: 1,\n            key: i,\n            className: classes.historyRow,\n            onClick: () => {\n              setSearchTop(5);\n              setSearchOption(option.Source === \"lod2019-index\" ? \"owners\" : option.Source === \"wellheader-index\" ? \"wells\" : option.Source === \"operator-index\" ? \"operators\" : option.Source === \"lease-index\" ? \"leases\" : option.group === \"mapboxSearch\" ? \"locations\" : \"all\");\n              setInputValue(option.Primary ? option.Primary : option.Secondary);\n              handleChange({ ...option,\n                searchId: search._id\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1183,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            spacing: 0,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1210,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            item: true,\n            xs: 9,\n            alignItems: \"center\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 33\n            }\n          }, option.Source === \"lod2019-index\" && /*#__PURE__*/React.createElement(PersonIcon, {\n            className: classes.icon,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 37\n            }\n          }), option.Source === \"operator-index\" && /*#__PURE__*/React.createElement(OperatorIcon, {\n            className: classes.icon,\n            color: \"#757575\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1217,\n              columnNumber: 37\n            }\n          }), option.Source === \"wellheader-index\" && /*#__PURE__*/React.createElement(WellIcon, {\n            className: classes.icon,\n            color: \"#757575\",\n            opacity: \"1.0\",\n            small: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 37\n            }\n          }), option.Source === \"lease-index\" && /*#__PURE__*/React.createElement(LeaseIcon, {\n            className: classes.icon,\n            color: \"#757575\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1231,\n              columnNumber: 37\n            }\n          }), option.Source === \"mapboxSearch\" && /*#__PURE__*/React.createElement(LocationOnIcon, {\n            className: classes.icon,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1237,\n              columnNumber: 37\n            }\n          })), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1240,\n              columnNumber: 33\n            }\n          }, parts.map((part, index) => /*#__PURE__*/React.createElement(\"span\", {\n            key: index,\n            style: {\n              fontWeight: part.highlight ? 700 : 400\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 37\n            }\n          }, part.text)), option && option.Secondary && /*#__PURE__*/React.createElement(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 37\n            }\n          }, option.Secondary))), /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            item: true,\n            xs: 3,\n            alignItems: \"center\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1262,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            variant: \"body2\",\n            style: {\n              color: \"rgb(80, 187, 223)\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1264,\n              columnNumber: 35\n            }\n          }, new Intl.DateTimeFormat(\"en-US\", {\n            year: \"2-digit\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          }).format(search.ts))))));\n        }) : /*#__PURE__*/React.createElement(Box, {\n          p: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1283,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 25\n          }\n        }, \"There is no history yet.\")))))\n      },\n      className: classes.textF,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 9\n      }\n    })),\n    renderOption: option => {\n      if (option.Source === \"header\" || option.group === \"loader\") return null;\n      const parts = parse(option.Primary, Array());\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 11,\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1302,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303,\n          columnNumber: 15\n        }\n      }, option.Source === \"lod2019-index\" && /*#__PURE__*/React.createElement(PersonIcon, {\n        className: classes.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1305,\n          columnNumber: 19\n        }\n      }), option.Source === \"operator-index\" && /*#__PURE__*/React.createElement(OperatorIcon, {\n        className: classes.icon,\n        color: \"#757575\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308,\n          columnNumber: 19\n        }\n      }), option.Source === \"wellheader-index\" && /*#__PURE__*/React.createElement(WellIcon, {\n        className: classes.icon,\n        color: \"#757575\",\n        opacity: \"1.0\",\n        small: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 19\n        }\n      }), option.Source === \"lease-index\" && /*#__PURE__*/React.createElement(LeaseIcon, {\n        className: classes.icon,\n        color: \"#757575\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 19\n        }\n      }), option.Source === \"mapboxSearch\" && /*#__PURE__*/React.createElement(LocationOnIcon, {\n        className: classes.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 15\n        }\n      }, parts.map((part, index) => /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        style: {\n          fontWeight: part.highlight ? 700 : 400\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 19\n        }\n      }, part.text)), option && option.Secondary && /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 19\n        }\n      }, option.Secondary))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 1,\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1342,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        style: {\n          position: \"relative\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1343,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.score,\n        style: {\n          zIndex: \"1300\",\n          backgroundColor: \"#12ABE0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.score,\n        style: {\n          zIndex: \"1301\",\n          backgroundImage: \"repeating-linear-gradient(135deg, #ffffff , #ffffffb7 4.5%, #ffffff 15%)\",\n          opacity: calcScoreOpacity(option.Source === \"lod2019-index\" ? maxMinOwnersScore : option.Source === \"wellheader-index\" ? maxMinWellsScore : option.Source === \"operator-index\" ? maxMinOperatosScore : option.Source === \"lease-index\" ? maxMinLeasesScore : maxMinMapboxSearchScore, option.Score).toString()\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 17\n        }\n      }))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/Search.js"],"names":["React","useEffect","TextField","Autocomplete","LocationOnIcon","Grid","Typography","makeStyles","parse","throttle","AppContext","Button","PersonIcon","WellIcon","OperatorIcon","LeaseIcon","IconButton","InputAdornment","SearchIcon","ArrowDropDownIcon","OWNERWELLSQUERY","useLazyQuery","useMutation","WELLSQUERY","OPERATORSLATSLONS","LEASELATSLONS","USERSEARCHHISTORY","ADDSEARCHHISTORY","UPDATESEARCHHISTORY","REMOVESEARCHHISTORY","NavigationContext","Popover","Tooltip","Box","CircularProgress","loadScript","src","position","id","script","document","createElement","setAttribute","appendChild","maxMinScore","options","max","min","i","length","Score","calcScoreOpacity","maxMin","score","useStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","groupsHeadersText","margin","marginTop","padding","fontFamily","paddingLeft","groupsHeaders","top","backgroundColor","zIndex","groupsButton","textF","height","width","borderRadius","marginLeft","headerButtons","minWidth","historyPopover","maxWidth","maxHeight","historyRow","cursor","startAdornmentIcon","Search","classes","anchorEl","setAnchorEl","useState","stateApp","setStateApp","useContext","stateNav","setStateNav","value","setValue","inputValue","setInputValue","searchOption","setSearchOption","setOptions","searchTop","setSearchTop","maxMinWellsScore","setMaxMinWellsScore","maxMinOwnersScore","setMaxMinOwnersScore","maxMinOperatosScore","setMaxMinOperatosScore","maxMinLeasesScore","setMaxMinLeasesScore","maxMinMapboxSearchScore","setMaxMinMapboxSearchScore","searchHistoryList","setSearchHistoryList","loaded","useRef","loadingWells","setLoadingWells","loadingOwners","setLoadingOwners","loadingLeases","setLoadingLeases","loadingOperators","setLoadingOperators","loadingMapboxSearch","setLoadingMapboxSearch","getOwnerWells","data","dataOwnerWells","getWells","dataWells","getOperatorWells","dataOperatorWells","getLeaseWells","dataLeaseWells","getSearchHistory","searchHistoryData","addSearchHistory","updateSearchHistory","removeSearchHistory","user","mongoId","variables","userId","compare","a","b","ts","list","sort","searchId","_id","refetchQueries","awaitRefetchQueries","callWellSearch","useMemo","request","callback","endpoint","input","headers","Headers","append","method","console","log","Date","toString","fetch","then","response","json","catch","error","callOwnerSearch","callOperatorSearch","callLeaseSearch","callMapboxSearch","mapboxglAccessToken","undefined","newOptions","Promise","all","results","indexSource","substring","indexOf","map","result","Source","Primary","WellName","Secondary","ApiNumber","OwnerName","Address1","Address2","City","State","Zip","Operator","Lease","LeaseId","resultsMod","features","Id","relevance","place_name","slice","ownerWells","wellsIdsArray","item","WellId","wellIdArray","authToken","deactivateUserDefinedLayers","wellListFromSearch","wells","selectedWell","fitBounds","selectedWellId","toLowerCase","wellSelectedCoordinates","longitude","latitude","activateUserDefinedLayers","operatorLatsLonsArray","leaseLatsLonsArray","handleChange","newValue","setSearchHistory","search","searchHistory","searchData","mapCircularLoaderAct","Longitude","Latitude","ownerId","operatorName","fieldName","center","minLong","maxLong","minLat","maxLat","bbox","header","optionsWithHeader","option","x","group","paddingBottom","display","justifyContent","textAlign","children","event","newInputValue","reason","params","InputProps","startAdornment","endAdornment","currentTarget","Boolean","vertical","horizontal","getElementById","offsetWidth","parts","Array","part","index","fontWeight","highlight","Intl","DateTimeFormat","year","month","day","hour","minute","format","backgroundImage","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport throttle from \"lodash/throttle\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport WellIcon from \"../../Shared/svgIcons/well\";\r\nimport OperatorIcon from \"../../Shared/svgIcons/operator\";\r\nimport LeaseIcon from \"../../Shared/svgIcons/lease\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport { OWNERWELLSQUERY } from \"../../../graphQL/useQueryOwnerWells \";\r\nimport { useLazyQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { WELLSQUERY } from \"../../../graphQL/useQueryWells\";\r\nimport { OPERATORSLATSLONS } from \"../../../graphQL/useQueryOperatorLatsLonsArray\";\r\nimport { LEASELATSLONS } from \"../../../graphQL/useQueryLeaseLatsLonsArray\";\r\nimport { USERSEARCHHISTORY } from \"../../../graphQL/useQueryUserSearchHistory\";\r\nimport { ADDSEARCHHISTORY } from \"../../../graphQL/useMutationAddSearchHistory\";\r\nimport { UPDATESEARCHHISTORY } from \"../../../graphQL/useMutationUpdateSearchHistory\";\r\nimport { REMOVESEARCHHISTORY } from \"../../../graphQL/useMutationRemoveSearchHistory\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction loadScript(src, position, id) {\r\n  if (!position) {\r\n    return;\r\n  }\r\n\r\n  const script = document.createElement(\"script\");\r\n  script.setAttribute(\"async\", \"\");\r\n  script.setAttribute(\"id\", id);\r\n  script.src = src;\r\n  position.appendChild(script);\r\n}\r\n\r\n// const autocompleteService = { current: null };\r\n\r\nconst maxMinScore = (options) => {\r\n  let max = 0;\r\n  let min = 1000000;\r\n  for (let i = 0; i < options.length; i++) {\r\n    if (options[i].Score > max) max = options[i].Score;\r\n    if (options[i].Score < min) min = options[i].Score;\r\n  }\r\n\r\n  return [max, min];\r\n};\r\n\r\nconst calcScoreOpacity = (maxMin, score) => {\r\n  if (maxMin[0] === maxMin[1]) return 0;\r\n  if (score === maxMin[1]) return 1;\r\n\r\n  return 1 - (score - maxMin[1]) / (maxMin[0] - maxMin[1]);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: theme.palette.text.secondary,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  groupsHeadersText: {\r\n    margin: \"0\",\r\n    marginTop: \"3px\",\r\n    padding: \"0\",\r\n    fontFamily: \"Poppins\",\r\n    color: \"#0f2046\",\r\n    paddingLeft: \"5px\",\r\n  },\r\n  groupsHeaders: {\r\n    position: \"-webkit-sticky\",\r\n    position: \"sticky\",\r\n    top: \"-9px\",\r\n    backgroundColor: \"#d4e7fce0\",\r\n    zIndex: \"4000\",\r\n  },\r\n  groupsButton: {\r\n    margin: \"3px\",\r\n    zIndex: \"2000\",\r\n    color: \"#5f5f5f\",\r\n  },\r\n  textF: {\r\n    \"& input\": { color: \"#ffffffc9\", height: \"5px\" },\r\n    \"& .MuiInputBase-adornedStart, .MuiInputBase-adornedEnd\": {\r\n      padding: \"9px 0 !important\",\r\n    },\r\n  },\r\n  score: {\r\n    position: \"absolute\",\r\n    top: \"-8px\",\r\n    width: \"17px\",\r\n    height: \"16px\",\r\n    borderRadius: \"50%\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  headerButtons: {\r\n    width: \"100%\",\r\n    margin: \"0 4px\",\r\n    minWidth: \"max-content\",\r\n  },\r\n  historyPopover: {\r\n    \"& .MuiPopover-paper\": {\r\n      width: \"calc(100% - 42px) !important\",\r\n      maxWidth: \"none !important\",\r\n      minWidth: \"unset !important\",\r\n      maxHeight: \"55vh !important\",\r\n    },\r\n  },\r\n  historyRow: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"#EFEFEF\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  startAdornmentIcon: {\r\n    padding: \"6px 8px\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nexport default function Search() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [stateApp, setStateApp] = React.useContext(AppContext);\r\n  const [stateNav, setStateNav] = React.useContext(NavigationContext);\r\n  const [value, setValue] = React.useState(null);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [searchOption, setSearchOption] = React.useState(\"all\");\r\n  const [options, setOptions] = React.useState([]);\r\n  const [searchTop, setSearchTop] = React.useState(5);\r\n  const [maxMinWellsScore, setMaxMinWellsScore] = React.useState([0, 0]);\r\n  const [maxMinOwnersScore, setMaxMinOwnersScore] = React.useState([0, 0]);\r\n  const [maxMinOperatosScore, setMaxMinOperatosScore] = React.useState([0, 0]);\r\n  const [maxMinLeasesScore, setMaxMinLeasesScore] = React.useState([0, 0]);\r\n  const [maxMinMapboxSearchScore, setMaxMinMapboxSearchScore] = React.useState([\r\n    0,\r\n    0,\r\n  ]);\r\n  const [searchHistoryList, setSearchHistoryList] = React.useState([]);\r\n  const loaded = React.useRef(false);\r\n  const [loadingWells, setLoadingWells] = React.useState(false);\r\n  const [loadingOwners, setLoadingOwners] = React.useState(false);\r\n  const [loadingLeases, setLoadingLeases] = React.useState(false);\r\n  const [loadingOperators, setLoadingOperators] = React.useState(false);\r\n  const [loadingMapboxSearch, setLoadingMapboxSearch] = React.useState(false);\r\n\r\n  const [getOwnerWells, { data: dataOwnerWells }] = useLazyQuery(\r\n    OWNERWELLSQUERY\r\n  );\r\n  const [getWells, { data: dataWells }] = useLazyQuery(WELLSQUERY);\r\n\r\n  const [getOperatorWells, { data: dataOperatorWells }] = useLazyQuery(\r\n    OPERATORSLATSLONS\r\n  );\r\n  const [getLeaseWells, { data: dataLeaseWells }] = useLazyQuery(LEASELATSLONS);\r\n\r\n  //////////// Search History Begin//////////////////\r\n\r\n  // Search History Queries and Mutations\r\n  const [getSearchHistory, { data: searchHistoryData }] = useLazyQuery(\r\n    USERSEARCHHISTORY\r\n  );\r\n  const [addSearchHistory] = useMutation(ADDSEARCHHISTORY);\r\n  const [updateSearchHistory] = useMutation(UPDATESEARCHHISTORY);\r\n  const [removeSearchHistory] = useMutation(REMOVESEARCHHISTORY);\r\n\r\n  useEffect(() => {\r\n    if (stateApp && stateApp.user && stateApp.user.mongoId) {\r\n      getSearchHistory({\r\n        variables: {\r\n          userId: stateApp.user.mongoId,\r\n        },\r\n      });\r\n    }\r\n  }, [stateApp.user]);\r\n\r\n  useEffect(() => {\r\n    if (searchHistoryData && searchHistoryData.getSearchHistory) {\r\n      const compare = (a, b) => {\r\n        if (a.ts < b.ts) return 1;\r\n        if (a.ts > b.ts) return -1;\r\n        return 0;\r\n      };\r\n      let list = searchHistoryData.getSearchHistory;\r\n      list.sort(compare);\r\n\r\n      setSearchHistoryList(list);\r\n    }\r\n  }, [searchHistoryData]);\r\n\r\n  useEffect(() => {\r\n    if (searchHistoryList && searchHistoryList.length > 100) {\r\n      ///remove last add\r\n      removeSearchHistory({\r\n        variables: {\r\n          searchId: searchHistoryList[0]._id,\r\n        },\r\n        refetchQueries: [\"getSearchHistory\"],\r\n        awaitRefetchQueries: true,\r\n      });\r\n    }\r\n  }, [searchHistoryList]);\r\n\r\n  //////////// Search History End//////////////////\r\n\r\n  //   if (typeof window !== 'undefined' && !loaded.current) {\r\n  //     if (!document.querySelector('#google-maps')) {\r\n  //       loadScript(\r\n  //         'https://maps.googleapis.com/maps/api/js?key=AIzaSyBwRp1e12ec1vOTtGiA4fcCt2sCUS78UYc&libraries=places',\r\n  //         document.querySelector('head'),\r\n  //         'google-maps',\r\n  //       );\r\n  //     }\r\n\r\n  //     loaded.current = true;\r\n  //   }\r\n\r\n  const callWellSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, top, callback) => {\r\n        const endpoint =\r\n          \"https://m1search.search.windows.net/indexes/wellheader-index/docs?api-version=2019-05-06&$count=true&searchFields=WellName,ApiNumber&$top=\" +\r\n          top +\r\n          \"&search=\" +\r\n          request.input;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        };\r\n\r\n        console.log(\r\n          \"request made to wellheader-index search at: \" + new Date().toString()\r\n        );\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log(response);\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  const callOwnerSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, top, callback) => {\r\n        const endpoint =\r\n          \"https://m1search.search.windows.net/indexes/lod2019-index/docs?api-version=2019-05-06&%24count=true&searchFields=OwnerName%2CAddress1&%24top=\" +\r\n          top +\r\n          \"&search=\" +\r\n          request.input;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        };\r\n\r\n        console.log(\r\n          \"request made to lod2019-index search at: \" + new Date().toString()\r\n        );\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log(response);\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  const callOperatorSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, top, callback) => {\r\n        const endpoint =\r\n          \"https://m1search.search.windows.net/indexes/operator-index/docs?api-version=2019-05-06&$count=true&searchFields=Operator&$top=\" +\r\n          top +\r\n          \"&search=\" +\r\n          request.input;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        };\r\n\r\n        console.log(\r\n          \"request made to operator-index search at: \" + new Date().toString()\r\n        );\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log(response);\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  const callLeaseSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, top, callback) => {\r\n        const endpoint =\r\n          \"https://m1search.search.windows.net/indexes/lease-index/docs?api-version=2019-05-06&$count=true&searchFields=Lease,LeaseId&$top=\" +\r\n          top +\r\n          \"&search=\" +\r\n          request.input;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        headers.append(\"api-key\", \"1AE3C6346B38CEB007191D51CFDDFF65\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        };\r\n\r\n        console.log(\r\n          \"request made to lease-index search at: \" + new Date().toString()\r\n        );\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log(response);\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  const callMapboxSearch = React.useMemo(\r\n    () =>\r\n      throttle((request, top, callback) => {\r\n        const endpoint = `https://api.mapbox.com/geocoding/v5/mapbox.places/${\r\n          request.input\r\n        }.json?access_token=${\r\n          stateApp.mapboxglAccessToken\r\n        }&autocomplete=true&country=us%2Cca&limit=${top > 10 ? 10 : top}`;\r\n\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers,\r\n        };\r\n\r\n        fetch(endpoint, options)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            callback(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    // if (!autocompleteService.current && window.google) {\r\n    //   autocompleteService.current = new window.google.maps.places.AutocompleteService();\r\n    // }\r\n    // if (!autocompleteService.current) {\r\n    //   return undefined;\r\n    // }\r\n\r\n    if (inputValue === \"\") {\r\n      setOptions(value ? [value] : []);\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      let newOptions = [];\r\n\r\n      Promise.all([\r\n        searchOption == \"all\" || searchOption == \"wells\"\r\n          ? callWellSearch({ input: inputValue }, searchTop, (results) => {\r\n              if (results) {\r\n                const indexSource = results[\"@odata.context\"].substring(\r\n                  results[\"@odata.context\"].indexOf(\"('\") + 2,\r\n                  results[\"@odata.context\"].indexOf(\"')\")\r\n                );\r\n\r\n                console.log(indexSource);\r\n                newOptions = [\r\n                  ...results.value.map((result) => {\r\n                    result.Score = result[\"@search.score\"];\r\n                    delete result[\"@search.score\"];\r\n                    return {\r\n                      ...result,\r\n                      Source: indexSource,\r\n                      Primary: result.WellName,\r\n                      Secondary: result.ApiNumber,\r\n                    };\r\n                  }),\r\n                  ...newOptions,\r\n                ];\r\n\r\n                setMaxMinWellsScore(maxMinScore(results.value));\r\n              }\r\n\r\n              setOptions(newOptions);\r\n              setLoadingWells(false);\r\n            })\r\n          : null,\r\n        searchOption == \"all\" || searchOption == \"owners\"\r\n          ? callOwnerSearch({ input: inputValue }, searchTop, (results) => {\r\n              if (results) {\r\n                const indexSource = results[\"@odata.context\"].substring(\r\n                  results[\"@odata.context\"].indexOf(\"('\") + 2,\r\n                  results[\"@odata.context\"].indexOf(\"')\")\r\n                );\r\n                console.log(indexSource);\r\n                newOptions = [\r\n                  ...results.value.map((result) => {\r\n                    result.Score = result[\"@search.score\"];\r\n                    delete result[\"@search.score\"];\r\n                    return {\r\n                      ...result,\r\n                      Source: indexSource,\r\n                      Primary: result.OwnerName,\r\n                      Secondary: `${result.Address1}\\n${result.Address2}\\n${result.City}\\n${result.State}\\n${result.Zip}`,\r\n                    };\r\n                  }),\r\n                  ...newOptions,\r\n                ];\r\n\r\n                setMaxMinOwnersScore(maxMinScore(results.value));\r\n              }\r\n\r\n              setOptions(newOptions);\r\n              setLoadingOwners(false);\r\n            })\r\n          : null,\r\n        searchOption == \"all\" || searchOption == \"operators\"\r\n          ? callOperatorSearch({ input: inputValue }, searchTop, (results) => {\r\n              if (results) {\r\n                const indexSource = results[\"@odata.context\"].substring(\r\n                  results[\"@odata.context\"].indexOf(\"('\") + 2,\r\n                  results[\"@odata.context\"].indexOf(\"')\")\r\n                );\r\n                console.log(indexSource);\r\n                newOptions = [\r\n                  ...results.value.map((result) => {\r\n                    result.Score = result[\"@search.score\"];\r\n                    delete result[\"@search.score\"];\r\n                    return {\r\n                      ...result,\r\n                      Source: indexSource,\r\n                      Primary: result.Operator,\r\n                      Secondary: null,\r\n                    };\r\n                  }),\r\n                  ...newOptions,\r\n                ];\r\n\r\n                setMaxMinOperatosScore(maxMinScore(results.value));\r\n              }\r\n\r\n              setOptions(newOptions);\r\n              setLoadingOperators(false);\r\n            })\r\n          : null,\r\n        searchOption == \"all\" || searchOption == \"leases\"\r\n          ? callLeaseSearch({ input: inputValue }, searchTop, (results) => {\r\n              if (results) {\r\n                const indexSource = results[\"@odata.context\"].substring(\r\n                  results[\"@odata.context\"].indexOf(\"('\") + 2,\r\n                  results[\"@odata.context\"].indexOf(\"')\")\r\n                );\r\n                console.log(indexSource);\r\n                newOptions = [\r\n                  ...results.value.map((result) => {\r\n                    result.Score = result[\"@search.score\"];\r\n                    delete result[\"@search.score\"];\r\n\r\n                    return {\r\n                      ...result,\r\n                      Source: indexSource,\r\n                      Primary:\r\n                        result.Lease &&\r\n                        (result.Lease === \"\" ||\r\n                          result.Lease === \"N/A\" ||\r\n                          result.Lease === \"(N/A)\")\r\n                          ? \"--\"\r\n                          : result.Lease,\r\n                      Secondary:\r\n                        result.LeaseId &&\r\n                        (result.LeaseId === \"\" ||\r\n                          result.LeaseId === \"N/A\" ||\r\n                          result.LeaseId === \"(N/A)\")\r\n                          ? null\r\n                          : result.LeaseId,\r\n                    };\r\n                  }),\r\n                  ...newOptions,\r\n                ];\r\n\r\n                setMaxMinLeasesScore(maxMinScore(results.value));\r\n              }\r\n\r\n              setOptions(newOptions);\r\n              setLoadingLeases(false);\r\n            })\r\n          : null,\r\n        searchOption == \"all\" || searchOption == \"locations\"\r\n          ? callMapboxSearch({ input: inputValue }, searchTop, (results) => {\r\n              if (results) {\r\n                let resultsMod = results.features\r\n                  ? results.features.map((result) => {\r\n                      return {\r\n                        ...result,\r\n                        Id: result.id,\r\n                        Source: \"mapboxSearch\",\r\n                        Score: result.relevance ? result.relevance : 0,\r\n                        Primary: result.text ? result.text : \"\",\r\n                        Secondary: result.place_name\r\n                          ? result.place_name.indexOf(result.text + \", \") === 0\r\n                            ? result.place_name.slice(\r\n                                result.place_name.indexOf(\", \") + 2,\r\n                                result.place_name.length\r\n                              )\r\n                            : result.place_name\r\n                          : \"\",\r\n                      };\r\n                    })\r\n                  : [];\r\n\r\n                newOptions = [...newOptions, ...resultsMod];\r\n                setMaxMinMapboxSearchScore(maxMinScore(resultsMod));\r\n              }\r\n\r\n              setOptions(newOptions);\r\n              setLoadingMapboxSearch(false);\r\n            })\r\n          : null,\r\n      ]);\r\n    })();\r\n  }, [\r\n    inputValue,\r\n    callWellSearch,\r\n    callOwnerSearch,\r\n    callOperatorSearch,\r\n    callLeaseSearch,\r\n    callMapboxSearch,\r\n    searchOption,\r\n    searchTop,\r\n  ]);\r\n\r\n  //// getting wells data from owners ////\r\n\r\n  useEffect(() => {\r\n    if (dataOwnerWells && dataOwnerWells.ownerWells) {\r\n      if (dataOwnerWells.ownerWells.length !== 0) {\r\n        let wellsIdsArray = dataOwnerWells.ownerWells.map(\r\n          (item) => item.WellId\r\n        );\r\n\r\n        getWells({\r\n          variables: {\r\n            wellIdArray: wellsIdsArray,\r\n            authToken: stateApp.user.authToken,\r\n          },\r\n        });\r\n      } else {\r\n        console.log(\"Not wells found for the owner\");\r\n        stateApp.deactivateUserDefinedLayers(6);\r\n        setStateApp((stateApp) => ({\r\n          ...stateApp,\r\n          wellListFromSearch: null,\r\n        }));\r\n      }\r\n    }\r\n  }, [dataOwnerWells]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      dataWells &&\r\n      dataWells.wells &&\r\n      dataWells.wells.results &&\r\n      dataWells.wells.results.length !== 0\r\n    ) {\r\n      console.log(\"wells data from search\", dataWells.wells.results);\r\n\r\n      setStateApp((stateApp) =>\r\n        dataWells.wells.results.length === 1\r\n          ? {\r\n              ...stateApp,\r\n              selectedWell: null,\r\n              fitBounds: null,\r\n              selectedWellId: dataWells.wells.results[0].id.toLowerCase(),\r\n              wellSelectedCoordinates: [\r\n                dataWells.wells.results[0].longitude,\r\n                dataWells.wells.results[0].latitude,\r\n              ],\r\n              wellListFromSearch: dataWells.wells.results,\r\n            }\r\n          : {\r\n              ...stateApp,\r\n              fitBounds: null,\r\n              wellListFromSearch: dataWells.wells.results,\r\n            }\r\n      );\r\n      stateApp.activateUserDefinedLayers(6);\r\n    }\r\n  }, [dataWells]);\r\n\r\n  //// getting wells data from  operators////\r\n  useEffect(() => {\r\n    if (dataOperatorWells && dataOperatorWells.operatorLatsLonsArray) {\r\n      if (dataOperatorWells.operatorLatsLonsArray.length !== 0) {\r\n        console.log(\r\n          \"wells data from search\",\r\n          dataOperatorWells.operatorLatsLonsArray\r\n        );\r\n\r\n        setStateApp((stateApp) =>\r\n          dataOperatorWells.operatorLatsLonsArray.length === 1\r\n            ? {\r\n                ...stateApp,\r\n                selectedWell: null,\r\n                fitBounds: null,\r\n                selectedWellId: dataOperatorWells.operatorLatsLonsArray[0].id.toLowerCase(),\r\n                wellSelectedCoordinates: [\r\n                  dataOperatorWells.operatorLatsLonsArray[0].longitude,\r\n                  dataOperatorWells.operatorLatsLonsArray[0].latitude,\r\n                ],\r\n                wellListFromSearch: dataOperatorWells.operatorLatsLonsArray,\r\n              }\r\n            : {\r\n                ...stateApp,\r\n                fitBounds: null,\r\n                wellListFromSearch: dataOperatorWells.operatorLatsLonsArray,\r\n              }\r\n        );\r\n        stateApp.activateUserDefinedLayers(6);\r\n      } else {\r\n        console.log(\"Not wells found for the operator\");\r\n        stateApp.deactivateUserDefinedLayers(6);\r\n        setStateApp((stateApp) => ({\r\n          ...stateApp,\r\n          wellListFromSearch: null,\r\n        }));\r\n      }\r\n    }\r\n  }, [dataOperatorWells]);\r\n\r\n  //// getting wells data from  leases ////\r\n  useEffect(() => {\r\n    if (dataLeaseWells && dataLeaseWells.leaseLatsLonsArray) {\r\n      if (dataLeaseWells.leaseLatsLonsArray.length !== 0) {\r\n        console.log(\r\n          \"wells data from search\",\r\n          dataLeaseWells.leaseLatsLonsArray\r\n        );\r\n\r\n        setStateApp((stateApp) =>\r\n          dataLeaseWells.leaseLatsLonsArray.length === 1\r\n            ? {\r\n                ...stateApp,\r\n                selectedWell: null,\r\n                fitBounds: null,\r\n                selectedWellId: dataLeaseWells.leaseLatsLonsArray[0].id.toLowerCase(),\r\n                wellSelectedCoordinates: [\r\n                  dataLeaseWells.leaseLatsLonsArray[0].longitude,\r\n                  dataLeaseWells.leaseLatsLonsArray[0].latitude,\r\n                ],\r\n                wellListFromSearch: dataLeaseWells.leaseLatsLonsArray,\r\n              }\r\n            : {\r\n                ...stateApp,\r\n                fitBounds: null,\r\n                wellListFromSearch: dataLeaseWells.leaseLatsLonsArray,\r\n              }\r\n        );\r\n        stateApp.activateUserDefinedLayers(6);\r\n      } else {\r\n        console.log(\"Not wells found for the lease\");\r\n        stateApp.deactivateUserDefinedLayers(6);\r\n        setStateApp((stateApp) => ({\r\n          ...stateApp,\r\n          wellListFromSearch: null,\r\n        }));\r\n      }\r\n    }\r\n  }, [dataLeaseWells]);\r\n\r\n  ///////////////////////////////////////\r\n\r\n  const handleChange = (newValue) => {\r\n    console.log(\"search Selected\", newValue);\r\n\r\n    if (\r\n      !value ||\r\n      (newValue &&\r\n        (value.Id !== newValue.Id ||\r\n          value.Source !== newValue.Source ||\r\n          value.Primary !== newValue.Primary ||\r\n          value.Secondary !== newValue.Secondary))\r\n    ) {\r\n      //// setting search history\r\n      const setSearchHistory = (search) => {\r\n        if (search.searchId) {\r\n          ///update\r\n          updateSearchHistory({\r\n            variables: {\r\n              searchId: search.searchId,\r\n            },\r\n            refetchQueries: [\"getSearchHistory\"],\r\n            awaitRefetchQueries: true,\r\n          });\r\n          delete newValue.searchId;\r\n        } else {\r\n          ///add\r\n          addSearchHistory({\r\n            variables: {\r\n              searchHistory: {\r\n                searchData: search,\r\n                user: stateApp.user.mongoId,\r\n              },\r\n            },\r\n            refetchQueries: [\"getSearchHistory\"],\r\n            awaitRefetchQueries: true,\r\n          });\r\n        }\r\n      };\r\n\r\n      setSearchHistory(newValue);\r\n      setValue(newValue);\r\n\r\n      //// setting map loader\r\n      setStateApp((stateApp) => ({ ...stateApp, mapCircularLoaderAct: true }));\r\n\r\n      //// if well, with lat long\r\n      if (\r\n        newValue &&\r\n        newValue.Source === \"wellheader-index\" &&\r\n        newValue.Longitude &&\r\n        newValue.Latitude\r\n      ) {\r\n        setStateApp((stateApp) => ({\r\n          ...stateApp,\r\n          fitBounds: null,\r\n          selectedWell: null,\r\n          selectedWellId: newValue.Id ? newValue.Id.toLowerCase() : null,\r\n          wellSelectedCoordinates: [newValue.Longitude, newValue.Latitude],\r\n          wellListFromSearch: [\r\n            {\r\n              id: newValue.Id,\r\n              longitude: newValue.Longitude,\r\n              latitude: newValue.Latitude,\r\n            },\r\n          ],\r\n        }));\r\n        stateApp.activateUserDefinedLayers(6);\r\n      }\r\n\r\n      //// if owner\r\n      if (newValue && newValue.Source === \"lod2019-index\" && newValue.Id) {\r\n        getOwnerWells({\r\n          variables: {\r\n            ownerId: newValue.Id,\r\n          },\r\n        });\r\n      }\r\n\r\n      //// if operator\r\n      if (\r\n        newValue &&\r\n        newValue.Source === \"operator-index\" &&\r\n        newValue.Operator\r\n      ) {\r\n        getOperatorWells({\r\n          variables: {\r\n            operatorName: newValue.Operator,\r\n          },\r\n        });\r\n      }\r\n\r\n      //// if lease\r\n      if (\r\n        newValue &&\r\n        newValue.Source === \"lease-index\" &&\r\n        ((newValue.Lease && newValue.Lease !== \"\") ||\r\n          (newValue.LeaseId && newValue.LeaseId !== \"\"))\r\n      ) {\r\n        if (newValue.Lease && newValue.Lease !== \"\") {\r\n          getLeaseWells({\r\n            variables: {\r\n              fieldName: \"Lease\",\r\n              value: newValue.Lease,\r\n            },\r\n          });\r\n        } else {\r\n          getLeaseWells({\r\n            variables: {\r\n              fieldName: \"LeaseId\",\r\n              value: newValue.LeaseId,\r\n            },\r\n          });\r\n        }\r\n      }\r\n\r\n      //// if mapboxSearch\r\n      if (newValue && newValue.Source === \"mapboxSearch\" && newValue.center) {\r\n        let minLong, maxLong, minLat, maxLat;\r\n        if (newValue.bbox) [minLong, minLat, maxLong, maxLat] = newValue.bbox;\r\n\r\n        setStateApp((stateApp) => ({\r\n          ...stateApp,\r\n          selectedWell: null,\r\n          selectedWellId: null,\r\n          wellSelectedCoordinates: null,\r\n          wellListFromSearch: [\r\n            {\r\n              id: newValue.Id,\r\n              longitude: newValue.center[0],\r\n              latitude: newValue.center[1],\r\n            },\r\n          ],\r\n          fitBounds: newValue.bbox\r\n            ? { maxLat, minLat, maxLong, minLong }\r\n            : null,\r\n        }));\r\n        stateApp.activateUserDefinedLayers(6);\r\n      }\r\n    }\r\n  };\r\n\r\n  //// setting the buttons header /////\r\n  const header = {\r\n    Source: \"header\",\r\n    Score: 0,\r\n    Id: \"0\",\r\n    Primary: \"\",\r\n    Secondary: \"\",\r\n  };\r\n  let optionsWithHeader = [header, ...options];\r\n  //// adding loader ////\r\n  if (\r\n    (searchOption === \"all\" &&\r\n      (loadingWells ||\r\n        loadingOwners ||\r\n        loadingOperators ||\r\n        loadingLeases ||\r\n        loadingMapboxSearch)) ||\r\n    (searchOption === \"wells\" && loadingWells) ||\r\n    (searchOption === \"owners\" && loadingOwners) ||\r\n    (searchOption === \"operators\" && loadingOperators) ||\r\n    (searchOption === \"leases\" && loadingLeases) ||\r\n    (searchOption === \"locations\" && loadingMapboxSearch)\r\n  ) {\r\n    optionsWithHeader = [header, { ...header, Source: \"loader\" }];\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"cognitive-search-autocomplete\"\r\n      getOptionLabel={(option, value) => option.Primary}\r\n      forcePopupIcon\r\n      filterOptions={(x) => x}\r\n      options={optionsWithHeader}\r\n      groupBy={(option) => {\r\n        if (option.Source === \"lod2019-index\") return \"Owners\";\r\n        if (option.Source === \"wellheader-index\") return \"Wells\";\r\n        if (option.Source === \"operator-index\") return \"Operators\";\r\n        if (option.Source === \"lease-index\") return \"Leases\";\r\n        if (option.Source === \"mapboxSearch\") return \"Locations\";\r\n        if (option.Source === \"loader\") return \"loader\";\r\n        return \"header\";\r\n      }}\r\n      // leftIconButton={<SearchIcon />}\r\n      renderGroup={(option) => {\r\n        if (option.group === \"loader\")\r\n          return (\r\n            <CircularProgress\r\n              key=\"loader\"\r\n              style={{ margin: \"10px 0 0 48%\" }}\r\n              size={28}\r\n              color=\"secondary\"\r\n            />\r\n          );\r\n\r\n        return option.group === \"header\" ? (\r\n          <Grid\r\n            key={option.group}\r\n            container\r\n            item\r\n            spacing={0}\r\n            style={{\r\n              position: \"relative\",\r\n              top: \"0\",\r\n              backgroundColor: \"#ffffff\",\r\n              paddingBottom:\r\n                (searchOption === \"all\" &&\r\n                  (loadingWells ||\r\n                    loadingOwners ||\r\n                    loadingOperators ||\r\n                    loadingLeases ||\r\n                    loadingMapboxSearch)) ||\r\n                (searchOption === \"wells\" && loadingWells) ||\r\n                (searchOption === \"owners\" && loadingOwners) ||\r\n                (searchOption === \"operators\" && loadingOperators) ||\r\n                (searchOption === \"leases\" && loadingLeases) ||\r\n                (searchOption === \"locations\" && loadingMapboxSearch) ||\r\n                options.length === 0\r\n                  ? \"0\"\r\n                  : \"9px\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                margin: \"0 4px\",\r\n              }}\r\n            >\r\n              <Button\r\n                className={classes.headerButtons}\r\n                variant={searchOption === \"all\" ? \"contained\" : \"outlined\"}\r\n                size=\"small\"\r\n                color={searchOption === \"all\" ? \"secondary\" : \"primary\"}\r\n                onClick={() => {\r\n                  setSearchTop(5);\r\n                  setSearchOption(\"all\");\r\n                }}\r\n              >\r\n                All\r\n              </Button>\r\n              <Button\r\n                className={classes.headerButtons}\r\n                variant={searchOption === \"wells\" ? \"contained\" : \"outlined\"}\r\n                size=\"small\"\r\n                color={searchOption === \"wells\" ? \"secondary\" : \"primary\"}\r\n                onClick={() => {\r\n                  setSearchTop(5);\r\n                  setSearchOption(\"wells\");\r\n                }}\r\n              >\r\n                Wells\r\n              </Button>\r\n              <Button\r\n                className={classes.headerButtons}\r\n                variant={searchOption === \"owners\" ? \"contained\" : \"outlined\"}\r\n                size=\"small\"\r\n                color={searchOption === \"owners\" ? \"secondary\" : \"primary\"}\r\n                onClick={() => {\r\n                  setSearchTop(5);\r\n                  setSearchOption(\"owners\");\r\n                }}\r\n              >\r\n                Owners\r\n              </Button>\r\n              <Button\r\n                className={classes.headerButtons}\r\n                variant={\r\n                  searchOption === \"operators\" ? \"contained\" : \"outlined\"\r\n                }\r\n                size=\"small\"\r\n                color={searchOption === \"operators\" ? \"secondary\" : \"primary\"}\r\n                onClick={() => {\r\n                  setSearchTop(5);\r\n                  setSearchOption(\"operators\");\r\n                }}\r\n              >\r\n                Operators\r\n              </Button>\r\n              <Button\r\n                className={classes.headerButtons}\r\n                variant={searchOption === \"leases\" ? \"contained\" : \"outlined\"}\r\n                size=\"small\"\r\n                color={searchOption === \"leases\" ? \"secondary\" : \"primary\"}\r\n                onClick={() => {\r\n                  setSearchTop(5);\r\n                  setSearchOption(\"leases\");\r\n                }}\r\n              >\r\n                Leases\r\n              </Button>\r\n              <Button\r\n                className={classes.headerButtons}\r\n                variant={\r\n                  searchOption === \"locations\" ? \"contained\" : \"outlined\"\r\n                }\r\n                size=\"small\"\r\n                color={searchOption === \"locations\" ? \"secondary\" : \"primary\"}\r\n                onClick={() => {\r\n                  setSearchTop(5);\r\n                  setSearchOption(\"locations\");\r\n                }}\r\n              >\r\n                Locations\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          (searchOption === \"all\" ||\r\n            searchOption === option.group.toLowerCase()) && (\r\n            <Grid key={option.group} container item>\r\n              <Grid container item xs={12} className={classes.groupsHeaders}>\r\n                <Grid item item xs={6}>\r\n                  <h3 className={classes.groupsHeadersText}>{option.group}</h3>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n                  {searchTop === 5 ? (\r\n                    <Button\r\n                      size=\"small\"\r\n                      className={classes.groupsButton}\r\n                      onClick={() => {\r\n                        setSearchTop(200);\r\n                        setSearchOption(\r\n                          option.group === \"Owners\"\r\n                            ? \"owners\"\r\n                            : option.group === \"Wells\"\r\n                            ? \"wells\"\r\n                            : option.group === \"Operators\"\r\n                            ? \"operators\"\r\n                            : option.group === \"Leases\"\r\n                            ? \"leases\"\r\n                            : option.group === \"Locations\"\r\n                            ? \"locations\"\r\n                            : \"all\"\r\n                        );\r\n                      }}\r\n                    >\r\n                      See All Results\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      size=\"small\"\r\n                      className={classes.groupsButton}\r\n                      onClick={() => {\r\n                        setSearchTop(5);\r\n                        setSearchOption(\"all\");\r\n                      }}\r\n                    >\r\n                      See Less\r\n                    </Button>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {option.children}\r\n              </Grid>\r\n            </Grid>\r\n          )\r\n        );\r\n      }}\r\n      autoComplete\r\n      includeInputInList\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        handleChange(newValue);\r\n      }}\r\n      onInputChange={(event, newInputValue, reason) => {\r\n        if (reason == \"input\") {\r\n          setInputValue(newInputValue);\r\n\r\n          if (newInputValue !== \"\") {\r\n            //// setting loader\r\n            if (searchOption === \"all\") {\r\n              setLoadingWells(true);\r\n              setLoadingOwners(true);\r\n              setLoadingOperators(true);\r\n              setLoadingLeases(true);\r\n              setLoadingMapboxSearch(true);\r\n            }\r\n            if (searchOption === \"wells\") setLoadingWells(true);\r\n            if (searchOption === \"owners\") setLoadingOwners(true);\r\n            if (searchOption === \"operators\") setLoadingOperators(true);\r\n            if (searchOption === \"leases\") setLoadingLeases(true);\r\n            if (searchOption === \"locations\") setLoadingMapboxSearch(true);\r\n          } else {\r\n            // setValue(null);\r\n            setOptions([]);\r\n            setLoadingWells(false);\r\n            setLoadingOwners(false);\r\n            setLoadingOperators(false);\r\n            setLoadingLeases(false);\r\n            setLoadingMapboxSearch(false);\r\n          }\r\n        }\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          placeholder=\"Search by well name, API, owner, operator, lease or a location\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            startAdornment: (\r\n              <InputAdornment>\r\n                <div className={classes.startAdornmentIcon}>\r\n                  <SearchIcon htmlColor=\"#fff\" />\r\n                </div>\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <div>\r\n                  <Tooltip title=\"Search History\" placement=\"top\">\r\n                    <IconButton\r\n                      onClick={(event) => {\r\n                        setAnchorEl(event.currentTarget);\r\n                      }}\r\n                    >\r\n                      <ArrowDropDownIcon htmlColor=\"#fff\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Popover\r\n                    onBlur={() => {\r\n                      setAnchorEl(null);\r\n                    }}\r\n                    open={Boolean(anchorEl)}\r\n                    anchorEl={anchorEl}\r\n                    onClose={() => {\r\n                      setAnchorEl(null);\r\n                    }}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"right\",\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"right\",\r\n                    }}\r\n                    style={{\r\n                      width: document.getElementById(\"searchBarDivParent\")\r\n                        ? document.getElementById(\"searchBarDivParent\")\r\n                            .offsetWidth\r\n                        : \"400px\",\r\n                    }}\r\n                    className={classes.historyPopover}\r\n                  >\r\n                    {searchHistoryList && searchHistoryList.length > 0 ? (\r\n                      searchHistoryList.map((search, i) => {\r\n                        let option = search.searchData;\r\n                        const parts = parse(option.Primary, Array());\r\n\r\n                        return (\r\n                          <Box\r\n                            p={1}\r\n                            key={i}\r\n                            className={classes.historyRow}\r\n                            onClick={() => {\r\n                              setSearchTop(5);\r\n                              setSearchOption(\r\n                                option.Source === \"lod2019-index\"\r\n                                  ? \"owners\"\r\n                                  : option.Source === \"wellheader-index\"\r\n                                  ? \"wells\"\r\n                                  : option.Source === \"operator-index\"\r\n                                  ? \"operators\"\r\n                                  : option.Source === \"lease-index\"\r\n                                  ? \"leases\"\r\n                                  : option.group === \"mapboxSearch\"\r\n                                  ? \"locations\"\r\n                                  : \"all\"\r\n                              );\r\n                              setInputValue(\r\n                                option.Primary\r\n                                  ? option.Primary\r\n                                  : option.Secondary\r\n                              );\r\n                              handleChange({ ...option, searchId: search._id });\r\n                            }}\r\n                          >\r\n                            <Grid container spacing={0}>\r\n                              <Grid container item xs={9} alignItems=\"center\">\r\n                                <Grid item>\r\n                                  {option.Source === \"lod2019-index\" && (\r\n                                    <PersonIcon className={classes.icon} />\r\n                                  )}\r\n                                  {option.Source === \"operator-index\" && (\r\n                                    <OperatorIcon\r\n                                      className={classes.icon}\r\n                                      color={\"#757575\"}\r\n                                    />\r\n                                  )}\r\n                                  {option.Source === \"wellheader-index\" && (\r\n                                    <WellIcon\r\n                                      className={classes.icon}\r\n                                      color={\"#757575\"}\r\n                                      opacity=\"1.0\"\r\n                                      small\r\n                                    />\r\n                                  )}\r\n                                  {option.Source === \"lease-index\" && (\r\n                                    <LeaseIcon\r\n                                      className={classes.icon}\r\n                                      color={\"#757575\"}\r\n                                    />\r\n                                  )}\r\n                                  {option.Source === \"mapboxSearch\" && (\r\n                                    <LocationOnIcon className={classes.icon} />\r\n                                  )}\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n\r\n                                  {option && option.Secondary && (\r\n                                    <Typography\r\n                                      variant=\"body2\"\r\n                                      color=\"textSecondary\"\r\n                                    >\r\n                                      {option.Secondary}\r\n                                    </Typography>\r\n                                  )}\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid container item xs={3} alignItems=\"center\">\r\n                                <Grid item>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{ color: \"rgb(80, 187, 223)\" }}\r\n                                  >\r\n                                    {new Intl.DateTimeFormat(\"en-US\", {\r\n                                      year: \"2-digit\",\r\n                                      month: \"2-digit\",\r\n                                      day: \"2-digit\",\r\n                                      hour: \"2-digit\",\r\n                                      minute: \"2-digit\",\r\n                                    }).format(search.ts)}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Box>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <Box p={1}>\r\n                        <Typography>There is no history yet.</Typography>\r\n                      </Box>\r\n                    )}\r\n                  </Popover>\r\n                </div>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          className={classes.textF}\r\n        />\r\n      )}\r\n      renderOption={(option) => {\r\n        if (option.Source === \"header\" || option.group === \"loader\")\r\n          return null;\r\n        const parts = parse(option.Primary, Array());\r\n\r\n        return (\r\n          <Grid container spacing={0}>\r\n            <Grid container item xs={11} alignItems=\"center\">\r\n              <Grid item>\r\n                {option.Source === \"lod2019-index\" && (\r\n                  <PersonIcon className={classes.icon} />\r\n                )}\r\n                {option.Source === \"operator-index\" && (\r\n                  <OperatorIcon className={classes.icon} color={\"#757575\"} />\r\n                )}\r\n                {option.Source === \"wellheader-index\" && (\r\n                  <WellIcon\r\n                    className={classes.icon}\r\n                    color={\"#757575\"}\r\n                    opacity=\"1.0\"\r\n                    small\r\n                  />\r\n                )}\r\n                {option.Source === \"lease-index\" && (\r\n                  <LeaseIcon className={classes.icon} color={\"#757575\"} />\r\n                )}\r\n                {option.Source === \"mapboxSearch\" && (\r\n                  <LocationOnIcon className={classes.icon} />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs>\r\n                {parts.map((part, index) => (\r\n                  <span\r\n                    key={index}\r\n                    style={{ fontWeight: part.highlight ? 700 : 400 }}\r\n                  >\r\n                    {part.text}\r\n                  </span>\r\n                ))}\r\n\r\n                {option && option.Secondary && (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {option.Secondary}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={1} alignItems=\"center\">\r\n              <Grid item style={{ position: \"relative\" }}>\r\n                <div\r\n                  className={classes.score}\r\n                  style={{\r\n                    zIndex: \"1300\",\r\n                    backgroundColor: \"#12ABE0\",\r\n                  }}\r\n                />\r\n                <div\r\n                  className={classes.score}\r\n                  style={{\r\n                    zIndex: \"1301\",\r\n                    backgroundImage:\r\n                      \"repeating-linear-gradient(135deg, #ffffff , #ffffffb7 4.5%, #ffffff 15%)\",\r\n                    opacity: calcScoreOpacity(\r\n                      option.Source === \"lod2019-index\"\r\n                        ? maxMinOwnersScore\r\n                        : option.Source === \"wellheader-index\"\r\n                        ? maxMinWellsScore\r\n                        : option.Source === \"operator-index\"\r\n                        ? maxMinOperatosScore\r\n                        : option.Source === \"lease-index\"\r\n                        ? maxMinLeasesScore\r\n                        : maxMinMapboxSearchScore,\r\n                      option.Score\r\n                    ).toString(),\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}