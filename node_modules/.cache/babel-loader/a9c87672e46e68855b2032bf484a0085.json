{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterTrackedOwners.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NavigationContext } from \"../NavigationContext\";\nimport { AppContext } from \"../../../AppContext\";\nimport { FormLabel } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OwnershipIcon from \"../../Shared/svgIcons/ownership\";\nconst useStyles = makeStyles({\n  mainDiv: {\n    padding: \"2.5px 15px\",\n    border: \"1px solid #C4C4C4\",\n    borderRadius: \"4px\",\n    \"&:hover\": {\n      border: \"1px solid black\"\n    }\n  },\n  noOwnersToggle: {\n    float: \"right\",\n    marginTop: \"5px\"\n  },\n  IconButton: {\n    marginRight: \"10px\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      cursor: \"context-menu\"\n    }\n  }\n});\nexport default function FilterTrackedOwners() {\n  const classes = useStyles();\n  const [stateNav, setStateNav] = useContext(NavigationContext);\n  const [stateApp] = useContext(AppContext);\n  useEffect(() => {\n    if (stateApp.checkedUserDefinedLayers) if (stateApp.checkedUserDefinedLayers.indexOf(4) === -1) setStateNav(stateNav => ({ ...stateNav,\n      filterTrackedOwners: false\n    }));else setStateNav(stateNav => ({ ...stateNav,\n      filterTrackedOwners: true\n    }));\n  }, [stateApp.checkedUserDefinedLayers]);\n\n  const toggleTracks = () => {\n    if (!stateApp.activateUserDefinedLayers(4)) stateApp.deactivateUserDefinedLayers(4);else stateApp.deactivateWellLayer();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.IconButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OwnershipIcon, {\n    color: \"#808080\",\n    opacity: \"1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Tracked Owners\"), /*#__PURE__*/React.createElement(Switch, {\n    disabled: !(stateApp.trackedOwnerWells && stateApp.trackedOwnerWells.length > 0),\n    className: classes.noOwnersToggle,\n    checked: stateNav.filterTrackedOwners,\n    onChange: toggleTracks,\n    color: \"secondary\",\n    name: \"checked\",\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterTrackedOwners.js"],"names":["React","useContext","useEffect","makeStyles","Switch","NavigationContext","AppContext","FormLabel","IconButton","OwnershipIcon","useStyles","mainDiv","padding","border","borderRadius","noOwnersToggle","float","marginTop","marginRight","backgroundColor","cursor","FilterTrackedOwners","classes","stateNav","setStateNav","stateApp","checkedUserDefinedLayers","indexOf","filterTrackedOwners","toggleTracks","activateUserDefinedLayers","deactivateUserDefinedLayers","deactivateWellLayer","trackedOwnerWells","length"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport { FormLabel } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OwnershipIcon from \"../../Shared/svgIcons/ownership\";\r\n\r\nconst useStyles = makeStyles({\r\n  mainDiv: {\r\n    padding: \"2.5px 15px\",\r\n    border: \"1px solid #C4C4C4\",\r\n    borderRadius: \"4px\",\r\n    \"&:hover\": {\r\n      border: \"1px solid black\",\r\n    },\r\n  },\r\n  noOwnersToggle: {\r\n    float: \"right\",\r\n    marginTop: \"5px\",\r\n  },\r\n  IconButton: {\r\n    marginRight: \"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      cursor: \"context-menu\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function FilterTrackedOwners() {\r\n  const classes = useStyles();\r\n  const [stateNav, setStateNav] = useContext(NavigationContext);\r\n\r\n  const [stateApp] = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    if (stateApp.checkedUserDefinedLayers)\r\n      if (stateApp.checkedUserDefinedLayers.indexOf(4) === -1)\r\n        setStateNav((stateNav) => ({\r\n          ...stateNav,\r\n          filterTrackedOwners: false,\r\n        }));\r\n      else\r\n        setStateNav((stateNav) => ({\r\n          ...stateNav,\r\n          filterTrackedOwners: true,\r\n        }));\r\n  }, [stateApp.checkedUserDefinedLayers]);\r\n\r\n  const toggleTracks = () => {\r\n    if (!stateApp.activateUserDefinedLayers(4))\r\n      stateApp.deactivateUserDefinedLayers(4);\r\n    else stateApp.deactivateWellLayer();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.mainDiv}>\r\n      <IconButton className={classes.IconButton}>\r\n        <OwnershipIcon color=\"#808080\" opacity=\"1.0\" />\r\n      </IconButton>\r\n      <FormLabel>Tracked Owners</FormLabel>\r\n      <Switch\r\n        disabled={\r\n          !(stateApp.trackedOwnerWells && stateApp.trackedOwnerWells.length > 0)\r\n        }\r\n        className={classes.noOwnersToggle}\r\n        checked={stateNav.filterTrackedOwners}\r\n        onChange={toggleTracks}\r\n        color=\"secondary\"\r\n        name=\"checked\"\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}