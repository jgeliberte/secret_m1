{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\MapControls\\\\components\\\\spatialDataCard.js\";\nimport React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"; //material-ui components\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\"; //import Avatar from '@material-ui/core/Avatar'\n\nimport IconButton from \"@material-ui/core/IconButton\"; // import Typography from '@material-ui/core/Typography'\n// import Table from '@material-ui/core/Table'\n// import TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\n// import TableRow from '@material-ui/core/TableRow'\n// import useMediaQuery from '@material-ui/core/useMediaQuery'\n// import Dialog from '@material-ui/core/Dialog'\n// import DialogActions from '@material-ui/core/DialogActions'\n// import DialogContent from '@material-ui/core/DialogContent'\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ExpandIcon from \"../../WellCard/components/svgIcons/ExpandIcon\";\nimport { AppContext } from \"../../../AppContext\"; // Helpers for area calcs\n\nimport { area, convertArea, length } from \"@turf/turf\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    padding: \"0px\"\n  },\n  card: {\n    fontFamily: \"Poppins\",\n    fontStyle: \"normal\",\n    fontSize: \".75rem\",\n    background: \"#011133\",\n    borderStyle: \"solid\",\n    borderWidth: \"thin\",\n    borderColor: \"#011133\",\n    width: \"325px\",\n    height: \"auto\",\n    position: \"relative\",\n    top: \"10vh\",\n    left: \"10vw\"\n  },\n  cardPopup: {\n    fontFamily: \"Poppins\",\n    fontStyle: \"normal\",\n    fontSize: \".75rem\",\n    background: \"#011133\",\n    borderStyle: \"solid\",\n    borderWidth: \"thin\",\n    borderColor: \"#011133\",\n    width: \"325px\",\n    height: \"auto\",\n    position: \"relative\"\n  },\n  cardHeader: {\n    padding: \"2%\",\n    height: \"15%\"\n  },\n  cardTitle: {\n    fontWeight: 600,\n    fontSize: \"1rem\",\n    lineHeight: \"1rem\",\n    color: \"#FFFFFF\",\n    textTransform: \"uppercase\",\n    position: \"relative\",\n    height: \"1rem\",\n    left: \"7.46%\",\n    right: \"39.32%\",\n    top: \"calc(50% - 23px/2 - 140px)\"\n  },\n  subheader: {\n    fontWeight: 300,\n    lineHeight: \"16px\",\n    color: \"#FFFFFF\",\n    position: \"relative\",\n    height: \"17px\",\n    left: \"7.46%\",\n    right: \"58.31%\",\n    top: \"calc(50% - 17px/2 - 120px)\"\n  },\n  cardAction: {\n    color: \"black\",\n    width: \"100%\",\n    height: \"80%\",\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    //alignItems: \"flex-start\",\n    backgroundColor: \"#fff\"\n  },\n  cardContent: {\n    height: \"10%\",\n    backgroundColor: \"#fff\",\n    padding: \"0px\",\n    paddingBottom: \"0px\"\n  },\n  actionWrapper: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"space-evenly\"\n  },\n  input: {\n    display: \"flex\",\n    marginLeft: \"0px\",\n    marginBottom: \"15px\"\n  },\n  buttonContainer: {\n    //height: \"25%\",\n    display: \"flex\",\n    //paddingRight: \"3%\",\n    //paddingLeft: \"3%\",\n    backgroundColor: \"#fff\",\n    //paddingBottom: \"3%\",\n    //\"&:last-child\": { padding: \"0px\" }\n    justifyContent: \"space-evenly\"\n  },\n  button: {\n    width: \"40%\",\n    //margin: \"3%\",\n    justifyContent: \"space-evenly\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 265,\n    color: \"black\" //paddingBottom: 3\n\n  },\n  label: {\n    background: \"white\",\n    padding: \"0px 4px\"\n  },\n  TextField: {\n    display: \"flex\",\n    margin: theme.spacing(1),\n    minWidth: 265,\n    color: \"black\"\n  }\n}));\nexport default function SpatialDataCard(props) {\n  const classes = useStyles();\n  const {\n    sdType,\n    shapeLabel,\n    projectName,\n    sdNotes,\n    sdGrossAcres\n  } = props.selectedFeature.properties;\n  const {\n    cardClass = \"card\"\n  } = props;\n  const [dataType, setDataType] = useState(sdType);\n  const [dataName, setDataName] = useState(shapeLabel);\n  const [dataProject, setDataProject] = useState(projectName);\n  const [grossAcres, setGrossAcres] = useState(sdGrossAcres);\n  const [dataNotes, setDataNotes] = useState(sdNotes);\n  const [stateApp, setStateApp] = useContext(AppContext);\n  const [showError, setShowError] = useState(false);\n  const inputLabel = useRef(null);\n  const [labelWidth, setLabelWidth] = useState(0);\n  useEffect(() => {\n    setDataType(sdType);\n    setDataName(shapeLabel);\n    setDataProject(projectName);\n    setDataNotes(sdNotes);\n  }, [props.selectedFeature]);\n  useEffect(() => {\n    let udName = \"\";\n\n    switch (dataType) {\n      case \"interest\":\n        udName = \"Area of Interest\";\n        break;\n\n      case \"parcel\":\n        udName = \"Parcels\";\n        break;\n\n      default:\n        udName = \"\";\n        break;\n    }\n\n    if (udName) {\n      const layerIndex = stateApp.userDefinedLayers.findIndex(layer => layer.name === udName);\n      setStateApp({ ...stateApp,\n        tempCheckedUserDefinedLayers: layerIndex\n      });\n    } else {\n      setStateApp({ ...stateApp,\n        tempCheckedUserDefinedLayers: null\n      });\n    }\n  }, [dataType]);\n\n  const updateDataNotes = evt => {\n    let updatedNotes = evt.target.value;\n    setDataNotes(updatedNotes);\n  };\n\n  const saveSpatialData = () => {\n    if (dataName) {\n      const spatialData = {\n        sdType: dataType === \"\" ? \"interest\" : dataType,\n        shapeLabel: dataName,\n        projectName: dataProject,\n        sdGrossAcres: grossAcres // sdNotes: dataNotes\n\n      };\n      props.saveSpatialData(spatialData, dataType);\n      const tmpChecked = stateApp.tempCheckedUserDefinedLayers;\n      const checkedLayers = stateApp.checkedUserDefinedLayers.slice(0);\n\n      if (tmpChecked != null && stateApp.checkedUserDefinedLayers.indexOf(tmpChecked) === -1) {\n        checkedLayers.push(tmpChecked);\n      }\n\n      setStateApp({ ...stateApp,\n        checkedUserDefinedLayers: checkedLayers,\n        tempCheckedUserDefinedLayers: null\n      });\n    } else {\n      setShowError(true);\n    }\n  };\n\n  const closeSpatialDataCard = () => {\n    setStateApp({ ...stateApp,\n      tempCheckedUserDefinedLayers: null\n    });\n    props.closeSpatialDataCard();\n  };\n\n  const deleteSpatialData = () => {\n    setStateApp({ ...stateApp,\n      tempCheckedUserDefinedLayers: null\n    });\n    props.deleteSpatialDataAndShape();\n  };\n\n  const calculateLandArea = () => {\n    const {\n      selectedFeature\n    } = props;\n\n    if (selectedFeature) {\n      if (selectedFeature.geometry.type === \"Polygon\") {\n        const areaInSqMeters = area(selectedFeature);\n        const areaInAcres = convertArea(areaInSqMeters, \"meters\", \"acres\");\n        return `${Math.round(areaInAcres * 100) / 100} acres`;\n      }\n\n      if (selectedFeature.geometry.type === \"LineString\") {\n        const distanceInMiles = length(selectedFeature, {\n          units: \"miles\"\n        });\n        return `${Math.round(distanceInMiles * 100) / 100} miles`;\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes[cardClass],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.cardHeader,\n    classes: {\n      title: classes.cardTitle,\n      subheader: classes.subheader\n    },\n    title: \"Spatial Data\",\n    action: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.actionWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ExpandIcon, {\n      viewBox: \"0 0 64 64\",\n      color: \"secondary\",\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      color: \"secondary\",\n      onClick: closeSpatialDataCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    classes: {\n      root: classes.cardAction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    ref: inputLabel,\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, \" Boundary Type \"), /*#__PURE__*/React.createElement(Select, {\n    value: dataType,\n    onChange: evt => setDataType(evt.target.value),\n    labelWidth: labelWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"interest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, \"Area of Interest\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"parcel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, \"Parcel/Tract\")))), (dataType === \"interest\" || dataType === \"parcel\") && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: \"Name\",\n    type: \"text\",\n    error: showError //placeholder= \"Enter Name\"\n    ,\n    value: dataName,\n    autoComplete: \"disabled\",\n    onChange: evt => setDataName(evt.target.value),\n    helperText: showError ? 'Name is required!' : '',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: \"Gross Acres\",\n    type: \"text\" //placeholder= \"Enter Name\"\n    ,\n    value: grossAcres,\n    autoComplete: \"disabled\",\n    onChange: evt => setGrossAcres(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    autoComplete: \"disabled\",\n    variant: \"outlined\",\n    label: \"Calc. Acres\",\n    fullWidth: true,\n    defaultValue: calculateLandArea(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\" //disableRipple={true}\n    //size=\"medium\"\n    ,\n    className: classes.button,\n    onClick: saveSpatialData //paddingRight= \"6px\"\n    ,\n    disabled: dataType === \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }\n  }, dataType !== \"title\" ? \"Save\" : \"Next\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\" //disableRipple={true}\n    // size=\"medium\"\n    ,\n    className: classes.button,\n    style: {\n      backgroundColor: \"light gray\",\n      color: \"dark gray\"\n    },\n    onClick: deleteSpatialData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }\n  }, \" \", \"Delete\")));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/MapControls/components/spatialDataCard.js"],"names":["React","useState","useContext","useRef","useEffect","makeStyles","useTheme","InputLabel","MenuItem","FormControl","Select","Card","CardHeader","CardContent","CardActions","IconButton","CloseIcon","Button","TextField","ExpandIcon","AppContext","area","convertArea","length","useStyles","theme","root","display","padding","card","fontFamily","fontStyle","fontSize","background","borderStyle","borderWidth","borderColor","width","height","position","top","left","cardPopup","cardHeader","cardTitle","fontWeight","lineHeight","color","textTransform","right","subheader","cardAction","flexGrow","flexDirection","justifyContent","backgroundColor","cardContent","paddingBottom","actionWrapper","input","marginLeft","marginBottom","buttonContainer","button","formControl","margin","spacing","minWidth","label","SpatialDataCard","props","classes","sdType","shapeLabel","projectName","sdNotes","sdGrossAcres","selectedFeature","properties","cardClass","dataType","setDataType","dataName","setDataName","dataProject","setDataProject","grossAcres","setGrossAcres","dataNotes","setDataNotes","stateApp","setStateApp","showError","setShowError","inputLabel","labelWidth","setLabelWidth","udName","layerIndex","userDefinedLayers","findIndex","layer","name","tempCheckedUserDefinedLayers","updateDataNotes","evt","updatedNotes","target","value","saveSpatialData","spatialData","tmpChecked","checkedLayers","checkedUserDefinedLayers","slice","indexOf","push","closeSpatialDataCard","deleteSpatialData","deleteSpatialDataAndShape","calculateLandArea","geometry","type","areaInSqMeters","areaInAcres","Math","round","distanceInMiles","units","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CAEA;;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,MAA5B,QAA0C,YAA1C;AAEA,MAAMC,SAAS,GAAGnB,UAAU,CAACoB,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,OAAO,EAAE;AAFL,GAD+B;AAMrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,SADR;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,QAAQ,EAAE,QAHN;AAIJC,IAAAA,UAAU,EAAE,SAJR;AAKJC,IAAAA,WAAW,EAAE,OALT;AAMJC,IAAAA,WAAW,EAAE,MANT;AAOJC,IAAAA,WAAW,EAAE,SAPT;AAQJC,IAAAA,KAAK,EAAE,OARH;AASJC,IAAAA,MAAM,EAAE,MATJ;AAUJC,IAAAA,QAAQ,EAAE,UAVN;AAWJC,IAAAA,GAAG,EAAE,MAXD;AAYJC,IAAAA,IAAI,EAAE;AAZF,GAN+B;AAqBrCC,EAAAA,SAAS,EAAE;AACTZ,IAAAA,UAAU,EAAE,SADH;AAETC,IAAAA,SAAS,EAAE,QAFF;AAGTC,IAAAA,QAAQ,EAAE,QAHD;AAITC,IAAAA,UAAU,EAAE,SAJH;AAKTC,IAAAA,WAAW,EAAE,OALJ;AAMTC,IAAAA,WAAW,EAAE,MANJ;AAOTC,IAAAA,WAAW,EAAE,SAPJ;AAQTC,IAAAA,KAAK,EAAE,OARE;AASTC,IAAAA,MAAM,EAAE,MATC;AAUTC,IAAAA,QAAQ,EAAE;AAVD,GArB0B;AAkCrCI,EAAAA,UAAU,EAAE;AACVf,IAAAA,OAAO,EAAE,IADC;AAEVU,IAAAA,MAAM,EAAE;AAFE,GAlCyB;AAuCrCM,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,GADH;AAETb,IAAAA,QAAQ,EAAE,MAFD;AAGTc,IAAAA,UAAU,EAAE,MAHH;AAITC,IAAAA,KAAK,EAAE,SAJE;AAKTC,IAAAA,aAAa,EAAE,WALN;AAMTT,IAAAA,QAAQ,EAAE,UAND;AAOTD,IAAAA,MAAM,EAAE,MAPC;AAQTG,IAAAA,IAAI,EAAE,OARG;AASTQ,IAAAA,KAAK,EAAE,QATE;AAUTT,IAAAA,GAAG,EAAE;AAVI,GAvC0B;AAoDrCU,EAAAA,SAAS,EAAE;AACTL,IAAAA,UAAU,EAAE,GADH;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,KAAK,EAAE,SAHE;AAITR,IAAAA,QAAQ,EAAE,UAJD;AAKTD,IAAAA,MAAM,EAAE,MALC;AAMTG,IAAAA,IAAI,EAAE,OANG;AAOTQ,IAAAA,KAAK,EAAE,QAPE;AAQTT,IAAAA,GAAG,EAAE;AARI,GApD0B;AA+DrCW,EAAAA,UAAU,EAAE;AACVJ,IAAAA,KAAK,EAAE,OADG;AAEVV,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,MAAM,EAAE,KAHE;AAIVc,IAAAA,QAAQ,EAAE,CAJA;AAKVzB,IAAAA,OAAO,EAAE,MALC;AAMV0B,IAAAA,aAAa,EAAE,QANL;AAOVC,IAAAA,cAAc,EAAE,cAPN;AAQV;AACAC,IAAAA,eAAe,EAAE;AATP,GA/DyB;AA0ErCC,EAAAA,WAAW,EAAE;AACXlB,IAAAA,MAAM,EAAE,KADG;AAEXiB,IAAAA,eAAe,EAAE,MAFN;AAGX3B,IAAAA,OAAO,EAAE,KAHE;AAIX6B,IAAAA,aAAa,EAAE;AAJJ,GA1EwB;AAgFrCC,EAAAA,aAAa,EAAE;AACbN,IAAAA,QAAQ,EAAE,CADG;AAEbzB,IAAAA,OAAO,EAAE,MAFI;AAGb2B,IAAAA,cAAc,EAAE;AAHH,GAhFsB;AAqFrCK,EAAAA,KAAK,EAAE;AACLhC,IAAAA,OAAO,EAAE,MADJ;AAELiC,IAAAA,UAAU,EAAE,KAFP;AAGLC,IAAAA,YAAY,EAAE;AAHT,GArF8B;AA2FrCC,EAAAA,eAAe,EAAE;AACf;AACAnC,IAAAA,OAAO,EAAE,MAFM;AAGf;AACA;AACA4B,IAAAA,eAAe,EAAE,MALF;AAMf;AACA;AACAD,IAAAA,cAAc,EAAE;AARD,GA3FoB;AAqGrCS,EAAAA,MAAM,EAAE;AACN1B,IAAAA,KAAK,EAAE,KADD;AAEN;AACAiB,IAAAA,cAAc,EAAE;AAHV,GArG6B;AA2GrCU,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAExC,KAAK,CAACyC,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE,GAFC;AAGXpB,IAAAA,KAAK,EAAE,OAHI,CAIX;;AAJW,GA3GwB;AAiHrCqB,EAAAA,KAAK,EAAE;AACLnC,IAAAA,UAAU,EAAE,OADP;AAELL,IAAAA,OAAO,EAAE;AAFJ,GAjH8B;AAqHrCV,EAAAA,SAAS,EAAE;AACTS,IAAAA,OAAO,EAAE,MADA;AAETsC,IAAAA,MAAM,EAAExC,KAAK,CAACyC,OAAN,CAAc,CAAd,CAFC;AAGTC,IAAAA,QAAQ,EAAE,GAHD;AAITpB,IAAAA,KAAK,EAAE;AAJE;AArH0B,CAAL,CAAN,CAA5B;AA6HA,eAAe,SAASsB,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,QAAMC,OAAO,GAAG/C,SAAS,EAAzB;AACA,QAAM;AACJgD,IAAAA,MADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA;AALI,MAMFN,KAAK,CAACO,eAAN,CAAsBC,UAN1B;AAOA,QAAM;AAAEC,IAAAA,SAAS,GAAG;AAAd,MAAyBT,KAA/B;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BhF,QAAQ,CAACuE,MAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BlF,QAAQ,CAACwE,UAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCpF,QAAQ,CAACyE,WAAD,CAA9C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BtF,QAAQ,CAAC2E,YAAD,CAA5C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BxF,QAAQ,CAAC0E,OAAD,CAA1C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BzF,UAAU,CAACkB,UAAD,CAA1C;AACA,QAAM,CAACwE,SAAD,EAAYC,YAAZ,IAA4B5F,QAAQ,CAAC,KAAD,CAA1C;AAGA,QAAM6F,UAAU,GAAG3F,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM,CAAC4F,UAAD,EAAaC,aAAb,IAA8B/F,QAAQ,CAAC,CAAD,CAA5C;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd6E,IAAAA,WAAW,CAACT,MAAD,CAAX;AACAW,IAAAA,WAAW,CAACV,UAAD,CAAX;AACAY,IAAAA,cAAc,CAACX,WAAD,CAAd;AACAe,IAAAA,YAAY,CAACd,OAAD,CAAZ;AACD,GALQ,EAKN,CAACL,KAAK,CAACO,eAAP,CALM,CAAT;AAOAzE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6F,MAAM,GAAG,EAAb;;AACA,YAAQjB,QAAR;AACE,WAAK,UAAL;AACEiB,QAAAA,MAAM,GAAG,kBAAT;AACA;;AACF,WAAK,QAAL;AACEA,QAAAA,MAAM,GAAG,SAAT;AACA;;AACF;AACEA,QAAAA,MAAM,GAAG,EAAT;AACA;AATJ;;AAWA,QAAIA,MAAJ,EAAY;AACV,YAAMC,UAAU,GAAGR,QAAQ,CAACS,iBAAT,CAA2BC,SAA3B,CAAqCC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeL,MAA7D,CAAnB;AACAN,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVa,QAAAA,4BAA4B,EAAEL;AAFpB,OAAD,CAAX;AAID,KAND,MAMO;AACLP,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVa,QAAAA,4BAA4B,EAAE;AAFpB,OAAD,CAAX;AAID;AACF,GAzBQ,EAyBN,CAACvB,QAAD,CAzBM,CAAT;;AA2BA,QAAMwB,eAAe,GAAGC,GAAG,IAAI;AAC7B,QAAIC,YAAY,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAA9B;AACAnB,IAAAA,YAAY,CAACiB,YAAD,CAAZ;AACD,GAHD;;AAIA,QAAMG,eAAe,GAAG,MAAM;AAC5B,QAAI3B,QAAJ,EAAc;AACZ,YAAM4B,WAAW,GAAG;AAClBtC,QAAAA,MAAM,EAAEQ,QAAQ,KAAK,EAAb,GAAkB,UAAlB,GAA+BA,QADrB;AAElBP,QAAAA,UAAU,EAAES,QAFM;AAGlBR,QAAAA,WAAW,EAAEU,WAHK;AAIlBR,QAAAA,YAAY,EAAEU,UAJI,CAKlB;;AALkB,OAApB;AAOAhB,MAAAA,KAAK,CAACuC,eAAN,CAAsBC,WAAtB,EAAmC9B,QAAnC;AAEA,YAAM+B,UAAU,GAAGrB,QAAQ,CAACa,4BAA5B;AACA,YAAMS,aAAa,GAAGtB,QAAQ,CAACuB,wBAAT,CAAkCC,KAAlC,CAAwC,CAAxC,CAAtB;;AACA,UAAIH,UAAU,IAAI,IAAd,IAAsBrB,QAAQ,CAACuB,wBAAT,CAAkCE,OAAlC,CAA0CJ,UAA1C,MAA0D,CAAC,CAArF,EAAwF;AACtFC,QAAAA,aAAa,CAACI,IAAd,CAAmBL,UAAnB;AACD;;AACDpB,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVuB,QAAAA,wBAAwB,EAAED,aAFhB;AAGVT,QAAAA,4BAA4B,EAAE;AAHpB,OAAD,CAAX;AAKD,KApBD,MAoBO;AACLV,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAxBD;;AA0BA,QAAMwB,oBAAoB,GAAG,MAAM;AACjC1B,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVa,MAAAA,4BAA4B,EAAE;AAFpB,KAAD,CAAX;AAIAjC,IAAAA,KAAK,CAAC+C,oBAAN;AACD,GAND;;AAQA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B3B,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVa,MAAAA,4BAA4B,EAAE;AAFpB,KAAD,CAAX;AAIAjC,IAAAA,KAAK,CAACiD,yBAAN;AACD,GAND;;AAOA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,UAAM;AAAE3C,MAAAA;AAAF,QAAsBP,KAA5B;;AACA,QAAIO,eAAJ,EAAqB;AACnB,UAAIA,eAAe,CAAC4C,QAAhB,CAAyBC,IAAzB,KAAkC,SAAtC,EAAiD;AAC/C,cAAMC,cAAc,GAAGtG,IAAI,CAACwD,eAAD,CAA3B;AACA,cAAM+C,WAAW,GAAGtG,WAAW,CAACqG,cAAD,EAAiB,QAAjB,EAA2B,OAA3B,CAA/B;AACA,eAAQ,GAAEE,IAAI,CAACC,KAAL,CAAWF,WAAW,GAAG,GAAzB,IAAgC,GAAI,QAA9C;AACD;;AACD,UAAI/C,eAAe,CAAC4C,QAAhB,CAAyBC,IAAzB,KAAkC,YAAtC,EAAoD;AAClD,cAAMK,eAAe,GAAGxG,MAAM,CAACsD,eAAD,EAAkB;AAAEmD,UAAAA,KAAK,EAAE;AAAT,SAAlB,CAA9B;AACA,eAAQ,GAAEH,IAAI,CAACC,KAAL,CAAWC,eAAe,GAAG,GAA7B,IAAoC,GAAI,QAAlD;AACD;AACF;AACF,GAbD;;AAeA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAExD,OAAO,CAACQ,SAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAER,OAAO,CAAC5B,UADrB;AAEE,IAAA,OAAO,EAAE;AACPsF,MAAAA,KAAK,EAAE1D,OAAO,CAAC3B,SADR;AAEPM,MAAAA,SAAS,EAAEqB,OAAO,CAACrB;AAFZ,KAFX;AAME,IAAA,KAAK,EAAC,cANR;AAOE,IAAA,MAAM,eACJ;AAAK,MAAA,SAAS,EAAEqB,OAAO,CAACb,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,oBAAW,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,QAAQ,EAAC,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eASE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAE2D,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAwBE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAE3F,MAAAA,IAAI,EAAE6C,OAAO,CAACpB;AAAhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,SAAS,EAAEoB,OAAO,CAACP,WAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE8B,UAAjB;AAA6B,IAAA,SAAS,EAAEvB,OAAO,CAACH,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,eAME,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEY,QADT;AAEE,IAAA,QAAQ,EAAEyB,GAAG,IAAIxB,WAAW,CAACwB,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAF9B;AAGE,IAAA,UAAU,EAAEb,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,eAME,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CANF,CADF,CAFF,EAwBG,CAACf,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,QAAzC,kBACC;AAAK,IAAA,KAAK,EAAE;AAAEpB,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACrD,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAE0E,SALT,CAME;AANF;AAOE,IAAA,KAAK,EAAEV,QAPT;AAQE,IAAA,YAAY,EAAC,UARf;AASE,IAAA,QAAQ,EAAEuB,GAAG,IAAItB,WAAW,CAACsB,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAT9B;AAUE,IAAA,UAAU,EAAEhB,SAAS,GAAG,mBAAH,GAAyB,EAVhD;AAWE,IAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAiBE;AAAK,IAAA,SAAS,EAAErB,OAAO,CAACrD,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,IAAI,EAAC,MAJP,CAKE;AALF;AAME,IAAA,KAAK,EAAEoE,UANT;AAOE,IAAA,YAAY,EAAC,UAPf;AAQE,IAAA,QAAQ,EAAEmB,GAAG,IAAIlB,aAAa,CAACkB,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CARhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,eA0CE;AAAK,IAAA,SAAS,EAAErC,OAAO,CAACrD,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,YAAY,EAAC,UAFf;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAC,aAJR;AAKE,IAAA,SAAS,MALX;AAME,IAAA,YAAY,EAAEsG,iBAAiB,EANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1CF,CAzBJ,CAxBF,eAsHE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEjD,OAAO,CAACT,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,WAFR,CAGE;AACA;AAJF;AAKE,IAAA,SAAS,EAAES,OAAO,CAACR,MALrB;AAME,IAAA,OAAO,EAAE8C,eANX,CAOE;AAPF;AAQE,IAAA,QAAQ,EAAE7B,QAAQ,KAAK,EARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,MAVnC,CAFF,eAgBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV,CAEE;AACA;AAHF;AAIE,IAAA,SAAS,EAAET,OAAO,CAACR,MAJrB;AAKE,IAAA,KAAK,EAAE;AAAER,MAAAA,eAAe,EAAE,YAAnB;AAAiCR,MAAAA,KAAK,EAAE;AAAxC,KALT;AAME,IAAA,OAAO,EAAEuE,iBANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,GARH,WAhBF,CAtHF,CADF;AAqJD","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\n//material-ui components\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n//import Avatar from '@material-ui/core/Avatar'\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// import Typography from '@material-ui/core/Typography'\r\n// import Table from '@material-ui/core/Table'\r\n// import TableBody from '@material-ui/core/TableBody'\r\n// import TableCell from '@material-ui/core/TableCell'\r\n// import TableRow from '@material-ui/core/TableRow'\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery'\r\n// import Dialog from '@material-ui/core/Dialog'\r\n// import DialogActions from '@material-ui/core/DialogActions'\r\n// import DialogContent from '@material-ui/core/DialogContent'\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ExpandIcon from \"../../WellCard/components/svgIcons/ExpandIcon\";\r\nimport { AppContext } from \"../../../AppContext\";\r\n\r\n// Helpers for area calcs\r\nimport { area, convertArea, length } from \"@turf/turf\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    padding: \"0px\"\r\n  },\r\n\r\n  card: {\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontSize: \".75rem\",\r\n    background: \"#011133\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: \"thin\",\r\n    borderColor: \"#011133\",\r\n    width: \"325px\",\r\n    height: \"auto\",\r\n    position: \"relative\",\r\n    top: \"10vh\",\r\n    left: \"10vw\"\r\n  },\r\n\r\n  cardPopup: {\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontSize: \".75rem\",\r\n    background: \"#011133\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: \"thin\",\r\n    borderColor: \"#011133\",\r\n    width: \"325px\",\r\n    height: \"auto\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  cardHeader: {\r\n    padding: \"2%\",\r\n    height: \"15%\"\r\n  },\r\n\r\n  cardTitle: {\r\n    fontWeight: 600,\r\n    fontSize: \"1rem\",\r\n    lineHeight: \"1rem\",\r\n    color: \"#FFFFFF\",\r\n    textTransform: \"uppercase\",\r\n    position: \"relative\",\r\n    height: \"1rem\",\r\n    left: \"7.46%\",\r\n    right: \"39.32%\",\r\n    top: \"calc(50% - 23px/2 - 140px)\"\r\n  },\r\n\r\n  subheader: {\r\n    fontWeight: 300,\r\n    lineHeight: \"16px\",\r\n    color: \"#FFFFFF\",\r\n    position: \"relative\",\r\n    height: \"17px\",\r\n    left: \"7.46%\",\r\n    right: \"58.31%\",\r\n    top: \"calc(50% - 17px/2 - 120px)\"\r\n  },\r\n\r\n  cardAction: {\r\n    color: \"black\",\r\n    width: \"100%\",\r\n    height: \"80%\",\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n    //alignItems: \"flex-start\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  cardContent: {\r\n    height: \"10%\",\r\n    backgroundColor: \"#fff\",\r\n    padding: \"0px\",\r\n    paddingBottom: \"0px\"\r\n  },\r\n  actionWrapper: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\"\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    marginLeft: \"0px\",\r\n    marginBottom: \"15px\"\r\n  },\r\n\r\n  buttonContainer: {\r\n    //height: \"25%\",\r\n    display: \"flex\",\r\n    //paddingRight: \"3%\",\r\n    //paddingLeft: \"3%\",\r\n    backgroundColor: \"#fff\",\r\n    //paddingBottom: \"3%\",\r\n    //\"&:last-child\": { padding: \"0px\" }\r\n    justifyContent: \"space-evenly\"\r\n  },\r\n  button: {\r\n    width: \"40%\",\r\n    //margin: \"3%\",\r\n    justifyContent: \"space-evenly\"\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 265,\r\n    color: \"black\",\r\n    //paddingBottom: 3\r\n  },\r\n  label: {\r\n    background: \"white\",\r\n    padding: \"0px 4px\"\r\n  },\r\n  TextField: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(1),\r\n    minWidth: 265,\r\n    color: \"black\"\r\n  }\r\n}));\r\n\r\nexport default function SpatialDataCard(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    sdType,\r\n    shapeLabel,\r\n    projectName,\r\n    sdNotes,\r\n    sdGrossAcres,\r\n  } = props.selectedFeature.properties;\r\n  const { cardClass = \"card\" } = props;\r\n  const [dataType, setDataType] = useState(sdType);\r\n  const [dataName, setDataName] = useState(shapeLabel);\r\n  const [dataProject, setDataProject] = useState(projectName);\r\n  const [grossAcres, setGrossAcres] = useState(sdGrossAcres);\r\n  const [dataNotes, setDataNotes] = useState(sdNotes);\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n  const [showError, setShowError] = useState(false);\r\n  \r\n\r\n  const inputLabel = useRef(null);\r\n  const [labelWidth, setLabelWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setDataType(sdType);\r\n    setDataName(shapeLabel);\r\n    setDataProject(projectName);\r\n    setDataNotes(sdNotes);\r\n  }, [props.selectedFeature]);\r\n\r\n  useEffect(() => {\r\n    let udName = \"\"\r\n    switch (dataType) {\r\n      case \"interest\":\r\n        udName = \"Area of Interest\";\r\n        break;\r\n      case \"parcel\":\r\n        udName = \"Parcels\";\r\n        break;\r\n      default:\r\n        udName = \"\";\r\n        break;\r\n    }\r\n    if (udName) {\r\n      const layerIndex = stateApp.userDefinedLayers.findIndex(layer => layer.name === udName);\r\n      setStateApp({\r\n        ...stateApp,\r\n        tempCheckedUserDefinedLayers: layerIndex\r\n      });\r\n    } else {\r\n      setStateApp({\r\n        ...stateApp,\r\n        tempCheckedUserDefinedLayers: null\r\n      });\r\n    }\r\n  }, [dataType]);\r\n\r\n  const updateDataNotes = evt => {\r\n    let updatedNotes = evt.target.value;\r\n    setDataNotes(updatedNotes);\r\n  };\r\n  const saveSpatialData = () => {\r\n    if (dataName) {\r\n      const spatialData = {\r\n        sdType: dataType === \"\" ? \"interest\" : dataType,\r\n        shapeLabel: dataName,\r\n        projectName: dataProject,\r\n        sdGrossAcres: grossAcres,\r\n        // sdNotes: dataNotes\r\n      };\r\n      props.saveSpatialData(spatialData, dataType);\r\n  \r\n      const tmpChecked = stateApp.tempCheckedUserDefinedLayers;\r\n      const checkedLayers = stateApp.checkedUserDefinedLayers.slice(0);\r\n      if (tmpChecked != null && stateApp.checkedUserDefinedLayers.indexOf(tmpChecked) === -1) {\r\n        checkedLayers.push(tmpChecked)\r\n      }\r\n      setStateApp({\r\n        ...stateApp,\r\n        checkedUserDefinedLayers: checkedLayers,\r\n        tempCheckedUserDefinedLayers: null\r\n      })\r\n    } else {\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  const closeSpatialDataCard = () => {\r\n    setStateApp({\r\n      ...stateApp,\r\n      tempCheckedUserDefinedLayers: null\r\n    });\r\n    props.closeSpatialDataCard();\r\n  }\r\n\r\n  const deleteSpatialData = () => {\r\n    setStateApp({\r\n      ...stateApp,\r\n      tempCheckedUserDefinedLayers: null\r\n    });\r\n    props.deleteSpatialDataAndShape();\r\n  };\r\n  const calculateLandArea = () => {\r\n    const { selectedFeature } = props;\r\n    if (selectedFeature) {\r\n      if (selectedFeature.geometry.type === \"Polygon\") {\r\n        const areaInSqMeters = area(selectedFeature);\r\n        const areaInAcres = convertArea(areaInSqMeters, \"meters\", \"acres\");\r\n        return `${Math.round(areaInAcres * 100) / 100} acres`;\r\n      }\r\n      if (selectedFeature.geometry.type === \"LineString\") {\r\n        const distanceInMiles = length(selectedFeature, { units: \"miles\" });\r\n        return `${Math.round(distanceInMiles * 100) / 100} miles`;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes[cardClass]}>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        classes={{\r\n          title: classes.cardTitle,\r\n          subheader: classes.subheader\r\n        }}\r\n        title=\"Spatial Data\"\r\n        action={\r\n          <div className={classes.actionWrapper}>\r\n            <IconButton aria-label=\"expand\">\r\n              <ExpandIcon\r\n                viewBox=\"0 0 64 64\"\r\n                color=\"secondary\"\r\n                fontSize=\"small\"\r\n              />\r\n            </IconButton>\r\n\r\n            <IconButton color=\"secondary\" onClick={closeSpatialDataCard}>\r\n              <CloseIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n          </div>\r\n        }\r\n      ></CardHeader>\r\n      <CardActions classes={{ root: classes.cardAction }}>\r\n        {/*Drop-down menu for Boundary Type */}\r\n        <div>\r\n          <FormControl\r\n            required\r\n            variant=\"outlined\"\r\n            className={classes.formControl}\r\n          >\r\n            <InputLabel ref={inputLabel} className={classes.label}> Boundary Type </InputLabel>\r\n            <Select\r\n              value={dataType}\r\n              onChange={evt => setDataType(evt.target.value)}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value=\"interest\">Area of Interest</MenuItem>\r\n              <MenuItem value=\"parcel\">Parcel/Tract</MenuItem>\r\n              {/* {stateApp.currentFeature &&\r\n                stateApp.currentFeature.geometry.type === \"Polygon\" &&\r\n                !stateApp.currentFeature.properties.isCircle && (\r\n                  <MenuItem value=\"title\">Title Opinion</MenuItem>\r\n                )} */}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        {(dataType === \"interest\" || dataType === \"parcel\") && (\r\n          <div style={{ marginLeft: \"0\" }}>\r\n            {/* Text Field for Shape Name */}\r\n            <div className={classes.TextField}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                error={showError}\r\n                //placeholder= \"Enter Name\"\r\n                value={dataName}\r\n                autoComplete=\"disabled\"\r\n                onChange={evt => setDataName(evt.target.value)}\r\n                helperText={showError ? 'Name is required!' : ''}\r\n                required\r\n              ></TextField>\r\n            </div>\r\n            <div className={classes.TextField}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Gross Acres\"\r\n                type=\"text\"\r\n                //placeholder= \"Enter Name\"\r\n                value={grossAcres}\r\n                autoComplete=\"disabled\"\r\n                onChange={evt => setGrossAcres(evt.target.value)}\r\n              ></TextField>\r\n            </div>\r\n\r\n            {/* <div className={classes.TextField}>\r\n           <TextField\r\n          variant=\"outlined\" \r\n          label= \"Project\"\r\n            type=\"text\"\r\n            placeholder=\"Add Project Name\"\r\n            value={dataProject}\r\n            onChange={evt => setDataProject(evt.target.value)}\r\n          ></TextField>\r\n        </div> */}\r\n\r\n            {/* Text Field for Acres covered */}\r\n            <div className={classes.TextField}>\r\n              <TextField\r\n                disabled\r\n                autoComplete=\"disabled\"\r\n                variant=\"outlined\"\r\n                label=\"Calc. Acres\"\r\n                fullWidth\r\n                defaultValue={calculateLandArea()}\r\n              ></TextField>\r\n            </div>\r\n\r\n            {/* Text Field for Notes*/}\r\n            {/* <div className={classes.TextField}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                multiline\r\n                minWidth=\"100%\"\r\n                label=\"Notes\"\r\n                rows=\"6\"\r\n                value={dataNotes}\r\n                onChange={updateDataNotes}\r\n              ></TextField>\r\n            </div> */}\r\n          </div>\r\n        )}\r\n      </CardActions>\r\n      <CardContent className={classes.buttonContainer}>\r\n        {/* save button*/}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          //disableRipple={true}\r\n          //size=\"medium\"\r\n          className={classes.button}\r\n          onClick={saveSpatialData}\r\n          //paddingRight= \"6px\"\r\n          disabled={dataType === \"\"}\r\n        >\r\n          {dataType !== \"title\" ? \"Save\" : \"Next\"}\r\n        </Button>\r\n\r\n        {/* delete button*/}\r\n        <Button\r\n          variant=\"contained\"\r\n          //disableRipple={true}\r\n          // size=\"medium\"\r\n          className={classes.button}\r\n          style={{ backgroundColor: \"light gray\", color: \"dark gray\" }}\r\n          onClick={deleteSpatialData}\r\n        >\r\n          {\" \"}\r\n          Delete\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}