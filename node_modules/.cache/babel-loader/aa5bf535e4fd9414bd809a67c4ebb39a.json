{"ast":null,"code":"const MapboxDraw = require('@mapbox/mapbox-gl-draw');\n\nconst createSupplementaryPoints = require('@mapbox/mapbox-gl-draw/src/lib/create_supplementary_points');\n\nconst moveFeatures = require('@mapbox/mapbox-gl-draw/src/lib/move_features');\n\nconst Constants = require('@mapbox/mapbox-gl-draw/src/constants');\n\nconst constrainFeatureMovement = require('@mapbox/mapbox-gl-draw/src/lib/constrain_feature_movement');\n\nconst distance = require('@turf/distance').default;\n\nconst turfHelpers = require('@turf/helpers');\n\nconst circle = require('@turf/circle').default;\n\nconst createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\n\nconst DirectModeOverride = MapboxDraw.modes.direct_select;\n\nDirectModeOverride.dragFeature = function (state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  this.getSelected().filter(feature => feature.properties.isCircle).map(circle => circle.properties.center).forEach(center => {\n    center[0] += delta.lng;\n    center[1] += delta.lat;\n  });\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectModeOverride.dragVertex = function (state, e, delta) {\n  if (state.feature.properties.isCircle) {\n    const center = state.feature.properties.center;\n    const movedVertex = [e.lngLat.lng, e.lngLat.lat];\n    const radius = distance(turfHelpers.point(center), turfHelpers.point(movedVertex), {\n      units: 'kilometers'\n    });\n    const circleFeature = circle(center, radius);\n    state.feature.incomingCoords(circleFeature.geometry.coordinates);\n    state.feature.properties.radiusInKm = radius;\n  } else {\n    const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n    const selectedCoordPoints = selectedCoords.map(coords => ({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.POINT,\n        coordinates: coords\n      }\n    }));\n    const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n\n    for (let i = 0; i < selectedCoords.length; i++) {\n      const coord = selectedCoords[i];\n      state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n    }\n  }\n};\n\nDirectModeOverride.toDisplayFeatures = function (state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    const supplementaryPoints = geojson.properties.user_isCircle ? createSupplementaryPointsForCircle(geojson) : createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    });\n    supplementaryPoints.forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n\n  this.fireActionable(state);\n};\n\nmodule.exports = DirectModeOverride;","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/node_modules/mapbox-gl-draw-circle/lib/modes/DirectModeOverride.js"],"names":["MapboxDraw","require","createSupplementaryPoints","moveFeatures","Constants","constrainFeatureMovement","distance","default","turfHelpers","circle","createSupplementaryPointsForCircle","DirectModeOverride","modes","direct_select","dragFeature","state","e","delta","getSelected","filter","feature","properties","isCircle","map","center","forEach","lng","lat","dragMoveLocation","lngLat","dragVertex","movedVertex","radius","point","units","circleFeature","incomingCoords","geometry","coordinates","radiusInKm","selectedCoords","selectedCoordPaths","coord_path","getCoordinate","selectedCoordPoints","coords","type","geojsonTypes","FEATURE","POINT","constrainedDelta","i","length","coord","updateCoordinate","toDisplayFeatures","geojson","push","featureId","id","active","activeStates","ACTIVE","supplementaryPoints","user_isCircle","midpoints","selectedPaths","INACTIVE","fireActionable","module","exports"],"mappings":"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","sourcesContent":["const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst createSupplementaryPoints = require('@mapbox/mapbox-gl-draw/src/lib/create_supplementary_points');\nconst moveFeatures = require('@mapbox/mapbox-gl-draw/src/lib/move_features');\nconst Constants = require('@mapbox/mapbox-gl-draw/src/constants');\nconst constrainFeatureMovement = require('@mapbox/mapbox-gl-draw/src/lib/constrain_feature_movement');\nconst distance = require('@turf/distance').default;\nconst turfHelpers = require('@turf/helpers');\nconst circle = require('@turf/circle').default;\nconst createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\n\n\nconst DirectModeOverride = MapboxDraw.modes.direct_select;\n\nDirectModeOverride.dragFeature = function(state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  this.getSelected()\n    .filter(feature => feature.properties.isCircle)\n    .map(circle => circle.properties.center)\n    .forEach(center => {\n      center[0] += delta.lng;\n      center[1] += delta.lat;\n    });\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectModeOverride.dragVertex = function(state, e, delta) {\n  if (state.feature.properties.isCircle) {\n    const center = state.feature.properties.center;\n    const movedVertex = [e.lngLat.lng, e.lngLat.lat];\n    const radius = distance(turfHelpers.point(center), turfHelpers.point(movedVertex), {units: 'kilometers'});\n    const circleFeature = circle(center, radius);\n    state.feature.incomingCoords(circleFeature.geometry.coordinates);\n    state.feature.properties.radiusInKm = radius;\n  } else {\n    const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n    const selectedCoordPoints = selectedCoords.map(coords => ({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.POINT,\n        coordinates: coords\n      }\n    }));\n\n    const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n    for (let i = 0; i < selectedCoords.length; i++) {\n      const coord = selectedCoords[i];\n      state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n    }\n  }\n};\n\nDirectModeOverride.toDisplayFeatures = function (state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    const supplementaryPoints = geojson.properties.user_isCircle ? createSupplementaryPointsForCircle(geojson)\n      : createSupplementaryPoints(geojson, {\n        map: this.map,\n        midpoints: true,\n        selectedPaths: state.selectedCoordPaths\n      });\n    supplementaryPoints.forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n\n}\n\nmodule.exports = DirectModeOverride;"]},"metadata":{},"sourceType":"script"}