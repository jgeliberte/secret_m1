{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Shared\\\\Comments.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"react-avatar\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { AppContext } from \"../../AppContext\";\nimport { COMMENTSBYOBJECTIDQUERY } from \"../../graphQL/useQueryCommentsByObjectId\";\nimport { COMMENTSBYOBJECTSIDS } from \"../../graphQL/useQueryCommentsByObjectsIds\";\nimport { UPSERTCOMMENT } from \"../../graphQL/useMutationUpsertComment\";\nimport { REMOVECOMMENT } from \"../../graphQL/useMutationRemoveComment\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: \"flex\"\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    \"&$checked\": {\n      transform: \"translateX(12px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        opacity: 1,\n        backgroundColor: \"#12ABE0\",\n        borderColor: \"#12ABE0\"\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: \"none\"\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nconst useStyles = makeStyles(theme => ({\n  root: {// backgroundColor: \"#fff\",\n  },\n  title: {\n    fontSize: 10\n  },\n  pos: {\n    marginBottom: 12\n  },\n  content: {\n    height: \"100%\",\n    padding: \"0\",\n    padding: props => props.detailCard ? \"0 23px 0 23px\" : props.handleRightDialogClose ? \"0 0 0 8px\" : \"0\",\n    overflowY: \"auto\",\n    maxHeight: props => props.handleRightDialogClose ? \"none\" : \"60vh\"\n  },\n  list: {\n    width: \"100%\",\n    height: \"100%\",\n    background: \"rgba(255,255,255,0)\",\n    color: \"rgba(23, 170, 221, 1)\",\n    overflowY: \"auto\",\n    padding: 0\n  },\n  listItem: {\n    fontFamily: \"Poppins\",\n    \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n      color: theme.palette.common.black\n    },\n    \"& .MuiListItemText-secondary\": {\n      color: \"rgba(23, 170, 221, 1)\"\n    }\n  },\n  textInput: {\n    width: \"100%\",\n    backgroundColor: \"#fff\"\n  },\n  header: {\n    paddingBottom: \"0\",\n    \"& .MuiTypography-h5\": {\n      fontSize: \"1.2rem \"\n    }\n  },\n  listItemText: {\n    \"& .MuiTypography-body1\": {\n      fontSize: \"0.85rem\"\n    },\n    \"& .MuiTypography-body2\": {\n      fontSize: \"0.7rem\"\n    },\n    \"&  p\": {\n      margin: \"0\"\n    }\n  },\n  avatar: {\n    minWidth: \"50px\"\n  },\n  foodText: {\n    fontSize: \"10px\",\n    color: \"#6e6e6e\",\n    margin: \"0\",\n    textAlign: \"right\",\n    float: \"right\",\n    marginLeft: \"10px\",\n    \"& span\": {\n      fontWeight: \"bold\"\n    },\n    \"& .redColor\": {\n      color: \"rgb(240, 89, 89) !important\"\n    }\n  },\n  emptyInput: {\n    \"& fieldset\": {\n      borderColor: \"rgb(240, 89, 89) !important\"\n    }\n  },\n  switchButtom: {\n    float: \"right\",\n    alignSelf: \"flex-end\",\n    marginRight: 0,\n    \"& span.MuiTypography-body1\": {\n      fontSize: \"0.9rem\"\n    }\n  },\n  switchTextDeselected: {\n    color: \"rgb(141, 141, 141)\"\n  },\n  viewAll: {\n    textDecoration: \"underline\",\n    margin: \"0 0 8px 0\",\n    float: \"right\",\n    color: theme.palette.secondary.main,\n    cursor: \"pointer\",\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      color: \"#757575\"\n    },\n    transition: \"color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\"\n  },\n  closeIcon: {\n    color: theme.palette.secondary.main\n  },\n  sharedCommentLabel: {\n    width: \"fit-content\",\n    margin: \"0\",\n    float: \"left\",\n    color: \"#757575\",\n    fontWeight: \"normal\"\n  },\n  nameAndDateLine: {\n    color: \"rgb(176, 176, 176)\",\n    margin: \"0\",\n    fontWeight: \"normal\"\n  },\n  deleteLine: {\n    textDecoration: \"underline\",\n    color: \"#757575\",\n    margin: \"0\",\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      color: theme.palette.primary.main,\n      cursor: \"pointer\"\n    }\n  }\n}));\nexport default function Comments(props) {\n  //// props.detailCard - to show a version for a detail card ////\n  const [stateApp] = useContext(AppContext);\n  const [commentsArray, setCommentsArray] = useState([]);\n  const [textValue, setTextValue] = useState(\"\");\n  const [loadingComments, setLoadingComments] = useState(true);\n  const [emptyInput, setEmptyInput] = useState(false);\n  const [publicComment, setPublicComment] = useState(true);\n  const classes = useStyles({ ...props,\n    commentsArrayLength: commentsArray.length\n  });\n  const [getCommentsByObjectId, {\n    data: dataComments\n  }] = useLazyQuery(COMMENTSBYOBJECTIDQUERY, {\n    fetchPolicy: \"cache-and-network\"\n  });\n  const [getCommentsByObjectsIds, {\n    data: dataCommentsMultiIds\n  }] = useLazyQuery(COMMENTSBYOBJECTSIDS, {\n    fetchPolicy: \"cache-and-network\"\n  });\n  const [upsertComment] = useMutation(UPSERTCOMMENT);\n  const [removeComment] = useMutation(REMOVECOMMENT); ///////////////////// START FETCHING COMMENTS DATA ////////////////////////////////////////////\n\n  useEffect(() => {\n    setLoadingComments(true);\n\n    if (!props.multipleIds) {\n      getCommentsByObjectId({\n        variables: {\n          objectId: props.targetSourceId\n        }\n      });\n    } else {\n      getCommentsByObjectsIds({\n        variables: {\n          objectsIdsArray: props.multipleIds,\n          userId: stateApp.user.mongoId\n        }\n      });\n    }\n  }, [props.targetSourceId, props.multipleIds]);\n  useEffect(() => {\n    if (dataComments && dataComments.commentsByObjectId) {\n      setCommentsArray(dataComments.commentsByObjectId);\n    }\n\n    setLoadingComments(false);\n  }, [dataComments]);\n  useEffect(() => {\n    if (dataCommentsMultiIds && dataCommentsMultiIds.commentsByObjectsIds) {\n      const checkIfUserMatch = user => {\n        for (let i = 0; i < user.length; i++) {\n          if (user[i]._id !== stateApp.user.mongoId) return false;\n        }\n\n        return user[0];\n      };\n\n      let comments = [];\n\n      for (let i = 0; i < dataCommentsMultiIds.commentsByObjectsIds.length; i++) {\n        const element = dataCommentsMultiIds.commentsByObjectsIds[i];\n\n        if (element.commentedOn.length === props.multipleIds.length && element.public.filter(v => v === publicComment).length === props.multipleIds.length) {\n          comments.push({ ...element,\n            user: checkIfUserMatch(element.user) ? checkIfUserMatch(element.user) : {\n              name: \"\",\n              email: \"\"\n            },\n            public: publicComment\n          });\n        }\n      }\n\n      setCommentsArray(comments);\n    }\n\n    setLoadingComments(false);\n  }, [dataCommentsMultiIds, publicComment]); ///////////////////// INSERTING NEW COMMENT ///////////////////////////////////////////////\n\n  const newCommentCleaner = value => value.trim()[value.trim().length - 1] === \".\" ? value.split(\"\\n\").map(line => {\n    if (line.trim() !== \".\") {\n      return line.trim();\n    }\n  }).join(\"\\n\") : `${value.split(\"\\n\").map(line => {\n    if (line.trim() !== \".\") {\n      return line.trim();\n    }\n  }).join(\"\\n\")}.`;\n\n  const addNewComent = (value, commentedOn) => {\n    upsertComment({\n      variables: {\n        comment: {\n          comment: newCommentCleaner(value),\n          public: publicComment,\n          user: stateApp.user.mongoId,\n          commentedOn,\n          objectType: props.targetLabel\n        }\n      },\n      refetchQueries: [\"getCommentsByObjectId\", \"getCommentsCounter\", \"getCommentsByObjectsIds\"],\n      awaitRefetchQueries: true\n    });\n  };\n\n  const handleEnteringComment = event => {\n    event.persist();\n\n    if (event.target.value.split(\"\\n\").join(\"\").trim() !== \"\" && event.target.value.split(\"\\n\").join(\"\").trim() !== \".\") {\n      if (!props.multipleIds) {\n        addNewComent(event.target.value, props.targetSourceId);\n      } else {\n        for (let i = 0; i < props.multipleIds.length; i++) {\n          addNewComent(event.target.value, props.multipleIds[i]);\n        } // //// adding the new comment to the down list\n        // setCommentsArray((commentsArray) => [\n        //   ...commentsArray,\n        //   {\n        //     ts: Date.now(),\n        //     public: publicComment,\n        //     user: { name: stateApp.user.name, email: stateApp.user.email },\n        //     comment: newCommentCleaner(event.target.value),\n        //   },\n        // ]);\n\n      }\n\n      setEmptyInput(false);\n    } else {\n      setEmptyInput(true);\n    }\n\n    setTextValue(\"\");\n  }; ///////////////////// DELETING A COMMENT ///////////////////////////////////////////////\n\n\n  const handleDeleteClick = comment => {\n    if (!props.multipleIds) removeComment({\n      variables: {\n        commentId: comment._id\n      },\n      refetchQueries: [\"getCommentsByObjectId\", \"getCommentsCounter\", \"getCommentsByObjectsIds\"],\n      awaitRefetchQueries: true\n    });else {\n      for (let i = 0; i < comment.ids.length; i++) {\n        removeComment({\n          variables: {\n            commentId: comment.ids[i]\n          },\n          refetchQueries: [\"getCommentsByObjectId\", \"getCommentsCounter\", \"getCommentsByObjectsIds\"],\n          awaitRefetchQueries: true\n        });\n      }\n    }\n  }; ////////////////////////////////////////////////////////////////////////////////////////\n\n\n  const textFieldHandleChange = e => {\n    if (e.target.value[e.target.value.length - 1] !== `\\\\`) {\n      if (e.target.value[e.target.value.length - 1] !== `\\n`) {\n        setTextValue(e.target.value.split(\"\\n\").map(line => {\n          return capitalizeFirstLetter(line);\n        }).join(\"\\n\"));\n      } else {\n        if (e.target.value[e.target.value.length - 2] !== `\\n`) {\n          setTextValue(`${textValue}.\\n`);\n        }\n      }\n    }\n\n    if (e.target.value.split(\"\\n\").join(\"\").trim() !== \"\" && emptyInput) {\n      setEmptyInput(false);\n    }\n  };\n\n  const compare = (a, b) => {\n    if (a.ts > b.ts) return -1;\n    if (b.ts > a.ts) return 1;\n    return 0;\n  };\n\n  if (!props.multipleIds) commentsArray.sort(compare);\n\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  useEffect(() => {\n    if (props.focus) {\n      document.getElementById(\"commentInput\").focus();\n    }\n  }, [props.focus]);\n  let commentsDisplayedCount = 0;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    style: props.detailCard ? {\n      backgroundColor: \"transparent\",\n      border: \"none\"\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardActions, {\n    style: props.detailCard || props.handleRightDialogClose ? {\n      padding: \"23px 23px 8px 23px\"\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }\n  }, (props.detailCard || props.handleRightDialogClose) && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      minHeight: \"35px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: \"0 0 8px 0\",\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 15\n    }\n  }, \"Recent Comments\"), props.viewAll ? /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.viewAll,\n    onClick: e => {\n      e.preventDefault();\n      props.viewAll(\"comments\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  }, \"View All\") : /*#__PURE__*/React.createElement(IconButton, {\n    onClick: e => {\n      if (props.handleRightDialogClose) props.handleRightDialogClose(e);\n    },\n    size: \"small\",\n    style: {\n      float: \"right\",\n      top: \"-5px\",\n      right: \"-5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    className: classes.closeIcon,\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    style: {\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 13\n    }\n  }, (props.detailCard || props.handleRightDialogClose) && /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.sharedCommentLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 17\n    }\n  }, \"Share comments\"), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: `${classes.switchButtom} ${!publicComment ? classes.switchTextDeselected : \"\"}`,\n    control: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AntSwitch, {\n      checked: publicComment,\n      onChange: () => {\n        setPublicComment(!publicComment);\n      },\n      name: \"checkedC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 21\n      }\n    })),\n    label: !props.detailCard && !props.handleRightDialogClose ? \"Shared\" : \"\",\n    labelPlacement: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: `${classes.textInput} ${emptyInput ? classes.emptyInput : \"\"}`,\n    id: \"commentInput\",\n    variant: \"outlined\",\n    label: props.detailCard || props.handleRightDialogClose ? null : \"Comments\",\n    placeholder: props.detailCard || props.handleRightDialogClose ? \"Add Comments\" : null,\n    multiline: true,\n    rows: \"4\",\n    onChange: e => {\n      textFieldHandleChange(e);\n    },\n    value: textValue,\n    onKeyDown: event => {\n      if (event.key === \"Enter\" && !event.shiftKey) {\n        event.preventDefault();\n        handleEnteringComment(event);\n      }\n    },\n    onBlur: () => {\n      setEmptyInput(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  })), !emptyInput ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.foodText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 17\n    }\n  }, \"Shift+Return\"), \" to add a new line\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.foodText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 17\n    }\n  }, \"Return\"), \" to save\")) : /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.foodText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"redColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 17\n    }\n  }, \"Required Field \"))))), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    style: {\n      paddingBottom: props.detailCard && commentsArray.length > 0 ? \"23px\" : \"0\",\n      height: props.handleRightDialogClose ? \"calc(100vh - 218px)\" : null\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }\n  }, !loadingComments ? /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 11\n    }\n  }, commentsArray.map((comment, index) => props.detailCard ? (publicComment && comment.public || !publicComment && stateApp.user.email === comment.user.email && !comment.public) && (commentsDisplayedCount += 1) && (props.top && props.top < commentsDisplayedCount ? null :\n  /*#__PURE__*/\n  //// ListItem ////\n  React.createElement(React.Fragment, null, commentsDisplayedCount !== 1 && /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      marginTop: \"13px\",\n      marginBottom: \"13px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: classes.nameAndDateLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 23\n    }\n  }, `${comment.user.name} · ${new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  }).format(comment.ts)}`), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"7px\",\n      marginBottom: \"7px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 23\n    }\n  }, comment.comment.split(\"\\n\").map((line, i) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      style: {\n        color: \"#757575\",\n        margin: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 29\n      }\n    }, line);\n  })), /*#__PURE__*/React.createElement(\"h5\", {\n    className: classes.deleteLine,\n    onClick: () => handleDeleteClick(comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 23\n    }\n  }, \"Delete\"))) : //// ListItem  End ////\n  (publicComment && comment.public || !publicComment && stateApp.user.email === comment.user.email && !comment.public) && /*#__PURE__*/React.createElement(ListItem, {\n    key: index,\n    className: classes.listItem,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    name: comment.user.name,\n    size: \"35\",\n    round: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.listItemText,\n    primary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 27\n      }\n    }, comment.comment.split(\"\\n\").map((line, i) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 38\n        }\n      }, line);\n    })),\n    secondary: `${comment.user.name}` + (comment.ids ? \"\" : ` - ${new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    }).format(comment.ts)}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => handleDeleteClick(comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 27\n    }\n  })))))) : /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Shared/Comments.js"],"names":["React","useContext","useState","useEffect","makeStyles","withStyles","useMutation","useLazyQuery","Card","CardActions","CardHeader","CardContent","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","DeleteIcon","TextField","ListItemAvatar","Avatar","FormGroup","FormControlLabel","Switch","CircularProgress","AppContext","COMMENTSBYOBJECTIDQUERY","COMMENTSBYOBJECTSIDS","UPSERTCOMMENT","REMOVECOMMENT","Grid","Divider","CloseIcon","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","borderColor","thumb","boxShadow","track","border","borderRadius","checked","useStyles","title","fontSize","pos","marginBottom","content","props","detailCard","handleRightDialogClose","overflowY","maxHeight","list","background","listItem","fontFamily","black","textInput","header","paddingBottom","listItemText","margin","avatar","minWidth","foodText","textAlign","float","marginLeft","fontWeight","emptyInput","switchButtom","alignSelf","marginRight","switchTextDeselected","viewAll","textDecoration","secondary","main","cursor","transition","closeIcon","sharedCommentLabel","nameAndDateLine","deleteLine","primary","Comments","stateApp","commentsArray","setCommentsArray","textValue","setTextValue","loadingComments","setLoadingComments","setEmptyInput","publicComment","setPublicComment","classes","commentsArrayLength","length","getCommentsByObjectId","data","dataComments","fetchPolicy","getCommentsByObjectsIds","dataCommentsMultiIds","upsertComment","removeComment","multipleIds","variables","objectId","targetSourceId","objectsIdsArray","userId","user","mongoId","commentsByObjectId","commentsByObjectsIds","checkIfUserMatch","i","_id","comments","element","commentedOn","public","filter","v","push","name","email","newCommentCleaner","value","trim","split","map","line","join","addNewComent","comment","objectType","targetLabel","refetchQueries","awaitRefetchQueries","handleEnteringComment","event","persist","target","handleDeleteClick","commentId","ids","textFieldHandleChange","e","capitalizeFirstLetter","compare","a","b","ts","sort","string","charAt","toUpperCase","slice","focus","document","getElementById","commentsDisplayedCount","minHeight","preventDefault","top","right","key","shiftKey","index","marginTop","Intl","DateTimeFormat","year","month","day","hour","minute","format"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"react-avatar\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { AppContext } from \"../../AppContext\";\r\nimport { COMMENTSBYOBJECTIDQUERY } from \"../../graphQL/useQueryCommentsByObjectId\";\r\nimport { COMMENTSBYOBJECTSIDS } from \"../../graphQL/useQueryCommentsByObjectsIds\";\r\nimport { UPSERTCOMMENT } from \"../../graphQL/useMutationUpsertComment\";\r\nimport { REMOVECOMMENT } from \"../../graphQL/useMutationRemoveComment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst AntSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: \"flex\",\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: theme.palette.grey[500],\r\n    \"&$checked\": {\r\n      transform: \"translateX(12px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: \"#12ABE0\",\r\n        borderColor: \"#12ABE0\",\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: \"none\",\r\n  },\r\n  track: {\r\n    border: `1px solid ${theme.palette.grey[500]}`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  checked: {},\r\n}))(Switch);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // backgroundColor: \"#fff\",\r\n  },\r\n  title: {\r\n    fontSize: 10,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  content: {\r\n    height: \"100%\",\r\n    padding: \"0\",\r\n    padding: (props) =>\r\n      props.detailCard\r\n        ? \"0 23px 0 23px\"\r\n        : props.handleRightDialogClose\r\n        ? \"0 0 0 8px\"\r\n        : \"0\",\r\n    overflowY: \"auto\",\r\n    maxHeight: (props) => (props.handleRightDialogClose ? \"none\" : \"60vh\"),\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(255,255,255,0)\",\r\n    color: \"rgba(23, 170, 221, 1)\",\r\n    overflowY: \"auto\",\r\n    padding: 0,\r\n  },\r\n  listItem: {\r\n    fontFamily: \"Poppins\",\r\n    \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n      color: theme.palette.common.black,\r\n    },\r\n    \"& .MuiListItemText-secondary\": {\r\n      color: \"rgba(23, 170, 221, 1)\",\r\n    },\r\n  },\r\n  textInput: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  header: {\r\n    paddingBottom: \"0\",\r\n    \"& .MuiTypography-h5\": { fontSize: \"1.2rem \" },\r\n  },\r\n  listItemText: {\r\n    \"& .MuiTypography-body1\": { fontSize: \"0.85rem\" },\r\n    \"& .MuiTypography-body2\": { fontSize: \"0.7rem\" },\r\n    \"&  p\": {\r\n      margin: \"0\",\r\n    },\r\n  },\r\n  avatar: {\r\n    minWidth: \"50px\",\r\n  },\r\n  foodText: {\r\n    fontSize: \"10px\",\r\n    color: \"#6e6e6e\",\r\n    margin: \"0\",\r\n    textAlign: \"right\",\r\n    float: \"right\",\r\n    marginLeft: \"10px\",\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .redColor\": {\r\n      color: \"rgb(240, 89, 89) !important\",\r\n    },\r\n  },\r\n  emptyInput: {\r\n    \"& fieldset\": {\r\n      borderColor: \"rgb(240, 89, 89) !important\",\r\n    },\r\n  },\r\n  switchButtom: {\r\n    float: \"right\",\r\n    alignSelf: \"flex-end\",\r\n    marginRight: 0,\r\n    \"& span.MuiTypography-body1\": {\r\n      fontSize: \"0.9rem\",\r\n    },\r\n  },\r\n  switchTextDeselected: {\r\n    color: \"rgb(141, 141, 141)\",\r\n  },\r\n  viewAll: {\r\n    textDecoration: \"underline\",\r\n    margin: \"0 0 8px 0\",\r\n    float: \"right\",\r\n    color: theme.palette.secondary.main,\r\n    cursor: \"pointer\",\r\n    fontWeight: \"normal\",\r\n    \"&:hover\": { color: \"#757575\" },\r\n    transition: \"color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n  },\r\n  closeIcon: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  sharedCommentLabel: {\r\n    width: \"fit-content\",\r\n    margin: \"0\",\r\n    float: \"left\",\r\n    color: \"#757575\",\r\n    fontWeight: \"normal\",\r\n  },\r\n  nameAndDateLine: {\r\n    color: \"rgb(176, 176, 176)\",\r\n    margin: \"0\",\r\n    fontWeight: \"normal\",\r\n  },\r\n  deleteLine: {\r\n    textDecoration: \"underline\",\r\n    color: \"#757575\",\r\n    margin: \"0\",\r\n    fontWeight: \"normal\",\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.main,\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Comments(props) {\r\n  //// props.detailCard - to show a version for a detail card ////\r\n  const [stateApp] = useContext(AppContext);\r\n  const [commentsArray, setCommentsArray] = useState([]);\r\n  const [textValue, setTextValue] = useState(\"\");\r\n  const [loadingComments, setLoadingComments] = useState(true);\r\n  const [emptyInput, setEmptyInput] = useState(false);\r\n  const [publicComment, setPublicComment] = useState(true);\r\n  const classes = useStyles({\r\n    ...props,\r\n    commentsArrayLength: commentsArray.length,\r\n  });\r\n\r\n  const [getCommentsByObjectId, { data: dataComments }] = useLazyQuery(\r\n    COMMENTSBYOBJECTIDQUERY,\r\n    {\r\n      fetchPolicy: \"cache-and-network\",\r\n    }\r\n  );\r\n  const [\r\n    getCommentsByObjectsIds,\r\n    { data: dataCommentsMultiIds },\r\n  ] = useLazyQuery(COMMENTSBYOBJECTSIDS, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [upsertComment] = useMutation(UPSERTCOMMENT);\r\n  const [removeComment] = useMutation(REMOVECOMMENT);\r\n\r\n  ///////////////////// START FETCHING COMMENTS DATA ////////////////////////////////////////////\r\n\r\n  useEffect(() => {\r\n    setLoadingComments(true);\r\n    if (!props.multipleIds) {\r\n      getCommentsByObjectId({\r\n        variables: {\r\n          objectId: props.targetSourceId,\r\n        },\r\n      });\r\n    } else {\r\n      getCommentsByObjectsIds({\r\n        variables: {\r\n          objectsIdsArray: props.multipleIds,\r\n          userId: stateApp.user.mongoId,\r\n        },\r\n      });\r\n    }\r\n  }, [props.targetSourceId, props.multipleIds]);\r\n\r\n  useEffect(() => {\r\n    if (dataComments && dataComments.commentsByObjectId) {\r\n      setCommentsArray(dataComments.commentsByObjectId);\r\n    }\r\n    setLoadingComments(false);\r\n  }, [dataComments]);\r\n\r\n  useEffect(() => {\r\n    if (dataCommentsMultiIds && dataCommentsMultiIds.commentsByObjectsIds) {\r\n      const checkIfUserMatch = (user) => {\r\n        for (let i = 0; i < user.length; i++) {\r\n          if (user[i]._id !== stateApp.user.mongoId) return false;\r\n        }\r\n        return user[0];\r\n      };\r\n\r\n      let comments = [];\r\n      for (\r\n        let i = 0;\r\n        i < dataCommentsMultiIds.commentsByObjectsIds.length;\r\n        i++\r\n      ) {\r\n        const element = dataCommentsMultiIds.commentsByObjectsIds[i];\r\n        if (\r\n          element.commentedOn.length === props.multipleIds.length &&\r\n          element.public.filter((v) => v === publicComment).length ===\r\n            props.multipleIds.length\r\n        ) {\r\n          comments.push({\r\n            ...element,\r\n            user: checkIfUserMatch(element.user)\r\n              ? checkIfUserMatch(element.user)\r\n              : { name: \"\", email: \"\" },\r\n            public: publicComment,\r\n          });\r\n        }\r\n      }\r\n\r\n      setCommentsArray(comments);\r\n    }\r\n    setLoadingComments(false);\r\n  }, [dataCommentsMultiIds, publicComment]);\r\n\r\n  ///////////////////// INSERTING NEW COMMENT ///////////////////////////////////////////////\r\n\r\n  const newCommentCleaner = (value) =>\r\n    value.trim()[value.trim().length - 1] === \".\"\r\n      ? value\r\n          .split(\"\\n\")\r\n          .map((line) => {\r\n            if (line.trim() !== \".\") {\r\n              return line.trim();\r\n            }\r\n          })\r\n          .join(\"\\n\")\r\n      : `${value\r\n          .split(\"\\n\")\r\n          .map((line) => {\r\n            if (line.trim() !== \".\") {\r\n              return line.trim();\r\n            }\r\n          })\r\n          .join(\"\\n\")}.`;\r\n\r\n  const addNewComent = (value, commentedOn) => {\r\n    upsertComment({\r\n      variables: {\r\n        comment: {\r\n          comment: newCommentCleaner(value),\r\n          public: publicComment,\r\n          user: stateApp.user.mongoId,\r\n          commentedOn,\r\n          objectType: props.targetLabel,\r\n        },\r\n      },\r\n      refetchQueries: [\r\n        \"getCommentsByObjectId\",\r\n        \"getCommentsCounter\",\r\n        \"getCommentsByObjectsIds\",\r\n      ],\r\n      awaitRefetchQueries: true,\r\n    });\r\n  };\r\n\r\n  const handleEnteringComment = (event) => {\r\n    event.persist();\r\n    if (\r\n      event.target.value.split(\"\\n\").join(\"\").trim() !== \"\" &&\r\n      event.target.value.split(\"\\n\").join(\"\").trim() !== \".\"\r\n    ) {\r\n      if (!props.multipleIds) {\r\n        addNewComent(event.target.value, props.targetSourceId);\r\n      } else {\r\n        for (let i = 0; i < props.multipleIds.length; i++) {\r\n          addNewComent(event.target.value, props.multipleIds[i]);\r\n        }\r\n\r\n        // //// adding the new comment to the down list\r\n        // setCommentsArray((commentsArray) => [\r\n        //   ...commentsArray,\r\n        //   {\r\n        //     ts: Date.now(),\r\n        //     public: publicComment,\r\n        //     user: { name: stateApp.user.name, email: stateApp.user.email },\r\n        //     comment: newCommentCleaner(event.target.value),\r\n        //   },\r\n        // ]);\r\n      }\r\n      setEmptyInput(false);\r\n    } else {\r\n      setEmptyInput(true);\r\n    }\r\n    setTextValue(\"\");\r\n  };\r\n\r\n  ///////////////////// DELETING A COMMENT ///////////////////////////////////////////////\r\n\r\n  const handleDeleteClick = (comment) => {\r\n    if (!props.multipleIds)\r\n      removeComment({\r\n        variables: {\r\n          commentId: comment._id,\r\n        },\r\n        refetchQueries: [\r\n          \"getCommentsByObjectId\",\r\n          \"getCommentsCounter\",\r\n          \"getCommentsByObjectsIds\",\r\n        ],\r\n        awaitRefetchQueries: true,\r\n      });\r\n    else {\r\n      for (let i = 0; i < comment.ids.length; i++) {\r\n        removeComment({\r\n          variables: {\r\n            commentId: comment.ids[i],\r\n          },\r\n          refetchQueries: [\r\n            \"getCommentsByObjectId\",\r\n            \"getCommentsCounter\",\r\n            \"getCommentsByObjectsIds\",\r\n          ],\r\n          awaitRefetchQueries: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  const textFieldHandleChange = (e) => {\r\n    if (e.target.value[e.target.value.length - 1] !== `\\\\`) {\r\n      if (e.target.value[e.target.value.length - 1] !== `\\n`) {\r\n        setTextValue(\r\n          e.target.value\r\n            .split(\"\\n\")\r\n            .map((line) => {\r\n              return capitalizeFirstLetter(line);\r\n            })\r\n            .join(\"\\n\")\r\n        );\r\n      } else {\r\n        if (e.target.value[e.target.value.length - 2] !== `\\n`) {\r\n          setTextValue(`${textValue}.\\n`);\r\n        }\r\n      }\r\n    }\r\n    if (e.target.value.split(\"\\n\").join(\"\").trim() !== \"\" && emptyInput) {\r\n      setEmptyInput(false);\r\n    }\r\n  };\r\n\r\n  const compare = (a, b) => {\r\n    if (a.ts > b.ts) return -1;\r\n    if (b.ts > a.ts) return 1;\r\n\r\n    return 0;\r\n  };\r\n\r\n  if (!props.multipleIds) commentsArray.sort(compare);\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.focus) {\r\n      document.getElementById(\"commentInput\").focus();\r\n    }\r\n  }, [props.focus]);\r\n\r\n  let commentsDisplayedCount = 0;\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={\r\n        props.detailCard\r\n          ? { backgroundColor: \"transparent\", border: \"none\" }\r\n          : {}\r\n      }\r\n    >\r\n      {/* <CardHeader className={classes.header} title=\"Comments\" /> */}\r\n\r\n      <CardActions\r\n        style={\r\n          props.detailCard || props.handleRightDialogClose\r\n            ? {\r\n                padding: \"23px 23px 8px 23px\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        <Grid container>\r\n          {(props.detailCard || props.handleRightDialogClose) && (\r\n            <Grid item xs={12} style={{ minHeight: \"35px\" }}>\r\n              <h4 style={{ margin: \"0 0 8px 0\", float: \"left\" }}>\r\n                Recent Comments\r\n              </h4>\r\n              {props.viewAll ? (\r\n                <h4\r\n                  className={classes.viewAll}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    props.viewAll(\"comments\");\r\n                  }}\r\n                >\r\n                  View All\r\n                </h4>\r\n              ) : (\r\n                <IconButton\r\n                  onClick={(e) => {\r\n                    if (props.handleRightDialogClose)\r\n                      props.handleRightDialogClose(e);\r\n                  }}\r\n                  size=\"small\"\r\n                  style={{ float: \"right\", top: \"-5px\", right: \"-5px\" }}\r\n                >\r\n                  <CloseIcon className={classes.closeIcon} fontSize=\"small\" />\r\n                </IconButton>\r\n              )}\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12} style={{ marginBottom: \"8px\" }}>\r\n            <FormGroup style={{ display: \"block\" }}>\r\n              {(props.detailCard || props.handleRightDialogClose) && (\r\n                <h4 className={classes.sharedCommentLabel}>Share comments</h4>\r\n              )}\r\n              <FormControlLabel\r\n                className={`${classes.switchButtom} ${\r\n                  !publicComment ? classes.switchTextDeselected : \"\"\r\n                }`}\r\n                control={\r\n                  <React.Fragment>\r\n                    <AntSwitch\r\n                      checked={publicComment}\r\n                      onChange={() => {\r\n                        setPublicComment(!publicComment);\r\n                      }}\r\n                      name=\"checkedC\"\r\n                    />\r\n                  </React.Fragment>\r\n                }\r\n                label={\r\n                  !props.detailCard && !props.handleRightDialogClose\r\n                    ? \"Shared\"\r\n                    : \"\"\r\n                }\r\n                labelPlacement=\"start\"\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              className={`${classes.textInput} ${\r\n                emptyInput ? classes.emptyInput : \"\"\r\n              }`}\r\n              id=\"commentInput\"\r\n              variant=\"outlined\"\r\n              label={\r\n                props.detailCard || props.handleRightDialogClose\r\n                  ? null\r\n                  : \"Comments\"\r\n              }\r\n              placeholder={\r\n                props.detailCard || props.handleRightDialogClose\r\n                  ? \"Add Comments\"\r\n                  : null\r\n              }\r\n              multiline\r\n              rows=\"4\"\r\n              onChange={(e) => {\r\n                textFieldHandleChange(e);\r\n              }}\r\n              value={textValue}\r\n              onKeyDown={(event) => {\r\n                if (event.key === \"Enter\" && !event.shiftKey) {\r\n                  event.preventDefault();\r\n                  handleEnteringComment(event);\r\n                }\r\n              }}\r\n              onBlur={() => {\r\n                setEmptyInput(false);\r\n              }}\r\n            />\r\n          </Grid>\r\n          {!emptyInput ? (\r\n            <Grid item xs={12}>\r\n              <p className={classes.foodText}>\r\n                <span>Shift+Return</span> to add a new line\r\n              </p>\r\n              <p className={classes.foodText}>\r\n                <span>Return</span> to save\r\n              </p>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <p className={classes.foodText}>\r\n                <span className=\"redColor\">Required Field </span>\r\n              </p>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </CardActions>\r\n      <CardContent\r\n        className={classes.content}\r\n        style={{\r\n          paddingBottom:\r\n            props.detailCard && commentsArray.length > 0 ? \"23px\" : \"0\",\r\n          height: props.handleRightDialogClose ? \"calc(100vh - 218px)\" : null,\r\n        }}\r\n      >\r\n        {!loadingComments ? (\r\n          <List className={classes.list}>\r\n            {commentsArray.map((comment, index) =>\r\n              props.detailCard\r\n                ? ((publicComment && comment.public) ||\r\n                    (!publicComment &&\r\n                      stateApp.user.email === comment.user.email &&\r\n                      !comment.public)) &&\r\n                  (commentsDisplayedCount += 1) &&\r\n                  (props.top && props.top < commentsDisplayedCount ? null : (\r\n                    //// ListItem ////\r\n                    <>\r\n                      {commentsDisplayedCount !== 1 && (\r\n                        <Divider\r\n                          style={{\r\n                            marginTop: \"13px\",\r\n                            marginBottom: \"13px\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {/* //// name and date line //// */}\r\n                      <h5 className={classes.nameAndDateLine}>{`${\r\n                        comment.user.name\r\n                      } · ${new Intl.DateTimeFormat(\"en-US\", {\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"2-digit\",\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                      }).format(comment.ts)}`}</h5>\r\n\r\n                      {/* //// comment line //// */}\r\n                      <div style={{ marginTop: \"7px\", marginBottom: \"7px\" }}>\r\n                        {comment.comment.split(\"\\n\").map((line, i) => {\r\n                          return (\r\n                            <p\r\n                              key={i}\r\n                              style={{\r\n                                color: \"#757575\",\r\n                                margin: \"0\",\r\n                              }}\r\n                            >\r\n                              {line}\r\n                            </p>\r\n                          );\r\n                        })}\r\n                      </div>\r\n\r\n                      {/* //// delete line //// */}\r\n                      <h5\r\n                        className={classes.deleteLine}\r\n                        onClick={() => handleDeleteClick(comment)}\r\n                      >\r\n                        Delete\r\n                      </h5>\r\n                    </>\r\n                  ))\r\n                : //// ListItem  End ////\r\n                  ((publicComment && comment.public) ||\r\n                    (!publicComment &&\r\n                      stateApp.user.email === comment.user.email &&\r\n                      !comment.public)) && (\r\n                    <ListItem\r\n                      key={index}\r\n                      className={classes.listItem}\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n                      <ListItemAvatar className={classes.avatar}>\r\n                        <Avatar name={comment.user.name} size=\"35\" round />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        className={classes.listItemText}\r\n                        primary={\r\n                          <React.Fragment>\r\n                            {comment.comment.split(\"\\n\").map((line, i) => {\r\n                              return <p key={i}>{line}</p>;\r\n                            })}\r\n                          </React.Fragment>\r\n                        }\r\n                        secondary={\r\n                          `${comment.user.name}` +\r\n                          (comment.ids\r\n                            ? \"\"\r\n                            : ` - ${new Intl.DateTimeFormat(\"en-US\", {\r\n                                year: \"numeric\",\r\n                                month: \"long\",\r\n                                day: \"2-digit\",\r\n                                hour: \"2-digit\",\r\n                                minute: \"2-digit\",\r\n                              }).format(comment.ts)}`)\r\n                        }\r\n                      />\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton\r\n                          edge=\"end\"\r\n                          aria-label=\"delete\"\r\n                          onClick={() => handleDeleteClick(comment)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n            )}\r\n          </List>\r\n        ) : (\r\n          <CircularProgress color=\"secondary\"></CircularProgress>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}