{"ast":null,"code":"var columns = [{\n  idx: 0,\n  key: 'id',\n  name: 'ID',\n  width: 100,\n  left: 0\n}, {\n  idx: 1,\n  key: 'title',\n  name: 'Title',\n  width: 100,\n  left: 100\n}, {\n  idx: 2,\n  key: 'count',\n  name: 'Count',\n  width: 100,\n  left: 200\n}];\nvar _rows = [];\n\nfor (var i = 0; i < 1000; i++) {\n  _rows.push({\n    id: i,\n    title: \"Title \" + i,\n    count: i * 1000\n  });\n}\n\nexport default {\n  columns: columns,\n  rowGetter: function (i) {\n    return _rows[i];\n  },\n  rowsCount: function () {\n    return _rows.length;\n  },\n  cellMetaData: {\n    selected: {\n      idx: 2,\n      rowIdx: 3\n    },\n    dragged: null,\n    copied: null\n  }\n};\nexport var fakeCellMetaData = {\n  rowKey: 'id',\n  onCellClick: function () {\n    return null;\n  },\n  onCellMouseDown: function () {\n    return null;\n  },\n  onCellExpand: function () {\n    return null;\n  },\n  onCellMouseEnter: function () {\n    return null;\n  },\n  onCellContextMenu: function () {\n    return null;\n  },\n  onRowExpandToggle: function () {\n    return null;\n  },\n  onCellDoubleClick: function () {\n    return null;\n  },\n  onDragEnter: function () {\n    return null;\n  }\n};","map":{"version":3,"sources":["../../../src/helpers/test/GridPropHelpers.ts"],"names":[],"mappings":"AASA,IAAM,OAAO,GAA4B,CAAC;AACxC,EAAA,GAAG,EAAE,CADmC;AAExC,EAAA,GAAG,EAAE,IAFmC;AAGxC,EAAA,IAAI,EAAE,IAHkC;AAIxC,EAAA,KAAK,EAAE,GAJiC;AAKxC,EAAA,IAAI,EAAE;AALkC,CAAD,EAMtC;AACD,EAAA,GAAG,EAAE,CADJ;AAED,EAAA,GAAG,EAAE,OAFJ;AAGD,EAAA,IAAI,EAAE,OAHL;AAID,EAAA,KAAK,EAAE,GAJN;AAKD,EAAA,IAAI,EAAE;AALL,CANsC,EAYtC;AACD,EAAA,GAAG,EAAE,CADJ;AAED,EAAA,GAAG,EAAE,OAFJ;AAGD,EAAA,IAAI,EAAE,OAHL;AAID,EAAA,KAAK,EAAE,GAJN;AAKD,EAAA,IAAI,EAAE;AALL,CAZsC,CAAzC;AAoBA,IAAM,KAAK,GAAU,EAArB;;AACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,CAAC,EAA3B,EAA+B;AAC7B,EAAA,KAAK,CAAC,IAAN,CAAW;AACT,IAAA,EAAE,EAAE,CADK;AAET,IAAA,KAAK,EAAE,WAAS,CAFP;AAGT,IAAA,KAAK,EAAE,CAAC,GAAG;AAHF,GAAX;AAKD;;AAED,eAAe;AACb,EAAA,OAAO,EAAA,OADM;AAEb,EAAA,SAAS,EAAT,UAAU,CAAV,EAAmB;AACjB,WAAO,KAAK,CAAC,CAAD,CAAZ;AACD,GAJY;AAKb,EAAA,SAAS,EAAA,YAAA;AACP,WAAO,KAAK,CAAC,MAAb;AACD,GAPY;AAQb,EAAA,YAAY,EAAE;AACZ,IAAA,QAAQ,EAAE;AAAE,MAAA,GAAG,EAAE,CAAP;AAAU,MAAA,MAAM,EAAE;AAAlB,KADE;AAEZ,IAAA,OAAO,EAAE,IAFG;AAGZ,IAAA,MAAM,EAAE;AAHI;AARD,CAAf;AAeA,OAAO,IAAM,gBAAgB,GAAsB;AACjD,EAAA,MAAM,EAAE,IADyC;AAEjD,EAAA,WAAW,EAAE,YAAA;AAAM,WAAA,IAAA;AAAI,GAF0B;AAGjD,EAAA,eAAe,EAAE,YAAA;AAAM,WAAA,IAAA;AAAI,GAHsB;AAIjD,EAAA,YAAY,EAAE,YAAA;AAAM,WAAA,IAAA;AAAI,GAJyB;AAKjD,EAAA,gBAAgB,EAAE,YAAA;AAAM,WAAA,IAAA;AAAI,GALqB;AAMjD,EAAA,iBAAiB,EAAE,YAAA;AAAM,WAAA,IAAA;AAAI,GANoB;AAOjD,EAAA,iBAAiB,EAAE,YAAA;AAAM,WAAA,IAAA;AAAI,GAPoB;AAQjD,EAAA,iBAAiB,EAAE,YAAA;AAAM,WAAA,IAAA;AAAI,GARoB;AASjD,EAAA,WAAW,EAAE,YAAA;AAAM,WAAA,IAAA;AAAI;AAT0B,CAA5C","sourcesContent":["import { CalculatedColumn, CellMetaData } from '../../common/types';\n\nexport interface Row {\n  id?: number;\n  title?: string;\n  count?: number;\n  description?: string;\n}\n\nconst columns: CalculatedColumn<Row>[] = [{\n  idx: 0,\n  key: 'id',\n  name: 'ID',\n  width: 100,\n  left: 0\n}, {\n  idx: 1,\n  key: 'title',\n  name: 'Title',\n  width: 100,\n  left: 100\n}, {\n  idx: 2,\n  key: 'count',\n  name: 'Count',\n  width: 100,\n  left: 200\n}];\n\nconst _rows: Row[] = [];\nfor (let i = 0; i < 1000; i++) {\n  _rows.push({\n    id: i,\n    title: `Title ${i}`,\n    count: i * 1000\n  });\n}\n\nexport default {\n  columns,\n  rowGetter(i: number) {\n    return _rows[i];\n  },\n  rowsCount() {\n    return _rows.length;\n  },\n  cellMetaData: {\n    selected: { idx: 2, rowIdx: 3 },\n    dragged: null,\n    copied: null\n  }\n};\n\nexport const fakeCellMetaData: CellMetaData<Row> = {\n  rowKey: 'id',\n  onCellClick: () => null,\n  onCellMouseDown: () => null,\n  onCellExpand: () => null,\n  onCellMouseEnter: () => null,\n  onCellContextMenu: () => null,\n  onRowExpandToggle: () => null,\n  onCellDoubleClick: () => null,\n  onDragEnter: () => null\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}