{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Dashboard\\\\components\\\\WeatherCard.js\";\nimport { Box, Grid, Paper } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport WbSunnyOutlinedIcon from \"@material-ui/icons/WbSunnyOutlined\";\nimport moment from \"moment\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Iframe from 'react-iframe';\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexgrow: 1\n  },\n  weather: {\n    justifyContent: \"space-between\",\n    textAlign: \"center\"\n  },\n  dateCard: {\n    alignSelf: \"center\",\n    fontWeight: \"bold\"\n  },\n  wpaper: {\n    padding: \"16px\"\n  },\n  ldate: {\n    fontWeight: \"bold\"\n  },\n  wicon: {\n    alignSelf: \"center\"\n  },\n  temp: {\n    alignSelf: \"center\"\n  },\n  openweather: {\n    color: \"#d9530b\"\n  },\n  wdescription: {\n    textTransform: \"capitalize\"\n  }\n}));\n\nconst toFahr = temp => parseInt((parseFloat(temp) - 273.15) * 9 / 5 + 32);\n\nconst getIconUrl = wicon => wicon && `http://openweathermap.org/img/wn/${wicon}@2x.png`;\n\nconst WeatherCard = () => {\n  const [weatherkey] = useState(process.env.REACT_APP_OPENWEATHER_KEY);\n  const classes = useStyles();\n  const [date, setDate] = useState(\"\");\n  const [location, setLocation] = useState({\n    long: -95.3698,\n    lat: 29.7604\n  });\n  const [currWeather, setCurrWeather] = useState({});\n  const [forecast, setForecast] = useState([]);\n  useEffect(() => setDate(moment().format(\"dddd; MMMM Do, YYYY\")), []); /////////// Get user location\n\n  useEffect(() => {\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const {\n            coords: {\n              longitude,\n              latitude\n            }\n          } = pos;\n          return setLocation({\n            long: longitude,\n            lat: latitude\n          });\n        }, e => {\n          console.log(\"Error\", e.message);\n        });\n      } else {\n        console.log(\"Location not supported\");\n      }\n    };\n\n    getLocation();\n  }, []);\n  useEffect(() => {\n    const getWeather = async () => {\n      try {\n        const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${location.lat}&lon=${location.long}&appid=${weatherkey}`);\n        const data = await res.json();\n        const fdata = {\n          country: data.sys.country,\n          name: data.name,\n          icon: data.weather[0].icon,\n          temp: data.main.temp,\n          main: data.weather[0].main,\n          description: data.weather[0].description\n        };\n        return setCurrWeather(fdata);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getWeather();\n  }, [location, weatherkey]);\n  useEffect(() => {\n    const getForecast = async () => {\n      try {\n        const res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${location.lat}&lon=${location.long}&exclude=\"current,minutely,hourly\"&appid=${weatherkey}`);\n        const data = await res.json();\n        const fdata = data.daily.map(f => ({\n          temp: toFahr(f.temp.max),\n          icon: f.weather[0].icon,\n          name: moment.unix(f.dt).format(\"ddd\")\n        }));\n        return setForecast(fdata);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getForecast();\n    console.log('forecast', forecast);\n  }, [location, weatherkey]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    styles: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 8,\n    md: 8,\n    lg: 9,\n    xl: 9,\n    className: classes.dateCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, date === null || date === void 0 ? void 0 : date.split(\";\")[0]), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"left\",\n    className: classes.ldate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, date === null || date === void 0 ? void 0 : date.split(\";\")[1]))), /*#__PURE__*/React.createElement(Grid, {\n    styles: {\n      width: \"100%\"\n    },\n    item: true,\n    xs: 6,\n    sm: 4,\n    md: 4,\n    lg: 3,\n    xl: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 1,\n    className: classes.wpaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 2,\n    className: classes.wicon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, currWeather && /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Weather\",\n    src: getIconUrl(currWeather.icon),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }) || /*#__PURE__*/React.createElement(WbSunnyOutlinedIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, `${(currWeather === null || currWeather === void 0 ? void 0 : currWeather.name) || \"N/A\"}, ${(currWeather === null || currWeather === void 0 ? void 0 : currWeather.country) || \"N/A\"}`), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.wdescription,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, `${(currWeather === null || currWeather === void 0 ? void 0 : currWeather.description) || \"N/A\"}`)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.temp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, `${toFahr(currWeather.temp) || 0}`, \"\\xB0\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: classes.weather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, forecast.map((day, index) => /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, day.name), /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Weather\",\n    src: getIconUrl(day.icon),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 24\n    }\n  }) || /*#__PURE__*/React.createElement(WbSunnyOutlinedIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }\n  }, day.temp, \"\\xB0\"))))))))));\n};\n\nexport default WeatherCard;","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Dashboard/components/WeatherCard.js"],"names":["Box","Grid","Paper","Avatar","makeStyles","Typography","WbSunnyOutlinedIcon","moment","React","Fragment","useEffect","useState","Iframe","useStyles","root","flexgrow","weather","justifyContent","textAlign","dateCard","alignSelf","fontWeight","wpaper","padding","ldate","wicon","temp","openweather","color","wdescription","textTransform","toFahr","parseInt","parseFloat","getIconUrl","WeatherCard","weatherkey","process","env","REACT_APP_OPENWEATHER_KEY","classes","date","setDate","location","setLocation","long","lat","currWeather","setCurrWeather","forecast","setForecast","format","getLocation","navigator","geolocation","getCurrentPosition","pos","coords","longitude","latitude","e","console","log","message","getWeather","res","fetch","data","json","fdata","country","sys","name","icon","main","description","getForecast","daily","map","f","max","unix","dt","width","split","day","index"],"mappings":"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","sourcesContent":["import { Box, Grid, Paper } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport WbSunnyOutlinedIcon from \"@material-ui/icons/WbSunnyOutlined\";\r\nimport moment from \"moment\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport Iframe from 'react-iframe';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root:  {\r\n    flexgrow: 1\r\n  },\r\n  weather: {\r\n    justifyContent: \"space-between\",\r\n    textAlign: \"center\",\r\n  },\r\n  dateCard: {\r\n    alignSelf: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  wpaper: {\r\n    padding: \"16px\",\r\n  },\r\n  ldate: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  wicon: {\r\n    alignSelf: \"center\",\r\n  },\r\n  temp: {\r\n    alignSelf: \"center\",\r\n  },\r\n  openweather: {\r\n    color: \"#d9530b\",\r\n  },\r\n  wdescription: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n}));\r\n\r\nconst toFahr = (temp) =>\r\n  parseInt(((parseFloat(temp) - 273.15) * 9) / 5 + 32);\r\n\r\nconst getIconUrl = (wicon) =>\r\n  wicon && `http://openweathermap.org/img/wn/${wicon}@2x.png`;\r\n\r\nconst WeatherCard = () => {\r\n  const [weatherkey,] = useState(process.env.REACT_APP_OPENWEATHER_KEY);\r\n  const classes = useStyles();\r\n  const [date, setDate] = useState(\"\");\r\n  const [location, setLocation] = useState({ long: -95.3698, lat: 29.7604 });\r\n  const [currWeather, setCurrWeather] = useState({});\r\n  const [forecast, setForecast] = useState([]);\r\n\r\n  useEffect(() => setDate(moment().format(\"dddd; MMMM Do, YYYY\")), []);\r\n\r\n  /////////// Get user location\r\n  useEffect(() => {\r\n    const getLocation = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos) => {\r\n            const {\r\n              coords: { longitude, latitude },\r\n            } = pos;\r\n            return setLocation({ long: longitude, lat: latitude });\r\n          },\r\n          (e) => {\r\n            console.log(\"Error\", e.message);\r\n          }\r\n        );\r\n      } else {\r\n        console.log(\"Location not supported\");\r\n      }\r\n    };\r\n    getLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getWeather = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          `https://api.openweathermap.org/data/2.5/weather?lat=${location.lat}&lon=${location.long}&appid=${weatherkey}`\r\n        );\r\n        const data = await res.json();\r\n        const fdata = {\r\n          country: data.sys.country,\r\n          name: data.name,\r\n          icon: data.weather[0].icon,\r\n          temp: data.main.temp,\r\n          main: data.weather[0].main,\r\n          description: data.weather[0].description,\r\n        };\r\n        return setCurrWeather(fdata);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getWeather();\r\n  }, [location,weatherkey]);\r\n\r\n  useEffect(() => {\r\n    const getForecast = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          `https://api.openweathermap.org/data/2.5/onecall?lat=${location.lat}&lon=${location.long}&exclude=\"current,minutely,hourly\"&appid=${weatherkey}`\r\n        );\r\n        const data = await res.json();\r\n        const fdata = data.daily.map((f) => ({\r\n          temp: toFahr(f.temp.max),\r\n          icon: f.weather[0].icon,\r\n          name: moment.unix(f.dt).format(\"ddd\"),\r\n        }));\r\n        return setForecast(fdata);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getForecast();\r\n    console.log('forecast',forecast)\r\n  }, [location,weatherkey]);\r\n\r\n  return (\r\n    <Fragment styles={{width: \"100%\"}}>\r\n      <Grid item container spacing={2}>\r\n        <Grid item xs={6} sm={8} md={8} lg={9} xl={9} className={classes.dateCard}>\r\n          <Box>\r\n            <Typography variant=\"h6\" align=\"left\">\r\n              {date?.split(\";\")[0]}\r\n            </Typography>\r\n            <Typography variant=\"h4\" align=\"left\" className={classes.ldate}>\r\n              {date?.split(\";\")[1]}\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n\r\n        {/* <Grid item sm={4}>\r\n          <Box>\r\n            <Iframe \r\n              frameborder=\"0\" \r\n              width=\"300\" \r\n              height=\"250\" \r\n              scrolling=\"no\" \r\n              marginwidth=\"0\" \r\n              marginheight=\"0\"\r\n              url=\"https://app.drillinginfo.com/drc/?widget=true\" \r\n              /> \r\n          </Box>\r\n        </Grid> */}\r\n\r\n        <Grid styles={{width: \"100%\"}} item xs={6} sm={4} md={4} lg={3} xl={3}>\r\n          <Paper elevation={1} className={classes.wpaper}>\r\n            <Grid item container direction=\"column\">\r\n              <Grid item container direction=\"row\">\r\n                <Grid item sm={2} className={classes.wicon}>\r\n                  {(currWeather && (\r\n                    <Avatar alt=\"Weather\" src={getIconUrl(currWeather.icon)} />\r\n                  )) || <WbSunnyOutlinedIcon fontSize=\"large\" />}\r\n                </Grid>\r\n                <Grid item sm={8}>\r\n                  <Typography variant=\"body1\">{`${\r\n                    currWeather?.name || \"N/A\"\r\n                  }, ${currWeather?.country || \"N/A\"}`}</Typography>\r\n                  <Typography\r\n                    className={classes.wdescription}\r\n                    variant=\"body2\"\r\n                  >{`${currWeather?.description || \"N/A\"}`}</Typography>\r\n                  {/* <Typography variant=\"caption\">\r\n                    Powered By{\" \"}\r\n                    <Typography\r\n                      variant=\"caption\"\r\n                      className={classes.openweather}\r\n                    >\r\n                      OpenWeatherMap\r\n                    </Typography>\r\n                  </Typography> */}\r\n                </Grid>\r\n                <Grid item sm={2}>\r\n                  <Typography variant=\"h4\" className={classes.temp}>\r\n                    {`${toFahr(currWeather.temp) || 0}`}&deg;\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" className={classes.weather}>\r\n                {forecast.map((day, index) => (\r\n                  <Typography component={\"span\"} key={index}>\r\n                    <Grid item container direction=\"column\">\r\n                      <Typography component={\"span\"}>{day.name}</Typography>\r\n                      {<Avatar alt=\"Weather\" src={getIconUrl(day.icon)} /> || (\r\n                        <WbSunnyOutlinedIcon fontSize=\"large\" />\r\n                      )}\r\n                      <Typography component={\"span\"}>\r\n                        {day.temp}&deg;\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Typography>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n"]},"metadata":{},"sourceType":"module"}