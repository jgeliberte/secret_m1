{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Login\\\\NewUserCard.js\";\nimport React, { useState, useEffect, useContext, Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport EmailSuccess from \"./EmailSuccess\";\nimport { fade, ThemeProvider, withStyles, makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { Card, Button } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AppContext } from \"../../AppContext\";\nimport { Frame } from \"framer\";\nconst useStyles = makeStyles(theme => ({\n  conatiner: {},\n  card: {\n    width: \"500px\",\n    height: \"935px\",\n    //backgroundColor: theme.palette.secondary.dark,\n    backgroundColor: \"#fafafa\",\n    //border: `1px solid ${theme.palette.secondary.main}`,\n    display: \"flex\",\n    flexDirection: \"column\",\n    fontFamily: theme.typography.fontFamily\n  },\n  cardHeader: {\n    color: \"white\",\n    //padding: \"20px 40px\",\n    textAlign: \"center\"\n  },\n  cardFooter: {\n    height: \"15%\",\n    color: \"white\",\n    fontSize: \".75rem\",\n    textAlign: \"left\",\n    marginLeft: \"65px\" // float: 'left'\n\n  },\n  button: {\n    backgroundColor: \"#e4a773\",\n    width: \"225px\",\n    height: \"50px\",\n    marginTop: \"25px\",\n    color: \"#011133\",\n    float: \"left\",\n    marginLeft: \"65px\",\n    marginBottom: \"15px\",\n    \"&:hover\": {\n      backgroundColor: \"#f0cfb3\"\n    }\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.main,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"#e4a773\"\n    }\n  },\n  inputs: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"80%\",\n    position: \"relative\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.42)\",\n    pointerEvents: \"all\",\n    margin: \"2% 10%\"\n  },\n  inputsName: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"39%\",\n    position: \"relative\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.42)\",\n    pointerEvents: \"all\",\n    margin: \"1% 1%\",\n    display: \"inline-flex\"\n  },\n  links: {\n    marginTop: 10,\n    marginBottom: 20,\n    color: \"#011133\"\n  },\n  cardForm: {\n    display: \"contents\",\n    pointerEvents: \"all\"\n  }\n}));\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    // position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"350px\",\n    padding: \"10px\",\n    marginLeft: \"65px\",\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\nexport default function NewUserCard(props) {\n  const [stateApp] = useContext(AppContext);\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [userLastName, setUserlastName] = useState(\"\");\n  const [userCompany, setUserCompany] = useState(\"\");\n  const [userTitle, setUserTitle] = useState(\"\");\n  const [userPhoneNum, setUserPhoneNum] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [sent, setSent] = useState(false);\n  const [emptyInputs, setEmptyInputs] = useState(false); //const [userPassword, setUserPassword] = useState(\"\");\n\n  useEffect(() => {\n    setUserName(\"\");\n    setUserEmail(\"\");\n    setUserPhoneNum(\"\");\n    setUserCompany(\"\");\n  }, [emptyInputs]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(\"Node App Not Deployed\");\n    setSent(true);\n  };\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"shortName\", value => {\n      if (value && userName.length < 2) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }, [userName.length]);\n  console.log(userName, userLastName, userCompany, userPhoneNum, userTitle, userEmail); // useEffect(() => {\n  //   var script = document.createElement(\"script\");\n  //   script.type = \"text/javascript\";\n  //   script.src =\n  //     \"https://m1neral.freshsales.io/web_forms/61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f/form.js' crossorigin='anonymous' id='fs_61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f\";\n  //   script.async = true;\n  //   var x = document.getElementsByTagName(\"script\")[0];\n  //   x.parentNode.insertBefore(script, x);\n  //   document.body.appendChild(script);\n  //   return () => {\n  //     document.body.removeChild(script);\n  //   };\n  // }, []);\n  // const [loaded, error] = useScript(\n  //   'https://m1neral.freshsales.io/web_forms/61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f/form.js'   );\n  // let cachedScripts = [];\n  // function useScript(src) {\n  //   // Keeping track of script loaded and error state\n  //   const [state, setState] = useState({\n  //     loaded: false,\n  //     error: false\n  //   });\n  //   useEffect(\n  //     () => {\n  //       // If cachedScripts array already includes src that means another instance ...\n  //       // ... of this hook already loaded this script, so no need to load again.\n  //       if (cachedScripts.includes(src)) {\n  //         setState({\n  //           loaded: true,\n  //           error: false\n  //         });\n  //       } else {\n  //         cachedScripts.push(src);\n  //         // Create script\n  //         let script = document.createElement('script');\n  //         //script.type = \"application/json\";\n  //         script.src = src;\n  //         script.crossorigin = 'anonymous';\n  //         script.id = 'fs_61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f';\n  //         script.async = true;\n  //         // Script event listener callbacks for load and error\n  //         const onScriptLoad = () => {\n  //           setState({\n  //             loaded: true,\n  //             error: false\n  //           });\n  //         };\n  //         const onScriptError = () => {\n  //           // Remove from cachedScripts we can try loading again\n  //           const index = cachedScripts.indexOf(src);\n  //           if (index >= 0) cachedScripts.splice(index, 1);\n  //           script.remove();\n  //           setState({\n  //             loaded: true,\n  //             error: true\n  //           });\n  //         };\n  //         script.addEventListener('load', onScriptLoad);\n  //         script.addEventListener('error', onScriptError);\n  //         // Add script to document body\n  //         document.body.appendChild(script);\n  //         // Remove event listeners on cleanup\n  //         return () => {\n  //           script.removeEventListener('load', onScriptLoad);\n  //           script.removeEventListener('error', onScriptError);\n  //         };\n  //       }\n  //     },\n  //     [src] // Only re-run effect if script src changes\n  //   );\n  //   return [state.loaded, state.error];\n  // }\n\n  useEffect(() => {\n    const script = document.createElement('script'); // script.src = \"https://use.typekit.net/foobar.js\";\n    // script.async = true;\n\n    script.src = 'https://m1neral.freshsales.io/web_forms/61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f/form.js';\n    script.crossorigin = 'anonymous';\n    script.id = 'fs_61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f';\n    script.async = true;\n    document.getElementById(\"parentID\").appendChild(script);\n    return () => {\n      document.getElementById(\"parentID\").removeChild(script);\n    };\n  }, []);\n  return !sent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.conatiner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    square: true,\n    elevation: 0,\n    color: \"secondary\",\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"parentID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }))) : /*#__PURE__*/React.createElement(EmailSuccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Login/NewUserCard.js"],"names":["React","useState","useEffect","useContext","Component","Link","ValidatorForm","TextValidator","EmailSuccess","fade","ThemeProvider","withStyles","makeStyles","createMuiTheme","InputBase","Card","Button","Paper","AppContext","Frame","useStyles","theme","conatiner","card","width","height","backgroundColor","display","flexDirection","fontFamily","typography","cardHeader","color","textAlign","cardFooter","fontSize","marginLeft","button","marginTop","float","marginBottom","link","textDecoration","palette","secondary","main","cursor","inputs","background","paper","position","borderBottom","pointerEvents","margin","inputsName","links","cardForm","BootstrapInput","root","spacing","input","borderRadius","common","white","border","padding","marginRight","transition","transitions","create","join","boxShadow","primary","borderColor","NewUserCard","props","stateApp","classes","userName","setUserName","userLastName","setUserlastName","userCompany","setUserCompany","userTitle","setUserTitle","userPhoneNum","setUserPhoneNum","userEmail","setUserEmail","sent","setSent","emptyInputs","setEmptyInputs","handleSubmit","e","preventDefault","alert","addValidationRule","value","length","console","log","script","document","createElement","src","crossorigin","id","async","getElementById","appendChild","removeChild"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport EmailSuccess from \"./EmailSuccess\";\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { Card, Button } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { AppContext } from \"../../AppContext\";\r\nimport { Frame } from \"framer\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  conatiner: {},\r\n  card: {\r\n    width: \"500px\",\r\n    height: \"935px\",\r\n    //backgroundColor: theme.palette.secondary.dark,\r\n    backgroundColor: \"#fafafa\",\r\n    //border: `1px solid ${theme.palette.secondary.main}`,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  cardHeader: {\r\n    color: \"white\",\r\n    //padding: \"20px 40px\",\r\n    textAlign: \"center\",\r\n  },\r\n  cardFooter: {\r\n    height: \"15%\",\r\n    color: \"white\",\r\n    fontSize: \".75rem\",\r\n    textAlign: \"left\",\r\n    marginLeft: \"65px\",\r\n    // float: 'left'\r\n  },\r\n  button: {\r\n    backgroundColor: \"#e4a773\",\r\n    width: \"225px\",\r\n    height: \"50px\",\r\n    marginTop: \"25px\",\r\n    color: \"#011133\",\r\n    float: \"left\",\r\n    marginLeft: \"65px\",\r\n    marginBottom: \"15px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#f0cfb3\",\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.secondary.main,\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"#e4a773\",\r\n    },\r\n  },\r\n  inputs: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"80%\",\r\n    position: \"relative\",\r\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.42)\",\r\n    pointerEvents: \"all\",\r\n    margin: \"2% 10%\",\r\n  },\r\n  inputsName: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"39%\",\r\n    position: \"relative\",\r\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.42)\",\r\n    pointerEvents: \"all\",\r\n    margin: \"1% 1%\",\r\n    display: \"inline-flex\",\r\n  },\r\n  links: {\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n    color: \"#011133\",\r\n    },\r\n  cardForm: {\r\n    display: \"contents\",\r\n    pointerEvents: \"all\",\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    // position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"350px\",\r\n    padding: \"10px\",\r\n    marginLeft: \"65px\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"10px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\n\r\n\r\n\r\n\r\nexport default function NewUserCard(props) {\r\n  const [stateApp] = useContext(AppContext);\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userLastName, setUserlastName] = useState(\"\");\r\n  const [userCompany, setUserCompany] = useState(\"\");\r\n  const [userTitle, setUserTitle] = useState(\"\");\r\n  const [userPhoneNum, setUserPhoneNum] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [sent, setSent] = useState(false);\r\n  const [emptyInputs, setEmptyInputs] = useState(false);\r\n\r\n  //const [userPassword, setUserPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setUserName(\"\");\r\n    setUserEmail(\"\");\r\n    setUserPhoneNum(\"\");\r\n    setUserCompany(\"\");\r\n  }, [emptyInputs]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    alert(\"Node App Not Deployed\");\r\n    setSent(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule(\"shortName\", (value) => {\r\n      if (value && userName.length < 2) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }, [userName.length]);\r\n  console.log(\r\n    userName,\r\n    userLastName,\r\n    userCompany,\r\n    userPhoneNum,\r\n    userTitle,\r\n    userEmail\r\n  );\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   var script = document.createElement(\"script\");\r\n  //   script.type = \"text/javascript\";\r\n  //   script.src =\r\n  //     \"https://m1neral.freshsales.io/web_forms/61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f/form.js' crossorigin='anonymous' id='fs_61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f\";\r\n  //   script.async = true;\r\n  \r\n  //   var x = document.getElementsByTagName(\"script\")[0];\r\n  //   x.parentNode.insertBefore(script, x);\r\n  \r\n  //   document.body.appendChild(script);\r\n  \r\n  //   return () => {\r\n  //     document.body.removeChild(script);\r\n  //   };\r\n  // }, []);\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  // const [loaded, error] = useScript(\r\n  //   'https://m1neral.freshsales.io/web_forms/61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f/form.js'   );\r\n\r\n\r\n  // let cachedScripts = [];\r\n  // function useScript(src) {\r\n  //   // Keeping track of script loaded and error state\r\n  //   const [state, setState] = useState({\r\n  //     loaded: false,\r\n  //     error: false\r\n  //   });\r\n  \r\n  //   useEffect(\r\n  //     () => {\r\n  //       // If cachedScripts array already includes src that means another instance ...\r\n  //       // ... of this hook already loaded this script, so no need to load again.\r\n  //       if (cachedScripts.includes(src)) {\r\n  //         setState({\r\n  //           loaded: true,\r\n  //           error: false\r\n  //         });\r\n  //       } else {\r\n  //         cachedScripts.push(src);\r\n  \r\n  //         // Create script\r\n  //         let script = document.createElement('script');\r\n  //         //script.type = \"application/json\";\r\n  //         script.src = src;\r\n  //         script.crossorigin = 'anonymous';\r\n  //         script.id = 'fs_61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f';\r\n  //         script.async = true;\r\n  \r\n  //         // Script event listener callbacks for load and error\r\n  //         const onScriptLoad = () => {\r\n  //           setState({\r\n  //             loaded: true,\r\n  //             error: false\r\n  //           });\r\n  //         };\r\n  \r\n  //         const onScriptError = () => {\r\n  //           // Remove from cachedScripts we can try loading again\r\n  //           const index = cachedScripts.indexOf(src);\r\n  //           if (index >= 0) cachedScripts.splice(index, 1);\r\n  //           script.remove();\r\n  \r\n  //           setState({\r\n  //             loaded: true,\r\n  //             error: true\r\n  //           });\r\n  //         };\r\n  \r\n  //         script.addEventListener('load', onScriptLoad);\r\n  //         script.addEventListener('error', onScriptError);\r\n  \r\n  //         // Add script to document body\r\n  //         document.body.appendChild(script);\r\n  \r\n  //         // Remove event listeners on cleanup\r\n  //         return () => {\r\n  //           script.removeEventListener('load', onScriptLoad);\r\n  //           script.removeEventListener('error', onScriptError);\r\n  //         };\r\n  //       }\r\n  //     },\r\n  //     [src] // Only re-run effect if script src changes\r\n  //   );\r\n  \r\n  //   return [state.loaded, state.error];\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n  \r\n    // script.src = \"https://use.typekit.net/foobar.js\";\r\n    // script.async = true;\r\n\r\n    script.src = 'https://m1neral.freshsales.io/web_forms/61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f/form.js';\r\n    script.crossorigin = 'anonymous';\r\n    script.id = 'fs_61c2b9f6feb20e6bc13b4c2d9beedea203e1fbbd4fb1993979372f393dee5b6f';\r\n    script.async = true;\r\n\r\n  \r\n    document.getElementById(\"parentID\").appendChild(script);\r\n  \r\n    return () => {\r\n      document.getElementById(\"parentID\").removeChild(script);\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return !sent ? (\r\n    \r\n    <div  className={classes.conatiner}>\r\n      {/* {loaded && !error ? <div /> : <b>Something went wrong!</b>} */}\r\n\r\n      <Card\r\n        square={true}\r\n        elevation={0}\r\n        color=\"secondary\"\r\n        className={classes.card}\r\n      >\r\n        {/* <div className={classes.cardHeader}>\r\n          <div style={{ marginTop: \"5px\", fontSize: \"1rem\" }}>\r\n            Sign up as a buyer, financial institution or energy company.\r\n          </div>\r\n        </div> */}\r\n\r\n        {/* <Card className={classes.cardForm}> */}\r\n{/* \r\n        <div\r\n          style={{\r\n            marginTop: \"75px\",\r\n            fontSize: \"24px\",\r\n            fontWeight: \"900\",\r\n            fontFamily: \"Tahoma, Geneva, sans-serif\",\r\n            textAlign: \"left\",\r\n            paddingLeft: \"65px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          Get in touch\r\n        </div> */}\r\n\r\n\r\n        <div id='parentID' />\r\n\r\n        {/* <div\r\n          style={{\r\n            marginTop: \"15px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"900\",\r\n            fontFamily: \"Tahoma, Geneva, sans-serif\",\r\n            color: \"white\",\r\n            textAlign: \"left\",\r\n            paddingLeft: \"65px\",\r\n          }}\r\n        >\r\n          FULL NAME\r\n        </div> */}\r\n\r\n        {/* <BootstrapInput\r\n          type=\"fname\"\r\n          // label=\"Email\"\r\n          variant=\"outlined\"\r\n          // error={emailFlags.error}\r\n          // placeholder={emailFlags.placeholder}\r\n          // autoFocus={emailFlags.autoFocus}\r\n          autoComplete=\"true\"\r\n          // onKeyDown={e => onEnterKey(e)}\r\n          // className={classes.inputs}\r\n          onChange={(e) => setUserName(e.target.value)}\r\n          // onBlur={() => validateData(\"email\", userEmail, setEmailFlags)}\r\n          value={userName}\r\n        /> */}\r\n\r\n        {/* \r\n<div \r\n            style={{ \r\n              marginTop: \"15px\", \r\n              fontSize: '14px',\r\n              fontWeight: '900',\r\n              fontFamily: \"Tahoma, Geneva, sans-serif\",\r\n              color: 'white',\r\n              textAlign: 'left',\r\n              paddingLeft: '65px' }}\r\n            >\r\n            LAST NAME\r\n        </div>\r\n\r\n        <BootstrapInput \r\n                type=\"lname\"\r\n                // label=\"Email\"\r\n                variant=\"outlined\"\r\n                // error={emailFlags.error}\r\n                // placeholder={emailFlags.placeholder}\r\n                // autoFocus={emailFlags.autoFocus}\r\n                autoComplete= \"true\"\r\n                // onKeyDown={e => onEnterKey(e)}\r\n                // className={classes.inputs}\r\n                // onChange={e => setUserEmail(e.target.value)}\r\n                // onBlur={() => validateData(\"email\", userEmail, setEmailFlags)}\r\n                value={userEmail}\r\n                />                 */}\r\n\r\n        {/* <div\r\n          style={{\r\n            marginTop: \"15px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"900\",\r\n            fontFamily: \"Tahoma, Geneva, sans-serif\",\r\n            color: \"white\",\r\n            textAlign: \"left\",\r\n            paddingLeft: \"65px\",\r\n          }}\r\n        >\r\n          EMAIL\r\n        </div>\r\n\r\n        <BootstrapInput\r\n          type=\"email\"\r\n          // label=\"Email\"\r\n          variant=\"outlined\"\r\n          // error={emailFlags.error}\r\n          // placeholder={emailFlags.placeholder}\r\n          // autoFocus={emailFlags.autoFocus}\r\n          autoComplete=\"true\"\r\n          // onKeyDown={e => onEnterKey(e)}\r\n          // className={classes.inputs}\r\n          onChange={(e) => setUserEmail(e.target.value)}\r\n          // onBlur={() => validateData(\"email\", userEmail, setEmailFlags)}\r\n          value={userEmail}\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"15px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"900\",\r\n            fontFamily: \"Tahoma, Geneva, sans-serif\",\r\n            color: \"white\",\r\n            textAlign: \"left\",\r\n            paddingLeft: \"65px\",\r\n          }}\r\n        >\r\n          COMPANY NAME\r\n        </div> */}\r\n\r\n        {/* <BootstrapInput\r\n          type=\"company\"\r\n          // label=\"Email\"\r\n          variant=\"outlined\"\r\n          // error={emailFlags.error}\r\n          // placeholder={emailFlags.placeholder}\r\n          // autoFocus={emailFlags.autoFocus}\r\n          autoComplete=\"true\"\r\n          // onKeyDown={e => onEnterKey(e)}\r\n          // className={classes.inputs}\r\n          onChange={(e) => setUserCompany(e.target.value)}\r\n          // onBlur={() => validateData(\"email\", userEmail, setEmailFlags)}\r\n          value={userCompany}\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"15px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"900\",\r\n            fontFamily: \"Tahoma, Geneva, sans-serif\",\r\n            color: \"white\",\r\n            textAlign: \"left\",\r\n            paddingLeft: \"65px\",\r\n          }}\r\n        >\r\n          PHONE\r\n        </div> */}\r\n\r\n        {/* <BootstrapInput\r\n          type=\"mobile\"\r\n          // label=\"Email\"\r\n          variant=\"outlined\"\r\n          // error={emailFlags.error}\r\n          // placeholder={emailFlags.placeholder}\r\n          // autoFocus={emailFlags.autoFocus}\r\n          autoComplete=\"true\"\r\n          // onKeyDown={e => onEnterKey(e)}\r\n          // className={classes.inputs}\r\n          onChange={(e) => setUserPhoneNum(e.target.value)}\r\n          // onBlur={() => validateData(\"email\", userEmail, setEmailFlags)}\r\n          value={userPhoneNum}\r\n        /> */}\r\n\r\n        {/* <div \r\n            style={{ \r\n              marginTop: \"15px\", \r\n              fontSize: '14px',\r\n              fontWeight: '900',\r\n              fontFamily: \"Tahoma, Geneva, sans-serif\",\r\n              color: 'white',\r\n              textAlign: 'left',\r\n              paddingLeft: '65px' }}\r\n            >\r\n            OFFICE PHONE\r\n        </div>\r\n\r\n        <BootstrapInput \r\n                type=\"office\"\r\n                // label=\"Email\"\r\n                variant=\"outlined\"\r\n                // error={emailFlags.error}\r\n                // placeholder={emailFlags.placeholder}\r\n                // autoFocus={emailFlags.autoFocus}\r\n                autoComplete= \"true\"\r\n                // onKeyDown={e => onEnterKey(e)}\r\n                // className={classes.inputs}\r\n                // onChange={e => setUserEmail(e.target.value)}\r\n                // onBlur={() => validateData(\"email\", userEmail, setEmailFlags)}\r\n                value={userEmail}\r\n                /> */}\r\n\r\n        {/* <ValidatorForm\r\n            onSubmit={handleSubmit}\r\n            onError={errors => console.log(errors)}\r\n            method=\"POST\"\r\n          >\r\n            <TextValidator\r\n              className={classes.inputsName}\r\n              type=\"text\"\r\n              label=\"Fist Name\"\r\n              variant=\"filled\"\r\n              validators={[\"shortName\", \"required\"]}\r\n              errorMessages={[\"this field is required\", \"Name is not valid\"]}\r\n              onChange={e => setUserName(e.target.value)}\r\n              value={userName}\r\n            />\r\n            <TextValidator\r\n              className={classes.inputsName}\r\n              type=\"text\"\r\n              label=\"Last Name\"\r\n              variant=\"filled\"\r\n              validators={[\"shortName\", \"required\"]}\r\n              errorMessages={[\"this field is required\", \"Last Name is not valid\"]}\r\n              onChange={e => setUserlastName(e.target.value)}\r\n              value={userLastName}\r\n            />\r\n            <TextValidator\r\n              className={classes.inputs}\r\n              type=\"text\"\r\n              label=\"Company\"\r\n              variant=\"filled\"\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n              onChange={e => setUserCompany(e.target.value)}\r\n              value={userCompany}\r\n            />\r\n            <TextValidator\r\n              className={classes.inputs}\r\n              type=\"text\"\r\n              label=\"Title\"\r\n              variant=\"filled\"\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n              onChange={e => setUserTitle(e.target.value)}\r\n              value={userTitle}\r\n            />\r\n            <TextValidator\r\n              className={classes.inputs}\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              variant=\"filled\"\r\n              validators={[\"required\", \"isEmail\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n              onChange={e => setUserEmail(e.target.value)}\r\n              value={userEmail}\r\n            />\r\n            <TextValidator\r\n              className={classes.inputs}\r\n              type=\"text\"\r\n              label=\"Phone Number\"\r\n              variant=\"filled\"\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n              onChange={e => setUserPhoneNum(e.target.value)}\r\n              value={userPhoneNum}\r\n            />\r\n\r\n          </ValidatorForm> */}\r\n        {/* <a\r\n          href={\r\n            userName.trim() !== \"\"\r\n              ? `mailto:info@m1neral.com?subject=\"Access Request ${\r\n                  stateApp.signUpUserType\r\n                }\"&body=\"${\r\n                  userName.trim() !== \"\" ? \"Name:\" + userName.trim() : \"\"\r\n                }${\r\n                  userEmail.trim() !== \"\" ? \"   Email:\" + userEmail.trim() : \"\"\r\n                }${\r\n                  userCompany.trim() !== \"\"\r\n                    ? \"   Company:\" + userCompany.trim()\r\n                    : \"\"\r\n                }${\r\n                  userPhoneNum.trim() !== \"\"\r\n                    ? \"   Phone:\" + userPhoneNum.trim()\r\n                    : \"\"\r\n                }\"`\r\n              : \"#\"\r\n          }\r\n          target={userName.trim() !== \"\" ? \"_blank\" : null}\r\n          onClick={() => {\r\n            setEmptyInputs(!emptyInputs);\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            disableElevation\r\n            type=\"submit\"\r\n            className={classes.button}\r\n\r\n            //onKeyDown={e => onEnterKey(e)}\r\n          >\r\n            REQUEST ACCESS\r\n          </Button>\r\n        </a> */}\r\n\r\n\r\n\r\n\r\n        {/* <div className={classes.cardFooter}> */}\r\n          {/* <div>\r\n            By signing up, you agree to the{\" \"}\r\n            <a\r\n              href=\"https://www.m1neral.com\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{marginLeft: '10px'}} \r\n              className={classes.link}\r\n            >\r\n              Terms and Conditions\r\n            </a>\r\n          </div> */}\r\n          {/* <div className={classes.links}>\r\n            Already have an account?{\" \"}\r\n            <Link\r\n              to=\"/\"\r\n              style={{ marginLeft: \"10px\" }}\r\n              className={classes.link}\r\n            >\r\n              {\" \"}\r\n              Sign In\r\n            </Link>\r\n          </div> */}\r\n        {/* </div> */}\r\n      </Card>\r\n    </div>\r\n  ) : (\r\n    <EmailSuccess />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}