{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Shared\\\\Deals.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { AppContext } from \"../../AppContext\";\nimport { TransactContext } from \"../Transact/TransactContext\";\nimport { UPDATETRANSACTION } from \"../../graphQL/useMutationUpdateTransaction\";\nimport { TRANSACTIONDATA } from \"../../graphQL/useQueryTransactionData\";\nimport Dialog from \"../Transact/components/dialog\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#fff\"\n  },\n  timelineItemRight: {\n    \"&:before\": {\n      content: \"none\"\n    }\n  },\n  timelineText: {\n    \"& .MuiTypography-body1\": {\n      fontSize: \"0.85rem\"\n    },\n    \"& .MuiTypography-body2\": {\n      fontSize: \"0.7rem\"\n    },\n    \"&  p\": {\n      margin: \"0\"\n    }\n  },\n  blue: {\n    color: theme.palette.secondary.main\n  },\n  todayDot: {\n    fontSize: \"8px\"\n  }\n}));\nlet formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\nexport default function Activities({\n  contact,\n  ...props\n}) {\n  var _data$transactionData6;\n\n  const [wonDeals, setWonDeals] = useState([]); // deal closed\n\n  const [lostDeals, setLostDeals] = useState([]); // deal rejected\n\n  const [activeDeals, setActiveDeals] = useState([]); // all other deals\n\n  const [allDeals, setAllDeals] = useState([]); // all other deals\n\n  const [updateTransaction] = useMutation(UPDATETRANSACTION);\n  const [stateApp, setStateApp] = useContext(AppContext);\n  const [getTransactionData, {\n    data,\n    loading\n  }] = useLazyQuery(TRANSACTIONDATA); // const [stateTransact, setStateTransact] = useContext(TransactContext);\n\n  useEffect(() => {\n    if (stateApp.user && stateApp.user.mongoId) {\n      getTransactionData({\n        variables: {\n          userId: stateApp.user.mongoId\n        }\n      });\n    }\n  }, [stateApp.user]);\n  const classes = useStyles();\n  const stringData = JSON.stringify(data);\n  useEffect(() => {\n    var _data$transactionData, _data$transactionData2;\n\n    if (!loading && (data === null || data === void 0 ? void 0 : (_data$transactionData = data.transactionData) === null || _data$transactionData === void 0 ? void 0 : (_data$transactionData2 = _data$transactionData.allData) === null || _data$transactionData2 === void 0 ? void 0 : _data$transactionData2.lanes) && data.transactionData.allData.lanes.length > 0) {\n      var _data$transactionData3, _data$transactionData4;\n\n      const lanes = data === null || data === void 0 ? void 0 : (_data$transactionData3 = data.transactionData) === null || _data$transactionData3 === void 0 ? void 0 : (_data$transactionData4 = _data$transactionData3.allData) === null || _data$transactionData4 === void 0 ? void 0 : _data$transactionData4.lanes; // get all deals\n\n      const all = [];\n      lanes.forEach(deal => {\n        deal.cards.forEach(card => {\n          if ((contact === null || contact === void 0 ? void 0 : contact._id) === card.contactId) all.push(card);\n        });\n      });\n      console.log(\"all: \", all);\n      setAllDeals(all);\n    }\n  }, [contact, stringData, data, loading]);\n  useEffect(() => {\n    let lost = [];\n    let won = [];\n    let others = [];\n    allDeals.forEach(card => {\n      if (card.laneId === \"lane5\") lost.push(card);else if (card.laneId === \"lane4\") won.push(card);else others.push(card);\n    });\n    setWonDeals(won);\n    setLostDeals(lost);\n    setActiveDeals(others);\n  }, [allDeals]);\n\n  const getDealStatus = laneId => {\n    if (laneId === \"lane5\") return \"Lost\";else if (laneId === \"lane4\") return \"Won\";else return \"Active\";\n  };\n\n  const sumOpenDeals = () => {\n    let sum = 0;\n    activeDeals.forEach(card => sum += parseFloat(card.label.split(\"$\").join(\"\").split(\",\").join(\"\")));\n    return formatter.format(sum);\n  };\n\n  const sumWonDeals = () => {\n    let sum = 0;\n    wonDeals.forEach(card => sum += parseFloat(card.label.split(\"$\").join(\"\").split(\",\").join(\"\")));\n    return formatter.format(sum);\n  };\n\n  const handleDataChange = newData => {\n    var _data$transactionData5;\n\n    if (data === null || data === void 0 ? void 0 : (_data$transactionData5 = data.transactionData) === null || _data$transactionData5 === void 0 ? void 0 : _data$transactionData5._id) {\n      updateTransaction({\n        variables: {\n          transactionId: data.transactionData._id,\n          transaction: {\n            allData: newData,\n            user: stateApp.user.mongoId\n          }\n        },\n        refetchQueries: [\"getTransactionData\"],\n        awaitRefetchQueries: true\n      });\n    }\n  };\n\n  const handleOpenDialog = () => {\n    setStateApp(stateApp => ({ ...stateApp,\n      dealDialog: true,\n      activeDeal: {\n        laneId: null,\n        cardId: null\n      }\n    }));\n  };\n\n  return !loading && /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    transactData: data === null || data === void 0 ? void 0 : (_data$transactionData6 = data.transactionData) === null || _data$transactionData6 === void 0 ? void 0 : _data$transactionData6.allData,\n    handleDataChange: handleDataChange,\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"button\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Deals\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleOpenDialog // gutterBottom\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, \"Add Deal\")))), allDeals && allDeals.length > 0 ? /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, sumOpenDeals()), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, activeDeals.length, \" Open Deals\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, sumWonDeals()), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, wonDeals.length, \" Won Deals\"))), /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, \"Amount\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, \"Status\")))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, allDeals.map(deal => /*#__PURE__*/React.createElement(TableRow, {\n    key: deal.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, deal.title), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, deal.label), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, getDealStatus(deal.laneId))))))) : /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, \"No deals found\"));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Shared/Deals.js"],"names":["React","useState","useEffect","useContext","useMutation","useLazyQuery","makeStyles","Card","Button","CardActions","CardContent","Table","TableBody","TableCell","TableHead","TableRow","Grid","Typography","AppContext","TransactContext","UPDATETRANSACTION","TRANSACTIONDATA","Dialog","useStyles","theme","root","backgroundColor","timelineItemRight","content","timelineText","fontSize","margin","blue","color","palette","secondary","main","todayDot","formatter","Intl","NumberFormat","style","currency","Activities","contact","props","wonDeals","setWonDeals","lostDeals","setLostDeals","activeDeals","setActiveDeals","allDeals","setAllDeals","updateTransaction","stateApp","setStateApp","getTransactionData","data","loading","user","mongoId","variables","userId","classes","stringData","JSON","stringify","transactionData","allData","lanes","length","all","forEach","deal","cards","card","_id","contactId","push","console","log","lost","won","others","laneId","getDealStatus","sumOpenDeals","sum","parseFloat","label","split","join","format","sumWonDeals","handleDataChange","newData","transactionId","transaction","refetchQueries","awaitRefetchQueries","handleOpenDialog","dealDialog","activeDeal","cardId","display","justifyContent","textAlign","table","map","id","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { AppContext } from \"../../AppContext\";\r\nimport { TransactContext } from \"../Transact/TransactContext\";\r\nimport { UPDATETRANSACTION } from \"../../graphQL/useMutationUpdateTransaction\";\r\nimport { TRANSACTIONDATA } from \"../../graphQL/useQueryTransactionData\";\r\nimport Dialog from \"../Transact/components/dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  timelineItemRight: {\r\n    \"&:before\": {\r\n      content: \"none\",\r\n    },\r\n  },\r\n\r\n  timelineText: {\r\n    \"& .MuiTypography-body1\": { fontSize: \"0.85rem\" },\r\n    \"& .MuiTypography-body2\": { fontSize: \"0.7rem\" },\r\n    \"&  p\": {\r\n      margin: \"0\",\r\n    },\r\n  },\r\n  blue: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  todayDot: {\r\n    fontSize: \"8px\",\r\n  },\r\n}));\r\n\r\nlet formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n});\r\n\r\nexport default function Activities({ contact, ...props }) {\r\n  const [wonDeals, setWonDeals] = useState([]); // deal closed\r\n  const [lostDeals, setLostDeals] = useState([]); // deal rejected\r\n  const [activeDeals, setActiveDeals] = useState([]); // all other deals\r\n  const [allDeals, setAllDeals] = useState([]); // all other deals\r\n  const [updateTransaction] = useMutation(UPDATETRANSACTION);\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n  const [getTransactionData, { data, loading }] = useLazyQuery(TRANSACTIONDATA);\r\n  // const [stateTransact, setStateTransact] = useContext(TransactContext);\r\n\r\n  useEffect(() => {\r\n    if (stateApp.user && stateApp.user.mongoId) {\r\n      getTransactionData({\r\n        variables: {\r\n          userId: stateApp.user.mongoId,\r\n        },\r\n      });\r\n    }\r\n  }, [stateApp.user]);\r\n\r\n  const classes = useStyles();\r\n  const stringData = JSON.stringify(data);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !loading &&\r\n      data?.transactionData?.allData?.lanes &&\r\n      data.transactionData.allData.lanes.length > 0\r\n    ) {\r\n      const lanes = data?.transactionData?.allData?.lanes;\r\n\r\n      // get all deals\r\n      const all = [];\r\n      lanes.forEach((deal) => {\r\n        deal.cards.forEach((card) => {\r\n          if (contact?._id === card.contactId) all.push(card);\r\n        });\r\n      });\r\n      console.log(\"all: \", all);\r\n      setAllDeals(all);\r\n    }\r\n  }, [contact, stringData, data, loading]);\r\n\r\n  useEffect(() => {\r\n    let lost = [];\r\n    let won = [];\r\n    let others = [];\r\n    allDeals.forEach((card) => {\r\n      if (card.laneId === \"lane5\") lost.push(card);\r\n      else if (card.laneId === \"lane4\") won.push(card);\r\n      else others.push(card);\r\n    });\r\n\r\n    setWonDeals(won);\r\n    setLostDeals(lost);\r\n    setActiveDeals(others);\r\n  }, [allDeals]);\r\n\r\n  const getDealStatus = (laneId) => {\r\n    if (laneId === \"lane5\") return \"Lost\";\r\n    else if (laneId === \"lane4\") return \"Won\";\r\n    else return \"Active\";\r\n  };\r\n\r\n  const sumOpenDeals = () => {\r\n    let sum = 0;\r\n    activeDeals.forEach(\r\n      (card) =>\r\n        (sum += parseFloat(card.label.split(\"$\").join(\"\").split(\",\").join(\"\")))\r\n    );\r\n    return formatter.format(sum);\r\n  };\r\n\r\n  const sumWonDeals = () => {\r\n    let sum = 0;\r\n    wonDeals.forEach(\r\n      (card) =>\r\n        (sum += parseFloat(card.label.split(\"$\").join(\"\").split(\",\").join(\"\")))\r\n    );\r\n    return formatter.format(sum);\r\n  };\r\n\r\n  const handleDataChange = (newData) => {\r\n    if (data?.transactionData?._id) {\r\n      updateTransaction({\r\n        variables: {\r\n          transactionId: data.transactionData._id,\r\n          transaction: { allData: newData, user: stateApp.user.mongoId },\r\n        },\r\n        refetchQueries: [\"getTransactionData\"],\r\n        awaitRefetchQueries: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setStateApp((stateApp) => ({\r\n      ...stateApp,\r\n      dealDialog: true,\r\n      activeDeal: {\r\n        laneId: null,\r\n        cardId: null,\r\n      },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    !loading && (\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <Dialog\r\n          transactData={data?.transactionData?.allData}\r\n          handleDataChange={handleDataChange}\r\n          contact={contact}\r\n        />\r\n        <CardActions>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"button\" gutterBottom>\r\n                Deals\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={handleOpenDialog}\r\n                // gutterBottom\r\n              >\r\n                Add Deal\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </CardActions>\r\n        {allDeals && allDeals.length > 0 ? (\r\n          <CardContent>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <Typography variant=\"h5\">{sumOpenDeals()}</Typography>\r\n\r\n                <Typography variant=\"caption\" gutterBottom>\r\n                  {activeDeals.length} Open Deals\r\n                </Typography>\r\n              </div>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Typography variant=\"h5\">{sumWonDeals()}</Typography>\r\n\r\n                <Typography variant=\"caption\" gutterBottom>\r\n                  {wonDeals.length} Won Deals\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <Table className={classes.table} size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <strong>Name</strong>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <strong>Amount</strong>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <strong>Status</strong>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {allDeals.map((deal) => (\r\n                  <TableRow key={deal.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {deal.title}\r\n                    </TableCell>\r\n                    <TableCell>{deal.label}</TableCell>\r\n                    <TableCell>{getDealStatus(deal.laneId)}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        ) : (\r\n          <CardContent>No deals found</CardContent>\r\n        )}\r\n      </Card>\r\n    )\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}