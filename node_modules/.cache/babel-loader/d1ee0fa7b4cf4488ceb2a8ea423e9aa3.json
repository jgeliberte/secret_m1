{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\WellCard\\\\WellCard.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport { WellCardContext } from \"./WellCardContext\";\nimport { ExpandableCardContext } from \"../ExpandableCard/ExpandableCardContext\"; //material-ui components\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\"; //custom components\n\nimport WellIcon from \"./components/svgIcons/WellIcon\";\nimport ExpandIcon from \"./components/svgIcons/ExpandIcon\"; //import ShrinkIcon from './components/svgIcons/ShrinkIcon';\n//import TrackIcon from './components/svgIcons/TrackIcon'\n\nimport ProductionIcon from \"./components/svgIcons/ProductionIcon\";\nimport OwnershipIcon from \"./components/svgIcons/OwnershipIcon\";\nimport Link from \"@material-ui/core/Link\";\nimport moment from \"moment\";\nimport WellCardDetails from \"./WellCardDetails\"; //import { WellData } from './data/welldata'\n\nimport TrackToggleButton from \"../Shared/TrackToggleButton\";\nimport useQueryWell from \"../../graphQL/useQueryWell\";\nimport { useLazyQuery } from \"@apollo/react-hooks\"; // import { VERTEXEDGESQUERY } from \"../../graphQL/useQueryVertexEdges\";/////////////////\n\nimport { WELLSUMMARYDETAILQUERY } from \"../../graphQL/useQueryWellSummaryDetail\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    // overflowY: \"auto !important\",\n    borderStyle: \"none\",\n    height: \"100%\"\n  },\n  title: {\n    fontFamily: \"Poppins\",\n    color: \"#FFFFFF\",\n    fontSize: \"15px\"\n    /* fontStyle: 'normal',\r\n    fontWeight: 600,\r\n    fontSize: '15px',\r\n    lineHeight: '22px',\r\n    color: '#FFFFFF',\r\n    textTransform: 'uppercase',\r\n    position: 'relative',\r\n    height: '23px',\r\n    top:'2px',\r\n    left:\"5px\" */\n    //left: '7.46%',\n    //right: '39.32%',\n    //top: 'calc(50% - 23px/2 - 140px)'\n\n  },\n  subheader: {\n    fontFamily: \"Poppins\",\n    color: \"#FFFFFF\",\n    fontSize: \"11px\"\n    /*fontStyle: 'normal',\r\n    fontWeight: 300,\r\n    fontSize: '11px',\r\n    lineHeight: '16px',\r\n    color: '#FFFFFF',\r\n    position: 'relative',\r\n    height: '17px',\r\n    top:'8px',\r\n    left:\"5px\"\r\n     left: '7.46%',\r\n    right: '58.31%',\r\n    top: 'calc(50% - 17px/2 - 120px)' */\n\n  },\n  avatar: {\n    backgroundColor: \"black\",\n    color: \"white\",\n    width: \"38px\",\n    height: \"38px\",\n    margin: \"0px\"\n  },\n  content: {\n    backgroundColor: \"#efefef\",\n    // overflowY: \"auto\",\n    padding: \"0 !important\",\n    height: \"100%\"\n  },\n  cardAction: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    backgroundColor: \"#fff\"\n  },\n  table: {\n    width: \"100%\",\n    height: \"100%\",\n    margin: \"0px\",\n    padding: \"0px\",\n    borderStyle: \"none\"\n  },\n  rowGrey: {\n    background: \"#F6F6F6\",\n    border: \"0px\"\n  },\n  rowWhite: {\n    background: \"#FFF\",\n    border: \"0px\"\n  },\n  cell1: {\n    border: \"0px\",\n    fontFamily: \"Poppins\",\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    lineHeight: \"18px\",\n    color: \"#757679\"\n  },\n  link_permit: {\n    border: \"0px\",\n    fontFamily: \"Poppins\",\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    lineHeight: \"18px\",\n    color: \"#757679\",\n    padding: \"5px\",\n    alignContent: \"center\",\n    background: \"#F6F6F6\",\n    border: \"0px\"\n  },\n  cell2: {\n    border: \"0px\",\n    fontFamily: \"Poppins\",\n    fontStyle: \"normal\",\n    fontWeight: 300,\n    fontSize: \"12px\",\n    lineHeight: \"18px\",\n    color: \"#75767A\"\n  },\n  text1: {\n    fontFamily: \"Poppins\",\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    lineHeight: \"18px\",\n    color: \"#011133\"\n  },\n  text2: {\n    fontFamily: \"Poppins\",\n    fontStyle: \"normal\",\n    fontWeight: 300,\n    fontSize: \"12px\",\n    lineHeight: \"18px\",\n    color: \"#000\"\n  },\n  iconContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  loadingWrapper: {\n    width: \"400px\"\n  }\n}));\n\nconst formatDateString = dateString => {\n  if (!dateString) return \"--\";\n  return new Date(dateString).toLocaleDateString();\n};\n\nconst formatBOE = boe => {\n  if (!boe || isNaN(boe)) return \"--\";\n  return Math.round(boe).toLocaleString();\n};\n\nexport default function WellCard() {\n  const [stateApp, setStateApp] = useContext(AppContext);\n  const [stateExpandableCard, setStateExpandableCard] = useContext(ExpandableCardContext);\n  const [stateWellCard, setStateWellCard] = useContext(WellCardContext); // const [\n  //   getVertexEdges,\n  //   { loading: loadingGraph, data: dataGraph },\n  // ] = useLazyQuery(VERTEXEDGESQUERY);\n\n  const [getWellSummaryDetail, {\n    loading: loadingWellSummary,\n    data: dataWellSummary\n  }] = useLazyQuery(WELLSUMMARYDETAILQUERY);\n  const [target, setTarget] = useState(null);\n  const [summary, setSummary] = useState(null);\n  const [source, setSource] = useState(null);\n  const theme = useTheme();\n  const classes = useStyles();\n  useEffect(() => {\n    // console.log(\"stateApp.user\", stateApp.user);\n    if (!source) {\n      setSource({\n        sourceId: stateApp.user.id,\n        label: \"user\",\n        name: stateApp.user.name,\n        type: \"vertex\",\n        properties: []\n      });\n    } //  else {\n    //   getVertexEdges({\n    //     variables: { source: source, edgeLabel: \"tracks\", targetLabel: \"well\" },\n    //   });\n    // }\n\n  }, [stateApp.user, source]); // useEffect(() => {\n  //   if (dataGraph) {\n  //     if (dataGraph.vertexEdges) {\n  //       if (dataGraph.vertexEdges.sourceIds) {\n  //         if (dataGraph.vertexEdges.sourceIds.length > 0) {\n  //           dataGraph.vertexEdges.sourceIds.forEach((id) => {\n  //             if (stateApp.selectedWell.id === id) {\n  //               let trackedWell = target || stateApp.selectedWell;\n  //               trackedWell.isTracked = true;\n  //               setTarget(trackedWell);\n  //             }\n  //           });\n  //         }\n  //       }\n  //     }\n  //   }\n  // }, [stateApp.user, stateApp.selectedWell, dataGraph]);\n\n  useEffect(() => {\n    getWellSummaryDetail({\n      variables: {\n        id: stateApp.selectedWell.id\n      }\n    });\n  }, [stateApp.selectedWell]);\n  useEffect(() => {\n    if (dataWellSummary) {\n      setSummary(dataWellSummary.wellSummaryDetail[0]);\n    } else {\n      setSummary(null);\n    }\n  }, [dataWellSummary]); //make fire and forget call to REST api so that it begins to cache other well related api calls\n\n  const {\n    data,\n    loading,\n    error\n  } = useQueryWell(stateApp.selectedWell.id); //console.log('fireForget',data)\n\n  /* useEffect(() => {\r\n    setStateApp(state => ({ ...state, selectedWell: props.selectedWell }))\r\n   \r\n  }, [props.selectedWell, props.isSelectedWellLoading, setStateWellCard]) */\n\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xl\"));\n\n  const handleOpenDetails = () => {\n    setStateWellCard(state => ({ ...state,\n      openWellDetails: true\n    }));\n  };\n\n  const handleCloseDetails = () => {\n    setStateWellCard(state => ({ ...state,\n      openWellDetails: false\n    }));\n  };\n\n  const handleCloseWellCard = () => {\n    setStateApp(state => ({ ...state,\n      popupOpen: false\n    }));\n    let popUps = document.getElementsByClassName(\"mapboxgl-popup\");\n    if (popUps[0]) popUps[0].remove();\n  };\n\n  const convertDate = unixStamp => {\n    const date = moment.utc(unixStamp).format(\"MM/DD/YYYY\");\n\n    if (unixStamp === \"null\") {\n      return \"--\";\n    } else if (unixStamp === null) {\n      return \"--\";\n    } else if (unixStamp === undefined) {\n      return \"--\";\n    } else {\n      return date;\n    }\n  };\n\n  console.log(stateApp.selectedWell);\n\n  if (stateApp.selectedWell.wellStatus !== \"Permit\") {\n    return stateApp.selectedWell ? !stateExpandableCard.expanded ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        padding: \"9px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardActions, {\n      classes: {\n        root: classes.cardAction\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.iconContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(WellIcon, {\n      htmlColor: \"black\",\n      viewBox: \"0 0 32 31\",\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      className: classes.text1,\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }, \"Well Status\"), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      className: classes.text2,\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, stateApp.selectedWell.wellStatus ? stateApp.selectedWell.wellStatus : \"--\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.iconContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ProductionIcon, {\n      htmlColor: \"black\",\n      viewBox: \"0 0 39 31\",\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      className: classes.text1,\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, \"Last 12 Prod\"), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      className: classes.text2,\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, `${formatBOE(stateApp.selectedWell.lastTwelveMonthBOE)} BOE`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.iconContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(OwnershipIcon, {\n      htmlColor: \"black\",\n      viewBox: \"0 0 45 31\",\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      className: classes.text1,\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    }, \"Owners\"), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      className: classes.text2,\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }, stateApp.selectedWell.ownerCount ? stateApp.selectedWell.ownerCount : \"--\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.iconContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      variant: \"circle\",\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, stateApp.selectedWell.wellBoreProfile ? stateApp.selectedWell.wellBoreProfile.substring(0, 1) : \"H\", \" \"), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      className: classes.text1,\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }\n    }, \"Profile\"), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      className: classes.text2,\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }\n    }, stateApp.selectedWell.wellBoreProfile ? stateApp.selectedWell.wellBoreProfile : \"--\"))), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      size: \"small\",\n      \"aria-label\": \"well table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.rowGrey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell1,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }\n    }, \"API\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell2,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }\n    }, stateApp.selectedWell.api ? stateApp.selectedWell.api : \"--\")), /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.rowWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell1,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 21\n      }\n    }, \"Well Type\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell2,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }\n    }, stateApp.selectedWell.wellType ? stateApp.selectedWell.wellType : \"--\")), /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.rowGrey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell1,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }\n    }, \"Permit Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell2,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }\n    }, \" \", convertDate(stateApp.selectedWell.permitApprovedDate))), /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.rowWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell1,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }\n    }, \"Spud Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell2,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }\n    }, \" \", convertDate(stateApp.selectedWell.spudDate))), /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.rowGrey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell1,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }\n    }, \"Completion Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell2,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 21\n      }\n    }, \" \", convertDate(stateApp.selectedWell.completionDate))), /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.rowWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell1,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 21\n      }\n    }, \"First Prod Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.cell2,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }\n    }, convertDate(stateApp.selectedWell.firstProductionDate)))))))) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WellCardDetails, {\n      target: target,\n      summary: summary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 15\n      }\n    })))) : /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 7\n      }\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/WellCard/WellCard.js"],"names":["React","useEffect","useContext","useState","AppContext","WellCardContext","ExpandableCardContext","makeStyles","useTheme","Card","CircularProgress","CardHeader","CardContent","CardActions","Avatar","IconButton","Typography","Table","TableBody","TableCell","TableRow","useMediaQuery","Dialog","DialogActions","DialogContent","CloseIcon","MyLocationIcon","WellIcon","ExpandIcon","ProductionIcon","OwnershipIcon","Link","moment","WellCardDetails","TrackToggleButton","useQueryWell","useLazyQuery","WELLSUMMARYDETAILQUERY","useStyles","theme","card","borderStyle","height","title","fontFamily","color","fontSize","subheader","avatar","backgroundColor","width","margin","content","padding","cardAction","flexGrow","display","justifyContent","table","rowGrey","background","border","rowWhite","cell1","fontStyle","fontWeight","lineHeight","link_permit","alignContent","cell2","text1","text2","iconContainer","flexDirection","alignItems","loadingWrapper","formatDateString","dateString","Date","toLocaleDateString","formatBOE","boe","isNaN","Math","round","toLocaleString","WellCard","stateApp","setStateApp","stateExpandableCard","setStateExpandableCard","stateWellCard","setStateWellCard","getWellSummaryDetail","loading","loadingWellSummary","data","dataWellSummary","target","setTarget","summary","setSummary","source","setSource","classes","sourceId","user","id","label","name","type","properties","variables","selectedWell","wellSummaryDetail","error","fullScreen","breakpoints","down","handleOpenDetails","state","openWellDetails","handleCloseDetails","handleCloseWellCard","popupOpen","popUps","document","getElementsByClassName","remove","convertDate","unixStamp","date","utc","format","undefined","console","log","wellStatus","expanded","root","lastTwelveMonthBOE","ownerCount","wellBoreProfile","substring","api","wellType","permitApprovedDate","spudDate","completionDate","firstProductionDate"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { AppContext } from \"../../AppContext\";\r\nimport { WellCardContext } from \"./WellCardContext\";\r\nimport { ExpandableCardContext } from \"../ExpandableCard/ExpandableCardContext\";\r\n\r\n//material-ui components\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\n//custom components\r\nimport WellIcon from \"./components/svgIcons/WellIcon\";\r\nimport ExpandIcon from \"./components/svgIcons/ExpandIcon\";\r\n//import ShrinkIcon from './components/svgIcons/ShrinkIcon';\r\n//import TrackIcon from './components/svgIcons/TrackIcon'\r\nimport ProductionIcon from \"./components/svgIcons/ProductionIcon\";\r\nimport OwnershipIcon from \"./components/svgIcons/OwnershipIcon\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport moment from \"moment\";\r\n\r\nimport WellCardDetails from \"./WellCardDetails\";\r\n//import { WellData } from './data/welldata'\r\n\r\nimport TrackToggleButton from \"../Shared/TrackToggleButton\";\r\n\r\nimport useQueryWell from \"../../graphQL/useQueryWell\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\n// import { VERTEXEDGESQUERY } from \"../../graphQL/useQueryVertexEdges\";/////////////////\r\nimport { WELLSUMMARYDETAILQUERY } from \"../../graphQL/useQueryWellSummaryDetail\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    // overflowY: \"auto !important\",\r\n    borderStyle: \"none\",\r\n    height: \"100%\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Poppins\",\r\n    color: \"#FFFFFF\",\r\n    fontSize: \"15px\",\r\n    /* fontStyle: 'normal',\r\n    fontWeight: 600,\r\n    fontSize: '15px',\r\n    lineHeight: '22px',\r\n    color: '#FFFFFF',\r\n    textTransform: 'uppercase',\r\n    position: 'relative',\r\n    height: '23px',\r\n    top:'2px',\r\n    left:\"5px\" */\r\n    //left: '7.46%',\r\n    //right: '39.32%',\r\n    //top: 'calc(50% - 23px/2 - 140px)'\r\n  },\r\n  subheader: {\r\n    fontFamily: \"Poppins\",\r\n    color: \"#FFFFFF\",\r\n    fontSize: \"11px\",\r\n    /*fontStyle: 'normal',\r\n    fontWeight: 300,\r\n    fontSize: '11px',\r\n    lineHeight: '16px',\r\n    color: '#FFFFFF',\r\n    position: 'relative',\r\n    height: '17px',\r\n    top:'8px',\r\n    left:\"5px\"\r\n     left: '7.46%',\r\n    right: '58.31%',\r\n    top: 'calc(50% - 17px/2 - 120px)' */\r\n  },\r\n\r\n  avatar: {\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    width: \"38px\",\r\n    height: \"38px\",\r\n    margin: \"0px\",\r\n  },\r\n  content: {\r\n    backgroundColor: \"#efefef\",\r\n    // overflowY: \"auto\",\r\n    padding: \"0 !important\",\r\n    height: \"100%\",\r\n  },\r\n  cardAction: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    margin: \"0px\",\r\n    padding: \"0px\",\r\n    borderStyle: \"none\",\r\n  },\r\n  rowGrey: {\r\n    background: \"#F6F6F6\",\r\n    border: \"0px\",\r\n  },\r\n  rowWhite: {\r\n    background: \"#FFF\",\r\n    border: \"0px\",\r\n  },\r\n  cell1: {\r\n    border: \"0px\",\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 600,\r\n    fontSize: \"12px\",\r\n    lineHeight: \"18px\",\r\n    color: \"#757679\",\r\n  },\r\n\r\n  link_permit: {\r\n    border: \"0px\",\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 600,\r\n    fontSize: \"12px\",\r\n    lineHeight: \"18px\",\r\n    color: \"#757679\",\r\n    padding: \"5px\",\r\n    alignContent: \"center\",\r\n    background: \"#F6F6F6\",\r\n    border: \"0px\",\r\n  },\r\n\r\n  cell2: {\r\n    border: \"0px\",\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 300,\r\n    fontSize: \"12px\",\r\n    lineHeight: \"18px\",\r\n    color: \"#75767A\",\r\n  },\r\n  text1: {\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 600,\r\n    fontSize: \"12px\",\r\n    lineHeight: \"18px\",\r\n    color: \"#011133\",\r\n  },\r\n  text2: {\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 300,\r\n    fontSize: \"12px\",\r\n    lineHeight: \"18px\",\r\n    color: \"#000\",\r\n  },\r\n  iconContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  loadingWrapper: {\r\n    width: \"400px\",\r\n  },\r\n}));\r\n\r\nconst formatDateString = (dateString) => {\r\n  if (!dateString) return \"--\";\r\n\r\n  return new Date(dateString).toLocaleDateString();\r\n};\r\n\r\nconst formatBOE = (boe) => {\r\n  if (!boe || isNaN(boe)) return \"--\";\r\n\r\n  return Math.round(boe).toLocaleString();\r\n};\r\n\r\nexport default function WellCard() {\r\n  const [stateApp, setStateApp] = useContext(AppContext);\r\n  const [stateExpandableCard, setStateExpandableCard] = useContext(\r\n    ExpandableCardContext\r\n  );\r\n  const [stateWellCard, setStateWellCard] = useContext(WellCardContext);\r\n  // const [\r\n  //   getVertexEdges,\r\n  //   { loading: loadingGraph, data: dataGraph },\r\n  // ] = useLazyQuery(VERTEXEDGESQUERY);\r\n  const [\r\n    getWellSummaryDetail,\r\n    { loading: loadingWellSummary, data: dataWellSummary },\r\n  ] = useLazyQuery(WELLSUMMARYDETAILQUERY);\r\n  const [target, setTarget] = useState(null);\r\n  const [summary, setSummary] = useState(null);\r\n  const [source, setSource] = useState(null);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    // console.log(\"stateApp.user\", stateApp.user);\r\n    if (!source) {\r\n      setSource({\r\n        sourceId: stateApp.user.id,\r\n        label: \"user\",\r\n        name: stateApp.user.name,\r\n        type: \"vertex\",\r\n        properties: [],\r\n      });\r\n    }\r\n    //  else {\r\n    //   getVertexEdges({\r\n    //     variables: { source: source, edgeLabel: \"tracks\", targetLabel: \"well\" },\r\n    //   });\r\n    // }\r\n  }, [stateApp.user, source]);\r\n\r\n  // useEffect(() => {\r\n  //   if (dataGraph) {\r\n  //     if (dataGraph.vertexEdges) {\r\n  //       if (dataGraph.vertexEdges.sourceIds) {\r\n  //         if (dataGraph.vertexEdges.sourceIds.length > 0) {\r\n  //           dataGraph.vertexEdges.sourceIds.forEach((id) => {\r\n  //             if (stateApp.selectedWell.id === id) {\r\n  //               let trackedWell = target || stateApp.selectedWell;\r\n  //               trackedWell.isTracked = true;\r\n  //               setTarget(trackedWell);\r\n  //             }\r\n  //           });\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }, [stateApp.user, stateApp.selectedWell, dataGraph]);\r\n\r\n  useEffect(() => {\r\n    getWellSummaryDetail({\r\n      variables: { id: stateApp.selectedWell.id },\r\n    });\r\n  }, [stateApp.selectedWell]);\r\n\r\n  useEffect(() => {\r\n    if (dataWellSummary) {\r\n      setSummary(dataWellSummary.wellSummaryDetail[0]);\r\n    } else {\r\n      setSummary(null);\r\n    }\r\n  }, [dataWellSummary]);\r\n\r\n  //make fire and forget call to REST api so that it begins to cache other well related api calls\r\n  const { data, loading, error } = useQueryWell(stateApp.selectedWell.id);\r\n  //console.log('fireForget',data)\r\n  /* useEffect(() => {\r\n    setStateApp(state => ({ ...state, selectedWell: props.selectedWell }))\r\n   \r\n  }, [props.selectedWell, props.isSelectedWellLoading, setStateWellCard]) */\r\n\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xl\"));\r\n\r\n  const handleOpenDetails = () => {\r\n    setStateWellCard((state) => ({ ...state, openWellDetails: true }));\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setStateWellCard((state) => ({ ...state, openWellDetails: false }));\r\n  };\r\n  const handleCloseWellCard = () => {\r\n    setStateApp((state) => ({ ...state, popupOpen: false }));\r\n    let popUps = document.getElementsByClassName(\"mapboxgl-popup\");\r\n    if (popUps[0]) popUps[0].remove();\r\n  };\r\n\r\n  const convertDate = (unixStamp) => {\r\n    const date = moment.utc(unixStamp).format(\"MM/DD/YYYY\");\r\n\r\n    if (unixStamp === \"null\") {\r\n      return \"--\";\r\n    } else if (unixStamp === null) {\r\n      return \"--\";\r\n    } else if (unixStamp === undefined) {\r\n      return \"--\";\r\n    } else {\r\n      return date;\r\n    }\r\n  };\r\n  console.log(stateApp.selectedWell);\r\n  if (stateApp.selectedWell.wellStatus !== \"Permit\") {\r\n    return stateApp.selectedWell ? (\r\n      !stateExpandableCard.expanded ? (\r\n        <div style={{height: \"100%\", padding: \"9px\" }}>\r\n          <Card>\r\n            <CardActions\r\n              classes={{\r\n                root: classes.cardAction,\r\n              }}\r\n            >\r\n              <div className={classes.iconContainer}>\r\n                <WellIcon\r\n                  htmlColor=\"black\"\r\n                  viewBox=\"0 0 32 31\"\r\n                  fontSize=\"large\"\r\n                />\r\n\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.text1}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Well Status\r\n                </Typography>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.text2}\r\n                  variant=\"caption\"\r\n                >\r\n                  {stateApp.selectedWell.wellStatus\r\n                    ? stateApp.selectedWell.wellStatus\r\n                    : \"--\"}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.iconContainer}>\r\n                <ProductionIcon\r\n                  htmlColor=\"black\"\r\n                  viewBox=\"0 0 39 31\"\r\n                  fontSize=\"large\"\r\n                />\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.text1}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Last 12 Prod\r\n                </Typography>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.text2}\r\n                  variant=\"caption\"\r\n                >\r\n                  {`${formatBOE(stateApp.selectedWell.lastTwelveMonthBOE)} BOE`}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.iconContainer}>\r\n                <OwnershipIcon\r\n                  htmlColor=\"black\"\r\n                  viewBox=\"0 0 45 31\"\r\n                  fontSize=\"large\"\r\n                />\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.text1}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Owners\r\n                </Typography>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.text2}\r\n                  variant=\"caption\"\r\n                >\r\n                  {stateApp.selectedWell.ownerCount\r\n                    ? stateApp.selectedWell.ownerCount\r\n                    : \"--\"}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.iconContainer}>\r\n                <Avatar variant=\"circle\" className={classes.avatar}>\r\n                  {stateApp.selectedWell.wellBoreProfile\r\n                    ? stateApp.selectedWell.wellBoreProfile.substring(0, 1)\r\n                    : \"H\"}{\" \"}\r\n                </Avatar>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.text1}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Profile\r\n                </Typography>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.text2}\r\n                  variant=\"caption\"\r\n                >\r\n                  {stateApp.selectedWell.wellBoreProfile\r\n                    ? stateApp.selectedWell.wellBoreProfile\r\n                    : \"--\"}\r\n                </Typography>\r\n              </div>\r\n            </CardActions>\r\n            <CardContent className={classes.content}>\r\n              <Table\r\n                className={classes.table}\r\n                size=\"small\"\r\n                aria-label=\"well table\"\r\n              >\r\n                <TableBody>\r\n                  <TableRow className={classes.rowGrey}>\r\n                    <TableCell className={classes.cell1} align=\"left\">\r\n                      API\r\n                    </TableCell>\r\n                    <TableCell className={classes.cell2} align=\"right\">\r\n                      {stateApp.selectedWell.api\r\n                        ? stateApp.selectedWell.api\r\n                        : \"--\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow className={classes.rowWhite}>\r\n                    <TableCell className={classes.cell1} align=\"left\">\r\n                      Well Type\r\n                    </TableCell>\r\n                    <TableCell className={classes.cell2} align=\"right\">\r\n                      {stateApp.selectedWell.wellType\r\n                        ? stateApp.selectedWell.wellType\r\n                        : \"--\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow className={classes.rowGrey}>\r\n                    <TableCell className={classes.cell1} align=\"left\">\r\n                      Permit Date\r\n                    </TableCell>\r\n                    <TableCell className={classes.cell2} align=\"right\">\r\n                      {\" \"}\r\n                      {convertDate(stateApp.selectedWell.permitApprovedDate)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow className={classes.rowWhite}>\r\n                    <TableCell className={classes.cell1} align=\"left\">\r\n                      Spud Date\r\n                    </TableCell>\r\n                    <TableCell className={classes.cell2} align=\"right\">\r\n                      {\" \"}\r\n                      {convertDate(stateApp.selectedWell.spudDate)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow className={classes.rowGrey}>\r\n                    <TableCell className={classes.cell1} align=\"left\">\r\n                      Completion Date\r\n                    </TableCell>\r\n                    <TableCell className={classes.cell2} align=\"right\">\r\n                      {\" \"}\r\n                      {convertDate(stateApp.selectedWell.completionDate)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow className={classes.rowWhite}>\r\n                    <TableCell className={classes.cell1} align=\"left\">\r\n                      First Prod Date\r\n                    </TableCell>\r\n                    <TableCell className={classes.cell2} align=\"right\">\r\n                      {convertDate(stateApp.selectedWell.firstProductionDate)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        <div style={{ height: \"100%\" }}>\r\n          {/* <Modal\r\n          style={{overflow: \"auto\"}}\r\n          open={stateExpandableCard.expanded}\r\n          // onClose={handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n          > */}\r\n          <Card className={classes.card}>\r\n            {/* <CardHeader\r\n          classes={{\r\n            title: classes.title,\r\n            subheader: classes.subheader\r\n          }}\r\n          action={\r\n            <div>\r\n               <TrackToggleButton \r\n               target= {target} \r\n               targetLabel=\"well\" \r\n               targetSourceId={stateApp.selectedWell.id} />\r\n               \r\n           <IconButton onClick={handleOpenDetails} aria-label=\"expand\">\r\n                <ExpandIcon viewBox=\"0 0 64 64\" color=\"secondary\" fontSize=\"small\" />\r\n              </IconButton>\r\n              <IconButton onClick={handleCloseWellCard} aria-label=\"close\">\r\n                <CloseIcon fontSize=\"small\" color=\"secondary\" />\r\n              </IconButton>\r\n            </div>\r\n          }\r\n          title={\r\n            stateApp.selectedWell.wellName\r\n              ? stateApp.selectedWell.wellName.length > 30\r\n                ? `${stateApp.selectedWell.wellName.substr(0, 30)}...`\r\n                : stateApp.selectedWell.wellName\r\n              : '--'\r\n          }\r\n          subheader={\r\n            stateApp.selectedWell.operator\r\n              ? stateApp.selectedWell.operator.length > 35\r\n                ? `${stateApp.selectedWell.operator.substr(0, 35)}...`\r\n                : stateApp.selectedWell.operator\r\n              : '--'\r\n          }\r\n        /> */}\r\n            <CardContent className={classes.content}>\r\n              <WellCardDetails target={target} summary={summary} />\r\n            </CardContent>\r\n          </Card>\r\n          {/* </Modal> */}\r\n        </div>\r\n      )\r\n    ) : (\r\n      <CircularProgress color=\"secondary\" />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}