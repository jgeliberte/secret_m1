{"ast":null,"code":"/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\nvar fabric = fabric || {\n  version: '3.3.0'\n};\n\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return fabric;\n    });\n  }\n/* _AMD_END_ */\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  } else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n\n  fabric.window = window;\n} else {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n\n  var virtualWindow = new jsdom.JSDOM(decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'), {\n    features: {\n      FetchExternalResources: ['img']\n    },\n    resources: 'usable'\n  }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\n\n\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document || fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0;\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\n\nfabric.isLikelyNode = typeof Buffer !== 'undefined' && typeof window === 'undefined';\n/* _FROM_SVG_START_ */\n\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\n\nfabric.SHARED_ATTRIBUTES = ['display', 'transform', 'fill', 'fill-opacity', 'fill-rule', 'opacity', 'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'id', 'paint-order', 'vector-effect', 'instantiated_by_use', 'clip-path'];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\n\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.fontPaths = {};\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.perfLimitSizeTotal = 2097152;\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.maxCacheSideLimit = 4096;\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.minCacheSideLimit = 256;\n/**\n * Cache Object for widths of chars in text rendering.\n */\n\nfabric.charWidthsCache = {};\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\n\nfabric.textureSize = 2048;\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\n\nfabric.disableStyleCopyPaste = false;\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\n\nfabric.enableGLFiltering = true;\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\n\nfabric.devicePixelRatio = fabric.window.devicePixelRatio || fabric.window.webkitDevicePixelRatio || fabric.window.mozDevicePixelRatio || 1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\n\nfabric.browserShadowBlurConstant = 1;\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\n\nfabric.arcToSegmentsCache = {};\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\n\nfabric.boundsOfCurveCache = {};\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\n\nfabric.cachesBoundsOfCurve = true;\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\n\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function () {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return new fabric.WebglFilterBackend({\n      tileSize: fabric.textureSize\n    });\n  } else if (fabric.Canvas2dFilterBackend) {\n    return new fabric.Canvas2dFilterBackend();\n  }\n};\n\n(function () {\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    var eventListener = this.__eventListeners[eventName];\n\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    } else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {};\n    } // one object with key/value pairs was passed\n\n\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    } else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n\n      this.__eventListeners[eventName].push(handler);\n    }\n\n    return this;\n  }\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    } // remove all key/value pairs (event name -> event handler)\n\n\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    } // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n        for (var prop in eventName) {\n          _removeEventListener.call(this, prop, eventName[prop]);\n        }\n      } else {\n        _removeEventListener.call(this, eventName, handler);\n      }\n\n    return this;\n  }\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || {});\n    }\n\n    this.__eventListeners[eventName] = listenersForEvent.filter(function (value) {\n      return value !== false;\n    });\n    return this;\n  }\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n\n\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n/**\n * @namespace fabric.Collection\n */\n\n\nfabric.Collection = {\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n\n    if (nonSplicing) {\n      objects[index] = object;\n    } else {\n      objects.splice(index, 0, object);\n    }\n\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function () {\n    var objects = this._objects,\n        index,\n        somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]); // only call onObjectRemoved if an object was actually removed\n\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function (callback, context) {\n    var objects = this.getObjects();\n\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function (type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n\n    return this._objects.filter(function (o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function () {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function (object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n/**\n * @namespace fabric.CommonMethods\n */\n\nfabric.CommonMethods = {\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function (options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function (filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function (filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    } else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function (options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function (obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function (key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      } else {\n        this._set(key, value);\n      }\n    }\n\n    return this;\n  },\n  _set: function (key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function (property) {\n    var value = this.get(property);\n\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function (property) {\n    return this[property];\n  }\n};\n\n(function (global) {\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n  /**\n   * @namespace fabric.util\n   */\n\n  fabric.util = {\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function (angle) {\n      if (angle === 0) {\n        return 1;\n      }\n\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n\n      var angleSlice = angle / PiBy2;\n\n      switch (angleSlice) {\n        case 1:\n        case 3:\n          return 0;\n\n        case 2:\n          return -1;\n      }\n\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function (angle) {\n      if (angle === 0) {\n        return 0;\n      }\n\n      var angleSlice = angle / PiBy2,\n          sign = 1;\n\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n\n      switch (angleSlice) {\n        case 1:\n          return sign;\n\n        case 2:\n          return 0;\n\n        case 3:\n          return -sign;\n      }\n\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function (array, value) {\n      var idx = array.indexOf(value);\n\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function (min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function (degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function (radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function (point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function (vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function (p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(t[0] * p.x + t[2] * p.y, t[1] * p.x + t[3] * p.y);\n      }\n\n      return new fabric.Point(t[0] * p.x + t[2] * p.y + t[4], t[1] * p.x + t[3] * p.y + t[5]);\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function (points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function (t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({\n        x: t[4],\n        y: t[5]\n      }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function (number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function (value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72;\n        // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12;\n        // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function () {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function (type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function (type) {\n      var attributes = ['instantiated_by_use', 'style', 'id', 'class'];\n\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function (namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length,\n          i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function (url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n      /** @ignore */\n\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n\n      img.onerror = function () {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      }; // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\n\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      } // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n\n\n      if (url.substring(0, 14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function (img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function (objects, callback, namespace, reviver) {\n      objects = objects || [];\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function (obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function (patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function (pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        } else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function (elements, options, path) {\n      var object;\n\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        } else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n\n      object = new fabric.Group(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function (source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function (ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n      x = 0;\n\n      while (len > x) {\n        x += da[di++ % dc];\n\n        if (x > len) {\n          x = len;\n        }\n\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function () {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function (canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function (canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function () {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function (receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function (a, b, is2x2) {\n      // Matrix multiply a * b\n      return [a[0] * b[0] + a[2] * b[1], a[1] * b[0] + a[3] * b[1], a[0] * b[2] + a[2] * b[3], a[1] * b[2] + a[3] * b[3], is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4], is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function (a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a[3], denom);\n      return {\n        angle: angle / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n    customTransformMatrix: function (scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function (fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function (ctx, x, y, tolerance) {\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        } else {\n          x = 0;\n        }\n\n        if (y > tolerance) {\n          y -= tolerance;\n        } else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true,\n          i,\n          temp,\n          imageData = ctx.getImageData(x, y, tolerance * 2 || 1, tolerance * 2 || 1),\n          l = imageData.data.length; // Split image data - for tolerance > 1, pixelDataSize = 4;\n\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function (attribute) {\n      var meetOrSlice = 'meet',\n          alignX = 'Mid',\n          alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '),\n          align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        } else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      } //divide align in alignX and alignY\n\n\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function (fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n\n      if (!fontFamily) {\n        fabric.charWidthsCache = {};\n      } else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function (ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return {\n        x: Math.floor(roughWidth),\n        y: perfLimitSizeY\n      };\n    },\n    capValue: function (min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n    findScaleToFit: function (source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n    findScaleToCover: function (source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} trasnform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function (transform) {\n      return 'matrix(' + transform.map(function (value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  var _join = Array.prototype.join;\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI,\n        th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0,\n        fromY = 0;\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx,\n        ry2 = ry * ry,\n        py2 = py * py,\n        px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    } else {\n      root = (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    } else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    } // Convert into cubic bezier segments <= 90deg\n\n\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [],\n        mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * (-cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * (-sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * (cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * (sinTh * rx * sinth3 - cosTh * ry * costh3);\n    return [cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n  }\n  /*\n   * Private\n   */\n\n\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n\n    if (tb >= ta) {\n      return tb - ta;\n    } else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n\n\n  fabric.util.drawArc = function (ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n\n\n  fabric.util.getBoundsOfArc = function (fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n    var fromX = 0,\n        fromY = 0,\n        bound,\n        bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({\n        x: bound[0].x + fx,\n        y: bound[0].y + fy\n      });\n      bounds.push({\n        x: bound[1].x + fx,\n        y: bound[1].y + fy\n      });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n\n    return bounds;\n  };\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\n\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        tvalues = [],\n        bounds = [[], []],\n        a,\n        b,\n        c,\n        t,\n        t1,\n        t2,\n        b2ac,\n        sqrtb2ac;\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n\n      t2 = (-b - sqrtb2ac) / (2 * a);\n\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x,\n        y,\n        j = tvalues.length,\n        jlen = j,\n        mt;\n\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[0][j] = x;\n      y = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [{\n      x: min.apply(null, bounds[0]),\n      y: min.apply(null, bounds[1])\n    }, {\n      x: max.apply(null, bounds[0]),\n      y: max.apply(null, bounds[1])\n    }];\n\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n})();\n\n(function () {\n  var slice = Array.prototype.slice;\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2),\n        result = [];\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n\n    return result;\n  }\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n\n\n  function max(array, byProperty) {\n    return find(array, byProperty, function (value1, value2) {\n      return value1 >= value2;\n    });\n  }\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n\n\n  function min(array, byProperty) {\n    return find(array, byProperty, function (value1, value2) {\n      return value1 < value2;\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  function fill(array, value) {\n    var k = array.length;\n\n    while (k--) {\n      array[k] = value;\n    }\n\n    return array;\n  }\n  /**\n   * @private\n   */\n\n\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    } else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\n   * @namespace fabric.util.array\n   */\n\n\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n})();\n\n(function () {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      } else if (source instanceof Array) {\n        destination = [];\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({}, source[i], deep);\n        }\n      } else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({}, source[property]);\n          } else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({}, source[property], deep);\n          }\n        }\n      } else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    } else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n\n    return destination;\n  }\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n\n\n  function clone(object, deep) {\n    return extend({}, object, deep);\n  }\n  /** @namespace fabric.util.object */\n\n\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n(function () {\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function (match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n\n\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() + (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n\n\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n\n\n  function graphemeSplit(textstring) {\n    var i = 0,\n        chr,\n        graphemes = [];\n\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n\n      graphemes.push(chr);\n    }\n\n    return graphemes;\n  } // taken from mdn in the charAt doc page.\n\n\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    } // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n\n\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= i + 1) {\n        throw 'High surrogate without following low surrogate';\n      }\n\n      var next = str.charCodeAt(i + 1);\n\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n\n      return str.charAt(i) + str.charAt(i + 1);\n    } // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n\n\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n\n    var prev = str.charCodeAt(i - 1); // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    } // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n\n\n    return false;\n  }\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n\n\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n(function () {\n  var slice = Array.prototype.slice,\n      emptyFunction = function () {},\n      IS_DONTENUM_BUGGY = function () {\n    for (var p in {\n      toString: 1\n    }) {\n      if (p === 'toString') {\n        return false;\n      }\n    }\n\n    return true;\n  }(),\n\n  /** @ignore */\n  addMethods = function (klass, source, parent) {\n    for (var property in source) {\n      if (property in klass.prototype && typeof klass.prototype[property] === 'function' && (source[property] + '').indexOf('callSuper') > -1) {\n        klass.prototype[property] = function (property) {\n          return function () {\n            var superclass = this.constructor.superclass;\n            this.constructor.superclass = parent;\n            var returnValue = source[property].apply(this, arguments);\n            this.constructor.superclass = superclass;\n\n            if (property !== 'initialize') {\n              return returnValue;\n            }\n          };\n        }(property);\n      } else {\n        klass.prototype[property] = source[property];\n      }\n\n      if (IS_DONTENUM_BUGGY) {\n        if (source.toString !== Object.prototype.toString) {\n          klass.prototype.toString = source.toString;\n        }\n\n        if (source.valueOf !== Object.prototype.valueOf) {\n          klass.prototype.valueOf = source.valueOf;\n        }\n      }\n    }\n  };\n\n  function Subclass() {}\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this; // climb prototype chain to find method not equal to callee's method\n\n\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      } // eslint-disable-next-line\n\n\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return arguments.length > 1 ? parentMethod.apply(this, slice.call(arguments, 1)) : parentMethod.call(this);\n  }\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n\n\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n(function () {\n  // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent;\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n\n  fabric.util.addListener = function (element, eventName, handler, options) {\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n\n\n  fabric.util.removeListener = function (element, eventName, handler, options) {\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  function getTouchInfo(event) {\n    var touchProp = event.changedTouches;\n\n    if (touchProp && touchProp[0]) {\n      return touchProp[0];\n    }\n\n    return event;\n  }\n\n  fabric.util.getPointer = function (event) {\n    var element = event.target,\n        scroll = fabric.util.getScrollLeftTop(element),\n        _evt = getTouchInfo(event);\n\n    return {\n      x: _evt.clientX + scroll.left,\n      y: _evt.clientY + scroll.top\n    };\n  };\n})();\n\n(function () {\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n\n    if (!elementStyle) {\n      return element;\n    }\n\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1 ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1]) : element;\n    }\n\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      } else {\n        var normalizedProperty = property === 'float' || property === 'cssFloat' ? typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat' : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n  /** @ignore */\n  setOpacity = function (element) {\n    return element;\n  };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function (element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  } else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function (element, value) {\n      var es = element.style;\n\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : 'alpha(opacity=' + value * 100 + ')';\n        es.filter = es.filter.replace(reOpacity, value);\n      } else {\n        es.filter += ' alpha(opacity=' + value * 100 + ')';\n      }\n\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n})();\n\n(function () {\n  var _slice = Array.prototype.slice;\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n\n  /**\n   * Converts an array-like object (e.g. arguments or NodeList) to an array\n   * @memberOf fabric.util\n   * @param {Object} arrayLike\n   * @return {Array}\n   */\n  toArray = function (arrayLike) {\n    return _slice.call(arrayLike, 0);\n  };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  } catch (err) {}\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function (arrayLike) {\n      var arr = new Array(arrayLike.length),\n          i = arrayLike.length;\n\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n\n      return arr;\n    };\n  }\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n\n\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      } else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      } else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n\n    return el;\n  }\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n\n\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n\n\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n\n\n  function getScrollLeftTop(element) {\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n      scrollLeft: 0,\n      scrollTop: 0\n    }; // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\n    while (element && (element.parentNode || element.host)) {\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop || docElement.scrollTop || 0;\n      } else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return {\n      left: left,\n      top: top\n    };\n  }\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n\n\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = {\n      left: 0,\n      top: 0\n    },\n        offset = {\n      left: 0,\n      top: 0\n    },\n        scrollLeftTop,\n        offsetAttributes = {\n      borderLeftWidth: 'left',\n      borderTopWidth: 'top',\n      paddingLeft: 'left',\n      paddingTop: 'top'\n    };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n\n    if (typeof element.getBoundingClientRect !== 'undefined') {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top\n    };\n  }\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n\n\n  var getElementStyle;\n\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function (element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  } else {\n    getElementStyle = function (element, attr) {\n      var value = element.style[attr];\n\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style ? 'userSelect' : 'MozUserSelect' in style ? 'MozUserSelect' : 'WebkitUserSelect' in style ? 'WebkitUserSelect' : 'KhtmlUserSelect' in style ? 'KhtmlUserSelect' : '';\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      } else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n\n      return element;\n    }\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n\n\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n\n      if (selectProp) {\n        element.style[selectProp] = '';\n      } else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function () {\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n      /** @ignore */\n\n      scriptEl.onload =\n      /** @ignore */\n      scriptEl.onreadystatechange = function (e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' && this.readyState !== 'loaded' && this.readyState !== 'complete') {\n            return;\n          }\n\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl); // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  }\n\n  ;\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n\n    var impl = fabric.jsdomImplForWrapper(element);\n\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null; // unsure if necessary\n\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n})();\n\n(function () {\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() {}\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n\n\n  function request(url, options) {\n    options || (options = {});\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function () {},\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n    /** @ignore */\n\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\n\n\nfabric.log = function () {};\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\n\n\nfabric.warn = function () {};\n/* eslint-disable */\n\n\nif (typeof console !== 'undefined') {\n  ['log', 'warn'].forEach(function (methodName) {\n    if (typeof console[methodName] !== 'undefined' && typeof console[methodName].apply === 'function') {\n      fabric[methodName] = function () {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function () {\n  function noop() {\n    return false;\n  }\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n\n\n  function animate(options) {\n    requestAnimFrame(function (timestamp) {\n      options || (options = {});\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration,\n          time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function (t, b, c, d) {\n        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n      },\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        // TODO: move abort call after calculation\n        // and pass (current,valuePerc, timePerc) as arguments\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : time - start,\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n\n        requestAnimFrame(tick);\n      })(start);\n    });\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function (callback) {\n    return fabric.window.setTimeout(callback, 1000 / 60);\n  };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n\n\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n(function () {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba(' + parseInt(begin[0] + pos * (end[0] - begin[0]), 10) + ',' + parseInt(begin[1] + pos * (end[1] - begin[1]), 10) + ',' + parseInt(begin[2] + pos * (end[2] - begin[2]), 10);\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n\n\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n    options = options || {};\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing ? options.colorEasing(currentTime, duration) : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n})();\n\n(function () {\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n\n    return {\n      a: a,\n      c: c,\n      p: p,\n      s: s\n    };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p);\n  }\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInExpo(t, b, c, d) {\n    return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutExpo(t, b, c, d) {\n    return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n\n    if (t === d) {\n      return b + c;\n    }\n\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d;\n\n    if (t === 1) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * 0.3;\n    }\n\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d;\n\n    if (t === 1) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * 0.3;\n    }\n\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) + opts.c + b;\n  }\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d / 2;\n\n    if (t === 2) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n\n    var opts = normalize(a, c, p, s);\n\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n\n    return opts.a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) * 0.5 + opts.c + b;\n  }\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  }\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce(d - t, 0, c, d) + b;\n  }\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    } else {\n      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n    }\n  }\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n    }\n\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n\n\n  fabric.util.ease = {\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function (t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function (t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function (t, b, c, d) {\n      t /= d / 2;\n\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function (t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n})();\n\n(function (global) {\n  'use strict';\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line', 'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n      attributesMap = {\n    cx: 'left',\n    x: 'left',\n    r: 'radius',\n    cy: 'top',\n    y: 'top',\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform'\n  },\n      colorAttributes = {\n    stroke: 'strokeOpacity',\n    fill: 'fillOpacity'\n  };\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n  fabric.cssRules = {};\n  fabric.gradientDefs = {};\n  fabric.clipPaths = {};\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    } else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    } else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      } else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    } else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      } else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    } else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden'; // display=none on parent element always takes precedence over child element\n\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    } else if (attr === 'opacity') {\n      value = parseFloat(value);\n\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    } else if (attr === 'textAnchor'\n    /* text-anchor */\n    ) {\n        value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n      } else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    } else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      } else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    } else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    } else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return !isArray && isNaN(parsed) ? value : parsed;\n  }\n  /**\n    * @private\n    */\n\n\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n\n\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n\n    return attributes;\n  }\n  /**\n   * @private\n   */\n\n\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName,\n        nodeArray = [],\n        nodeList,\n        i,\n        len;\n\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n\n    return nodeArray;\n  }\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n\n\n  fabric.parseTransformAttribute = function () {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]),\n          sin = fabric.util.sin(args[0]),\n          x = 0,\n          y = 0;\n\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = args.length === 2 ? args[1] : args[0];\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    } // identity matrix\n\n\n    var iMatrix = fabric.iMatrix,\n        // == begin transform regexp\n    number = fabric.reNum,\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + '\\\\s*\\\\))',\n        transform = '(?:' + matrix + '|' + translate + '|' + scale + '|' + rotate + '|' + skewX + '|' + skewY + ')',\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n    reTransformList = new RegExp(transformList),\n        // == end transform regexp\n    reTransform = new RegExp(transform, 'g');\n    return function (attributeValue) {\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = []; // return if no argument was given or\n      // an argument does not match transform attribute regexp\n\n      if (!attributeValue || attributeValue && !reTransformList.test(attributeValue)) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function (match) {\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n          // match !== '' && match != null\n          return !!match;\n        }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n\n          case 'matrix':\n            matrix = args;\n            break;\n        } // snapshot current matrix into matrices array\n\n\n        matrices.push(matrix.concat()); // reset\n\n        matrix = iMatrix.concat();\n      });\n      var combinedMatrix = matrices[0];\n\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n\n      return combinedMatrix;\n    };\n  }();\n  /**\n   * @private\n   */\n\n\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n      attr = pair[0].trim().toLowerCase();\n      value = pair[1].trim();\n      oStyle[attr] = value;\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n      oStyle[attr] = value;\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = {};\n\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n\n    return styles;\n  }\n  /**\n   * @private\n   */\n\n\n  function elementMatchesRule(element, selectors) {\n    var firstMatching,\n        parentMatching = true; //start from rightmost selector.\n\n    firstMatching = selectorMatches(element, selectors.pop());\n\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n\n    return firstMatching && parentMatching && selectors.length === 0;\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector,\n        parentMatching = true;\n\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n\n    return selectors.length === 0;\n  }\n  /**\n   * @private\n   */\n\n\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'),\n        matcher,\n        i; // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n\n    return selector.length === 0;\n  }\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n\n\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n\n    if (el) {\n      return el;\n    }\n\n    var node,\n        i,\n        len,\n        nodelist = doc.getElementsByTagName('*');\n\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']),\n        i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode,\n          oldLength = nodelist.length,\n          attr,\n          j,\n          attrs,\n          len;\n      applyViewboxTransform(el2);\n\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        } // el2.firstChild != null\n\n\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        } else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el); // some browsers do not shorten nodelist after replaceChild (IE8)\n\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  } // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n\n\n  var reViewBoxAttrValue = new RegExp('^' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*' + '$');\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n\n  function applyViewboxTransform(element) {\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth,\n        viewBoxHeight,\n        matrix,\n        el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = !viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName) || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue)),\n        missingDimAttr = !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%',\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = {},\n        translateMatrix = '',\n        widthDiff = 0,\n        heightDiff = 0;\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    } else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    } // default is to preserve aspect ratio\n\n\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX; // calculate additional translation to move the viewbox\n      }\n\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY; // calculate additional translation to move the viewbox\n      }\n\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX + ' 0' + ' 0 ' + scaleY + ' ' + (minX * scaleX + widthDiff) + ' ' + (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g'); // element.firstChild != null\n\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n\n      element.appendChild(el);\n    } else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', '')) && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n\n\n  fabric.parseSVGDocument = function (doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n    var svgUid = fabric.Object.__uid++,\n        i,\n        len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function (el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) && !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || elements && !elements.length) {\n      callback && callback([], {});\n      return;\n    }\n\n    var clipPaths = {};\n    descendants.filter(function (el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function (el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function (el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths; // Precedence of rules:   style > class > attribute\n\n    fabric.parseElements(elements, function (instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n\n    gradientsAttrs.forEach(function (attr) {\n      if (!gradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp('(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' + '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' + fabric.reNum + '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function (value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n\n      var fontStyle = match[1],\n          // font variant is not used\n      // fontVariant = match[2],\n      fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function (doc) {\n      var tagArray = ['linearGradient', 'radialGradient', 'svg:linearGradient', 'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el,\n          j = 0,\n          gradientDefs = {};\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function (element, attributes, svgUid) {\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = {},\n          fontSize,\n          parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      } // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\n\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function (memo, attr) {\n        value = element.getAttribute(attr);\n\n        if (value) {\n          // eslint-disable-line\n          memo[attr] = value;\n        }\n\n        return memo;\n      }, {}); // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\n      ownAttributes = extend(ownAttributes, extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      if (ownAttributes['font-size']) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes['font-size'] = fontSize = parseUnit(ownAttributes['font-size'], parentFontSize);\n      }\n\n      var normalizedAttr,\n          normalizedValue,\n          normalizedStyle = {};\n\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function (elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function (element) {\n      var oStyle = {},\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      } else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function (points) {\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      } // replace commas with whitespace and remove bookending whitespace\n\n\n      points = points.replace(/,/g, ' ').trim();\n      points = points.split(/\\s+/);\n      var parsedPoints = [],\n          i,\n          len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      } // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function (doc) {\n      var styles = doc.getElementsByTagName('style'),\n          i,\n          len,\n          allRules = {},\n          rules; // very crude parsing of style contents\n\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text; // remove comments\n\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\n        if (styleContents.trim() === '') {\n          continue;\n        }\n\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function (rule) {\n          return rule.trim();\n        }); // eslint-disable-next-line no-loop-func\n\n        rules.forEach(function (rule) {\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = {},\n              declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n\n          rule = match[1];\n          rule.split(',').forEach(function (_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n\n            if (_rule === '') {\n              return;\n            }\n\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            } else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function (url, callback, reviver, options) {\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n        var xml = r.responseXML;\n\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false'; //IE chokes on DOCTYPE\n\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function (string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n\n      if (typeof fabric.window.DOMParser !== 'undefined') {\n        var parser = new fabric.window.DOMParser();\n\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      } else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false'; // IE chokes on DOCTYPE\n\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n})(typeof exports !== 'undefined' ? exports : this);\n\nfabric.ElementsParser = function (elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = options && options.svgUid || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\n(function (proto) {\n  proto.parse = function () {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function () {\n    var _this = this;\n\n    this.elements.forEach(function (element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function (el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function (el, index) {\n    var klass = this.findTag(el);\n\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      } catch (err) {\n        fabric.log(err);\n      }\n    } else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function (index, el) {\n    var _this = this;\n\n    return function (obj) {\n      var _options;\n\n      _this.resolveGradient(obj, 'fill');\n\n      _this.resolveGradient(obj, 'stroke');\n\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n\n      obj._removeTransformMatrix(_options);\n\n      _this.resolveClipPath(obj);\n\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function (obj, property, storage) {\n    var value = obj[property];\n\n    if (!/^url\\(/.test(value)) {\n      return;\n    }\n\n    var id = this.regexUrl.exec(value)[1];\n    this.regexUrl.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function (obj, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n\n    if (gradientDef) {\n      obj.set(property, fabric.Gradient.fromElement(gradientDef, obj));\n    }\n  };\n\n  proto.createClipPathCallback = function (obj, container) {\n    return function (_newObj) {\n      _newObj._removeTransformMatrix();\n\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function (obj) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element,\n        klass,\n        objTransformInv,\n        container,\n        gTransform,\n        options;\n\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(element, this.createClipPathCallback(obj, container), this.options);\n      }\n\n      if (container.length === 1) {\n        clipPath = container[0];\n      } else {\n        clipPath = new fabric.Group(container);\n      }\n\n      gTransform = fabric.util.multiplyTransformMatrices(objTransformInv, clipPath.calcTransformMatrix());\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({\n        x: options.translateX,\n        y: options.translateY\n      }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function () {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function (el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n(function (global) {\n  'use strict';\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype =\n  /** @lends fabric.Point.prototype */\n  {\n    type: 'point',\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return this.x === that.x && this.y === that.y;\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return this.x < that.x && this.y < that.y;\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return this.x <= that.x && this.y <= that.y;\n    },\n\n    /**\n      * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return this.x > that.x && this.y > that.y;\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return this.x >= that.x && this.y >= that.y;\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n\n\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n  fabric.Intersection.prototype =\n  /** @lends fabric.Intersection.prototype */\n  {\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      } else {\n        result = new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      } else {\n        result = new Intersection('Parallel');\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectLinePolygon = function (a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1,\n        b2,\n        inter,\n        i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n      result.appendPoints(inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length,\n        i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n      result.appendPoints(inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n\n\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    } else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n  fabric.Color.prototype =\n  /** @lends fabric.Color.prototype */\n  {\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function (color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function (r, g, b) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      var h,\n          s,\n          l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100)];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function () {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function (source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function () {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function () {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function () {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function () {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function () {\n      var source = this.getSource(),\n          r,\n          g,\n          b;\n      r = source[0].toString(16);\n      r = r.length === 1 ? '0' + r : r;\n      g = source[1].toString(16);\n      g = g.length === 1 ? '0' + g : g;\n      b = source[2].toString(16);\n      b = b.length === 1 ? '0' + b : b;\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function () {\n      var source = this.getSource(),\n          a;\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = a.length === 1 ? '0' + a : a;\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function () {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function (alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function () {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function (threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n      threshold = threshold || 127;\n      average = Number(average) < Number(threshold) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function (otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(),\n          i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round(source[i] * (1 - otherAlpha) + otherSource[i] * otherAlpha));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  fabric.Color.colorNameMap = {\n    aliceblue: '#F0F8FF',\n    antiquewhite: '#FAEBD7',\n    aqua: '#00FFFF',\n    aquamarine: '#7FFFD4',\n    azure: '#F0FFFF',\n    beige: '#F5F5DC',\n    bisque: '#FFE4C4',\n    black: '#000000',\n    blanchedalmond: '#FFEBCD',\n    blue: '#0000FF',\n    blueviolet: '#8A2BE2',\n    brown: '#A52A2A',\n    burlywood: '#DEB887',\n    cadetblue: '#5F9EA0',\n    chartreuse: '#7FFF00',\n    chocolate: '#D2691E',\n    coral: '#FF7F50',\n    cornflowerblue: '#6495ED',\n    cornsilk: '#FFF8DC',\n    crimson: '#DC143C',\n    cyan: '#00FFFF',\n    darkblue: '#00008B',\n    darkcyan: '#008B8B',\n    darkgoldenrod: '#B8860B',\n    darkgray: '#A9A9A9',\n    darkgrey: '#A9A9A9',\n    darkgreen: '#006400',\n    darkkhaki: '#BDB76B',\n    darkmagenta: '#8B008B',\n    darkolivegreen: '#556B2F',\n    darkorange: '#FF8C00',\n    darkorchid: '#9932CC',\n    darkred: '#8B0000',\n    darksalmon: '#E9967A',\n    darkseagreen: '#8FBC8F',\n    darkslateblue: '#483D8B',\n    darkslategray: '#2F4F4F',\n    darkslategrey: '#2F4F4F',\n    darkturquoise: '#00CED1',\n    darkviolet: '#9400D3',\n    deeppink: '#FF1493',\n    deepskyblue: '#00BFFF',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1E90FF',\n    firebrick: '#B22222',\n    floralwhite: '#FFFAF0',\n    forestgreen: '#228B22',\n    fuchsia: '#FF00FF',\n    gainsboro: '#DCDCDC',\n    ghostwhite: '#F8F8FF',\n    gold: '#FFD700',\n    goldenrod: '#DAA520',\n    gray: '#808080',\n    grey: '#808080',\n    green: '#008000',\n    greenyellow: '#ADFF2F',\n    honeydew: '#F0FFF0',\n    hotpink: '#FF69B4',\n    indianred: '#CD5C5C',\n    indigo: '#4B0082',\n    ivory: '#FFFFF0',\n    khaki: '#F0E68C',\n    lavender: '#E6E6FA',\n    lavenderblush: '#FFF0F5',\n    lawngreen: '#7CFC00',\n    lemonchiffon: '#FFFACD',\n    lightblue: '#ADD8E6',\n    lightcoral: '#F08080',\n    lightcyan: '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray: '#D3D3D3',\n    lightgrey: '#D3D3D3',\n    lightgreen: '#90EE90',\n    lightpink: '#FFB6C1',\n    lightsalmon: '#FFA07A',\n    lightseagreen: '#20B2AA',\n    lightskyblue: '#87CEFA',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#B0C4DE',\n    lightyellow: '#FFFFE0',\n    lime: '#00FF00',\n    limegreen: '#32CD32',\n    linen: '#FAF0E6',\n    magenta: '#FF00FF',\n    maroon: '#800000',\n    mediumaquamarine: '#66CDAA',\n    mediumblue: '#0000CD',\n    mediumorchid: '#BA55D3',\n    mediumpurple: '#9370DB',\n    mediumseagreen: '#3CB371',\n    mediumslateblue: '#7B68EE',\n    mediumspringgreen: '#00FA9A',\n    mediumturquoise: '#48D1CC',\n    mediumvioletred: '#C71585',\n    midnightblue: '#191970',\n    mintcream: '#F5FFFA',\n    mistyrose: '#FFE4E1',\n    moccasin: '#FFE4B5',\n    navajowhite: '#FFDEAD',\n    navy: '#000080',\n    oldlace: '#FDF5E6',\n    olive: '#808000',\n    olivedrab: '#6B8E23',\n    orange: '#FFA500',\n    orangered: '#FF4500',\n    orchid: '#DA70D6',\n    palegoldenrod: '#EEE8AA',\n    palegreen: '#98FB98',\n    paleturquoise: '#AFEEEE',\n    palevioletred: '#DB7093',\n    papayawhip: '#FFEFD5',\n    peachpuff: '#FFDAB9',\n    peru: '#CD853F',\n    pink: '#FFC0CB',\n    plum: '#DDA0DD',\n    powderblue: '#B0E0E6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#FF0000',\n    rosybrown: '#BC8F8F',\n    royalblue: '#4169E1',\n    saddlebrown: '#8B4513',\n    salmon: '#FA8072',\n    sandybrown: '#F4A460',\n    seagreen: '#2E8B57',\n    seashell: '#FFF5EE',\n    sienna: '#A0522D',\n    silver: '#C0C0C0',\n    skyblue: '#87CEEB',\n    slateblue: '#6A5ACD',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#FFFAFA',\n    springgreen: '#00FF7F',\n    steelblue: '#4682B4',\n    tan: '#D2B48C',\n    teal: '#008080',\n    thistle: '#D8BFD8',\n    tomato: '#FF6347',\n    turquoise: '#40E0D0',\n    violet: '#EE82EE',\n    wheat: '#F5DEB3',\n    white: '#FFFFFF',\n    whitesmoke: '#F5F5F5',\n    yellow: '#FFFF00',\n    yellowgreen: '#9ACD32'\n  };\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n\n    if (t > 1) {\n      t -= 1;\n    }\n\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n      return q;\n    }\n\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n  }\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromRgb = function (color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n\n\n  fabric.Color.sourceFromRgb = function (color) {\n    var match = color.match(Color.reRGBa);\n\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n      return [parseInt(r, 10), parseInt(g, 10), parseInt(b, 10), match[4] ? parseFloat(match[4]) : 1];\n    }\n  };\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromRgba = Color.fromRgb;\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n\n  fabric.Color.fromHsl = function (color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n\n\n  fabric.Color.sourceFromHsl = function (color) {\n    var match = color.match(Color.reHSLa);\n\n    if (!match) {\n      return;\n    }\n\n    var h = (parseFloat(match[1]) % 360 + 360) % 360 / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r,\n        g,\n        b;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), match[4] ? parseFloat(match[4]) : 1];\n  };\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromHsla = Color.fromHsl;\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n\n  fabric.Color.fromHex = function (color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n\n\n  fabric.Color.sourceFromHex = function (color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = value.length === 3 || value.length === 4,\n          isRGBa = value.length === 8 || value.length === 4,\n          r = isShortNotation ? value.charAt(0) + value.charAt(0) : value.substring(0, 2),\n          g = isShortNotation ? value.charAt(1) + value.charAt(1) : value.substring(2, 4),\n          b = isShortNotation ? value.charAt(2) + value.charAt(2) : value.substring(4, 6),\n          a = isRGBa ? isShortNotation ? value.charAt(3) + value.charAt(3) : value.substring(6, 8) : 'FF';\n      return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16), parseFloat((parseInt(a, 16) / 255).toFixed(2))];\n    }\n  };\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromSource = function (source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color,\n        colorAlpha,\n        opacity,\n        i; // convert percents to absolute values\n\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--;) {\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        } else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n\n  var clone = fabric.util.object.clone;\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n\n  fabric.Gradient = fabric.util.createClass(\n  /** @lends fabric.Gradient.prototype */\n  {\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function (options) {\n      options || (options = {});\n      var coords = {};\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function (colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function (propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function (object, options) {\n      var coords = clone(this.coords, true),\n          i,\n          len,\n          options = options || {},\n          markup,\n          commonAttributes,\n          colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = object.width / 2 - this.offsetX,\n          offsetY = object.height / 2 - this.offsetY,\n          withViewport = !!options.additionalTransform; // colorStops must be sorted ascending\n\n      colorStops.sort(function (a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n      commonAttributes = 'id=\"SVGID_' + this.id + '\" gradientUnits=\"userSpaceOnUse\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ? options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = ['<linearGradient ', commonAttributes, ' x1=\"', coords.x1, '\" y1=\"', coords.y1, '\" x2=\"', coords.x2, '\" y2=\"', coords.y2, '\">\\n'];\n      } else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = ['<radialGradient ', commonAttributes, ' cx=\"', needsSwap ? coords.x1 : coords.x2, '\" cy=\"', needsSwap ? coords.y1 : coords.y2, '\" r=\"', needsSwap ? coords.r1 : coords.r2, '\" fx=\"', needsSwap ? coords.x2 : coords.x1, '\" fy=\"', needsSwap ? coords.y2 : coords.y1, '\">\\n'];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n\n        var minRadius = Math.min(coords.r1, coords.r2);\n\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push('<stop ', 'offset=\"', colorStop.offset * 100 + '%', '\" style=\"stop-color:', colorStop.color, typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';', '\"/>\\n');\n      }\n\n      markup.push(this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n');\n      return markup.join('');\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function (ctx) {\n      var gradient,\n          coords = fabric.util.object.clone(this.coords),\n          i,\n          len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(coords.x1, coords.y1, coords.x2, coords.y2);\n      } else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n  fabric.util.object.extend(fabric.Gradient, {\n    /* _FROM_SVG_START_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function (el, instance) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords,\n          ellipseMatrix,\n          i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      } else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      } else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--;) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function (obj, options) {\n      options || (options = {});\n\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n\n      return new fabric.Gradient(options);\n    }\n  });\n  /**\n   * @private\n   */\n\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue,\n        addFactor = 0,\n        multFactor = 1,\n        ellipseMatrix = '';\n\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      } else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n\n      propValue = parseFloat(options[prop], 10);\n\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      } else {\n        multFactor = 1;\n      }\n\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      } else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n\n      options[prop] = propValue * multFactor + addFactor;\n    }\n\n    if (object.type === 'ellipse' && options.r2 !== null && gradientUnits === 'objectBoundingBox' && object.rx !== object.ry) {\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n\n    return ellipseMatrix;\n  }\n})();\n\n(function () {\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n  fabric.Pattern = fabric.util.createClass(\n  /** @lends fabric.Pattern.prototype */\n  {\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function (options, callback) {\n      options || (options = {});\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n\n      if (!options.source || options.source && typeof options.source !== 'string') {\n        callback && callback(this);\n        return;\n      } // function string\n\n\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      } else {\n        // img src string\n        var _this = this;\n\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function (img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function (propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source,\n          object; // callback\n\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      } // <img> element\n      else if (typeof this.source.src === 'string') {\n          source = this.source.src;\n        } // <canvas> element\n        else if (typeof this.source === 'object' && this.source.toDataURL) {\n            source = this.source.toDataURL();\n          }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function (object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n      }\n\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      } else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id + '\" x=\"' + patternOffsetX + '\" y=\"' + patternOffsetY + '\" width=\"' + patternWidth + '\" height=\"' + patternHeight + '\">\\n' + '<image x=\"0\" y=\"0\"' + ' width=\"' + patternSource.width + '\" height=\"' + patternSource.height + '\" xlink:href=\"' + patternImgSrc + '\"></image>\\n' + '</pattern>\\n';\n    },\n\n    /* _TO_SVG_END_ */\n    setOptions: function (options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function (ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source; // if the image failed to load, return, and allow rest to continue loading\n\n      if (!source) {\n        return '';\n      } // if an image\n\n\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n\n\n  fabric.Shadow = fabric.util.createClass(\n  /** @lends fabric.Shadow.prototype */\n  {\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function (options) {\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function (shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function () {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function (object) {\n      var fBoxX = 40,\n          fBoxY = 40,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector({\n        x: this.offsetX,\n        y: this.offsetY\n      }, fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20,\n          color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' + 'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' + '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' + toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' + '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) + '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' + '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' + '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' + '\\t<feMerge>\\n' + '\\t\\t<feMergeNode></feMergeNode>\\n' + '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' + '\\t</feMerge>\\n' + '</filter>\\n';\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function () {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n\n      var obj = {},\n          proto = fabric.Shadow.prototype;\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function (prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n      return obj;\n    }\n  });\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  } // aliases for faster resolution\n\n\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods,\n  /** @lends fabric.StaticCanvas.prototype */\n  {\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function (el, options) {\n      options || (options = {});\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: {},\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function (el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n\n      this._createLowerCanvas(el);\n\n      this._initOptions(options);\n\n      this._setImageSmoothing(); // only initialize retina scaling once\n\n\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function () {\n      return fabric.devicePixelRatio !== 1 && this.enableRetinaScaling;\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function () {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function () {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function (overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function (backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function () {\n      var ctx = this.getContext();\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function (property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function (img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      } else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function (property, color, callback) {\n      this[property] = color;\n\n      this._initGradient(color, property);\n\n      this._initPattern(color, property, callback);\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function () {\n      var element = createCanvasElement();\n\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n\n      if (!element.style) {\n        element.style = {};\n      }\n\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      } else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({\n        width: value\n      }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({\n        height: value\n      }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n\n      this._initRetinaScaling();\n\n      this._setImageSmoothing();\n\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject,\n          object,\n          ignoreVpt = false,\n          skipAbsolute = true,\n          i,\n          len;\n      this.viewportTransform = vpt;\n\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point,\n          vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(-point.x - this.viewportTransform[4], -point.y - this.viewportTransform[5]));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function (obj) {\n      this.stateful && obj.setupState();\n\n      obj._set('canvas', this);\n\n      obj.setCoords();\n      this.fire('object:added', {\n        target: obj\n      });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function (obj) {\n      this.fire('object:removed', {\n        target: obj\n      });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function (ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function () {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function () {\n      var points = {},\n          width = this.width,\n          height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({\n        x: 0,\n        y: 0\n      }, iVpt);\n      points.br = transformPoint({\n        x: width,\n        y: height\n      }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n    cancelRequestedRender: function () {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function (ctx, objects) {\n      var v = this.viewportTransform,\n          path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', {\n        ctx: ctx\n      });\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n\n      this._renderBackground(ctx);\n\n      ctx.save(); //apply viewport transform once for all rendering process\n\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n      this._renderObjects(ctx, objects);\n\n      ctx.restore();\n\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n\n      if (this.clipTo) {\n        ctx.restore();\n      }\n\n      if (path) {\n        path.canvas = this; // needed to setup a couple of variables\n\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({\n          forClipping: true\n        });\n        this.drawClipPathOnCanvas(ctx);\n      }\n\n      this._renderOverlay(ctx);\n\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n\n      this.fire('after:render', {\n        ctx: ctx\n      });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function (ctx) {\n      var v = this.viewportTransform,\n          path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]); // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function (ctx, objects) {\n      var i, len;\n\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function (ctx, property) {\n      var fill = this[property + 'Color'],\n          object = this[property + 'Image'],\n          v = this.viewportTransform,\n          needsVpt = this[property + 'Vpt'];\n\n      if (!fill && !object) {\n        return;\n      }\n\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive ? fill.toLive(ctx, this) : fill;\n\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4] + (fill.offsetX || 0), v[5] + (fill.offsetY || 0));\n        }\n\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n\n      if (object) {\n        ctx.save();\n\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function (ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function (ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function (object) {\n      var center = this.getCenter();\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function (object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function (object) {\n      var vpCenter = this.getVpCenter();\n\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function (object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function () {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({\n        x: center.left,\n        y: center.top\n      }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function (object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n      var clipPath = this.clipPath,\n          data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      if (clipPath) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function (methodName, propertiesToInclude) {\n      return this._objects.filter(function (object) {\n        return !object.excludeFromExport;\n      }).map(function (instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function (instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function (methodName, propertiesToInclude) {\n      var data = {},\n          bgImage = this.backgroundImage,\n          overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject ? this.backgroundColor.toObject(propertiesToInclude) : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject ? this.overlayColor.toObject(propertiesToInclude) : this.overlayColor;\n      }\n\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function (options, reviver) {\n      options || (options = {});\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n\n      this._setSVGHeader(markup, options);\n\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n\n      this._setSVGBgOverlayColor(markup, 'background');\n\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n\n      this._setSVGBgOverlayColor(markup, 'overlay');\n\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function (markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n\n      markup.push('<?xml version=\"1.0\" encoding=\"', options.encoding || 'UTF-8', '\" standalone=\"no\" ?>\\n', '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ', '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function (markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt,\n          viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' + options.viewBox.x + ' ' + options.viewBox.y + ' ' + options.viewBox.width + ' ' + options.viewBox.height + '\" ';\n      } else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' + toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' + toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' + toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' + toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push('<svg ', 'xmlns=\"http://www.w3.org/2000/svg\" ', 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ', 'version=\"1.1\" ', 'width=\"', width, '\" ', 'height=\"', height, '\" ', viewBox, 'xml:space=\"preserve\">\\n', '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n', '<defs>\\n', this.createSVGFontFacesMarkup(), this.createSVGRefElementsMarkup(), this.createSVGClipPathMarkup(options), '</defs>\\n');\n    },\n    createSVGClipPathMarkup: function (options) {\n      var clipPath = this.clipPath;\n\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' + this.clipPath.toClipPathSVG(options.reviver) + '</clipPath>\\n';\n      }\n\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function () {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function (prop) {\n        var fill = _this[prop + 'Color'];\n\n        if (fill && fill.toLive) {\n          var shouldTransform = _this[prop + 'Vpt'],\n              vpt = _this.viewportTransform,\n              object = {\n            width: _this.width / (shouldTransform ? vpt[0] : 1),\n            height: _this.height / (shouldTransform ? vpt[3] : 1)\n          };\n          return fill.toSVG(object, {\n            additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : ''\n          });\n        }\n      });\n\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function () {\n      var markup = '',\n          fontList = {},\n          obj,\n          fontFamily,\n          style,\n          row,\n          rowIndex,\n          _char,\n          charIndex,\n          i,\n          len,\n          fontPaths = fabric.fontPaths,\n          objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n\n        fontList[fontFamily] = true;\n\n        if (!obj.styles) {\n          continue;\n        }\n\n        style = obj.styles;\n\n        for (rowIndex in style) {\n          row = style[rowIndex];\n\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += ['\\t\\t@font-face {\\n', '\\t\\t\\tfont-family: \\'', j, '\\';\\n', '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n', '\\t\\t}\\n'].join('');\n      }\n\n      if (markup) {\n        markup = ['\\t<style type=\"text/css\">', '<![CDATA[\\n', markup, ']]>', '</style>\\n'].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function (markup, reviver) {\n      var instance,\n          i,\n          len,\n          objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n\n        if (instance.excludeFromExport) {\n          continue;\n        }\n\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function (markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function (markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function (markup, property) {\n      var filler = this[property + 'Color'],\n          vpt = this.viewportTransform,\n          finalWidth = this.width,\n          finalHeight = this.height;\n\n      if (!filler) {\n        return;\n      }\n\n      if (filler.toLive) {\n        var repeat = filler.repeat,\n            iVpt = fabric.util.invertTransform(vpt),\n            shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push('<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"', ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ', 'width=\"', repeat === 'repeat-y' || repeat === 'no-repeat' ? filler.source.width : finalWidth, '\" height=\"', repeat === 'repeat-x' || repeat === 'no-repeat' ? filler.source.height : finalHeight, '\" fill=\"url(#SVGID_' + filler.id + ')\"', '></rect>\\n');\n      } else {\n        markup.push('<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ', 'fill=\"', filler, '\"', '></rect>\\n');\n      }\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          objs;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n\n          this._objects.unshift(obj);\n        }\n      } else {\n        removeFromArray(this._objects, object);\n\n        this._objects.unshift(object);\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          objs;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n\n          this._objects.push(obj);\n        }\n      } else {\n        removeFromArray(this._objects, object);\n\n        this._objects.push(object);\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          idx,\n          newIdx,\n          objs,\n          objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n\n            this._objects.splice(newIdx, 0, obj);\n          }\n\n          objsMoved++;\n        }\n      } else {\n        idx = this._objects.indexOf(object);\n\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function (object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx; // traverse down the stack looking for the nearest intersecting object\n\n        for (i = idx - 1; i >= 0; --i) {\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          idx,\n          newIdx,\n          objs,\n          objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n\n            this._objects.splice(newIdx, 0, obj);\n          }\n\n          objsMoved++;\n        }\n      } else {\n        idx = this._objects.indexOf(object);\n\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function (object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx; // traverse up the stack looking for the nearest intersecting object\n\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n\n      this._objects.splice(index, 0, object);\n\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n\n      this.forEachObject(function (object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n\n      this.backgroundImage = null;\n\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' + '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n  extend(fabric.StaticCanvas,\n  /** @lends fabric.StaticCanvas */\n  {\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function () {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n\n    fabric.StaticCanvas.prototype.createJPEGStream = function (opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\n\n\nfabric.BaseBrush = fabric.util.createClass(\n/** @lends fabric.BaseBrush.prototype */\n{\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit: 10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function (options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function () {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function (ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function () {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n  needsFullRender: function () {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function () {\n    var ctx = this.canvas.contextTop;\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n(function () {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush,\n  /** @lends fabric.PencilBrush.prototype */\n  {\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function (canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function (pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n\n      this._prepareForDrawing(pointer); // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n\n\n      this._captureDrawingPath(pointer);\n\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function (pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n\n          this._render();\n        } else {\n          var points = this._points,\n              length = points.length,\n              ctx = this.canvas.contextTop; // draw the curve update\n\n          this._saveAndTransform(ctx);\n\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function (options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return true;\n      }\n\n      this.oldEnd = undefined;\n\n      this._finalizeAndAddPath();\n\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function (pointer) {\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function (point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n\n      this._points.push(point);\n\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function () {\n      this._points = [];\n\n      this._setBrushStyles();\n\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function (pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function () {\n      var ctx = this.canvas.contextTop,\n          i,\n          len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n\n      ctx.beginPath(); //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      } // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n\n\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function (points) {\n      var path = [],\n          i,\n          width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length,\n          multSignX = 1,\n          multSignY = 0,\n          manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2); // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n\n        p1 = points[i];\n\n        if (i + 1 < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function (pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray\n      });\n\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate poins array with the decimate value\n     */\n    decimatePoints: function (points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n\n      var zoom = this.canvas.getZoom(),\n          adjustedDistance = Math.pow(distance / zoom, 2),\n          i,\n          l = points.length - 1,\n          lastPoint = points[0],\n          newPoints = [lastPoint],\n          cDistance;\n\n      for (i = 1; i < l; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n\n      if (newPoints.length === 1) {\n        newPoints.push(new fabric.Point(newPoints[0].x, newPoints[0].y));\n      }\n\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function () {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n\n      this._resetShadow(); // fire event 'path' created\n\n\n      this.canvas.fire('path:created', {\n        path: path\n      });\n    }\n  });\n})();\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\n\n\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush,\n/** @lends fabric.CircleBrush.prototype */\n{\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function (canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function (pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n\n    this._saveAndTransform(ctx);\n\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n  dot: function (ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function (pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._setShadow();\n\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function () {\n    var ctx = this.canvas.contextTop,\n        i,\n        len,\n        points = this.points;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function (pointer) {\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n\n      this._render();\n    } else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function () {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove,\n        i,\n        len;\n    this.canvas.renderOnAddRemove = false;\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n        radius: point.radius,\n        left: point.x,\n        top: point.y,\n        originX: 'center',\n        originY: 'center',\n        fill: point.fill\n      });\n      this.shadow && circle.setShadow(this.shadow);\n      circles.push(circle);\n    }\n\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n    this.canvas.add(group);\n    this.canvas.fire('path:created', {\n      path: group\n    });\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._resetShadow();\n\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function (pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n        circleRadius = fabric.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\n        circleColor = new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0, 100) / 100).toRgba();\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n    this.points.push(pointerPoint);\n    return pointerPoint;\n  }\n});\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\n\nfabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush,\n/** @lends fabric.SprayBrush.prototype */\n{\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density: 20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth: 1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance: 1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity: false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping: true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function (canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function (pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function (pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function () {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', {\n      path: group\n    });\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._resetShadow();\n\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function (rects) {\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = {},\n        key,\n        i,\n        len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n\n    var uniqueRectsArray = [];\n\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function (sprayChunk) {\n    var ctx = this.canvas.contextTop,\n        i,\n        len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function () {\n    var ctx = this.canvas.contextTop,\n        i,\n        ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function (pointer) {\n    this.sprayChunkPoints = [];\n    var x,\n        y,\n        width,\n        radius = this.width / 2,\n        i;\n\n    for (i = 0; i < this.density; i++) {\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt( // bottom clamp width to 1\n        Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance);\n      } else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\n\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush,\n/** @lends fabric.PatternBrush.prototype */\n{\n  getPatternSrc: function () {\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n    return patternCanvas;\n  },\n  getPatternSrcFunction: function () {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function () {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function () {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function (pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n(function () {\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      STROKE_OFFSET = 0.5;\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function (el, options) {\n      options || (options = {});\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n\n      this._initStatic(el, options);\n\n      this._initInteractive();\n\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform: false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey: 'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling: false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation: false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey: 'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey: 'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive: true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection: true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey: 'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey: null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(100, 100, 255, 0.3)',\n    // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray: [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth: 1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor: 'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor: 'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor: 'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor: 'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor: 'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor: 'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass: 'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind: false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance: 0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind: false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode: false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function () {\n      this._currentTransform = null;\n      this._groupSelector = null;\n\n      this._initWrapperElement();\n\n      this._createUpperCanvas();\n\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function () {\n      var activeObjects = this.getActiveObjects(),\n          object,\n          objsToRender,\n          activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n\n          if (activeObjects.indexOf(object) === -1) {\n            objsToRender.push(object);\n          } else {\n            activeGroupObjects.push(object);\n          }\n        }\n\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      } else {\n        objsToRender = this._objects;\n      }\n\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n    renderTopLayer: function (ctx) {\n      ctx.save();\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      } // we render the top context - last object\n\n\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n\n        this.contextTopDirty = true;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function () {\n      var t = this._currentTransform;\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          } else {\n            t.mouseXSign = 1;\n          }\n        }\n\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          } else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      } else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      } else {\n        xy = {\n          x: pointer.x,\n          y: pointer.y\n        };\n      } // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\n\n      return target.containsPoint(xy) || target._findTargetCorner(pointer);\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {\n          x: x,\n          y: y\n        }),\n            targetRelativeX = Math.max(target.cacheTranslationX + normalizedPointer.x * target.zoomX, 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + normalizedPointer.y * target.zoomY, 0);\n\n        var isTransparent = fabric.util.isTransparent(target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor,\n          v = this.viewportTransform;\n      target.selectionBackgroundColor = '';\n      this.clearContext(ctx);\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false\n      });\n      target.selectionBackgroundColor = originalColor;\n      var isTransparent = fabric.util.isTransparent(ctx, x, y, this.targetFindTolerance);\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function (e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function (key) {\n          return e[key] === true;\n        });\n      } else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n      return !target || target && activeObject && activeObjects.length > 1 && activeObjects.indexOf(target) === -1 && activeObject !== target && !this._isSelectionKeyPressed(e) || target && !target.evented || target && !target.selectable && activeObject && activeObject !== target;\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      } else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function (target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      } else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      } else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function (alreadySelected, corner, e\n    /* target */\n    ) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target)\n      };\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function (mouseMove, t, by) {\n      var property = 'originX',\n          origins = {\n        0: 'center'\n      },\n          skew = t.target.skewX,\n          originA = 'left',\n          originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n      mouseMove = mouseMove > 0 ? 1 : -1;\n\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n\n      origins[-1] = originA;\n      origins[1] = originB;\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      } else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if (lockSkewingX && by === 'x' || lockSkewingY && by === 'y') {\n        return false;\n      } // Get the constraint point\n\n\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin,\n          constraintPosition,\n          dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY); // Actually skew the object\n\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y; // Make sure the constraints apply\n\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function (localMouse, transform, by, _dim) {\n      var target = transform.target,\n          newValue,\n          skewed = false,\n          skewSign = transform.skewSign,\n          newDim,\n          dimNoSkew,\n          otherBy,\n          _otherBy,\n          _by,\n          newDimMouse,\n          skewX,\n          skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      } else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      } else {\n        newValue = skewSign * Math.atan(newDimMouse / target['scale' + _by] / (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = _dim[otherBy] / newDim[otherBy] * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      } // Get the constraint point\n\n\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(),\n          scaled = false;\n\n      this._setLocalMouse(localMouse, t); // Actually scale the object\n\n\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim); // Make sure the constraints apply\n\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function (localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target,\n          forbidScalingX = false,\n          forbidScalingY = false,\n          scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n\n      if (by === 'x' && target instanceof fabric.Textbox) {\n        var w = target.width * (localMouse.x / _dim.x);\n\n        if (w >= target.getMinWidth()) {\n          scaled = w !== target.width;\n          target.set('width', w);\n          return scaled;\n        }\n\n        return false;\n      }\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      } else if (!by) {\n        forbidScalingX || lockScalingX || target.set('scaleX', scaleX) && (scaled = scaled || changeX);\n        forbidScalingY || lockScalingY || target.set('scaleY', scaleY) && (scaled = scaled || changeY);\n      } else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || target.set('scaleX', scaleX) && (scaled = changeX);\n      } else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || target.set('scaleY', scaleY) && (scaled = changeY);\n      }\n\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function (localMouse, target, transform, _dim) {\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY + _dim.x * transform.original.scaleX / target.scaleX,\n          scaled,\n          signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1,\n          newScaleX,\n          newScaleY; // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function (transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        } else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        } else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function (localMouse, t) {\n      var target = t.target,\n          zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      } else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      } else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      } // adjust the mouse coordinates when dealing with padding\n\n\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        } else {\n          localMouse.x -= padding;\n        }\n      } else {\n        // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        } else {\n          localMouse.y -= padding;\n        }\n      } else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n      var t = this._currentTransform,\n          target = t.target,\n          constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle = target.snapAngle,\n            snapThreshold = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      } // normalize angle to positive value\n\n\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      } else {\n        // rotation only happen here\n        target.angle = angle; // Make sure the constraints apply\n\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n        ctx.fillRect(groupSelector.ex - (left > 0 ? 0 : -left), groupSelector.ey - (top > 0 ? 0 : -top), aleft, atop);\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor; // selection border\n\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n        var px = groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop);\n        ctx.beginPath();\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n        ctx.closePath();\n        ctx.stroke();\n      } else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n\n        ctx.strokeRect(groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft), groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop), aleft, atop);\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget,\n          activeTargetSubs; // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      } // if we hit the corner of an activeObject, let's return that.\n\n\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n\n      if (aObjects.length === 1 && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function (pointer, obj, globalPointer) {\n      if (obj && obj.visible && obj.evented && this.containsPoint(null, obj, pointer)) {\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n\n          if (!isTransparent) {\n            return true;\n          }\n        } else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function (objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target,\n          i = objects.length,\n          subTarget; // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ? this._normalizePointer(objToCheck.group, pointer) : pointer;\n\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n\n          break;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function (pointer) {\n      return fabric.util.transformPoint(pointer, fabric.util.invertTransform(this.viewportTransform));\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs(bounds.top - bounds.bottom);\n        }\n\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs(bounds.right - bounds.left);\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = {\n          width: 1,\n          height: 1\n        };\n      } else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''); // there is no need to create a new upperCanvas element if we have already one.\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      } else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\n      this._applyCanvasStyle(this.upperCanvasEl);\n\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function () {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        } else {\n          return [active];\n        }\n      }\n\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function (obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', {\n          target: obj\n        });\n\n        this._discardActiveObject();\n\n        this.fire('selection:cleared', {\n          target: obj\n        });\n        obj.fire('deselected');\n      }\n\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function (oldObjects, e) {\n      var somethingChanged = false,\n          objects = this.getActiveObjects(),\n          added = [],\n          removed = [],\n          opt = {\n        e: e\n      };\n      oldObjects.forEach(function (oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function (object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed; // added for backward compatibility\n\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      } else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n\n        opt.selected = added; // added for backward compatibility\n\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      } else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n\n      this._setActiveObject(object, e);\n\n      this._fireSelectionEvents(currentActives, e);\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function (object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n\n      if (object.onSelect({\n        e: e\n      })) {\n        return false;\n      }\n\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function (e, object) {\n      var obj = this._activeObject;\n\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({\n          e: e,\n          object: object\n        })) {\n          return false;\n        }\n\n        this._activeObject = null;\n      }\n\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects(),\n          activeObject = this.getActiveObject();\n\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', {\n          target: activeObject,\n          e: e\n        });\n      }\n\n      this._discardActiveObject(e);\n\n      this._fireSelectionEvents(currentActives, e);\n\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach(function (element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }.bind(this));\n\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function (ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function (instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude); //Undo the damage we did by changing all of its properties\n\n\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function (instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top']; //Copy all the positionally relevant properties across now\n\n        var originalValues = {};\n        layoutProps.forEach(function (prop) {\n          originalValues[prop] = instance[prop];\n        });\n\n        this._activeObject.realizeTransform(instance);\n\n        return originalValues;\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function (instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function (markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  }); // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n})();\n\n(function () {\n  var cursorOffset = {\n    mt: 0,\n    // n\n    tr: 1,\n    // ne\n    mr: 2,\n    // e\n    br: 3,\n    // se\n    mb: 4,\n    // s\n    bl: 5,\n    // sw\n    ml: 6,\n    // w\n    tl: 7 // nw\n\n  },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3,\n      MIDDLE_CLICK = 2,\n      LEFT_CLICK = 1,\n      addEventOptions = {\n    passive: false\n  };\n\n  function checkClick(e, value) {\n    return e.button && e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: ['n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize', 'nw-resize'],\n\n    /**\n     * Contains the id of the touch event that owns the fabric transform\n     * @type Number\n     * @private\n     */\n    mainTouchId: null,\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n\n      this._bindEvents();\n\n      this.addOrRemove(addListener, 'add');\n    },\n\n    /**\n     * return an event prefix pointer or mouse.\n     * @private\n     */\n    _getEventPrefix: function () {\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\n    },\n    addOrRemove: function (functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n\n      if (!this.enablePointerEvents) {\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n      }\n\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function () {\n      this.addOrRemove(removeListener, 'remove'); // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n\n      var eventTypePrefix = this._getEventPrefix();\n\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function () {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function (e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function (e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function (e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function (e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', {\n        target: target,\n        e: e\n      });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', {\n        e: e\n      });\n\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function (obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function (e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this.currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', {\n          target: null,\n          e: e\n        });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function (e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function (e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function (e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function (e) {\n      e.preventDefault();\n\n      var target = this._simpleEventHandler('dragover', e);\n\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'dblclick');\n\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * Return a the id of an event.\n     * returns either the pointerId or the identifier or 0 for the mouse event\n     * @private\n     * @param {Event} evt Event object\n     */\n    getPointerId: function (evt) {\n      var changedTouches = evt.changedTouches;\n\n      if (changedTouches) {\n        return changedTouches[0] && changedTouches[0].identifier;\n      }\n\n      if (this.enablePointerEvents) {\n        return evt.pointerId;\n      }\n\n      return -1;\n    },\n\n    /**\n     * Determines if an event has the id of the event that is considered main\n     * @private\n     * @param {evt} event Event object\n     */\n    _isMainEvent: function (evt) {\n      if (evt.isPrimary === true) {\n        return true;\n      }\n\n      if (evt.isPrimary === false) {\n        return false;\n      }\n\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\n        return true;\n      }\n\n      if (evt.changedTouches) {\n        return evt.changedTouches[0].identifier === this.mainTouchId;\n      }\n\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchStart: function (e) {\n      e.preventDefault();\n\n      if (this.mainTouchId === null) {\n        this.mainTouchId = this.getPointerId(e);\n      }\n\n      this.__onMouseDown(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions); // Unbind mousedown to prevent double triggers from touch devices\n\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchEnd: function (e) {\n      if (e.touches.length > 0) {\n        // if there are still touches stop here\n        return;\n      }\n\n      this.__onMouseUp(e);\n\n      this._resetTransformEventData();\n\n      this.mainTouchId = null;\n\n      var eventTypePrefix = this._getEventPrefix();\n\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      var _this = this;\n\n      if (this._willAddMouseDown) {\n        clearTimeout(this._willAddMouseDown);\n      }\n\n      this._willAddMouseDown = setTimeout(function () {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        _this._willAddMouseDown = 0;\n      }, 400);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      if (this._isMainEvent(e)) {\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function (target) {\n      var activeObject = this._activeObject;\n\n      if (!!activeObject !== !!target || activeObject && target && activeObject !== target) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      } else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target,\n          transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          shouldRender = false,\n          isClick = !groupSelector || groupSelector.left === 0 && groupSelector.top === 0;\n\n      this._cacheTransformEventData(e);\n\n      target = this._target;\n\n      this._handleEvent(e, 'up:before'); // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n\n\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n\n        this._resetTransformEventData();\n\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n\n      this._setCursorFromEvent(e, target);\n\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n\n      this._groupSelector = null;\n      this._currentTransform = null; // reset the target information about which corner is selected\n\n      target && (target.__corner = 0);\n\n      if (shouldRender) {\n        this.requestRenderAll();\n      } else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function (eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n        e: e,\n        target: target,\n        subTargets: targets\n      };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n\n      if (!targets) {\n        return target;\n      }\n\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function (e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n        e: e,\n        target: target,\n        subTargets: targets,\n        button: button || LEFT_CLICK,\n        isClick: isClick || false,\n        pointer: this._pointer,\n        absolutePointer: this._absolutePointer,\n        transform: this._currentTransform\n      };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function (e) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n        e: e,\n        target: target,\n        transform: transform\n      };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || this.stateful && target.hasStateChanged()) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n\n          this._fire(eventName, options);\n        }\n\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function (options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function (e) {\n      this._isCurrentlyDrawing = true;\n\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer, {\n        e: e,\n        pointer: pointer\n      });\n\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function (e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer, {\n          e: e,\n          pointer: pointer\n        });\n      }\n\n      this.setCursor(this.freeDrawingCursor);\n\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function (e) {\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n\n      var pointer = this.getPointer(e);\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({\n        e: e,\n        pointer: pointer\n      });\n\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'down:before');\n\n      var target = this._target; // if right click just fire events\n\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      } // ignore if some object is being transformed at this moment\n\n\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer; // save pointer for check in __onMouseUp event\n\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      } else if (shouldGroup) {\n        this._handleGrouping(e, target);\n\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target || !target.selectable && !target.isEditing && target !== this._activeObject)) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n\n      this._handleEvent(e, 'down'); // we must renderAll so that we update the visuals\n\n\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function () {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function (e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function (e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t\n      }); // determine if it's a drag or rotate case\n\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n\n      this._cacheTransformEventData(e);\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector; // We initially clicked in an empty area, so we draw a box for multiple selection\n\n      if (groupSelector) {\n        pointer = this._pointer;\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n        this.renderTop();\n      } else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n\n        this._setCursorFromEvent(e, target);\n\n        this._fireOverOutEvents(target, e);\n      } else {\n        this._transformObject(e);\n      }\n\n      this._handleEvent(e, 'move');\n\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function (target, e) {\n      this.fireSyntheticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover'\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function (target, e) {\n      this.fireSyntheticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter'\n      });\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function (target, e, config) {\n      var inOpt,\n          outOpt,\n          oldTarget = this[config.targetName],\n          outFires,\n          inFires,\n          targetChanged = oldTarget !== target,\n          canvasEvtIn = config.canvasEvtIn,\n          canvasEvtOut = config.canvasEvtOut;\n\n      if (targetChanged) {\n        inOpt = {\n          e: e,\n          target: target,\n          previousTarget: oldTarget\n        };\n        outOpt = {\n          e: e,\n          target: oldTarget,\n          nextTarget: target\n        };\n        this[config.targetName] = target;\n      }\n\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function (e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'wheel');\n\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function (e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function (e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n        target: transform.target,\n        e: e,\n        transform: transform,\n        pointer: pointer\n      };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      } else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      } else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      } else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      } else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      } else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      } else {\n        actionPerformed = this._translateObject(x, y);\n\n        if (actionPerformed) {\n          this._fire('moving', options);\n\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function (eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function (e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target); // Switch from a normal resize to center-based\n\n\n        if (centerTransform && (transform.originX !== 'center' || transform.originY !== 'center') || // Switch from center-based resize to normal one\n        !centerTransform && transform.originX === 'center' && transform.originY === 'center') {\n          this._resetCurrentTransform();\n\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current transform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse position y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function (e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      } else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function (e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ? this._activeObject : null,\n          // only show proper corner when group selection is not active\n      corner = (!activeSelection || !activeSelection.contains(target)) && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      } else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function (corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      } else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      } else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      } else {\n        return this.defaultCursor;\n      }\n    },\n    actionIsDisabled: function (corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      } else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      } else if (corner === 'mtr') {\n        return target.lockRotation;\n      } else {\n        return this._isUniscalePossible(e, target) ? target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function (corner, target, e) {\n      var n = Math.round(target.angle % 360 / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n\n      n += cursorOffset[corner];\n\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      } // normalize n to be from 0 to 7\n\n\n      n %= 8;\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n(function () {\n  var min = Math.min,\n      max = Math.max;\n  fabric.util.object.extend(fabric.Canvas.prototype,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function (e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection && (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({\n        e: e\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject; // avoid multi select when shift click on a corner\n\n      if (activeObject.__corner) {\n        return;\n      }\n\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true); // if even object is not found or we are on activeObjectCorner, bail out\n\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      } else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function (target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      } else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function (target, e) {\n      var currentActives = this.getActiveObjects(),\n          group = this._createGroup(target);\n\n      this._hoveredTarget = group;\n\n      this._setActiveObject(group, e);\n\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function (target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower ? [this._activeObject, target] : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n      var group = this._collectObjects(e),\n          aGroup; // do not create group for 1 element only\n\n\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      } else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function (e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2; // we iterate reverse order to collect top first in case of click.\n\n      for (var i = this._objects.length; i--;) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) || currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) || allowIntersect && currentObject.containsPoint(selectionX1Y1) || allowIntersect && currentObject.containsPoint(selectionX2Y2)) {\n          group.push(currentObject); // only add one object if it's a click\n\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function (object) {\n          return !object.onSelect({\n            e: e\n          });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function (e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      this.setCursor(this.defaultCursor); // clear selection and current transformation\n\n      this._groupSelector = null;\n    }\n  });\n})();\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype,\n  /** @lends fabric.StaticCanvas.prototype */\n  {\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = {});\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function (multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || {};\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement(),\n          originalContextTop = this.contextTop;\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.contextTop = null;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      this.contextTop = originalContextTop;\n      return canvasEl;\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    } // serialize if it wasn't already\n\n\n    var serialized = typeof json === 'string' ? JSON.parse(json) : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        } else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function (serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n\n    enlivenedObjects.forEach(function (obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove; // remove parts i cannot set as options\n\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay; // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n\n    this._setOptions(serialized);\n\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function (serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function (property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function (enlivedObject) {\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    } else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function () {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function (enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function (clone) {\n      clone.loadFromJSON(data, function () {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function (callback) {\n    var el = fabric.util.createCanvasElement();\n    el.width = this.width;\n    el.height = this.height;\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function () {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    } else {\n      callback && callback(clone);\n    }\n  }\n});\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n\n\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type: 'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX: 'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY: 'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top: 0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left: 0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width: 0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height: 0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX: false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY: false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity: 1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle: 0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX: 0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY: 0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize: 13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners: true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor: null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor: null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding: 0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor: 'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray: null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor: 'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor: null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle: 'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray: null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling: false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation: true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill: 'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule: 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor: '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke: null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth: 1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray: null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap: 'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin: 'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit: 4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow: null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving: 0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor: 1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * This property has been depreacted. Since caching and and qrDecompose this\n     * property can be handled with the standard top,left,scaleX,scaleY,angle and skewX.\n     * A documentation example on how to parse and merge a transformMatrix will be provided before\n     * completely removing it in fabric 4.0\n     * If you are starting a project now, DO NOT use it.\n     * @deprecated since 3.2.0\n     * @type Array\n     */\n    transformMatrix: null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit: 0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable: true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented: true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible: true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls: true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders: true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint: true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset: 40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind: false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo: null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX: false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY: false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation: false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX: false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY: false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling: false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX: false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY: false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip: false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport: false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching: objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache: false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache: true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform: false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty: true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst: 'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: ('top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' + 'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' + 'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' + 'skewX skewY fillRule paintFirst clipPath strokeUniform').split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: ('fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' + ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath').split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function (options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n\n      this._updateCacheCanvas(); // if canvas gets created, is empty, so dirty.\n\n\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function (dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width,\n          height = dims.height,\n          max = fabric.maxCacheSideLimit,\n          min = fabric.minCacheSideLimit;\n\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n\n        if (height < min) {\n          dims.height = min;\n        }\n\n        return dims;\n      }\n\n      var ar = width / height,\n          limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function () {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n      dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function () {\n      var targetCanvas = this.canvas;\n\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width,\n          height = dims.height,\n          drawingWidth,\n          drawingHeight,\n          zoomX = dims.zoomX,\n          zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0,\n          additionalHeight = 0,\n          shouldResizeCanvas = false;\n\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) && canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        } else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n\n        this._cacheContext.scale(zoomX, zoomY);\n\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function (options) {\n      this._setOptions(options);\n\n      this._initGradient(options.fill, 'fill');\n\n      this._initGradient(options.stroke, 'stroke');\n\n      this._initClipping(options);\n\n      this._initPattern(options.fill, 'fill');\n\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function (ctx) {\n      var m;\n\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      } else {\n        m = this.calcOwnMatrix();\n      }\n\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          object = {\n        type: this.type,\n        version: fabric.version,\n        originX: this.originX,\n        originY: this.originY,\n        left: toFixed(this.left, NUM_FRACTION_DIGITS),\n        top: toFixed(this.top, NUM_FRACTION_DIGITS),\n        width: toFixed(this.width, NUM_FRACTION_DIGITS),\n        height: toFixed(this.height, NUM_FRACTION_DIGITS),\n        fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,\n        stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,\n        strokeWidth: toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n        strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n        strokeLineCap: this.strokeLineCap,\n        strokeDashOffset: this.strokeDashOffset,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeMiterLimit: toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n        scaleX: toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n        scaleY: toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n        angle: toFixed(this.angle, NUM_FRACTION_DIGITS),\n        flipX: this.flipX,\n        flipY: this.flipY,\n        opacity: toFixed(this.opacity, NUM_FRACTION_DIGITS),\n        shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,\n        visible: this.visible,\n        clipTo: this.clipTo && String(this.clipTo),\n        backgroundColor: this.backgroundColor,\n        fillRule: this.fillRule,\n        paintFirst: this.paintFirst,\n        globalCompositeOperation: this.globalCompositeOperation,\n        transformMatrix: this.transformMatrix ? this.transformMatrix.concat() : null,\n        skewX: toFixed(this.skewX, NUM_FRACTION_DIGITS),\n        skewY: toFixed(this.skewY, NUM_FRACTION_DIGITS)\n      };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function (object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function (prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' && Object.prototype.toString.call(prototype[prop]) === '[object Array]'; // basically a check for [] === []\n\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function () {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function () {\n      var scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n\n      return {\n        scaleX: scaleX,\n        scaleY: scaleY\n      };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function () {\n      var scale = this.getObjectScaling(),\n          scaleX = scale.scaleX,\n          scaleY = scale.scaleY;\n\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n\n      return {\n        scaleX: scaleX,\n        scaleY: scaleY\n      };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function () {\n      var opacity = this.opacity;\n\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function (key, value) {\n      var shouldConstrainValue = key === 'scaleX' || key === 'scaleY',\n          isChanged = this[key] !== value,\n          groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      } else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      } else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      } else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        } else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function () {// implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function () {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function () {\n      return this.opacity === 0 || this.width === 0 && this.height === 0 && this.strokeWidth === 0 || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function (ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n\n      ctx.save();\n\n      this._setupCompositeOperation(ctx);\n\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n\n      this._setOpacity(ctx);\n\n      this._setShadow(ctx, this);\n\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n\n      this.clipTo && fabric.util.clipContext(this, ctx);\n\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      } else {\n        this._removeCacheCanvas();\n\n        this.dirty = false;\n        this.drawObject(ctx);\n\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({\n            propertySet: 'cacheProperties'\n          });\n        }\n      }\n\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n    renderCache: function (options) {\n      options = options || {};\n\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({\n          propertySet: 'cacheProperties'\n        });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function () {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function () {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function () {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function () {\n      if (this.paintFirst === 'stroke' && this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n\n      if (this.clipPath) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function () {\n      this.ownCaching = this.needsItsOwnCache() || this.objectCaching && (!this.group || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function () {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function (ctx) {\n      var path = this.clipPath;\n      ctx.save(); // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      } else {\n        ctx.globalCompositeOperation = 'destination-in';\n      } //ctx.scale(1 / 2, 1 / 2);\n\n\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function (ctx, forClipping) {\n      var originalFill = this.fill,\n          originalStroke = this.stroke;\n\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n\n        this._setClippingProperties(ctx);\n      } else {\n        this._renderBackground(ctx);\n\n        this._setStrokeStyles(ctx, this);\n\n        this._setFillStyles(ctx, this);\n      }\n\n      this._render(ctx);\n\n      this._drawClipPath(ctx);\n\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n    _drawClipPath: function (ctx) {\n      var path = this.clipPath;\n\n      if (!path) {\n        return;\n      } // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n\n\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({\n        forClipping: true\n      });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function (ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function (skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      } else {\n        if (this.dirty || this.clipPath && this.clipPath.absolutePositioned || this.statefullCache && this.hasStateChanged('cacheProperties')) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function (ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n\n      var dim = this._getNonTransformedDimensions();\n\n      ctx.fillStyle = this.backgroundColor;\n      ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y); // if there is background color no other shadows\n      // should be casted\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function (ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      } else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n    _setStrokeStyles: function (ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive ? decl.stroke.toLive(ctx, this) : decl.stroke;\n      }\n    },\n    _setFillStyles: function (ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive ? decl.fill.toLive(ctx, this) : decl.fill;\n      }\n    },\n    _setClippingProperties: function (ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function (ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      } // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\n\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      } else {\n        alternative && alternative(ctx);\n      }\n\n      if (this.strokeUniform) {\n        ctx.setLineDash(ctx.getLineDash().map(function (value) {\n          return value * ctx.lineWidth;\n        }));\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function (ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options,\n          drawBorders,\n          drawControls;\n      styleOverride = styleOverride || {};\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      } else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function (ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow,\n          canvas = this.canvas,\n          scaling,\n          multX = canvas && canvas.viewportTransform[0] || 1,\n          multY = canvas && canvas.viewportTransform[3] || 1;\n\n      if (shadow.nonScaling) {\n        scaling = {\n          scaleX: 1,\n          scaleY: 1\n        };\n      } else {\n        scaling = this.getObjectScaling();\n      }\n\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function (ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function (ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return {\n          offsetX: 0,\n          offsetY: 0\n        };\n      }\n\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n\n      return {\n        offsetX: offsetX,\n        offsetY: offsetY\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function (ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n\n        this._renderFill(ctx);\n      } else {\n        this._renderFill(ctx);\n\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function ()\n    /* ctx */\n    {},\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function (ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n\n      this._applyPatternGradientTransform(ctx, this.fill);\n\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      } else {\n        ctx.fill();\n      }\n\n      ctx.restore();\n    },\n    _renderStroke: function (ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\n      this._applyPatternGradientTransform(ctx, this.stroke);\n\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function () {\n      return {\n        x: this.left + this.width / 2,\n        y: this.top + this.height / 2\n      };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function () {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function (preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n\n      this.transformMatrix = null;\n\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function (callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      } else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function (callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function (options) {\n      options || (options = {});\n      var utils = fabric.util,\n          origParams = utils.saveObjectTransform(this),\n          originalShadow = this.shadow,\n          abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n      boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow,\n          scaling,\n          shadowOffset = {\n        x: 0,\n        y: 0\n      },\n          shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n\n        if (shadow.nonScaling) {\n          scaling = {\n            scaleX: 1,\n            scaleY: 1\n          };\n        } else {\n          scaling = this.getObjectScaling();\n        }\n\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX);\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY);\n      }\n\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false\n      });\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n      this.set(origParams).setCoords(); // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function (options) {\n      options || (options = {});\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function (type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function () {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function (propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function (property, options) {\n      options || (options = {});\n      var gradient = {\n        colorStops: []\n      };\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function (options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function (options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function (color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function (angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function (e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n  extend(fabric.Object.prototype, fabric.Observable);\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function (className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function (patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n\n      fabric.util.enlivenObjects([object.clipPath], function (enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n\n\n  fabric.Object.__uid = 0;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n    left: -0.5,\n    center: 0,\n    right: 0.5\n  },\n      originYOffset = {\n    top: -0.5,\n    center: 0,\n    bottom: 0.5\n  };\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function (point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX,\n          offsetY,\n          dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      } else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      } else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      } else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      } else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function (point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function (center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function () {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function (originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function (point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p,\n          p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined') {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      } else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function (pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function (to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom,\n          offsetTo; //TODO: this function does not consider mixed situation like top, center.\n\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      } else {\n        offsetFrom = this.originX - 0.5;\n      }\n\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      } else {\n        offsetTo = to - 0.5;\n      }\n\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function () {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n      var center = this.getCenterPoint();\n      this.originX = 'center';\n      this.originY = 'center';\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function () {\n      var originPoint = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY);\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function () {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    }\n  });\n})();\n\n(function () {\n  function getCoords(coords) {\n    return [new fabric.Point(coords.tl.x, coords.tl.y), new fabric.Point(coords.tr.x, coords.tr.y), new fabric.Point(coords.br.x, coords.br.y), new fabric.Point(coords.bl.x, coords.bl.y)];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function (absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function (pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(coords, pointTL, pointBR);\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function (other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(this.getCoords(absolute, calculate), other.getCoords(absolute, calculate));\n      return intersection.status === 'Intersection' || other.isContainedWithinObject(this, absolute, calculate) || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function (other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0,\n          lines = other._getImageLines(calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords);\n\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function (pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n      return boundingRect.left >= pointTL.x && boundingRect.left + boundingRect.width <= pointBR.x && boundingRect.top >= pointTL.y && boundingRect.top + boundingRect.height <= pointBR.y;\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function (point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords),\n          xPoints = this._findCrossPoints(point, lines); // if xPoints is odd then point is inside the object\n\n\n      return xPoints !== 0 && xPoints % 2 === 1;\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function (calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n\n      var pointTL = this.canvas.vptCoords.tl,\n          pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate),\n          point;\n\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      } // no points on screen, check intersection with absolute coordinates\n\n\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function (pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = {\n        x: (pointTL.x + pointBR.x) / 2,\n        y: (pointTL.y + pointBR.y) / 2\n      };\n\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function (calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n\n      var pointTL = this.canvas.vptCoords.tl,\n          pointBR = this.canvas.vptCoords.br;\n\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function (oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function (point, lines) {\n      var b1,\n          b2,\n          a1,\n          a2,\n          xi,\n          // yi,\n      xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey]; // optimisation 1: line below point. no cross\n\n        if (iLine.o.y < point.y && iLine.d.y < point.y) {\n          continue;\n        } // optimisation 2: line above point. no cross\n\n\n        if (iLine.o.y >= point.y && iLine.d.y >= point.y) {\n          continue;\n        } // optimisation 3: vertical line case\n\n\n        if (iLine.o.x === iLine.d.x && iLine.o.x >= point.x) {\n          xi = iLine.o.x; // yi = point.y;\n        } // calculate the intersection point\n        else {\n            b1 = 0;\n            b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n            a1 = point.y - b1 * point.x;\n            a2 = iLine.o.y - b2 * iLine.o.x;\n            xi = -(a1 - a2) / (b1 - b2); // yi = a1 + b1 * xi;\n          } // dont count xi < point.x cases\n\n\n        if (xi >= point.x) {\n          xcount += 1;\n        } // optimisation 4: specific for square images\n\n\n        if (xcount === 2) {\n          break;\n        }\n      }\n\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function (absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function () {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function () {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function (value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        } else {\n          return this.minScaleLimit;\n        }\n      } else if (value === 0) {\n        return 0.0001;\n      }\n\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function (value) {\n      this._set('scaleX', value);\n\n      this._set('scaleY', value);\n\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function (value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function (value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculates and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function (absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2,\n          h = dim.y / 2,\n          tl = transformPoint({\n        x: -w,\n        y: -h\n      }, finalMatrix),\n          tr = transformPoint({\n        x: w,\n        y: -h\n      }, finalMatrix),\n          bl = transformPoint({\n        x: -w,\n        y: h\n      }, finalMatrix),\n          br = transformPoint({\n        x: w,\n        y: h\n      }, finalMatrix);\n\n      if (!absolute) {\n        var padding = this.padding,\n            angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle),\n            sin = fabric.util.sin(angle),\n            cosP = cos * padding,\n            sinP = sin * padding,\n            cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n\n        var ml = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      } // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n\n      var coords = {\n        // corners\n        tl: tl,\n        tr: tr,\n        br: br,\n        bl: bl\n      };\n\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb; // rotating point\n\n        coords.mtr = mtr;\n      }\n\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, useful in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function (ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      } // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\n\n      ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function () {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle),\n            cos = fabric.util.cos(theta),\n            sin = fabric.util.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function () {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n    transformMatrixKey: function (skipGroup) {\n      var sep = '_',\n          prefix = '';\n\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      }\n\n      ;\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY + sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY + sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function (skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n\n      var key = this.transformMatrixKey(),\n          cache = this.matrixCache || (this.matrixCache = {});\n\n      if (cache.key === key) {\n        return cache.value;\n      }\n\n      var matrix = this.calcOwnMatrix();\n\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n    calcOwnMatrix: function () {\n      var key = this.transformMatrixKey(true),\n          cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n\n      if (cache.key === key) {\n        return cache.value;\n      }\n\n      var matrix = this._calcTranslateMatrix(),\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n    _calcDimensionsTransformMatrix: function (skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n\n      return scaleMatrix;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function () {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return {\n        x: w,\n        y: h\n      };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param {Number} skewX, a value to override current skewX\n     * @param {Number} skewY, a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function (skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX,\n          dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      } else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      } else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n\n      var points = [{\n        x: -dimX,\n        y: -dimY\n      }, {\n        x: dimX,\n        y: -dimY\n      }, {\n        x: -dimX,\n        y: dimY\n      }, {\n        x: dimX,\n        y: dimY\n      }],\n          i,\n          transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return this._finalizeDimensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function (width, height) {\n      return this.strokeUniform ? {\n        x: width + this.strokeWidth,\n        y: height + this.strokeWidth\n      } : {\n        x: width,\n        y: height\n      };\n    },\n\n    /*\n     * Calculate object dimensions for controls, including padding and canvas zoom.\n     * private\n     */\n    _calculateCurrentDimensions: function () {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function () {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    } else {\n      this.canvas.sendToBack(this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function () {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    } else {\n      this.canvas.bringToFront(this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function (intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    } else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function (intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    } else {\n      this.canvas.bringForward(this, intersecting);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function (index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    } else {\n      this.canvas.moveTo(this, index);\n    }\n\n    return this;\n  }\n});\n/* _TO_SVG_START_ */\n\n(function () {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    } else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    } else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function (skipShadow) {\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n      return [stroke, 'stroke-width: ', strokeWidth, '; ', 'stroke-dasharray: ', strokeDashArray, '; ', 'stroke-linecap: ', strokeLineCap, '; ', 'stroke-dashoffset: ', strokeDashOffset, '; ', 'stroke-linejoin: ', strokeLineJoin, '; ', 'stroke-miterlimit: ', strokeMiterLimit, '; ', fill, 'fill-rule: ', fillRule, '; ', 'opacity: ', opacity, ';', filter, visibility].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function (style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ? 'font-family: ' + (style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1 ? '\\'' + style.fontFamily + '\\'' : style.fontFamily) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + -style.deltaY + '; ' : '';\n\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [stroke, strokeWidth, fontFamily, fontSize, fontStyle, fontWeight, textDecoration, fill, deltaY, useWhiteSpace ? 'white-space: pre; ' : ''].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function (style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') + (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function () {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function () {\n      return [this.id ? 'id=\"' + this.id + '\" ' : '', this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : ''].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function (full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform + (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function () {\n      return this.transformMatrix ? ' ' + fabric.util.matrixToSVG(this.transformMatrix) : '';\n    },\n    _setSVGBg: function (textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push('\\t\\t<rect ', this._getFillAttributes(this.backgroundColor), ' x=\"', toFixed(-this.width / 2, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(-this.height / 2, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(this.width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(this.height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function (reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(reviver), {\n        reviver: reviver\n      });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function (reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\n        reviver: reviver\n      });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function (objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [this.getSvgTransform(true, additionalTransform), this.getSvgCommons()].join(''),\n          // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function (objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\n          stroke = this.stroke,\n          fill = this.fill,\n          shadow = this.shadow,\n          commonPieces,\n          markup = [],\n          clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' + clipPath.toClipPathSVG(reviver) + '</clipPath>\\n';\n      }\n\n      if (absoluteClipPath) {\n        markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n      }\n\n      markup.push('<g ', this.getSvgTransform(false), !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '', ' >\\n');\n      commonPieces = [styleInfo, vectorEffect, noStyle ? '' : this.addPaintOrder(), ' ', additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : ''].join('');\n      objectMarkup[index] = commonPieces;\n\n      if (fill && fill.toLive) {\n        markup.push(fill.toSVG(this));\n      }\n\n      if (stroke && stroke.toLive) {\n        markup.push(stroke.toSVG(this));\n      }\n\n      if (shadow) {\n        markup.push(shadow.toSVG(this));\n      }\n\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    addPaintOrder: function () {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function () {\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n  /*\n    Depends on `stateProperties`\n  */\n\n  function saveProps(origin, destination, props) {\n    var tmpObj = {},\n        deep = true;\n    props.forEach(function (prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    } else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    } else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue),\n          key;\n\n      if (!currentValue || typeof currentValue !== 'object' || !firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i]; // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n\n        if (key === 'canvas') {\n          continue;\n        }\n\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function (propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function (options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n\n      saveProps(this, destination, this[propertySet]);\n\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function (options) {\n      options = options || {};\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = {};\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n(function () {\n  var degreesToRadians = fabric.util.degreesToRadians;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function (pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || !this.canvas || this.canvas._activeObject !== this) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n\n      for (var i in this.oCoords) {\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') && (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner); // debugging\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({\n          x: ex,\n          y: ey\n        }, lines);\n\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function () {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n\n      /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\n      /* 0.707106 stands for sqrt(2)/2 */\n      cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x,\n          y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function (ctx) {\n      if (!this.selectionBackgroundColor || this.canvas && !this.canvas.interactive || this.canvas && this.canvas._activeObject !== this) {\n        return this;\n      }\n\n      ctx.save();\n\n      var center = this.getCenterPoint(),\n          wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function (ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ? styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ? styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(-width / 2, -height / 2, width, height);\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n        var rotateHeight = -height / 2;\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function (ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      ctx.strokeRect(-width / 2, -height / 2, width, height);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function (ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ? styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ? styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null); // top-left\n\n\n      this._drawControl('tl', ctx, methodName, left, top, styleOverride); // top-right\n\n\n      this._drawControl('tr', ctx, methodName, left + width, top, styleOverride); // bottom-left\n\n\n      this._drawControl('bl', ctx, methodName, left, top + height, styleOverride); // bottom-right\n\n\n      this._drawControl('br', ctx, methodName, left + width, top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n        // middle-top\n        this._drawControl('mt', ctx, methodName, left + width / 2, top, styleOverride); // middle-bottom\n\n\n        this._drawControl('mb', ctx, methodName, left + width / 2, top + height, styleOverride); // middle-right\n\n\n        this._drawControl('mr', ctx, methodName, left + width, top + height / 2, styleOverride); // middle-left\n\n\n        this._drawControl('ml', ctx, methodName, left, top + height / 2, styleOverride);\n      } // middle-top-rotate\n\n\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName, left + width / 2, top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function (control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n\n      var size = this.cornerSize,\n          stroke = !this.transparentCorners && this.cornerStrokeColor;\n\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n\n          if (stroke) {\n            ctx.stroke();\n          }\n\n          break;\n\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function (controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function (controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function (options) {\n      options || (options = {});\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function () {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function () {// implemented by sub-classes, as needed.\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function () {// implemented by sub-classes, as needed.\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function () {},\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function (value) {\n        object.set('left', value);\n\n        _this.requestRenderAll();\n\n        onChange();\n      },\n      onComplete: function () {\n        object.setCoords();\n        onComplete();\n      }\n    });\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function () {},\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function (value) {\n        object.set('top', value);\n\n        _this.requestRenderAll();\n\n        onChange();\n      },\n      onComplete: function () {\n        object.setCoords();\n        onComplete();\n      }\n    });\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function () {},\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function (value) {\n        object.set('opacity', value);\n\n        _this.requestRenderAll();\n\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n\n        onComplete();\n      }\n    });\n    return this;\n  }\n});\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function () {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [],\n          prop,\n          skipCallbacks;\n\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    } else {\n      this._animate.apply(this, arguments);\n    }\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function (property, to, options, skipCallbacks) {\n    var _this = this,\n        propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = {};\n    } else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair ? this.get(propPair[0])[propPair[1]] : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    } else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function () {\n        return options.abort.call(_this);\n      },\n      onChange: function (value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        } else {\n          _this.set(property, value);\n        }\n\n        if (skipCallbacks) {\n          return;\n        }\n\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function (value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = {\n    x1: 1,\n    x2: 1,\n    y1: 1,\n    y2: 1\n  },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n\n\n  fabric.Line = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Line.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function (points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function (options) {\n      options || (options = {});\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n      this.left = 'left' in options ? options.left : this._getLeftToOriginX();\n      this.top = 'top' in options ? options.top : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function (key, value) {\n      this.callSuper('_set', key, value);\n\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter({\n      // property names\n      origin: 'originX',\n      axis1: 'x1',\n      axis2: 'x2',\n      dimension: 'width'\n    }, {\n      // possible values of origin\n      nearest: 'left',\n      center: 'center',\n      farthest: 'right'\n    }),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter({\n      // property names\n      origin: 'originY',\n      axis1: 'y1',\n      axis2: 'y2',\n      dimension: 'height'\n    }, {\n      // possible values of origin\n      nearest: 'top',\n      center: 'center',\n      farthest: 'bottom'\n    }),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth; // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var p = this.calcLinePoints();\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function () {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function () {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function () {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = xMult * this.width * 0.5,\n          y1 = yMult * this.height * 0.5,\n          x2 = xMult * this.width * -0.5,\n          y2 = yMult * this.height * -0.5;\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var p = this.calcLinePoints();\n      return ['<line ', 'COMMON_PARTS', 'x1=\"', p.x1, '\" y1=\"', p.y1, '\" x2=\"', p.x2, '\" y2=\"', p.y2, '\" />\\n'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n\n  fabric.Line.fromElement = function (element, callback, options) {\n    options = options || {};\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [parsedAttributes.x1 || 0, parsedAttributes.y1 || 0, parsedAttributes.x2 || 0, parsedAttributes.y2 || 0];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n\n\n  fabric.Line.fromObject = function (object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    }\n\n    ;\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n\n\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n    return function () {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + 0.5 * this.get(dimension);\n\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n\n\n  fabric.Circle = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Circle.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function (key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var svgString,\n          x = 0,\n          y = 0,\n          angle = (this.endAngle - this.startAngle) % (2 * pi);\n\n      if (angle === 0) {\n        svgString = ['<circle ', 'COMMON_PARTS', 'cx=\"' + x + '\" cy=\"' + y + '\" ', 'r=\"', this.radius, '\" />\\n'];\n      } else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = ['<path d=\"M ' + startX + ' ' + startY, ' A ' + this.radius + ' ' + this.radius, ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY, '\" ', 'COMMON_PARTS', ' />\\n'];\n      }\n\n      return svgString;\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function (ctx) {\n      ctx.beginPath();\n      ctx.arc(0, 0, this.radius, this.startAngle, this.endAngle, false);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function () {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function () {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function (value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n\n  fabric.Circle.fromElement = function (element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n  /**\n   * @private\n   */\n\n\n  function isValidRadius(attributes) {\n    return 'radius' in attributes && attributes.radius >= 0;\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n\n\n  fabric.Circle.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n\n\n  fabric.Triangle = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Triangle.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [-widthBy2 + ' ' + heightBy2, '0 ' + -heightBy2, widthBy2 + ' ' + heightBy2].join(',');\n      return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n\n  fabric.Triangle.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      piBy2 = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n\n\n  fabric.Ellipse = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Ellipse.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx: 0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function (options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function (key, value) {\n      this.callSuper('_set', key, value);\n\n      switch (key) {\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function () {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function () {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      return ['<ellipse ', 'COMMON_PARTS', 'cx=\"0\" cy=\"0\" ', 'rx=\"', this.rx, '\" ry=\"', this.ry, '\" />\\n'];\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function (ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(0, 0, this.rx, 0, piBy2, false);\n      ctx.restore();\n\n      this._renderPaintInOrder(ctx);\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n\n  fabric.Ellipse.fromElement = function (element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n\n\n  fabric.Ellipse.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n\n\n  fabric.Rect = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Rect.prototype */\n  {\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx: 0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function (options) {\n      this.callSuper('initialize', options);\n\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function () {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      } else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n\n      /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n      k = 1 - 0.5522847498;\n      ctx.beginPath();\n      ctx.moveTo(x + rx, y);\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var x = -this.width / 2,\n          y = -this.height / 2;\n      return ['<rect ', 'COMMON_PARTS', 'x=\"', x, '\" y=\"', y, '\" rx=\"', this.rx, '\" ry=\"', this.ry, '\" width=\"', this.width, '\" height=\"', this.height, '\" />\\n'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Rect.fromElement = function (element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options = options || {};\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n    parsedAttributes.height = parsedAttributes.height || 0;\n    parsedAttributes.width = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n\n\n  fabric.Rect.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n\n\n  fabric.Polyline = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Polyline.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function (points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n\n      this._setPositionDimensions(options);\n    },\n    _setPositionDimensions: function (options) {\n      var calcDim = this._calcDimensions(options),\n          correctLeftTop;\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin({\n          x: calcDim.left - this.strokeWidth / 2,\n          y: calcDim.top - this.strokeWidth / 2\n        }, 'left', 'top', this.originX, this.originY);\n      }\n\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function () {\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = maxX - minX,\n          height = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var points = [],\n          diffX = this.pathOffset.x,\n          diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',', toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' ');\n      }\n\n      return ['<' + this.type + ' ', 'COMMON_PARTS', 'points=\"', points.join(''), '\" />\\n'];\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function (ctx) {\n      var point,\n          len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var p1, p2;\n      ctx.beginPath();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function () {\n      return this.get('points').length;\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Polyline.fromElementGenerator = function (_class) {\n    return function (element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n\n      options || (options = {});\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Polyline.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n\n\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline,\n  /** @lends fabric.Polygon.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Polygon.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n    m: 2,\n    l: 2,\n    h: 1,\n    v: 1,\n    c: 6,\n    s: 4,\n    q: 4,\n    t: 2,\n    a: 7\n  },\n      repeatedCommands = {\n    m: 'l',\n    M: 'L'\n  };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n\n\n  fabric.Path = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Path.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function (path, options) {\n      options = options || {};\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n      this.path = fromArray ? path // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n      : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function (ctx) {\n      var current,\n          // current instruction\n      previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0,\n          // current x\n      y = 0,\n          // current y\n      controlX = 0,\n          // current control point x\n      controlY = 0,\n          // current control point y\n      tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n        current = this.path[i];\n\n        switch (current[0]) {\n          // first letter\n          case 'l':\n            // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L':\n            // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h':\n            // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H':\n            // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v':\n            // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V':\n            // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm':\n            // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M':\n            // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c':\n            // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(x + current[1] + l, // x1\n            y + current[2] + t, // y1\n            controlX + l, // x2\n            controlY + t, // y2\n            tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C':\n            // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(current[1] + l, current[2] + t, controlX + l, controlY + t, x + l, y + t);\n            break;\n\n          case 's':\n            // shorthand cubic bezierCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(controlX + l, controlY + t, x + current[1] + l, y + current[2] + t, tempX + l, tempY + t); // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S':\n            // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(controlX + l, controlY + t, current[1] + l, current[2] + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY; // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q':\n            // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q':\n            // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            ctx.quadraticCurveTo(current[1] + l, current[2] + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't':\n            // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + x + l, current[7] + y + t]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + l, current[7] + t]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function (ctx) {\n      this._renderPathCommands(ctx);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Path (' + this.complexity() + '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function (item) {\n          return item.slice();\n        })\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n\n      if (o.sourcePath) {\n        delete o.path;\n      }\n\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var path = this.path.map(function (path) {\n        return path.join(' ');\n      }).join(' ');\n      return ['<path ', 'COMMON_PARTS', 'd=\"', path, '\" stroke-linecap=\"round\" ', '/>\\n'];\n    },\n    _getOffsetTransform: function () {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' + toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function (reviver) {\n      var additionalTransform = this._getOffsetTransform();\n\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        additionalTransform: additionalTransform\n      });\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function (reviver) {\n      var additionalTransform = this._getOffsetTransform();\n\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        additionalTransform: additionalTransform\n      });\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function () {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function () {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while (match = re.exec(coordsStr)) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        } else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function () {\n      var aX = [],\n          aY = [],\n          current,\n          // current instruction\n      previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0,\n          // current x\n      y = 0,\n          // current y\n      controlX = 0,\n          // current control point x\n      controlY = 0,\n          // current control point y\n      tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n        current = this.path[i];\n\n        switch (current[0]) {\n          // first letter\n          case 'l':\n            // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L':\n            // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h':\n            // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H':\n            // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v':\n            // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V':\n            // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm':\n            // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M':\n            // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c':\n            // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y, x + current[1], // x1\n            y + current[2], // y1\n            controlX, // x2\n            controlY, // y2\n            tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C':\n            // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y, current[1], current[2], controlX, controlY, current[5], current[6]);\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's':\n            // shorthand cubic bezierCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, x + current[1], y + current[2], tempX, tempY); // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S':\n            // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, current[1], current[2], tempX, tempY);\n            x = tempX;\n            y = tempY; // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q':\n            // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q':\n            // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, current[3], current[4]);\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't':\n            // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6] + x, current[7] + y);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6], current[7]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Path.fromObject = function (object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    } else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n\n\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n\n  fabric.Path.fromElement = function (element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n\n\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection,\n  /** @lends fabric.Group.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function (objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = []; // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint; // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        } // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n\n\n        center || this._calcBounds();\n\n        this._updateObjectsCoords(center);\n\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      } else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function () {\n      var ignoreZoom = true,\n          skipAbsolute = true;\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function (center) {\n      var center = center || this.getCenterPoint();\n\n      for (var i = this._objects.length; i--;) {\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function (object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true,\n          skipAbsolute = true;\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function () {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function (object) {\n      this._restoreObjectsState();\n\n      fabric.util.resetObjectTransform(this);\n\n      if (object) {\n        this._objects.push(object);\n\n        object.group = this;\n\n        object._set('canvas', this.canvas);\n      }\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function (object) {\n      this._restoreObjectsState();\n\n      fabric.util.resetObjectTransform(this);\n      this.remove(object);\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function (object) {\n      this.dirty = true;\n      object.group = this;\n\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function (object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function (key, value) {\n      var i = this._objects.length;\n\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n\n      var objsToObject = this._objects.map(function (obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n\n        var _obj = obj.toObject(propertiesToInclude);\n\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      var objsToObject,\n          sourcePath = this.sourcePath;\n\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      } else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function (obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function (ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function () {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function () {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function () {\n      return this.ownCaching || this.group && this.group.isOnACache();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function (ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function (skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n\n      if (!this.statefullCache) {\n        return false;\n      }\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX,\n                y = this.cacheHeight / this.zoomY;\n\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function () {\n      this._objects.forEach(this._restoreObjectState, this);\n\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function (object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function (object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function () {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function (object) {\n        object.set('dirty', true);\n      });\n\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function () {\n      if (!this.canvas) {\n        return;\n      }\n\n      var objects = this._objects,\n          canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function (object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function () {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function () {\n      var ignoreZoom = true,\n          skipAbsolute = true;\n      this.forEachObject(function (object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function (onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o,\n          prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0,\n          iLen = this._objects.length,\n          j,\n          jLen = props.length,\n          ignoreZoom = true;\n\n      for (; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function (aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0,\n          left = minXY.x || 0,\n          width = maxXY.x - minXY.x || 0,\n          height = maxXY.y - minXY.y || 0;\n      this.width = width;\n      this.height = height;\n\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({\n          x: left,\n          y: top\n        }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function (reviver) {\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n      }\n\n      svgString.push('</g>\\n');\n      return svgString;\n    },\n\n    /**\n     * Returns styles-string for svg-export, specific version for group\n     * @return {String}\n     */\n    getSvgStyles: function () {\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ? 'opacity: ' + this.opacity + ';' : '',\n          visibility = this.visible ? '' : ' visibility: hidden;';\n      return [opacity, this.getSvgFilter(), visibility].join('');\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function (reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, {\n        reviver: reviver\n      });\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n\n  fabric.Group.fromObject = function (object, callback) {\n    fabric.util.enlivenObjects(object.objects, function (enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function (enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n\n\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group,\n  /** @lends fabric.ActiveSelection.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function (objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function () {\n      var objects = this._objects.concat();\n\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function (object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n\n      if (!this.canvas) {\n        return newGroup;\n      }\n\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function () {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function () {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function () {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function () {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function (ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || {};\n\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n\n      childrenOverride.forActiveSelection = true;\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n\n      ctx.restore();\n    }\n  });\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n\n  fabric.ActiveSelection.fromObject = function (object, callback) {\n    fabric.util.enlivenObjects(object.objects, function (enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = {};\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n\n\n  fabric.Image = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Image.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function (element, options) {\n      options || (options = {});\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function () {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function (element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n\n      this._initConfig(options);\n\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      } // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n\n\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function (key) {\n      var backend = fabric.filterBackend;\n\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function () {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach(function (element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }.bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function () {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function (ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      var w = this.width / 2,\n          h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n      ctx.save();\n\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      var filters = [];\n      this.filters.forEach(function (filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(this.callSuper('toObject', ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)), {\n        src: this.getSrc(),\n        filters: filters\n      });\n\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function () {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var svgString = [],\n          imageMarkup = [],\n          strokeSvg,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          clipPath = '';\n\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push('<clipPath id=\"imageCrop_' + clipPathId + '\">\\n', '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n', '</clipPath>\\n');\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true), '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY, // we're essentially moving origin of transformation from top/left corner to the center of the shape\n      // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n      // so that object's center aligns with container's left/top\n      '\" width=\"', this._element.width || this._element.naturalWidth, '\" height=\"', this._element.height || this._element.height, '\"', clipPath, '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = ['\\t<rect ', 'x=\"', x, '\" y=\"', y, '\" width=\"', this.width, '\" height=\"', this.height, '\" style=\"', this.getSvgStyles(), '\"/>\\n'];\n        this.fill = origFill;\n      }\n\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      } else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n\n      return svgString;\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function (filtered) {\n      var element = filtered ? this._element : this._originalElement;\n\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        } else {\n          return element.src;\n        }\n      } else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function (src, callback, options) {\n      fabric.util.loadImage(src, function (img) {\n        this.setElement(img, options);\n\n        this._setWidthHeight();\n\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n    applyResizeFilters: function () {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n\n      if (this.group) {\n        this.set('dirty', true);\n      }\n\n      if (!filter || scaleX > minimumScale && scaleY > minimumScale) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? this.cacheKey + '_filtered' : this.cacheKey,\n          sourceWidth = elementToFilter.width,\n          sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters([filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function (filters) {\n      filters = filters || this.filters || [];\n      filters = filters.filter(function (filter) {\n        return filter && !filter.isNeutralState();\n      });\n      this.set('dirty', true); // needs to clear out or WEBGL will not resize correctly\n\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      } else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight); // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n\n\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n\n      fabric.filterBackend.applyFilters(filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n\n      if (this._originalElement.width !== this._element.width || this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n\n      this._stroke(ctx);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function () {\n      return this.needsItsOwnCache();\n    },\n    _renderFill: function (ctx) {\n      var elementToDraw = this._element,\n          w = this.width,\n          h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2,\n          y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function () {\n      var scale = this.getTotalObjectScaling();\n      return scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY;\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function () {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function (element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function (options) {\n      options || (options = {});\n      this.setOptions(options);\n\n      this._setWidthHeight(options);\n\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function (filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function (enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      } else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function (options) {\n      options || (options = {});\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function () {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width,\n          rHeight = this._element.height,\n          scaleX = 1,\n          scaleY = 1,\n          offsetLeft = 0,\n          offsetTop = 0,\n          cropX = 0,\n          cropY = 0,\n          offset,\n          pWidth = this.width,\n          pHeight = this.height,\n          parsedAttributes = {\n        width: pWidth,\n        height: pHeight\n      };\n\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n\n          offset = (pHeight - rHeight * scaleY) / 2;\n\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n\n          offset = rHeight - pHeight / scaleY;\n\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      } else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n  /**\n   * Alias for getSrc\n   * @static\n   */\n\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n\n  fabric.Image.fromObject = function (_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function (img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n\n      fabric.Image.prototype._initFilters.call(object, object.filters, function (filters) {\n        object.filters = filters || [];\n\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function (resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function (enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n\n\n  fabric.Image.fromURL = function (url, callback, imgOptions) {\n    fabric.util.loadImage(url, function (img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n\n\n  fabric.Image.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n\n  fabric.Image.fromElement = function (element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback, extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function () {\n    var angle = this.angle % 360;\n\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function () {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function (callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function () {},\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function (value) {\n        _this.rotate(value);\n\n        onChange();\n      },\n      onComplete: function () {\n        _this.setCoords();\n\n        onComplete();\n      }\n    });\n    return this;\n  }\n});\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n(function () {\n  'use strict';\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n\n  function testPrecision(gl, precision) {\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n\n\n  fabric.isWebglSupported = function (tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false; // eslint-disable-next-line\n\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n\n      for (var i = 0; i < 3; i++) {\n        if (testPrecision(gl, precisions[i])) {\n          fabric.webGlPrecision = precisions[i];\n          break;\n        }\n\n        ;\n      }\n    }\n\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n  /**\n   * WebGL filter backend.\n   */\n\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  }\n\n  ;\n  WebglFilterBackend.prototype =\n  /** @lends fabric.WebglFilterBackend.prototype */\n  {\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {},\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function (width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height); // eslint-disable-next-line\n\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function (width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined',\n          canUseImageData;\n\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      } catch (e) {\n        canUseImageData = false;\n      } // eslint-disable-next-line no-undef\n\n\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined'; // eslint-disable-next-line no-undef\n\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement(); // eslint-disable-next-line no-undef\n\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      } else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function (width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false\n      },\n          gl = canvas.getContext('webgl', glOptions);\n\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n\n      if (!gl) {\n        return;\n      }\n\n      gl.clearColor(0, 0, 0, 0); // this canvas can fire webglcontextlost and webglcontextrestored\n\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function (filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture || this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function (filter) {\n        filter && filter.applyTo(pipelineState);\n      });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function () {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function () {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function (gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function (uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      } else {\n        var texture = this.createTexture(this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function (cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function () {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n\n      var gl = this.gl,\n          gpuInfo = {\n        renderer: '',\n        vendor: ''\n      };\n\n      if (!gl) {\n        return gpuInfo;\n      }\n\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    }\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width,\n      height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\n\n\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0, targetCanvas.width, targetCanvas.height);\n}\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\n\n\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4; // eslint-disable-next-line no-undef\n\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes); // eslint-disable-next-line no-undef\n\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n(function () {\n  'use strict';\n\n  var noop = function () {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n  /**\n   * Canvas 2D filter backend.\n   */\n\n  function Canvas2dFilterBackend() {}\n\n  ;\n  Canvas2dFilterBackend.prototype =\n  /** @lends fabric.Canvas2dFilterBackend.prototype */\n  {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {},\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function (filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this\n      };\n      filters.forEach(function (filter) {\n        filter.applyTo(pipelineState);\n      });\n\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    }\n  };\n})();\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\n\n\nfabric.Image = fabric.Image || {};\nfabric.Image.filters = fabric.Image.filters || {};\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\n\nfabric.Image.filters.BaseFilter = fabric.util.createClass(\n/** @lends fabric.Image.filters.BaseFilter.prototype */\n{\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n  vertexSource: 'attribute vec2 aPosition;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vTexCoord = aPosition;\\n' + 'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' + '}',\n  fragmentSource: 'precision highp float;\\n' + 'varying vec2 vTexCoord;\\n' + 'uniform sampler2D uTexture;\\n' + 'void main() {\\n' + 'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' + '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function (options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function (options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function (gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n\n    if (fabric.webGlPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(/precision highp float/g, 'precision ' + fabric.webGlPrecision + ' float');\n    }\n\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Vertex shader compile error for ' + this.type + ': ' + gl.getShaderInfoLog(vertexShader));\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Fragment shader compile error for ' + this.type + ': ' + gl.getShaderInfoLog(fragmentShader));\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Shader link error for \"${this.type}\" ' + gl.getProgramInfoLog(program));\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function (gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition')\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function ()\n  /* gl, program */\n  {\n    // in case i do not need any special uniform i need to return an empty object\n    return {};\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function (gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n  _setupFrameBuffer: function (options) {\n    var gl = options.context,\n        width,\n        height;\n\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, options.targetTexture, 0);\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n  _swapTextures: function (options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function ()\n  /* options */\n  {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return _class[main] === this[main];\n      }\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function (options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n\n      this.applyToWebGL(options);\n\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function (options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function (options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n  bindAdditionalTexture: function (gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture); // reset active texture to 0 as usual\n\n    gl.activeTexture(gl.TEXTURE0);\n  },\n  unbindAdditionalTexture: function (gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n  getMainParameter: function () {\n    return this[this.mainParameter];\n  },\n  setMainParameter: function (value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function ()\n  /* gl, uniformLocations */\n  {// Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function (options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function () {\n    var object = {\n      type: this.type\n    },\n        mainP = this.mainParameter;\n\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function () {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function (object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.ColorMatrix = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.ColorMatrix.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'varying vec2 vTexCoord;\\n' + 'uniform mat4 uColorMatrix;\\n' + 'uniform vec4 uConstants;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color *= uColorMatrix;\\n' + 'color += uConstants;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function (options) {\n      this.callSuper('initialize', options); // create a new array instead mutating the prototype with push\n\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r,\n          g,\n          b,\n          a,\n          i,\n          colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        } else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [m[0], m[1], m[2], m[3], m[5], m[6], m[7], m[8], m[10], m[11], m[12], m[13], m[15], m[16], m[17], m[18]],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Brightness = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Brightness.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uBrightness;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color.rgb += uBrightness;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function (options) {\n      if (this.brightness === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          brightness = Math.round(this.brightness * 255);\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Convolute = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Convolute.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[9];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_3_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[9];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_5_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[25];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_5_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[25];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_7_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[49];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_7_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[49];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_9_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[81];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_9_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[81];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}'\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function (options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0,\n          r,\n          g,\n          b,\n          a,\n          dstOff,\n          scx,\n          scy,\n          srcOff,\n          wt,\n          x,\n          y,\n          cx,\n          cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4; // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n\n          r = 0;\n          g = 0;\n          b = 0;\n          a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide; // eslint-disable-next-line max-depth\n\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt; // eslint-disable-next-line max-depth\n\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          } else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Grayscale = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Grayscale.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n    fragmentSource: {\n      average: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float average = (color.r + color.b + color.g) / 3.0;\\n' + 'gl_FragColor = vec4(average, average, average, color.a);\\n' + '}',\n      lightness: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uMode;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 col = texture2D(uTexture, vTexCoord);\\n' + 'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' + 'gl_FragColor = vec4(average, average, average, col.a);\\n' + '}',\n      luminosity: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uMode;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 col = texture2D(uTexture, vTexCoord);\\n' + 'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' + 'gl_FragColor = vec4(average, average, average, col.a);\\n' + '}'\n    },\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          value,\n          mode = this.mode;\n\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        } else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) + Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        } else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function (options) {\n      var cacheKey = this.type + '_' + this.mode;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function () {\n      return false;\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Invert = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Invert.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uInvert;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'if (uInvert == 1) {\\n' + 'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' + '} else {\\n' + 'gl_FragColor = color;\\n' + '}\\n' + '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length;\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function () {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Noise = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Noise.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uStepH;\\n' + 'uniform float uNoise;\\n' + 'uniform float uSeed;\\n' + 'varying vec2 vTexCoord;\\n' + 'float rand(vec2 co, float seed, float vScale) {\\n' + 'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' + '}\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      if (this.noise === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          noise = this.noise,\n          rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n        rand = (0.5 - Math.random()) * noise;\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Pixelate = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Pixelate.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n    blocksize: 4,\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uBlocksize;\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'float blockW = uBlocksize * uStepW;\\n' + 'float blockH = uBlocksize * uStepW;\\n' + 'int posX = int(vTexCoord.x / blockW);\\n' + 'int posY = int(vTexCoord.y / blockH);\\n' + 'float fposX = float(posX);\\n' + 'float fposY = float(posY);\\n' + 'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' + 'vec4 color = texture2D(uTexture, squareCoords);\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index,\n          i,\n          j,\n          r,\n          g,\n          b,\n          a,\n          _i,\n          _j,\n          _iLen,\n          _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n          index = i * 4 * jLen + j * 4;\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = _i * 4 * jLen + _j * 4;\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function () {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.RemoveColor = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.RemoveColor.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec4 uLow;\\n' + 'uniform vec4 uHigh;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' + 'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' + 'gl_FragColor.a = 0.0;\\n' + '}\\n' + '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          distance = this.distance * 255,\n          r,\n          g,\n          b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n          highC = [source[0] + distance, source[1] + distance, source[2] + distance];\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] && g > lowC[1] && b > lowC[2] && r < highC[0] && g < highC[1] && b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [0 + source[0] / 255 - distance, 0 + source[1] / 255 - distance, 0 + source[2] / 255 - distance, 1],\n          highC = [source[0] / 255 + distance, source[1] / 255 + distance, source[2] / 255 + distance, 1];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  var matrices = {\n    Brownie: [0.59970, 0.34553, -0.27082, 0, 0.186, -0.03770, 0.86095, 0.15059, 0, -0.1449, 0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0],\n    Vintage: [0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0, 0.02926, 0.04660, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0],\n    Kodachrome: [1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0, 0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0],\n    Technicolor: [1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0, -0.27589, -0.23110, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0],\n    Polaroid: [1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016, 1.483, 0, 0, 0, 0, 0, 1, 0],\n    Sepia: [0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131, 0, 0, 0, 0, 0, 1, 0],\n    BlackWhite: [1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0, 1, 0]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix,\n    /** @lends fabric.Image.filters.Sepia.prototype */\n    {\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Blend.prototype */\n  {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' + 'gl_FragColor.r *= 2.0 * uColor.r;\\n' + '} else {\\n' + 'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' + '}\\n' + 'if (uColor.g < 0.5) {\\n' + 'gl_FragColor.g *= 2.0 * uColor.g;\\n' + '} else {\\n' + 'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' + '}\\n' + 'if (uColor.b < 0.5) {\\n' + 'gl_FragColor.b *= 2.0 * uColor.b;\\n' + '} else {\\n' + 'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' + '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' + 'gl_FragColor.rgb += uColor.rgb;\\n'\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function (mode) {\n      return 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'gl_FragColor = color;\\n' + 'if (color.a > 0.0) {\\n' + this.fragmentSource[mode] + '}\\n' + '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function (options) {\n      var cacheKey = this.type + '_' + this.mode,\n          shaderSource;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          tr,\n          tg,\n          tb,\n          r,\n          g,\n          b,\n          source,\n          alpha1 = 1 - this.alpha;\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n\n          case 'overlay':\n            data[i] = tr < 128 ? 2 * r * tr / 255 : 255 - 2 * (255 - r) * (255 - tr) / 255;\n            data[i + 1] = tg < 128 ? 2 * g * tg / 255 : 255 - 2 * (255 - g) * (255 - tg) / 255;\n            data[i + 2] = tb < 128 ? 2 * b * tb / 255 : 255 - 2 * (255 - b) * (255 - tb) / 255;\n            break;\n\n          case 'exclusion':\n            data[i] = tr + r - 2 * tr * r / 255;\n            data[i + 1] = tg + g - 2 * tg * g / 255;\n            data[i + 2] = tb + b - 2 * tb * b / 255;\n            break;\n\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.BlendImage.prototype */\n  {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n    vertexSource: 'attribute vec2 aPosition;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'uniform mat3 uTransformMatrix;\\n' + 'void main() {\\n' + 'vTexCoord = aPosition;\\n' + 'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' + 'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' + '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform sampler2D uImage;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' + 'color.rgba *= color2.rgba;\\n' + 'gl_FragColor = color;\\n' + '}',\n      mask: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform sampler2D uImage;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' + 'color.a = color2.a;\\n' + 'gl_FragColor = color;\\n' + '}'\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function (options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n    applyToWebGL: function (options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n    createTexture: function (backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function () {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [1 / image.scaleX, 0, 0, 0, 1 / image.scaleY, 0, -image.left / width, -image.top / height, 1];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data,\n          iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr,\n          tg,\n          tb,\n          ta,\n          r,\n          g,\n          b,\n          a,\n          canvas1,\n          context,\n          image = this.image,\n          blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      } else {\n        context.clearRect(0, 0, width, height);\n      }\n\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n\n      for (var i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n\n  fabric.Image.filters.BlendImage.fromObject = function (object, callback) {\n    fabric.Image.fromObject(object.image, function (image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      pow = Math.pow,\n      floor = Math.floor,\n      sqrt = Math.sqrt,\n      abs = Math.abs,\n      round = Math.round,\n      sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Resize = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Resize.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function (options) {\n      var filterWindow = this.getFilterWindow(),\n          cacheKey = this.type + '_' + filterWindow;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n\n      return options.programCache[cacheKey];\n    },\n    getFilterWindow: function () {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n    getTaps: function () {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes),\n          scale = this.tempScale,\n          filterWindow = this.getFilterWindow(),\n          taps = new Array(filterWindow);\n\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function (filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP,\n          filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n      offsets.forEach(function (offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n    fragmentSourceTOP: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec2 uDelta;\\n' + 'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function (options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n\n        this._setupFrameBuffer(options);\n\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        options.sourceWidth = options.destinationWidth;\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n\n        this._setupFrameBuffer(options);\n\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        options.sourceHeight = options.destinationHeight;\n      } else {\n        this.applyTo2d(options);\n      }\n    },\n    isNeutralState: function () {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n    lanczosCreate: function (lobes) {\n      return function (x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n\n        x *= Math.PI;\n        var xx = x / lobes;\n        return sin(x) / x * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n      var oW = imageData.width,\n          oH = imageData.height,\n          dW = round(oW * scaleX),\n          dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function (options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5,\n          doneW = false,\n          doneH = false,\n          stepW = oW * mult,\n          stepH = oH * mult,\n          resources = fabric.filterBackend.resources,\n          tmpCanvas,\n          ctx,\n          sX = 0,\n          sY = 0,\n          dX = oW,\n          dY = 0;\n\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n\n      tmpCanvas = resources.sliceByTwo;\n\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        } else {\n          stepW = dW;\n          doneW = true;\n        }\n\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        } else {\n          stepH = dH;\n          doneH = true;\n        }\n\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function (options, oW, oH, dW, dH) {\n      function process(u) {\n        var v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0;\n          red = 0;\n          green = 0;\n          blue = 0;\n          alpha = 0;\n\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n\n            fX = floor(1000 * abs(i - center.x));\n\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = {};\n            }\n\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n\n              fY = floor(1000 * abs(j - center.y));\n\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n\n              weight = cacheLanc[fX][fY];\n\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        } else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX,\n          rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = {},\n          center = {},\n          icenter = {};\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function (options, oW, oH, dW, dH) {\n      var a,\n          b,\n          c,\n          d,\n          x,\n          y,\n          i,\n          j,\n          xDiff,\n          yDiff,\n          chnl,\n          color,\n          offset = 0,\n          origPix,\n          ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1),\n          img = options.imageData,\n          pixels = img.data,\n          destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) + c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function (options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX,\n          ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData,\n          data = img.data,\n          img2 = options.ctx.createImageData(dW, dH),\n          data2 = img2.data;\n\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4,\n              weight = 0,\n              weights = 0,\n              weightsAlpha = 0,\n              gxR = 0,\n              gxG = 0,\n              gxB = 0,\n              gxA = 0,\n              centerY = (j + 0.5) * ratioH;\n\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW,\n                w0 = dy * dy;\n\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n\n              if (w > 1 && w < -1) {\n                continue;\n              } //hermite filter\n\n\n              weight = 2 * w * w * w - 3 * w * w + 1;\n\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW); //alpha\n\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight; //colors\n\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n\n            }\n          }\n\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Contrast = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Contrast.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uContrast;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' + 'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' + 'gl_FragColor = color;\\n' + '}',\n    contrast: 0,\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function (options) {\n      if (this.contrast === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          i,\n          len,\n          data = imageData.data,\n          len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Saturation = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Saturation.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uSaturation;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float rgMax = max(color.r, color.g);\\n' + 'float rgbMax = max(rgMax, color.b);\\n' + 'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' + 'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' + 'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' + 'gl_FragColor = color;\\n' + '}',\n    saturation: 0,\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      if (this.saturation === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          len = data.length,\n          adjust = -this.saturation,\n          i,\n          max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Blur = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Blur.prototype */\n  {\n    type: 'Blur',\n\n    /*\n    'gl_FragColor = vec4(0.0);',\n    'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n    'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n    */\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec2 uDelta;\\n' + 'varying vec2 vTexCoord;\\n' + 'const float nSamples = 15.0;\\n' + 'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' + 'float random(vec3 scale) {\\n' +\n    /* use the fragment position for a different seed per-pixel */\n    'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' + '}\\n' + 'void main() {\\n' + 'vec4 color = vec4(0.0);\\n' + 'float total = 0.0;\\n' + 'float offset = random(v3offset);\\n' + 'for (float t = -nSamples; t <= nSamples; t++) {\\n' + 'float percent = (t + offset - 0.5) / nSamples;\\n' + 'float weight = 1.0 - abs(percent);\\n' + 'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' + 'total += weight;\\n' + '}\\n' + 'gl_FragColor = color / total;\\n' + '}',\n\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n    mainParameter: 'blur',\n    applyTo: function (options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n\n        this._setupFrameBuffer(options);\n\n        this.horizontal = true;\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        this._setupFrameBuffer(options);\n\n        this.horizontal = false;\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n      } else {\n        this.applyTo2d(options);\n      }\n    },\n    applyTo2d: function (options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n    simpleBlur: function (options) {\n      var resources = options.filterBackend.resources,\n          canvas1,\n          canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random,\n          percent,\n          j,\n          i,\n          blur = this.blur * 0.06 * 0.5; // load first canvas\n\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function () {\n      var blurScale = 1,\n          delta = [0, 0],\n          blur;\n\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      } else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n\n      blur = blurScale * this.blur * 0.12;\n\n      if (this.horizontal) {\n        delta[0] = blur;\n      } else {\n        delta[1] = blur;\n      }\n\n      return delta;\n    }\n  });\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Gamma = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Gamma.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec3 uGamma;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec3 correction = (1.0 / uGamma);\\n' + 'color.r = pow(color.r, correction.r);\\n' + 'color.g = pow(color.g, correction.g);\\n' + 'color.b = pow(color.b, correction.b);\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.rgb *= color.a;\\n' + '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function (options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          gamma = this.gamma,\n          len = data.length,\n          rInv = 1 / gamma[0],\n          gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2],\n          i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256); // eslint-disable-next-line\n\n        this.gVals = new Uint8Array(256); // eslint-disable-next-line\n\n        this.bVals = new Uint8Array(256);\n      } // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n\n\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n\n  filters.Composed = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Composed.prototype */\n  {\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function (options) {\n      this.callSuper('initialize', options); // create a new array instead mutating the prototype with push\n\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function (options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function (filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function () {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function (filter) {\n          return filter.toObject();\n        })\n      });\n    },\n    isNeutralState: function () {\n      return !this.subFilters.some(function (filter) {\n        return !filter.isNeutralState();\n      });\n    }\n  });\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n\n  fabric.Image.filters.Composed.fromObject = function (object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function (filter) {\n      return new fabric.Image.filters[filter.type](filter);\n    }),\n        instance = new fabric.Image.filters.Composed({\n      subFilters: subFilters\n    });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.HueRotation = createClass(filters.ColorMatrix,\n  /** @lends fabric.Image.filters.HueRotation.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n    calculateMatrix: function () {\n      var rad = this.rotation * Math.PI,\n          cos = fabric.util.cos(rad),\n          sin = fabric.util.sin(rad),\n          aThird = 1 / 3,\n          aThirdSqtSin = Math.sqrt(aThird) * sin,\n          OneMinusCos = 1 - cos;\n      this.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function (options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function (options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n\n\n  fabric.Text = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: ['fontSize', 'fontWeight', 'fontFamily', 'fontStyle', 'lineHeight', 'text', 'charSpacing', 'textAlign', 'styles'],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize: 40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight: 'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily: 'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline: false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline: false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough: false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign: 'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle: 'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight: 1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size: 0.60,\n      // fontSize factor\n      baseline: -0.35 // baseline-shift factor (upwards)\n\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size: 0.60,\n      // fontSize factor\n      baseline: 0.11 // baseline-shift factor (downwards)\n\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor: '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily', 'fontWeight', 'fontSize', 'text', 'underline', 'overline', 'linethrough', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor', 'charSpacing', 'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily', 'fontWeight', 'fontSize', 'text', 'underline', 'overline', 'linethrough', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor', 'charSpacing', 'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke: null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow: null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult: 1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing: 0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: ['stroke', 'strokeWidth', 'fill', 'fontFamily', 'fontSize', 'fontWeight', 'fontStyle', 'underline', 'overline', 'linethrough', 'deltaY', 'textBackgroundColor'],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function (text, options) {\n      this.styles = options ? options.styles || {} : {};\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function () {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache || fabric.util.createCanvasElement().getContext('2d');\n      }\n\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function () {\n      var newLines = this._splitTextIntoLines(this.text);\n\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function () {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      this._splitText();\n\n      this._clearCache();\n\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n\n      this.height = this.calcTextHeight();\n      this.saveState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function () {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            } else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function (lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function () {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function () {\n      return '#<fabric.Text (' + this.complexity() + '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function () {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      this._setTextStyles(ctx);\n\n      this._renderTextLinesBackground(ctx);\n\n      this._renderTextDecoration(ctx, 'underline');\n\n      this._renderText(ctx);\n\n      this._renderTextDecoration(ctx, 'overline');\n\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function (ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n\n        this._renderTextFill(ctx);\n      } else {\n        this._renderTextFill(ctx);\n\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function (ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function () {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function (method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function (ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n\n      var lineTopOffset = 0,\n          heightOfLine,\n          lineLeftOffset,\n          originalFill = ctx.fillStyle,\n          line,\n          lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0,\n          boxWidth = 0,\n          charBox,\n          currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          } else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n        }\n\n        lineTopOffset += heightOfLine;\n      }\n\n      ctx.fillStyle = originalFill; // if there is text background color no\n      // other shadows should be casted\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function (decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = {};\n      }\n\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = {};\n      }\n\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function (method, ctx, lineIndex, charIndex, styleDeclaration) {\n      this._setFillStyles(ctx, styleDeclaration);\n\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} _char, char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function (_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle),\n          fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle),\n          couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration,\n          width,\n          coupleWidth,\n          previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE,\n          kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext(); // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n\n        this._setTextStyles(ctx, charStyle, true);\n      }\n\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n\n      return {\n        width: width * fontMultiplier,\n        kernedWidth: kernedWidth * fontMultiplier\n      };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line index number\n     * @param {Number} _char the character index number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function (line, _char) {\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function (lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function (lineIndex) {\n      var width = 0,\n          i,\n          grapheme,\n          line = this._textLines[lineIndex],\n          prevGrapheme,\n          graphemeInfo,\n          numOfSpaces = 0,\n          lineBounds = new Array(line.length);\n      this.__charBounds[lineIndex] = lineBounds;\n\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      } // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n\n\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return {\n        width: width,\n        numOfSpaces: numOfSpaces\n      };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function (grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : {},\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width,\n          charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY\n      };\n\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function (lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n      // emptylines\n      maxHeight = this.getHeightOfChar(lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function () {\n      var lineHeight,\n          height = 0;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n      }\n\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function () {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function () {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function (ctx, method) {\n      ctx.save();\n\n      var lineHeights = 0,\n          left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n\n        this._renderTextLine(method, ctx, this._textLines[i], left + leftOffset - offsets.offsetX, top + lineHeights + maxHeight - offsets.offsetY, i);\n\n        lineHeights += heightOfLine;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function (ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function (ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      this._setLineDash(ctx, this.strokeDashArray);\n\n      ctx.beginPath();\n\n      this._renderTextCommon(ctx, 'strokeText');\n\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function (method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n\n        ctx.restore();\n        return;\n      }\n\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function (method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function (start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function (start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function (start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline\n      };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function (prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill || prevStyle.stroke !== thisStyle.stroke || prevStyle.strokeWidth !== thisStyle.strokeWidth || prevStyle.fontSize !== thisStyle.fontSize || prevStyle.fontFamily !== thisStyle.fontFamily || prevStyle.fontWeight !== thisStyle.fontWeight || prevStyle.fontStyle !== thisStyle.fontStyle || prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function (prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) || prevStyle.overline !== thisStyle.overline || prevStyle.underline !== thisStyle.underline || prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function (lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function () {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function () {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function (lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width,\n          line = this._textLines[lineIndex],\n          lineInfo;\n\n      if (line === '') {\n        width = 0;\n      } else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n    _getWidthOfCharSpacing: function () {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function (lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function (ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n\n      var heightOfLine,\n          size,\n          _size,\n          lineLeftOffset,\n          dy,\n          _dy,\n          line,\n          lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          top,\n          boxStart,\n          boxWidth,\n          charBox,\n          currentDecoration,\n          maxHeight,\n          currentFill,\n          lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) && boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth, this.fontSize / 15);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          } else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth - charSpacing, this.fontSize / 15);\n        topOffset += heightOfLine;\n      } // if there is text background color no\n      // other shadows should be casted\n\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function (styleObject, forMeasuring) {\n      var style = styleObject || this,\n          family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined || family.indexOf('\\'') > -1 || family.indexOf(',') > -1 || family.indexOf('\"') > -1 || fontIsGeneric ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [// node-canvas needs \"weight style\", while browsers need \"style weight\"\n      // verify if this can be fixed in JSDOM\n      fabric.isLikelyNode ? style.fontWeight : style.fontStyle, fabric.isLikelyNode ? style.fontStyle : style.fontWeight, forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px', fontFamily].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function (ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function (text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n\n      newText.pop();\n      return {\n        _unwrappedLines: newLines,\n        lines: lines,\n        graphemeText: newText,\n        graphemeLines: newLines\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      var additionalProperties = ['text', 'fontSize', 'fontWeight', 'fontFamily', 'fontStyle', 'lineHeight', 'underline', 'overline', 'linethrough', 'textAlign', 'textBackgroundColor', 'charSpacing'].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function (key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      } else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function () {\n      return 1;\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Text.fromElement = function (element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend(options ? clone(options) : {}, parsedAttributes);\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n\n      delete options.textDecoration;\n    }\n\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = ''; // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    } else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n\n\n  fabric.Text.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  fabric.util.object.extend(fabric.Text.prototype,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function (lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n\n      var obj = typeof lineIndex === 'undefined' ? this.styles : {\n        line: this.styles[lineIndex]\n      };\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function (property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n\n      var obj = typeof lineIndex === 'undefined' ? this.styles : {\n        0: this.styles[lineIndex]\n      }; // eslint-disable-next-line\n\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function (property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n\n      var obj = this.styles,\n          stylesCount = 0,\n          letterCount,\n          stylePropertyValue,\n          allStyleObjectPropertiesMatch = true,\n          graphemeCount = 0,\n          styleObject; // eslint-disable-next-line\n\n      for (var p1 in obj) {\n        letterCount = 0; // eslint-disable-next-line\n\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            } else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          } else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          } else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      } // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function (property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n\n      var obj = this.styles,\n          line,\n          lineNum,\n          charNum;\n\n      for (lineNum in obj) {\n        line = obj[lineNum];\n\n        for (charNum in line) {\n          delete line[charNum][property];\n\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function (index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function (selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function (startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n\n      var styles = [];\n\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function (position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) : this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function (styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n\n\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function (lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n\n      if (!lineStyle) {\n        return null;\n      }\n\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function (lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || {},\n          styleObject = {},\n          prop;\n\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function (lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function (lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function (lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function (lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function (lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n(function () {\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n\n\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable,\n  /** @lends fabric.IText.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function (text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function (index) {\n      index = Math.max(index, 0);\n\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function (index) {\n      index = Math.min(index, this.text.length);\n\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function (property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n\n        this[property] = index;\n      }\n\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function () {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', {\n        target: this\n      });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function () {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function (ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx); // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n\n      this.cursorOffsetCache = {};\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function (skipRestore) {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n\n      var ctx = this.canvas.contextTop,\n          v = this.canvas.viewportTransform;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this.transform(ctx);\n      this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\n      this._clearTextArea(ctx);\n\n      skipRestore || ctx.restore();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     * it does on the contextTop. If contextTop is not available, do nothing.\n     */\n    renderCursorOrSelection: function () {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n\n      var boundaries = this._getCursorBoundaries(),\n          ctx = this.canvas.contextTop;\n\n      this.clearContextTop(true);\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      } else {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.restore();\n    },\n    _clearTextArea: function (ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4,\n          height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function (position) {\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function (position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0)\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function (boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(boundaries.left + boundaries.leftOffset - cursorWidth / 2, topOffset + boundaries.top + dy, cursorWidth, charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function (boundaries, ctx) {\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0,\n            boxStart = 0,\n            boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        } else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          } else {\n            var charSpacing = this._getWidthOfCharSpacing();\n\n            boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n\n        realLineHeight = lineHeight;\n\n        if (this.lineHeight < 1 || i === endLine && this.lineHeight > 1) {\n          lineHeight /= this.lineHeight;\n        }\n\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset + lineHeight, boxEnd - boxStart, 1);\n        } else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset, boxEnd - boxStart, lineHeight);\n        }\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function () {\n      var cp = this._getCurrentCharIndex();\n\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function () {\n      var cp = this._getCurrentCharIndex();\n\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function () {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return {\n        l: cursorPosition.lineIndex,\n        c: charIndex\n      };\n    }\n  });\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n\n  fabric.IText.fromObject = function (object, callback) {\n    parseDecoration(object);\n\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n(function () {\n  var clone = fabric.util.object.clone;\n  fabric.util.object.extend(fabric.IText.prototype,\n  /** @lends fabric.IText.prototype */\n  {\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function () {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n    onDeselect: function () {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function () {\n      var _this = this;\n\n      this.on('added', function () {\n        var canvas = _this.canvas;\n\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n\n            _this._initCanvasHandlers(canvas);\n          }\n\n          canvas._iTextInstances = canvas._iTextInstances || [];\n\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n    initRemovedHandler: function () {\n      var _this = this;\n\n      this.on('removed', function () {\n        var canvas = _this.canvas;\n\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function (canvas) {\n      canvas._mouseUpITextHandler = function () {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function (obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function (canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function () {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function (obj, targetOpacity, duration, completeMethod) {\n      var tickState;\n      tickState = {\n        isAborted: false,\n        abort: function () {\n          this.isAborted = true;\n        }\n      };\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function () {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function () {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function () {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function () {\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n\n      this._cursorTimeout1 = setTimeout(function () {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function (restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function () {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function () {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n      this._currentCursorOpacity = 0; // to clear just itext area we need to transform the context\n      // it may not be worth it\n\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function () {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function () {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function (startFrom) {\n      var offset = 0,\n          index = startFrom - 1; // remove space before cursor first\n\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function (startFrom) {\n      var offset = 0,\n          index = startFrom; // remove space after cursor first\n\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function (startFrom) {\n      var offset = 0,\n          index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function (startFrom) {\n      var offset = 0,\n          index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function (selectionStart, direction) {\n      var index = this._reSpace.test(this._text[selectionStart]) ? selectionStart - 1 : selectionStart,\n          _char = this._text[index],\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this._text.length) {\n        index += direction;\n        _char = this._text[index];\n      }\n\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function (selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n\n      /* search backwards */\n      newSelectionEnd = this.searchWordBoundary(selectionStart, 1);\n      /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function (selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function (e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n\n      this._updateTextarea();\n\n      this._saveEditingProps();\n\n      this._setEditingProps();\n\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n\n      this.fire('editing:entered');\n\n      this._fireSelectionChanged();\n\n      if (!this.canvas) {\n        return this;\n      }\n\n      this.canvas.fire('text:editing:entered', {\n        target: this\n      });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n    exitEditingOnOthers: function (canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function (obj) {\n          obj.selected = false;\n\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function () {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function (options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n\n      if ((newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd) && (currentStart === newSelectionStart || currentEnd === newSelectionStart)) {\n        return;\n      }\n\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      } else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n\n        this._fireSelectionChanged();\n\n        this._updateTextarea();\n\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function () {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function (start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n\n      if (start === end) {\n        return {\n          selectionStart: graphemeStart,\n          selectionEnd: graphemeStart\n        };\n      }\n\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return {\n        selectionStart: graphemeStart,\n        selectionEnd: graphemeStart + graphemeEnd\n      };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function (start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n\n      if (start === end) {\n        return {\n          selectionStart: graphemeStart,\n          selectionEnd: graphemeStart\n        };\n      }\n\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n\n      return {\n        selectionStart: graphemeStart,\n        selectionEnd: graphemeStart + graphemeEnd\n      };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function () {\n      this.cursorOffsetCache = {};\n\n      if (!this.hiddenTextarea) {\n        return;\n      }\n\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function () {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n\n      this.cursorOffsetCache = {};\n      this.text = this.hiddenTextarea.value;\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      var newSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function () {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function () {\n      if (!this.canvas) {\n        return {\n          x: 1,\n          y: 1\n        };\n      }\n\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n        x: boundaries.left + leftOffset,\n        y: boundaries.top + boundaries.topOffset + charHeight\n      },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n\n      if (p.y < 0) {\n        p.y = 0;\n      }\n\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      } // add canvas offset on document\n\n\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n      return {\n        left: p.x + 'px',\n        top: p.y + 'px',\n        fontSize: charHeight + 'px',\n        charHeight: charHeight\n      };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function () {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function () {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function () {\n      var isTextChanged = this._textBeforeEdit !== this.text;\n      this.selected = false;\n      this.isEditing = false;\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n\n      this._restoreEditingProps();\n\n      this._currentCursorOpacity = 0;\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', {\n          target: this\n        });\n        isTextChanged && this.canvas.fire('object:modified', {\n          target: this\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function () {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function (start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i,\n          styleObj;\n\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        } // step2 move the trailing of lineEnd to lineStart if needed\n\n\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = {});\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        } // step3 detects lines will be completely removed.\n\n\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        } // step4 shift remaining lines.\n\n\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      } else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n\n          var diff = charEnd - charStart,\n              numericChar,\n              _char;\n\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function (lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n    restartCursorIfNeeded: function () {\n      if (!this._currentTickState || this._currentTickState.isAborted || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function (lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      } // we clone styles of all chars\n      // after cursor onto the current line\n\n\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index]; // remove lines from the previous line since they're on a new line now\n\n          delete this.styles[lineIndex][index];\n        }\n      }\n\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      } else {\n        delete this.styles[lineIndex + qty];\n      } // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n\n\n      while (qty > 1) {\n        qty--;\n\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = {\n            0: clone(copiedStyle[qty])\n          };\n        } else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = {\n            0: clone(currentCharStyle)\n          };\n        } else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function (lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n\n      var currentLineStyles = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n      quantity || (quantity = 1); // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex]; // only delete the style if there was nothing moved there\n\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n\n      this._forceClearCache = true;\n\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n\n        return;\n      }\n\n      if (!currentLineStyles) {\n        return;\n      }\n\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function (insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0],\n          linesLength = 0;\n\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        } else {\n          addedLines[linesLength]++;\n        }\n      }\n\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n\n      linesLength && this.insertNewlineStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        } else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      } // we use i outside the loop to get it like linesLength\n\n\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function (start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        } else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n\n        this.selectionStart = newSelection;\n      } else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        } else {\n          this.selectionStart = newSelection;\n        }\n      } else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        } else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n\n        this.selectionEnd = newSelection;\n      }\n    },\n    setSelectionInBoundaries: function () {\n      var length = this.text.length;\n\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      } else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      } else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.IText.prototype,\n/** @lends fabric.IText.prototype */\n{\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function () {\n    // for double click\n    this.__lastClickTime = +new Date(); // for triple click\n\n    this.__lastLastClickTime = +new Date();\n    this.__lastPointer = {};\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function (options) {\n    if (!this.canvas) {\n      return;\n    }\n\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n  isTripleClick: function (newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === newPointer.x && this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function (e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function () {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function () {\n    this.on('mousedblclick', function (options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function (options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function (options) {\n    if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function (options) {\n    if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function () {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function () {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function (options) {\n    this.__isMousedown = false;\n\n    if (!this.editable || this.group || options.transform && options.transform.actionPerformed || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    } else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function (e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart,\n        end = this.selectionEnd;\n\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function (e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width; // i removed something about flipX here, check.\n\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      } else {\n        break;\n      }\n    }\n\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function (mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor || distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset; // if object is horizontally flipped, mirror cursor location from the end\n\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\nfabric.util.object.extend(fabric.IText.prototype,\n/** @lends fabric.IText.prototype */\n{\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function () {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n\n    var style = this._calcTextareaPosition(); // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n\n\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' + ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9: 'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown'\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n  onClick: function () {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function (e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    } else {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    e.preventDefault();\n\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function (e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    } else {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function (e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n\n    if (!this.isEditing) {\n      return;\n    } // decisions about style changes.\n\n\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText,\n        insertedText,\n        charDiff = nextCharCount - charCount;\n\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      this.updateFromTextArea();\n      this.fire('changed');\n\n      if (this.canvas) {\n        this.canvas.fire('text:changed', {\n          target: this\n        });\n        this.canvas.requestRenderAll();\n      }\n\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      } else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      } else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      } else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      } else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n\n    this.updateFromTextArea();\n    this.fire('changed');\n\n    if (this.canvas) {\n      this.canvas.fire('text:changed', {\n        target: this\n      });\n      this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function () {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function () {\n    this.inCompositionMode = false;\n  },\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function (e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function () {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    } else {\n      fabric.copiedTextStyle = null;\n    }\n\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function () {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function (e) {\n    return e && e.clipboardData || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function (lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n        bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function (e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex; // if on last line, down cursor goes to end of line\n\n\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function (e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function (e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1); // return a negative offset\n\n\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function (lineIndex, width) {\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        charWidth,\n        foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    } // reached end\n\n\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function (e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function (e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function (direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function (offset) {\n    var newSelection = this._selectionDirection === 'left' ? this.selectionStart + offset : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function (offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function (e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function (e, prop, direction) {\n    var newValue;\n\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function (e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function (e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function (e) {\n    var change = true;\n    this._selectionDirection = 'left'; // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function (e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function (e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function (direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    } else {\n      actionName += 'outShift';\n    }\n\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function (e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function (e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function (start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n\n    this.removeStyleFromTo(start, end);\n\n    this._text.splice(start, end - start);\n\n    this.text = this._text.join('');\n    this.set('dirty', true);\n\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function (text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n\n    this._removeExtraneousStyles();\n  }\n});\n/* _TO_SVG_START_ */\n\n(function () {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n  fabric.util.object.extend(fabric.Text.prototype,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function () {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function (reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        noStyle: true,\n        withShadow: true\n      });\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function () {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function (textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [textAndBg.textBgRects.join(''), '\\t\\t<text xml:space=\"preserve\" ', this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : '', this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : '', this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : '', this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : '', textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : '', 'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >', textAndBg.textSpans.join(''), '</text>\\n'];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function (textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset,\n          lineOffset; // bounding-box background\n\n      this._setSVGBg(textBgRects); // text and text-background\n\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function (_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY,\n          dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n\n      return ['<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan, fillStyles, '>', fabric.util.string.escapeXml(_char), '</tspan>'].join('');\n    },\n    _setSVGTextLineText: function (textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || {};\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n    _pushTextBgRect: function (textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push('\\t\\t<rect ', this._getFillAttributes(color), ' x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n    },\n    _setSVGTextLineBg: function (textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox,\n          currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function (value) {\n      var fillColor = value && typeof value === 'string' ? new fabric.Color(value) : '';\n\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function (lineIndex) {\n      var lineTopOffset = 0,\n          lastHeight = 0;\n\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function (skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function () {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n\n      this._clearCache(); // clear dynamicMinWidth as it will be different after we re-wrap line\n\n\n      this.dynamicMinWidth = 0; // wrap lines\n\n      this._styleMap = this._generateStyleMap(this._splitText()); // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      } // clear cache and re-calculate height\n\n\n      this.height = this.calcTextHeight();\n      this.saveState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function (textInfo) {\n      var realLineCount = 0,\n          realLineCharCount = 0,\n          charCount = 0,\n          map = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        } else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = {\n          line: realLineCount,\n          offset: realLineCharCount\n        };\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function (property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function (lineIndex) {\n      var offset = 0,\n          nextLineIndex = lineIndex + 1,\n          nextOffset,\n          obj,\n          shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n\n      obj = typeof lineIndex === 'undefined' ? this.styles : {\n        line: this.styles[lineIndex]\n      };\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function (lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n\n        if (!map) {\n          return null;\n        }\n\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function (lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function (lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function (lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function (lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function (lines, desiredWidth) {\n      var wrapped = [],\n          i;\n      this.isWrapping = true;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function (word, lineIndex, charOffset) {\n      var width = 0,\n          prevGrapheme,\n          skipLeft = true;\n      charOffset = charOffset || 0;\n\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function (_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n      words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0; // fix a difference between split and graphemeSplit\n\n      if (words.length === 0) {\n        words.push([]);\n      }\n\n      desiredWidth -= reservedSpace;\n\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        } else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n\n        line = line.concat(word);\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false; // keep track of largest word\n\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function (lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function (lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function (text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n    getMinWidth: function () {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n    _removeExtraneousStyles: function () {\n      var linesToKeep = {};\n\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n\n  fabric.Textbox.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/node_modules/@amcharts/amcharts4/.internal/fabric/fabric.js"],"names":["fabric","version","exports","define","amd","document","window","HTMLDocument","Document","implementation","createHTMLDocument","jsdom","require","virtualWindow","JSDOM","decodeURIComponent","features","FetchExternalResources","resources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","DOMParser","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","Buffer","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","disableStyleCopyPaste","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","forceGLPutImageData","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","call","fire","options","listenersForEvent","i","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","getObjects","type","concat","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","key","get","toggle","global","sqrt","Math","atan2","pow","abs","PiBy180","PI","PiBy2","cos","angle","angleSlice","sin","sign","removeFromArray","idx","getRandomInt","min","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","rx","ry","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","width","yPoints","minY","maxY","height","left","top","invertTransform","a","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","enlivenedObjects","numLoadedObjects","numTotalObjects","onLoaded","forEach","klass","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","Object","prototype","toString","drawDashedLine","ctx","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","canvas","newCanvas","getContext","drawImage","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","saveObjectTransform","fn","String","match","isTransparent","tolerance","_isTransparent","temp","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","meetOrSlice","alignX","alignY","aspectRatioAttrs","align","pop","clearFabricFontCache","fontFamily","toLowerCase","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","matrixToSVG","transform","map","NUM_FRACTION_DIGITS","join","_join","Array","arcToSegments","toX","toY","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","bounds","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","tvalues","c","t1","t2","b2ac","sqrtb2ac","j","jlen","mt","invoke","method","args","byProperty","find","value1","value2","k","condition","extend","deep","Element","hasOwnProperty","clone","replace","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","getWholeChar","str","code","charCodeAt","isNaN","next","prev","emptyFunction","IS_DONTENUM_BUGGY","addMethods","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","shift","initialize","subclasses","couldUseAttachEvent","attachEvent","addListener","element","addEventListener","removeListener","removeEventListener","getTouchInfo","event","touchProp","changedTouches","getPointer","scroll","getScrollLeftTop","_evt","clientX","clientY","setStyle","styles","elementStyle","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","test","_slice","getById","id","getElementById","sliceCanConvertNodelists","toArray","arrayLike","childNodes","err","arr","makeElement","tagName","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","replaceChild","docElement","documentElement","body","scrollLeft","scrollTop","host","nodeType","getElementOffset","docElem","doc","ownerDocument","box","offset","scrollLeftTop","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","parseInt","getElementStyle","getBoundingClientRect","clientLeft","clientTop","defaultView","getComputedStyle","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","e","readyState","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","addParamToUrl","param","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","open","setRequestHeader","send","warn","noop","animate","requestAnimFrame","timestamp","start","Date","duration","finish","time","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","cancelAnimFrame","calculateColor","begin","end","pos","color","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","posValue","colorEasing","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","svgValidTagNames","svgViewBoxElements","svgInvalidAncestors","svgValidParents","attributesMap","display","visibility","colorAttributes","stroke","svgValidTagNamesRegEx","getSvgRegex","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","normalizeAttr","normalizeValue","parentAttributes","isArray","parsed","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","RegExp","_setStrokeFillOpacity","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeName","nodeArray","nodeList","rotateMatrix","matrix","multiplierX","multiplierY","skewMatrix","translateMatrix","commaWsp","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","m","operation","combinedMatrix","parseStyleString","oStyle","chunk","pair","trim","parseStyleObject","getGlobalStylesForElement","svgUid","rule","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","classNames","getAttribute","matcher","elementById","node","nodelist","parseUseDirectives","xlink","substr","el2","cloneNode","currentTrans","oldLength","attrs","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","reViewBoxAttrValue","viewBoxAttr","viewBoxWidth","viewBoxHeight","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","hasAncestorWithNodeName","parseSVGDocument","parsingOptions","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","recursivelyParseGradientsXlink","gradient","gradientsAttrs","xlinkAttr","xLink","referencedGradient","hasAttribute","children","referenceClone","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","tagArray","elList","parseAttributes","parentFontSize","ownAttributes","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","ElementsParser","parse","parsePointsAttribute","parsedPoints","allRules","rules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","proto","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","createClipPathCallback","container","_newObj","fillRule","clipRule","clipPath","objTransformInv","gTransform","calcTransformMatrix","setPositionByOrigin","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","setSource","_tryParsingColor","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hue2rgb","q","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","withViewport","additionalTransform","sort","pathOffset","reverse","minRadius","maxRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","instance","colorStopEls","gradientUnits","ellipseMatrix","_convertPercentUnitsToValues","forObject","propValue","addFactor","multFactor","scaleFactor","repeat","patternTransform","setOptions","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","nonScaling","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","BLUR_BOX","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","ignoreVpt","skipAbsolute","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","getElement","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","needsVpt","lineTo","closePath","fillStyle","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","_toObject","__serializeBgOverlay","excludeFromExport","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","fontList","row","rowIndex","_char","charIndex","_setSVGObject","finalWidth","finalHeight","shouldInvert","sendToBack","activeSelection","objs","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","needsFullRender","_resetShadow","PencilBrush","decimate","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","pointer","_isMainEvent","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","decimatePoints","distance","adjustedDistance","lastPoint","newPoints","cDistance","CircleBrush","drawDot","addPoint","dot","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","originX","originY","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","fillRect","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","STROKE_OFFSET","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","activeObjects","getActiveObjects","objsToRender","activeGroupObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","ignoreZoom","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","selectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByCenter","toLocalPoint","lastMouseByCenter","actualMouseByOrigin","constraintPosition","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","newScaleX","newScaleY","Textbox","w","getMinWidth","_scaleObjectEqually","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","aObjects","activeTarget","activeTargetSubs","targets","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","_absolutePointer","_pointer","boundsWidth","boundsHeight","cssScale","bottom","right","lowerCanvasClass","_copyCanvasStyle","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","layoutProps","originalValues","realizeTransform","clearContextTop","cursorOffset","mr","mb","ml","RIGHT_CLICK","MIDDLE_CLICK","LEFT_CLICK","addEventOptions","passive","checkClick","button","cursorMap","mainTouchId","_bindEvents","addOrRemove","_getEventPrefix","enablePointerEvents","functor","eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","_onTouchEnd","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","currentTransform","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","getPointerId","evt","identifier","pointerId","isPrimary","touches","__onMouseDown","__onMouseUp","_willAddMouseDown","__onMouseMove","_shouldRender","shouldRender","isClick","_target","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","_setCursorFromEvent","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","_fireOverOutEvents","_transformObject","fireSyntheticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","oldTarget","outFires","inFires","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","n","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","_collectObjects","aGroup","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","multiplier","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","newVp","originalRetina","originalContextTop","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","enlivenedCanvasClip","__setupCanvas","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","ALIASING_LIMIT","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","targetCanvas","minCacheSize","drawingWidth","drawingHeight","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_getNonTransformedDimensions","_removeShadow","decl","lineDashOffset","dashArray","alternative","getLineDash","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","originXOffset","originYOffset","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","hypotFull","getScaledWidth","xFull","yFull","offsetFrom","offsetTo","_originalOriginX","_originalOriginY","originPoint","getCoords","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","absolute","calculate","calcCoords","pointTL","pointBR","intersection","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","xcount","iLine","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","_setCornerCoords","transformMatrixKey","sep","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDimensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","term","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","svgTransform","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","noStyle","styleInfo","shadowInfo","withShadow","vectorEffect","absoluteClipPath","clipPathMarkup","addPaintOrder","originalSet","saveProps","props","tmpObj","_isEqual","origValue","currentValue","firstPass","keys","dashedPropertySet","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","propsToAnimate","skipCallbacks","_animate","propPair","from","valueProgress","timeProgress","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","makeEdgeToOriginGetter","axis1","axis2","dimension","nearest","farthest","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","_callback","propertyNames","originValues","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","isValidRadius","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","_setPositionDimensions","calcDim","_calcDimensions","correctLeftTop","fromSVG","diffX","diffY","commonRender","fromElementGenerator","_class","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_renderPathCommands","previous","subpathStartX","subpathStartY","controlX","controlY","tempX","tempY","_getOffsetTransform","digits","currentPath","re","coordsStr","coordsParsed","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","pathUrl","useSetOnGroup","isAlreadyGrouped","_calcBounds","_updateObjectsCoords","_updateObjectsACoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","setElement","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","imageMarkup","strokeSvg","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","gl","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","setupGLContext","captureGPUInfo","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canMeasurePerf","performance","canUseImageData","ImageData","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","Uint8ClampedArray","imageBuffer","copyGLTo2D","copyGLTo2DPutImageData","testContext","destinationWidth","destinationHeight","startTime","drawImageTime","putImageDataTime","now","copyGLTo2DDrawImage","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","pipelineState","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","uniqueId","gpuInfo","renderer","vendor","ext","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","dWidth","dHeight","glCanvas","sourceY","numBytes","u8","Uint8Array","u8Clamped","readPixels","imgData","putImageData","sourceElement","originalImageData","originalEl","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","main","mainParameter","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","dstOff","scx","scy","srcOff","wt","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","oW","oH","newData","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","mult","doneW","doneH","stepW","stepH","tmpCanvas","dX","dY","process","u","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","ctx1","ctx2","nSamples","percent","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThird","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","missingNewlineOffset","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","lineTopOffset","heightOfLine","lineLeftOffset","lastColor","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","charBox","currentColor","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","previousChar","prevCharStyle","fontCache","fontDeclaration","previousFontDeclaration","couple","stylesAreEqual","coupleWidth","previousWidth","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","numOfSpaces","lineBounds","_getGraphemeBox","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","isJustify","actualStyle","nextStyle","charsToRender","timeToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","p3","cleanStyle","stylesCount","letterCount","stylePropertyValue","allStyleObjectPropertiesMatch","graphemeCount","stylePropertyHasBeenSet","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","lineOffset","realLineHeight","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","graphemeEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPosition","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","styleObj","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","ctrlKeysMapUp","ctrlKeysMapDown","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","nextText","charCount","nextCharCount","removedText","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","textBeforeCursor","widthOfCharsOnLine","indexOnLine","charWidth","foundMatch","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","multipleSpacesRegex","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","noShadow","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","svgStyle","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextLineIndex","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","linesToKeep"],"mappings":"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","sourcesContent":["/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '3.3.0' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  }\n  else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n  var virtualWindow = new jsdom.JSDOM(\n    decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n    {\n      features: {\n        FetchExternalResources: ['img']\n      },\n      resources: 'usable'\n    }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order', 'vector-effect',\n  'instantiated_by_use', 'clip-path'\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\nfabric.disableStyleCopyPaste = false;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function(obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} trasnform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function(transform) {\n      return 'matrix(' + transform.map(function(value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({ }, source[property]);\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n  // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent;\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = function(element, eventName, handler, options) {\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = function(element, eventName, handler, options) {\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  function getTouchInfo(event) {\n    var touchProp = event.changedTouches;\n    if (touchProp && touchProp[0]) {\n      return touchProp[0];\n    }\n    return event;\n  }\n\n  fabric.util.getPointer = function(event) {\n    var element = event.target,\n        scroll = fabric.util.getScrollLeftTop(element),\n        _evt = getTouchInfo(event);\n    return {\n      x: _evt.clientX + scroll.left,\n      y: _evt.clientY + scroll.top\n    };\n  };\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        // TODO: move abort call after calculation\n        // and pass (current,valuePerc, timePerc) as arguments\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n        'vector-effect':      'strokeUniform'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (!gradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes['font-size']) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes['font-size'] = fontSize = parseUnit(ownAttributes['font-size'], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof fabric.window.DOMParser !== 'undefined') {\n        var parser = new fabric.window.DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, 'fill');\n      _this.resolveGradient(obj, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property];\n    if (!(/^url\\(/).test(value)) {\n      return;\n    }\n    var id = this.regexUrl.exec(value)[1];\n    this.regexUrl.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      obj.set(property, fabric.Gradient.fromElement(gradientDef, obj));\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object, options) {\n      var coords = clone(this.coords, true), i, len, options = options || {},\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = object.width / 2 - this.offsetX, offsetY = object.height / 2 - this.offsetY,\n          withViewport = !!options.additionalTransform;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ?\n        options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', { ctx: ctx, });\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var fill = this[property + 'Color'], object = this[property + 'Image'],\n          v = this.viewportTransform, needsVpt = this[property + 'Vpt'];\n      if (!fill && !object) {\n        return;\n      }\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive\n          ? fill.toLive(ctx, this)\n          : fill;\n        if (needsVpt) {\n          ctx.transform(\n            v[0], v[1], v[2], v[3],\n            v[4] + (fill.offsetX || 0),\n            v[5] + (fill.offsetY || 0)\n          );\n        }\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n      if (object) {\n        ctx.save();\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'background');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlay');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function(prop) {\n            var fill = _this[prop + 'Color'];\n            if (fill && fill.toLive) {\n              var shouldTransform = _this[prop + 'Vpt'], vpt = _this.viewportTransform,\n                  object = {\n                    width: _this.width / (shouldTransform ? vpt[0] : 1),\n                    height: _this.height / (shouldTransform ? vpt[3] : 1)\n                  };\n              return fill.toSVG(\n                object,\n                { additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : '' }\n              );\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property + 'Color'], vpt = this.viewportTransform, finalWidth = this.width,\n          finalHeight = this.height;\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat, iVpt = fabric.util.invertTransform(vpt), shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push(\n          '<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2,\n          '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', filler, '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  needsFullRender: function() {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function(options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return true;\n      }\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points = [];\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 0, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate poins array with the decimate value\n     */\n    decimatePoints: function(points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n      var zoom = this.canvas.getZoom(), adjustedDistance = Math.pow(distance / zoom, 2),\n          i, l = points.length - 1, lastPoint = points[0], newPoints = [lastPoint],\n          cDistance;\n      for (i = 1; i < l; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n      if (newPoints.length === 1) {\n        newPoints.push(new fabric.Point(newPoints[0].x, newPoints[0].y));\n      }\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n\n  dot: function(ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    }\n    else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e /* target */) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target),\n      };\n\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      if (by === 'x' && target instanceof fabric.Textbox) {\n        var w = target.width * (localMouse.x / _dim.x);\n        if (w >= target.getMinWidth()) {\n          scaled = w !== target.width;\n          target.set('width', w);\n          return scaled;\n        }\n        return false;\n      }\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));\n      }\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects(), activeObject = this.getActiveObject();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return e.button && (e.button === value - 1);\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Contains the id of the touch event that owns the fabric transform\n     * @type Number\n     * @private\n     */\n    mainTouchId: null,\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    /**\n     * return an event prefix pointer or mouse.\n     * @private\n     */\n    _getEventPrefix: function () {\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n      if (!this.enablePointerEvents) {\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n      }\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this.currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * Return a the id of an event.\n     * returns either the pointerId or the identifier or 0 for the mouse event\n     * @private\n     * @param {Event} evt Event object\n     */\n    getPointerId: function(evt) {\n      var changedTouches = evt.changedTouches;\n\n      if (changedTouches) {\n        return changedTouches[0] && changedTouches[0].identifier;\n      }\n\n      if (this.enablePointerEvents) {\n        return evt.pointerId;\n      }\n\n      return -1;\n    },\n\n    /**\n     * Determines if an event has the id of the event that is considered main\n     * @private\n     * @param {evt} event Event object\n     */\n    _isMainEvent: function(evt) {\n      if (evt.isPrimary === true) {\n        return true;\n      }\n      if (evt.isPrimary === false) {\n        return false;\n      }\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\n        return true;\n      }\n      if (evt.changedTouches) {\n        return evt.changedTouches[0].identifier === this.mainTouchId;\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchStart: function(e) {\n      e.preventDefault();\n      if (this.mainTouchId === null) {\n        this.mainTouchId = this.getPointerId(e);\n      }\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      // Unbind mousedown to prevent double triggers from touch devices\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchEnd: function(e) {\n      if (e.touches.length > 0) {\n        // if there are still touches stop here\n        return;\n      }\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      this.mainTouchId = null;\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      var _this = this;\n      if (this._willAddMouseDown) {\n        clearTimeout(this._willAddMouseDown);\n      }\n      this._willAddMouseDown = setTimeout(function() {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        _this._willAddMouseDown = 0;\n      }, 400);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      if (this._isMainEvent(e)) {\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer, { e: e, pointer: pointer });\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer, { e: e, pointer: pointer });\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      var pointer = this.getPointer(e);\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: e, pointer: pointer });\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      this.fireSyntheticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover',\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      this.fireSyntheticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n        this[config.targetName] = target;\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current transform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse position y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function(object) {\n          return !object.onSelect({ e: e });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement(),\n          originalContextTop = this.contextTop;\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.contextTop = null;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      this.contextTop = originalContextTop;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        }\n        else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function(serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n    enlivenedObjects.forEach(function(obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove;\n    // remove parts i cannot set as options\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay;\n    // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n    this._setOptions(serialized);\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * This property has been depreacted. Since caching and and qrDecompose this\n     * property can be handled with the standard top,left,scaleX,scaleY,angle and skewX.\n     * A documentation example on how to parse and merge a transformMatrix will be provided before\n     * completely removing it in fabric 4.0\n     * If you are starting a project now, DO NOT use it.\n     * @deprecated since 3.2.0\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform:              false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n          dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function() {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function() {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' &&\n        this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.needsItsOwnCache() || (\n        this.objectCaching &&\n        (!this.group || !this.group.isOnACache())\n      );\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function(ctx) {\n      var path = this.clipPath;\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n        this._setStrokeStyles(ctx, this);\n        this._setFillStyles(ctx, this);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    _drawClipPath: function(ctx) {\n      var path = this.clipPath;\n      if (!path) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n      if (this.strokeUniform) {\n        ctx.setLineDash(ctx.getLineDash().map(function(value) { return value * ctx.lineWidth; }));\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas, scaling,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1;\n      if (shadow.nonScaling) {\n        scaling = { scaleX: 1, scaleY: 1 };\n      }\n      else {\n        scaling = this.getObjectScaling();\n      }\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(/* ctx */) {\n\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        if (shadow.nonScaling) {\n          scaling = { scaleX: 1, scaleY: 1 };\n        }\n        else {\n          scaling = this.getObjectScaling();\n        }\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * (abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * (abs(scaling.scaleY));\n      }\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculates and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, useful in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this._calcTranslateMatrix(),\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param {Number} skewX, a value to override current skewX\n     * @param {Number} skewY, a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(), dimX, dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      }\n      else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      }\n      else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n      var points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return this._finalizeDimensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function(width, height) {\n      return this.strokeUniform ?\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\n        :\n        { x: width, y: height };\n    },\n    /*\n     * Calculate object dimensions for controls, including padding and canvas zoom.\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform +\n        (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' ' + fabric.util.matrixToSVG(this.transformMatrix) : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\n          stroke = this.stroke, fill = this.fill, shadow = this.shadow,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        vectorEffect,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (fill && fill.toLive) {\n        markup.push(fill.toSVG(this));\n      }\n      if (stroke && stroke.toLive) {\n        markup.push(stroke.toSVG(this));\n      }\n      if (shadow) {\n        markup.push(shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        if (key === 'canvas') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" ', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    parsedAttributes.height  = parsedAttributes.height || 0;\n    parsedAttributes.width  = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._setPositionDimensions(options);\n    },\n\n    _setPositionDimensions: function(options) {\n      var calcDim = this._calcDimensions(options), correctLeftTop;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin(\n          { x: calcDim.left - this.strokeWidth / 2, y: calcDim.top - this.strokeWidth / 2 },\n          'left',\n          'top',\n          this.originX,\n          this.originY\n        );\n      }\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElementGenerator = function(_class) {\n    return function(element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n      options || (options = { });\n\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = this.path.map(function(path) {\n        return path.join(' ');\n      }).join(' ');\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects.map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function(reviver) {\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n      }\n      svgString.push('</g>\\n');\n      return svgString;\n    },\n\n    /**\n     * Returns styles-string for svg-export, specific version for group\n     * @return {String}\n     */\n    getSvgStyles: function() {\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ?\n            'opacity: ' + this.opacity + ';' : '',\n          visibility = this.visible ? '' : ' visibility: hidden;';\n      return [\n        opacity,\n        this.getSvgFilter(),\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        }\n        else {\n          return element.src;\n        }\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return this.needsItsOwnCache();\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element,\n          w = this.width, h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2, y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined', canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function() {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} _char, char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line index number\n     * @param {Number} _char the character index number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, _char) {\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 || family.indexOf(',') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        // verify if this can be fixed in JSDOM\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { 0: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this.transform(ctx);\n      this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n      this._clearTextArea(ctx);\n      skipRestore || ctx.restore();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     * it does on the contextTop. If contextTop is not available, do nothing.\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(),\n          ctx = this.canvas.contextTop;\n      this.clearContextTop(true);\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this._text[selectionStart]) ? selectionStart - 1 : selectionStart,\n          _char     = this._text[index],\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this._text.length) {\n        index += direction;\n        _char = this._text[index];\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLength = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        }\n        else {\n          addedLines[linesLength]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLength && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    }\n    else {\n      fabric.copiedTextStyle = null;\n    }\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length\n     + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function() {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(\n        this._toSVG(),\n        { reviver: reviver, noStyle: true, withShadow: true }\n      );\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n      // fix a difference between split and graphemeSplit\n      if (words.length === 0) {\n        words.push([]);\n      }\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function(lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    _removeExtraneousStyles: function() {\n      var linesToKeep = {};\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n"]},"metadata":{},"sourceType":"script"}