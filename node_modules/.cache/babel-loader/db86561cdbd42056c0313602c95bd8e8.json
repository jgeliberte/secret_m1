{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\BulkUpload\\\\components\\\\ReviewCSV.js\";\nimport React from 'react';\nimport { forwardRef } from 'react';\nimport MaterialTable from 'material-table';\nimport { AppContext } from '../../../AppContext';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { TablePagination } from '@material-ui/core';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 35\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 37\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 37\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 38\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 43\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 38\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 38\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 41\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 40\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 40\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 44\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 41\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 47\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 42\n    }\n  })))\n};\nconst main_div = {\n  textAlign: 'center',\n  padding: '1.5vh'\n};\nconst big_text = {\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: '#504D4D'\n};\nconst padding_div_top = {\n  paddingTop: '4vh'\n};\nexport default function MaterialTableDemo() {\n  const [stateApp, setStateApp] = React.useContext(AppContext);\n  let actual_columns = stateApp.m1neralHeaders;\n\n  let columns = () => {\n    actual_columns.forEach(element => {\n      element.title = element.label;\n      element.field = element.actual_key;\n    });\n    return actual_columns;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: main_div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...big_text,\n      ...padding_div_top\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Match your headers to M1neral headers\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: padding_div_top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Contacts\",\n    icons: tableIcons,\n    columns: columns(),\n    data: stateApp.csvContactsListToSend,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setStateApp(prevState => {\n            const csvContactsListToSend = [...prevState.csvContactsListToSend];\n            csvContactsListToSend.push(newData);\n            return { ...prevState,\n              csvContactsListToSend\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setStateApp(prevState => {\n              const csvContactsListToSend = [...prevState.csvContactsListToSend];\n              csvContactsListToSend[csvContactsListToSend.indexOf(oldData)] = newData;\n              return { ...prevState,\n                csvContactsListToSend\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setStateApp(prevState => {\n            const csvContactsListToSend = [...prevState.csvContactsListToSend];\n            csvContactsListToSend.splice(csvContactsListToSend.indexOf(oldData), 1);\n            return { ...prevState,\n              csvContactsListToSend\n            };\n          });\n        }, 600);\n      })\n    },\n    components: {\n      Pagination: props => /*#__PURE__*/React.createElement(TablePagination, Object.assign({}, props, {\n        rowsPerPageOptions: [10, 25, 50, 100, 500, 1000],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 26\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/BulkUpload/components/ReviewCSV.js"],"names":["React","forwardRef","MaterialTable","AppContext","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","TablePagination","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","main_div","textAlign","padding","big_text","fontSize","fontWeight","color","padding_div_top","paddingTop","MaterialTableDemo","stateApp","setStateApp","useContext","actual_columns","m1neralHeaders","columns","forEach","element","title","label","field","actual_key","csvContactsListToSend","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","Pagination"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {AppContext} from '../../../AppContext';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { TablePagination } from '@material-ui/core';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst main_div={\r\n  textAlign: 'center',\r\n  padding: '1.5vh'\r\n}\r\nconst big_text={\r\n  fontSize: '20px',\r\n  fontWeight: 'bold',\r\n  color: '#504D4D',\r\n}\r\nconst padding_div_top={\r\n  paddingTop: '4vh'\r\n}\r\n\r\n\r\nexport default function MaterialTableDemo() {\r\n  const [stateApp, setStateApp] = React.useContext(AppContext);\r\n  let actual_columns = stateApp.m1neralHeaders\r\n  let columns =()=>{\r\n    actual_columns.forEach(element => {\r\n      element.title = element.label\r\n      element.field = element.actual_key\r\n    });\r\n    return actual_columns\r\n  }\r\n  return (\r\n    <div style={main_div}>\r\n      <div style={{...big_text, ...padding_div_top}}>Match your headers to M1neral headers</div>\r\n      <div style={padding_div_top}>\r\n        <MaterialTable\r\n          title=\"Contacts\"\r\n          icons={tableIcons}\r\n          columns={columns()}\r\n          data={stateApp.csvContactsListToSend}\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  setStateApp((prevState) => {\r\n                    const csvContactsListToSend = [...prevState.csvContactsListToSend];\r\n                    csvContactsListToSend.push(newData);\r\n                    return { ...prevState, csvContactsListToSend };\r\n                  });\r\n                }, 600);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  if (oldData) {\r\n                    setStateApp((prevState) => {\r\n                      const csvContactsListToSend = [...prevState.csvContactsListToSend];\r\n                      csvContactsListToSend[csvContactsListToSend.indexOf(oldData)] = newData;\r\n                      return { ...prevState, csvContactsListToSend };\r\n                    });\r\n                  }\r\n                }, 600);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  setStateApp((prevState) => {\r\n                    const csvContactsListToSend = [...prevState.csvContactsListToSend];\r\n                    csvContactsListToSend.splice(csvContactsListToSend.indexOf(oldData), 1);\r\n                    return { ...prevState, csvContactsListToSend };\r\n                  });\r\n                }, 600);\r\n              }),\r\n          }}\r\n          components={{\r\n            Pagination: props => (\r\n                         <TablePagination\r\n                         {...props}\r\n                        rowsPerPageOptions={[10, 25, 50, 100, 500 , 1000]}\r\n                  />\r\n                ),\r\n            }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}