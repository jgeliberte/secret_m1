{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterWellStatusJ.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { NavigationContext } from \"../NavigationContext\";\nconst statusList = [\"ACTIVE\", \"ACTIVE - DRILLING\", \"CANCELLED PERMIT\", \"COMPLETED - NOT ACTIVE\", \"DRILLED UNCOMPLETED (DUC)\", \"DRY HOLE\", \"EXPIRED PERMIT\", \"INACTIVE\", \"P&A\", \"PERMIT\", \"PERMIT - EXISTING WELL\", \"PERMIT - NEW DRILL\", \"SHUTIN\", \"UNKNOWN\"];\nexport default function FilterWellStatusJ() {\n  const [stateNav, setStateNav] = useContext(NavigationContext);\n  const [statusName, setStatusName] = React.useState(stateNav.statusName ? stateNav.statusName : null);\n\n  const handleStatusChange = value => {\n    let filter;\n\n    if (value && value.length) {\n      filter = [\"match\", [\"get\", \"wellStatus\"], value, true, false];\n      setStateNav(stateNav => ({ ...stateNav,\n        statusName: value\n      }));\n      setStatusName(value);\n    } else {\n      filter = null;\n      setStateNav(stateNav => ({ ...stateNav,\n        statusName: []\n      }));\n    }\n\n    setStateNav(stateNav => ({ ...stateNav,\n      filterWellStatus: filter\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    ChipProps: {\n      color: \"secondary\"\n    },\n    defaultValue: stateNav.statusName,\n    onChange: (event, newValue) => {\n      handleStatusChange(newValue);\n    },\n    multiple: true,\n    options: statusList,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      label: \"Well Status\",\n      placeholder: \"\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    })),\n    disableListWrap: true,\n    id: \"virtualize-well-statuses\" // style={{ maxWidth: 300, minWidth: 120 }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterWellStatusJ.js"],"names":["React","useContext","useEffect","TextField","Autocomplete","NavigationContext","statusList","FilterWellStatusJ","stateNav","setStateNav","statusName","setStatusName","useState","handleStatusChange","value","filter","length","filterWellStatus","color","event","newValue","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,MAAMC,UAAU,GAAG,CACjB,QADiB,EAEjB,mBAFiB,EAGjB,kBAHiB,EAIjB,wBAJiB,EAKjB,2BALiB,EAMjB,UANiB,EAOjB,gBAPiB,EAQjB,UARiB,EASjB,KATiB,EAUjB,QAViB,EAWjB,wBAXiB,EAYjB,oBAZiB,EAajB,QAbiB,EAcjB,SAdiB,CAAnB;AAiBA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,UAAU,CAACI,iBAAD,CAA1C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BX,KAAK,CAACY,QAAN,CAClCJ,QAAQ,CAACE,UAAT,GAAsBF,QAAQ,CAACE,UAA/B,GAA4C,IADV,CAApC;;AAIA,QAAMG,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAIC,MAAJ;;AACA,QAAID,KAAK,IAAIA,KAAK,CAACE,MAAnB,EAA2B;AACzBD,MAAAA,MAAM,GAAG,CAAC,OAAD,EAAU,CAAC,KAAD,EAAQ,YAAR,CAAV,EAAiCD,KAAjC,EAAwC,IAAxC,EAA8C,KAA9C,CAAT;AACAL,MAAAA,WAAW,CAAED,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAeE,QAAAA,UAAU,EAAEI;AAA3B,OAAf,CAAD,CAAX;AACAH,MAAAA,aAAa,CAACG,KAAD,CAAb;AACD,KAJD,MAIO;AACLC,MAAAA,MAAM,GAAG,IAAT;AACAN,MAAAA,WAAW,CAAED,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAeE,QAAAA,UAAU,EAAE;AAA3B,OAAf,CAAD,CAAX;AACD;;AACDD,IAAAA,WAAW,CAAED,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAeS,MAAAA,gBAAgB,EAAEF;AAAjC,KAAf,CAAD,CAAX;AACD,GAXD;;AAaA,sBACE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KADb;AAEE,IAAA,YAAY,EAAEV,QAAQ,CAACE,UAFzB;AAGE,IAAA,QAAQ,EAAE,CAACS,KAAD,EAAQC,QAAR,KAAqB;AAC7BP,MAAAA,kBAAkB,CAACO,QAAD,CAAlB;AACD,KALH;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,OAAO,EAAEd,UAPX;AAQE,IAAA,WAAW,EAAGe,MAAD,iBACX,oBAAC,SAAD,oBACMA,MADN;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,aAHR;AAIE,MAAA,WAAW,EAAC,EAJd;AAKE,MAAA,SAAS,EAAE,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATJ;AAiBE,IAAA,eAAe,MAjBjB;AAkBE,IAAA,EAAE,EAAC,0BAlBL,CAmBE;AAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAuBD","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { NavigationContext } from \"../NavigationContext\";\r\n\r\nconst statusList = [\r\n  \"ACTIVE\",\r\n  \"ACTIVE - DRILLING\",\r\n  \"CANCELLED PERMIT\",\r\n  \"COMPLETED - NOT ACTIVE\",\r\n  \"DRILLED UNCOMPLETED (DUC)\",\r\n  \"DRY HOLE\",\r\n  \"EXPIRED PERMIT\",\r\n  \"INACTIVE\",\r\n  \"P&A\",\r\n  \"PERMIT\",\r\n  \"PERMIT - EXISTING WELL\",\r\n  \"PERMIT - NEW DRILL\",\r\n  \"SHUTIN\",\r\n  \"UNKNOWN\",\r\n];\r\n\r\nexport default function FilterWellStatusJ() {\r\n  const [stateNav, setStateNav] = useContext(NavigationContext);\r\n  const [statusName, setStatusName] = React.useState(\r\n    stateNav.statusName ? stateNav.statusName : null\r\n  );\r\n\r\n  const handleStatusChange = (value) => {\r\n    let filter;\r\n    if (value && value.length) {\r\n      filter = [\"match\", [\"get\", \"wellStatus\"], value, true, false];\r\n      setStateNav((stateNav) => ({ ...stateNav, statusName: value }));\r\n      setStatusName(value);\r\n    } else {\r\n      filter = null;\r\n      setStateNav((stateNav) => ({ ...stateNav, statusName: [] }));\r\n    }\r\n    setStateNav((stateNav) => ({ ...stateNav, filterWellStatus: filter }));\r\n  };\r\n\r\n  return (\r\n    <Autocomplete\r\n      ChipProps={{ color: \"secondary\" }}\r\n      defaultValue={stateNav.statusName}\r\n      onChange={(event, newValue) => {\r\n        handleStatusChange(newValue);\r\n      }}\r\n      multiple\r\n      options={statusList}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          variant=\"outlined\"\r\n          label=\"Well Status\"\r\n          placeholder=\"\"\r\n          fullWidth={true}\r\n        />\r\n      )}\r\n      disableListWrap\r\n      id=\"virtualize-well-statuses\"\r\n      // style={{ maxWidth: 300, minWidth: 120 }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}