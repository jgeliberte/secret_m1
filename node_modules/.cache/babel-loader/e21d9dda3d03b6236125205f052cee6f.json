{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\TitleOpinion\\\\TitleOpinion.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport { TitleOpinionContext } from \"./TitleOpinionContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useQueryTitleOpinion from \"../../graphQL/useQueryTitleOpinion\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport GeneralInfoForm from \"./components/GeneralInfoForm\";\nimport MapShape from \"./components/MapShape\";\nimport TitleOpinionsTaps from \"./components/TitleOpinionsTaps\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  containerWrapper: {\n    width: \"100%\",\n    maxWidth: \"100% \",\n    padding: \"0\"\n  },\n  maxWidth: {\n    width: \"100%\"\n  },\n  divSaveButtons: {\n    float: \"right\",\n    margin: \"5px\",\n    width: \"240px\"\n  },\n  saveButtonsBar: {\n    background: \"#263451\",\n    position: \"fixed\",\n    width: \"100%\",\n    zIndex: \"500\"\n  },\n  saveButton: {\n    background: \"#17AADD\"\n  },\n  buttons: {\n    marginRight: \"10px !important\",\n    width: \"100px\",\n    color: \"#FFFFFF !important\",\n    \"&:hover\": {\n      backgroundColor: \"#1f2b42\",\n      border: \"1px solid rgb(1,17,51)\"\n    }\n  },\n  whiteBox: {\n    width: \"100%\",\n    padding: \"0\",\n    height: \"36px\",\n    background: \"rgba(255, 255, 255, 0)\"\n  }\n}));\nexport default function TitleOpinion() {\n  const [stateApp] = useContext(AppContext);\n  const [stateTitleOpinion, setStateTitleOpinion] = useContext(TitleOpinionContext);\n  const {\n    MORDefaultSections,\n    MORDefaultColumns,\n    runsheetDefaultSections,\n    runsheetDefaultColumns\n  } = stateTitleOpinion;\n  const QueryTitleOpinion = useQueryTitleOpinion; /////////\n\n  const generatingANewSectionFromDefaultColumns = defaultColumns => {\n    ///////columns///////creating new default columns\n    const columns = defaultColumns.map((column, i) => {\n      return {\n        key: `id${i}`,\n        name: column,\n        editable: true,\n        resizable: true\n      };\n    }); ///////rows///////creating new default rows\n\n    let row = {};\n    columns.map(column => {\n      row = { ...row,\n        [column.key]: \"\"\n      };\n    });\n    let rows = [row, row, row, row, row]; ////////section//////creating new default Section\n\n    return {\n      name: \"\",\n      columns,\n      rows\n    };\n  };\n\n  const generatigSectionsArrayFromSectionsNamesArrayAndDefaultColumns = (sectionsNamesArray, defaultColumns) => {\n    return sectionsNamesArray.map(sectionName => {\n      return { ...generatingANewSectionFromDefaultColumns(defaultColumns),\n        name: sectionName\n      };\n    });\n  };\n\n  const generatingANewTitleOpinion = loading => {\n    setStateTitleOpinion({ ...stateTitleOpinion,\n      TOData: {\n        legalDescription: \"\",\n        preparedBy: \"\",\n        certifiedDate: moment().format(\"MM-DD-YYYY\"),\n        state: \"\",\n        county: \"\",\n        project: \"\",\n        client: \"\",\n        generalNotes: \"\",\n        MORSections: generatigSectionsArrayFromSectionsNamesArrayAndDefaultColumns(MORDefaultSections, MORDefaultColumns),\n        runsheetSections: generatigSectionsArrayFromSectionsNamesArrayAndDefaultColumns(runsheetDefaultSections, runsheetDefaultColumns),\n        feature: stateApp.featureOrMapShape\n      },\n      loading: loading === undefined ? true //////////true\n      : loading,\n      edited: false\n    });\n  };\n\n  useEffect(() => {\n    if (stateApp.selectedTitleOpinionId) {\n      const {\n        data,\n        loading\n      } = QueryTitleOpinion(stateApp.selectedTitleOpinionId);\n\n      if (data && data.titleOpinion) {\n        setStateTitleOpinion({ ...stateTitleOpinion,\n          TOData: data.titleOpinion,\n          loading\n        });\n      } else {\n        generatingANewTitleOpinion(loading);\n      }\n    } else {\n      generatingANewTitleOpinion(false);\n    }\n  }, []); /////////////////////////////\n\n  useEffect(() => {\n    console.log(\"selectedTitleOpinion=== \" + JSON.stringify(stateTitleOpinion.TOData));\n  }, [stateTitleOpinion.TOData]);\n\n  const handleAdd = e => {\n    e.preventDefault(); /////save TOData to the DB //////////////////////////////////////////////////////////////////\n\n    setStateTitleOpinion(stateTitleOpinion => {\n      return { ...stateTitleOpinion,\n        edited: false\n      };\n    });\n  };\n\n  const handleCancel = e => {\n    e.preventDefault(); /////dismiss TOData by refetching this Title opinion from the DB ////////////////////////////\n\n    setStateTitleOpinion(stateTitleOpinion => {\n      return { ...stateTitleOpinion,\n        edited: false\n      };\n    });\n  };\n\n  let classes = useStyles();\n  return !stateTitleOpinion.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: classes.containerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.TOMaxW,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, stateTitleOpinion.edited && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    className: classes.maxWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.whiteBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.saveButtonsBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divSaveButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: `${classes.saveButton} ${classes.buttons}`,\n    onClick: handleAdd,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttons,\n    onClick: handleCancel,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, \"Cancel\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    md: 6,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GeneralInfoForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    md: 6,\n    lg: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TitleOpinionsTaps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  })))))) : /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 80,\n    disableShrink: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/TitleOpinion/TitleOpinion.js"],"names":["React","useContext","useEffect","AppContext","TitleOpinionContext","CircularProgress","useQueryTitleOpinion","Container","Grid","GeneralInfoForm","MapShape","TitleOpinionsTaps","moment","makeStyles","Button","useStyles","theme","containerWrapper","width","maxWidth","padding","divSaveButtons","float","margin","saveButtonsBar","background","position","zIndex","saveButton","buttons","marginRight","color","backgroundColor","border","whiteBox","height","TitleOpinion","stateApp","stateTitleOpinion","setStateTitleOpinion","MORDefaultSections","MORDefaultColumns","runsheetDefaultSections","runsheetDefaultColumns","QueryTitleOpinion","generatingANewSectionFromDefaultColumns","defaultColumns","columns","map","column","i","key","name","editable","resizable","row","rows","generatigSectionsArrayFromSectionsNamesArrayAndDefaultColumns","sectionsNamesArray","sectionName","generatingANewTitleOpinion","loading","TOData","legalDescription","preparedBy","certifiedDate","format","state","county","project","client","generalNotes","MORSections","runsheetSections","feature","featureOrMapShape","undefined","edited","selectedTitleOpinionId","data","titleOpinion","console","log","JSON","stringify","handleAdd","e","preventDefault","handleCancel","classes","TOMaxW"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"../../AppContext\";\r\nimport { TitleOpinionContext } from \"./TitleOpinionContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useQueryTitleOpinion from \"../../graphQL/useQueryTitleOpinion\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport GeneralInfoForm from \"./components/GeneralInfoForm\";\r\nimport MapShape from \"./components/MapShape\";\r\nimport TitleOpinionsTaps from \"./components/TitleOpinionsTaps\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  containerWrapper: {\r\n    width: \"100%\",\r\n    maxWidth: \"100% \",\r\n    padding: \"0\"\r\n  },\r\n  maxWidth: {\r\n    width: \"100%\"\r\n  },\r\n  divSaveButtons: {\r\n    float: \"right\",\r\n    margin: \"5px\",\r\n    width: \"240px\"\r\n  },\r\n  saveButtonsBar: {\r\n    background: \"#263451\",\r\n    position: \"fixed\",\r\n    width: \"100%\",\r\n    zIndex: \"500\"\r\n  },\r\n  saveButton: {\r\n    background: \"#17AADD\"\r\n  },\r\n  buttons: {\r\n    marginRight: \"10px !important\",\r\n    width: \"100px\",\r\n    color: \"#FFFFFF !important\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#1f2b42\",\r\n      border: \"1px solid rgb(1,17,51)\"\r\n    }\r\n  },\r\n  whiteBox: {\r\n    width: \"100%\",\r\n    padding: \"0\",\r\n    height: \"36px\",\r\n    background: \"rgba(255, 255, 255, 0)\"\r\n  }\r\n}));\r\n\r\nexport default function TitleOpinion() {\r\n  const [stateApp] = useContext(AppContext);\r\n  const [stateTitleOpinion, setStateTitleOpinion] = useContext(\r\n    TitleOpinionContext\r\n  );\r\n  const {\r\n    MORDefaultSections,\r\n    MORDefaultColumns,\r\n    runsheetDefaultSections,\r\n    runsheetDefaultColumns\r\n  } = stateTitleOpinion;\r\n  const QueryTitleOpinion = useQueryTitleOpinion; /////////\r\n\r\n  const generatingANewSectionFromDefaultColumns = defaultColumns => {\r\n    ///////columns///////creating new default columns\r\n    const columns = defaultColumns.map((column, i) => {\r\n      return { key: `id${i}`, name: column, editable: true, resizable: true };\r\n    });\r\n\r\n    ///////rows///////creating new default rows\r\n    let row = {};\r\n    columns.map(column => {\r\n      row = { ...row, [column.key]: \"\" };\r\n    });\r\n    let rows = [row, row, row, row, row];\r\n\r\n    ////////section//////creating new default Section\r\n    return {\r\n      name: \"\",\r\n      columns,\r\n      rows\r\n    };\r\n  };\r\n\r\n  const generatigSectionsArrayFromSectionsNamesArrayAndDefaultColumns = (\r\n    sectionsNamesArray,\r\n    defaultColumns\r\n  ) => {\r\n    return sectionsNamesArray.map(sectionName => {\r\n      return {\r\n        ...generatingANewSectionFromDefaultColumns(defaultColumns),\r\n        name: sectionName\r\n      };\r\n    });\r\n  };\r\n\r\n  const generatingANewTitleOpinion = loading => {\r\n    setStateTitleOpinion({\r\n      ...stateTitleOpinion,\r\n      TOData: {\r\n        legalDescription: \"\",\r\n        preparedBy: \"\",\r\n        certifiedDate: moment().format(\"MM-DD-YYYY\"),\r\n        state: \"\",\r\n        county: \"\",\r\n        project: \"\",\r\n        client: \"\",\r\n        generalNotes: \"\",\r\n        MORSections: generatigSectionsArrayFromSectionsNamesArrayAndDefaultColumns(\r\n          MORDefaultSections,\r\n          MORDefaultColumns\r\n        ),\r\n        runsheetSections: generatigSectionsArrayFromSectionsNamesArrayAndDefaultColumns(\r\n          runsheetDefaultSections,\r\n          runsheetDefaultColumns\r\n        ),\r\n        feature: stateApp.featureOrMapShape\r\n      },\r\n      loading:\r\n        loading === undefined\r\n          ? true //////////true\r\n          : loading,\r\n      edited: false\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (stateApp.selectedTitleOpinionId) {\r\n      const { data, loading } = QueryTitleOpinion(\r\n        stateApp.selectedTitleOpinionId\r\n      );\r\n\r\n      if (data && data.titleOpinion) {\r\n        setStateTitleOpinion({\r\n          ...stateTitleOpinion,\r\n          TOData: data.titleOpinion,\r\n          loading\r\n        });\r\n      } else {\r\n        generatingANewTitleOpinion(loading);\r\n      }\r\n    } else {\r\n      generatingANewTitleOpinion(false);\r\n    }\r\n  }, []);\r\n\r\n  /////////////////////////////\r\n  useEffect(() => {\r\n    console.log(\r\n      \"selectedTitleOpinion=== \" + JSON.stringify(stateTitleOpinion.TOData)\r\n    );\r\n  }, [stateTitleOpinion.TOData]);\r\n\r\n  const handleAdd = e => {\r\n    e.preventDefault();\r\n\r\n    /////save TOData to the DB //////////////////////////////////////////////////////////////////\r\n    setStateTitleOpinion(stateTitleOpinion => {\r\n      return { ...stateTitleOpinion, edited: false };\r\n    });\r\n  };\r\n  const handleCancel = e => {\r\n    e.preventDefault();\r\n\r\n    /////dismiss TOData by refetching this Title opinion from the DB ////////////////////////////\r\n    setStateTitleOpinion(stateTitleOpinion => {\r\n      return { ...stateTitleOpinion, edited: false };\r\n    });\r\n  };\r\n\r\n  let classes = useStyles();\r\n\r\n  return !stateTitleOpinion.loading ? (\r\n    <div>\r\n      <Container className={classes.containerWrapper}>\r\n        <Grid container className={classes.TOMaxW}>\r\n          {stateTitleOpinion.edited && (\r\n            <Grid item xs={12} container className={classes.maxWidth}>\r\n              <div className={classes.whiteBox} />\r\n              <Grid item xs={12} className={classes.saveButtonsBar}>\r\n                <div>\r\n                  <div className={classes.divSaveButtons}>\r\n                    <Button\r\n                      className={`${classes.saveButton} ${classes.buttons}`}\r\n                      onClick={handleAdd}\r\n                      color=\"primary\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      className={classes.buttons}\r\n                      onClick={handleCancel}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12} container>\r\n            <Grid item xs={6} sm={6} md={6} lg={5}>\r\n              <GeneralInfoForm />\r\n            </Grid>\r\n            <Grid item xs={6} sm={6} md={6} lg={7}>\r\n              {/* <MapShape /> */}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} container>\r\n            <Grid item xs={12}>\r\n              <TitleOpinionsTaps />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  ) : (\r\n    <CircularProgress size={80} disableShrink color=\"secondary\" />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}