{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Navigation\\\\components\\\\FilterDefaultListWell.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  paparMain: {\n    boxShadow: \"none\",\n    padding: \"2px 6px\"\n  },\n  listItem: {\n    margin: 4,\n    flex: \"1 1 auto\",\n    justifyContent: \"space-between\",\n    minWidth: 278\n  },\n  chip: {\n    textAlign: \"center\"\n  },\n  chipContainer: {\n    height: \"100%\",\n    margin: \"6px 6px\"\n  },\n  chipRow: {\n    display: \"inline-flex\",\n    padding: \"1px 0px\"\n  },\n  deleteButton: {\n    float: \"right\"\n  },\n  listLabel: {\n    padding: \"6px 30px\",\n    display: \"inline-flex\"\n  },\n  listItemContainer: {\n    display: \"inherit\",\n    \"&:hover\": {\n      color: \"transparent\"\n    }\n  }\n}));\nexport default function FilterDedaultListWell(props) {\n  const [filtersTypeArr, setFiltersTypeArr] = useState(null);\n  const [filterNameType, setFilterNameType] = useState(null);\n  const classes = useStyles();\n  useEffect(() => {\n    if (props) {\n      setFiltersTypeArr(props.filters);\n      setFilterNameType(props.type);\n    }\n  }, [props]);\n\n  const removeNameFromType = string => {\n    if (string.includes(\"wellBoreProfile\")) {\n      return string.replace(\"wellBoreProfile\", \"Bore Profile\");\n    }\n\n    if (string.includes(\"well\")) {\n      return string.replace(\"well\", \" \");\n    }\n\n    if (string.includes(\"operator\")) {\n      return string.replace(\"operator\", \"Operator\");\n    }\n\n    if (Array.isArray(string)) {\n      if (string[1].includes(\"permitApprovedDate\")) {\n        let str = string[1].toString();\n        return str.replace(\"permitApprovedDate\", \"Permit Date\");\n      }\n    }\n\n    if (Array.isArray(string)) {\n      if (string[1].includes(\"spudDate\")) {\n        let str = string[1].toString();\n        return str.replace(\"spudDate\", \"Spud Date\");\n      }\n    }\n\n    if (Array.isArray(string)) {\n      if (string[1].includes(\"firstProductionDate\")) {\n        let str = string[1].toString();\n        return str.replace(\"firstProductionDate\", \"Production Date\");\n      }\n    }\n\n    if (Array.isArray(string)) {\n      if (string[1].includes(\"completionDate\")) {\n        let str = string[1].toString();\n        return str.replace(\"completionDate\", \"Completion Date\");\n      }\n    }\n  };\n\n  const convertDate = unixStamp => {\n    const date = moment.utc(unixStamp).format(\"MM/DD/YYYY\");\n    return date;\n  };\n\n  const removeChip = (e, name) => () => {\n    const {\n      deleteChip\n    } = props;\n    deleteChip(e, name);\n  };\n\n  const removeAllFilters = () => {\n    const {\n      removeAll\n    } = props;\n    removeAll();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, filtersTypeArr && filtersTypeArr.length > 0 ? /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paparMain,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    \"aria-label\": \"mailbox folders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.listLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, filterNameType), /*#__PURE__*/React.createElement(Button, {\n    className: classes.deleteButton,\n    endIcon: /*#__PURE__*/React.createElement(HighlightOffIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 26\n      }\n    }),\n    \"aria-label\": \"delete\",\n    onClick: removeAllFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Clear All\"), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItemContainer,\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, filtersTypeArr ? filtersTypeArr.map(elm => elm[1].length === 5 ? elm[1][2].map(el => /*#__PURE__*/React.createElement(Chip, {\n    key: el,\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 35\n      }\n    }, removeNameFromType(elm[1][1][1])), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 35\n      }\n    }, el)),\n    onDelete: removeChip(el, elm[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  })) : elm[1].length === 3 ? elm[1].filter(item => item !== \"all\").map(el => /*#__PURE__*/React.createElement(Chip, {\n    key: el[2],\n    className: classes.chipContainer,\n    label: /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }, removeNameFromType(elm[1][1][1]), \" \", el[0] === \">=\" ? \"From\" : \"To\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, convertDate(el[2]))),\n    onDelete: removeChip(el, elm[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 31\n    }\n  })) : null) : null), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  })))) : null);\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Navigation/components/FilterDefaultListWell.js"],"names":["React","useEffect","useState","Paper","List","Chip","ListItem","Divider","HighlightOffIcon","makeStyles","moment","Button","useStyles","theme","paparMain","boxShadow","padding","listItem","margin","flex","justifyContent","minWidth","chip","textAlign","chipContainer","height","chipRow","display","deleteButton","float","listLabel","listItemContainer","color","FilterDedaultListWell","props","filtersTypeArr","setFiltersTypeArr","filterNameType","setFilterNameType","classes","filters","type","removeNameFromType","string","includes","replace","Array","isArray","str","toString","convertDate","unixStamp","date","utc","format","removeChip","e","name","deleteChip","removeAllFilters","removeAll","length","map","elm","el","filter","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paparMain: {\r\n    boxShadow: \"none\",\r\n    padding: \"2px 6px\",\r\n  },\r\n  listItem: {\r\n    margin: 4,\r\n    flex: \"1 1 auto\",\r\n    justifyContent: \"space-between\",\r\n    minWidth: 278,\r\n  },\r\n  chip: {\r\n    textAlign: \"center\",\r\n  },\r\n  chipContainer: {\r\n    height: \"100%\",\r\n    margin: \"6px 6px\",\r\n  },\r\n  chipRow: {\r\n    display: \"inline-flex\",\r\n    padding: \"1px 0px\",\r\n  },\r\n  deleteButton: {\r\n    float: \"right\",\r\n  },\r\n  listLabel: {\r\n    padding: \"6px 30px\",\r\n    display: \"inline-flex\",\r\n  },\r\n  listItemContainer: {\r\n    display: \"inherit\",\r\n    \"&:hover\": {\r\n      color: \"transparent\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FilterDedaultListWell(props) {\r\n  const [filtersTypeArr, setFiltersTypeArr] = useState(null);\r\n  const [filterNameType, setFilterNameType] = useState(null);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (props) {\r\n      setFiltersTypeArr(props.filters);\r\n      setFilterNameType(props.type);\r\n    }\r\n  }, [props]);\r\n\r\n  const removeNameFromType = (string) => {\r\n    if (string.includes(\"wellBoreProfile\")) {\r\n      return string.replace(\"wellBoreProfile\", \"Bore Profile\");\r\n    }\r\n    if (string.includes(\"well\")) {\r\n      return string.replace(\"well\", \" \");\r\n    }\r\n    if (string.includes(\"operator\")) {\r\n      return string.replace(\"operator\", \"Operator\");\r\n    }\r\n    if (Array.isArray(string)) {\r\n      if (string[1].includes(\"permitApprovedDate\")) {\r\n        let str = string[1].toString();\r\n        return str.replace(\"permitApprovedDate\", \"Permit Date\");\r\n      }\r\n    }\r\n    if (Array.isArray(string)) {\r\n      if (string[1].includes(\"spudDate\")) {\r\n        let str = string[1].toString();\r\n        return str.replace(\"spudDate\", \"Spud Date\");\r\n      }\r\n    }\r\n    if (Array.isArray(string)) {\r\n      if (string[1].includes(\"firstProductionDate\")) {\r\n        let str = string[1].toString();\r\n        return str.replace(\"firstProductionDate\", \"Production Date\");\r\n      }\r\n    }\r\n    if (Array.isArray(string)) {\r\n      if (string[1].includes(\"completionDate\")) {\r\n        let str = string[1].toString();\r\n        return str.replace(\"completionDate\", \"Completion Date\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const convertDate = (unixStamp) => {\r\n    const date = moment.utc(unixStamp).format(\"MM/DD/YYYY\");\r\n    return date;\r\n  };\r\n\r\n  const removeChip = (e, name) => () => {\r\n    const { deleteChip } = props;\r\n    deleteChip(e, name);\r\n  };\r\n\r\n  const removeAllFilters = () => {\r\n    const { removeAll } = props;\r\n    removeAll();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {filtersTypeArr && filtersTypeArr.length > 0 ? (\r\n        <Paper className={classes.paparMain} square>\r\n          <List aria-label=\"mailbox folders\">\r\n            <div>\r\n              <div className={classes.listLabel}>{filterNameType}</div>\r\n              <Button\r\n                className={classes.deleteButton}\r\n                endIcon={<HighlightOffIcon />}\r\n                aria-label=\"delete\"\r\n                onClick={removeAllFilters}\r\n              >\r\n                Clear All\r\n              </Button>\r\n              <ListItem className={classes.listItemContainer} button>\r\n                {filtersTypeArr\r\n                  ? filtersTypeArr.map((elm) =>\r\n                      elm[1].length === 5\r\n                        ? elm[1][2].map((el) => (\r\n                            <Chip\r\n                              key={el}\r\n                              className={classes.chipContainer}\r\n                              label={\r\n                                <section>\r\n                                  <div className={classes.chip}>\r\n                                    {removeNameFromType(elm[1][1][1])}\r\n                                  </div>\r\n                                  <div className={classes.chipRow}>{el}</div>\r\n                                </section>\r\n                              }\r\n                              onDelete={removeChip(el, elm[0])}\r\n                            />\r\n                          ))\r\n                        : elm[1].length === 3\r\n                        ? elm[1]\r\n                            .filter((item) => item !== \"all\")\r\n                            .map((el) => (\r\n                              <Chip\r\n                                key={el[2]}\r\n                                className={classes.chipContainer}\r\n                                label={\r\n                                  <section>\r\n                                    <div className={classes.chip}>\r\n                                      {removeNameFromType(elm[1][1][1])}{\" \"}\r\n                                      {el[0] === \">=\" ? \"From\" : \"To\"}\r\n                                    </div>\r\n                                    <div className={classes.chipRow}>\r\n                                      {convertDate(el[2])}\r\n                                    </div>\r\n                                  </section>\r\n                                }\r\n                                onDelete={removeChip(el, elm[0])}\r\n                              />\r\n                            ))\r\n                        : null\r\n                    )\r\n                  : null}\r\n              </ListItem>\r\n              <Divider />\r\n            </div>\r\n          </List>\r\n        </Paper>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}