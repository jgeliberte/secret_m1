{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Container = _interopRequireDefault(require(\"../dnd/Container\"));\n\nvar _Draggable = _interopRequireDefault(require(\"../dnd/Draggable\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _Lane = _interopRequireDefault(require(\"./Lane\"));\n\nvar _reactPopopo = require(\"react-popopo\");\n\nvar boardActions = _interopRequireWildcard(require(\"../actions/BoardActions\"));\n\nvar laneActions = _interopRequireWildcard(require(\"../actions/LaneActions\"));\n\nclass BoardContainer extends _react.Component {\n  constructor(...args) {\n    super(...args);\n    (0, _defineProperty2.default)(this, \"state\", {\n      addLaneMode: false\n    });\n    (0, _defineProperty2.default)(this, \"onDragStart\", ({\n      payload\n    }) => {\n      const handleLaneDragStart = this.props.handleLaneDragStart;\n      handleLaneDragStart(payload.id);\n    });\n    (0, _defineProperty2.default)(this, \"onLaneDrop\", ({\n      removedIndex,\n      addedIndex,\n      payload\n    }) => {\n      const _this$props = this.props,\n            actions = _this$props.actions,\n            handleLaneDragEnd = _this$props.handleLaneDragEnd;\n\n      if (removedIndex !== addedIndex) {\n        actions.moveLane({\n          oldIndex: removedIndex,\n          newIndex: addedIndex\n        });\n        handleLaneDragEnd(removedIndex, addedIndex, payload);\n      }\n    });\n    (0, _defineProperty2.default)(this, \"getCardDetails\", (laneId, cardIndex) => {\n      return this.props.reducerData.lanes.find(lane => lane.id === laneId).cards[cardIndex];\n    });\n    (0, _defineProperty2.default)(this, \"getLaneDetails\", index => {\n      return this.props.reducerData.lanes[index];\n    });\n    (0, _defineProperty2.default)(this, \"wireEventBus\", () => {\n      const _this$props2 = this.props,\n            actions = _this$props2.actions,\n            eventBusHandle = _this$props2.eventBusHandle;\n      let eventBus = {\n        publish: event => {\n          switch (event.type) {\n            case 'ADD_CARD':\n              return actions.addCard({\n                laneId: event.laneId,\n                card: event.card\n              });\n\n            case 'UPDATE_CARD':\n              return actions.updateCard({\n                laneId: event.laneId,\n                card: event.card\n              });\n\n            case 'REMOVE_CARD':\n              return actions.removeCard({\n                laneId: event.laneId,\n                cardId: event.cardId\n              });\n\n            case 'REFRESH_BOARD':\n              return actions.loadBoard(event.data);\n\n            case 'MOVE_CARD':\n              return actions.moveCardAcrossLanes({\n                fromLaneId: event.fromLaneId,\n                toLaneId: event.toLaneId,\n                cardId: event.cardId,\n                index: event.index\n              });\n\n            case 'UPDATE_CARDS':\n              return actions.updateCards({\n                laneId: event.laneId,\n                cards: event.cards\n              });\n\n            case 'UPDATE_LANES':\n              return actions.updateLanes(event.lanes);\n\n            case 'UPDATE_LANE':\n              return actions.updateLane(event.lane);\n          }\n        }\n      };\n      eventBusHandle(eventBus);\n    });\n    (0, _defineProperty2.default)(this, \"hideEditableLane\", () => {\n      this.setState({\n        addLaneMode: false\n      });\n    });\n    (0, _defineProperty2.default)(this, \"showEditableLane\", () => {\n      this.setState({\n        addLaneMode: true\n      });\n    });\n    (0, _defineProperty2.default)(this, \"addNewLane\", params => {\n      this.hideEditableLane();\n      this.props.actions.addLane(params);\n      this.props.onLaneAdd(params);\n    });\n  }\n\n  componentDidMount() {\n    const _this$props3 = this.props,\n          actions = _this$props3.actions,\n          eventBusHandle = _this$props3.eventBusHandle;\n    actions.loadBoard(this.props.data);\n\n    if (eventBusHandle) {\n      this.wireEventBus();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // nextProps.data changes when external Board input props change and nextProps.reducerData changes due to event bus or UI changes\n    const _this$props4 = this.props,\n          data = _this$props4.data,\n          reducerData = _this$props4.reducerData,\n          onDataChange = _this$props4.onDataChange;\n\n    if (nextProps.reducerData && !(0, _isEqual.default)(reducerData, nextProps.reducerData)) {\n      onDataChange(nextProps.reducerData);\n    }\n\n    if (nextProps.data && !(0, _isEqual.default)(nextProps.data, data)) {\n      this.props.actions.loadBoard(nextProps.data);\n      onDataChange(nextProps.data);\n    }\n  }\n\n  get groupName() {\n    const id = this.props.id;\n    return \"TrelloBoard\".concat(id);\n  }\n\n  render() {\n    const _this$props5 = this.props,\n          id = _this$props5.id,\n          components = _this$props5.components,\n          reducerData = _this$props5.reducerData,\n          draggable = _this$props5.draggable,\n          laneDraggable = _this$props5.laneDraggable,\n          laneDragClass = _this$props5.laneDragClass,\n          laneDropClass = _this$props5.laneDropClass,\n          style = _this$props5.style,\n          onDataChange = _this$props5.onDataChange,\n          onCardAdd = _this$props5.onCardAdd,\n          onCardClick = _this$props5.onCardClick,\n          onBeforeCardDelete = _this$props5.onBeforeCardDelete,\n          onCardDelete = _this$props5.onCardDelete,\n          onLaneScroll = _this$props5.onLaneScroll,\n          onLaneClick = _this$props5.onLaneClick,\n          onLaneAdd = _this$props5.onLaneAdd,\n          onLaneDelete = _this$props5.onLaneDelete,\n          onLaneUpdate = _this$props5.onLaneUpdate,\n          editable = _this$props5.editable,\n          canAddLanes = _this$props5.canAddLanes,\n          laneStyle = _this$props5.laneStyle,\n          onCardMoveAcrossLanes = _this$props5.onCardMoveAcrossLanes,\n          t = _this$props5.t,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props5, [\"id\", \"components\", \"reducerData\", \"draggable\", \"laneDraggable\", \"laneDragClass\", \"laneDropClass\", \"style\", \"onDataChange\", \"onCardAdd\", \"onCardClick\", \"onBeforeCardDelete\", \"onCardDelete\", \"onLaneScroll\", \"onLaneClick\", \"onLaneAdd\", \"onLaneDelete\", \"onLaneUpdate\", \"editable\", \"canAddLanes\", \"laneStyle\", \"onCardMoveAcrossLanes\", \"t\"]);\n    const addLaneMode = this.state.addLaneMode; // Stick to whitelisting attributes to segregate board and lane props\n\n    const passthroughProps = (0, _pick.default)(this.props, ['onCardMoveAcrossLanes', 'onLaneScroll', 'onLaneDelete', 'onLaneUpdate', 'onCardClick', 'onBeforeCardDelete', 'onCardDelete', 'onCardAdd', 'onLaneClick', 'laneSortFunction', 'draggable', 'laneDraggable', 'cardDraggable', 'collapsibleLanes', 'canAddLanes', 'hideCardDeleteIcon', 'tagStyle', 'handleDragStart', 'handleDragEnd', 'cardDragClass', 'editLaneTitle', 't']);\n    return _react.default.createElement(components.BoardWrapper, (0, _extends2.default)({\n      style: style\n    }, otherProps, {\n      draggable: false\n    }), _react.default.createElement(_reactPopopo.PopoverWrapper, null, _react.default.createElement(_Container.default, {\n      orientation: \"horizontal\",\n      onDragStart: this.onDragStart,\n      dragClass: laneDragClass,\n      dropClass: laneDropClass,\n      onDrop: this.onLaneDrop,\n      lockAxis: \"x\",\n      getChildPayload: index => this.getLaneDetails(index),\n      groupName: this.groupName\n    }, reducerData.lanes.map((lane, index) => {\n      const id = lane.id,\n            droppable = lane.droppable,\n            otherProps = (0, _objectWithoutProperties2.default)(lane, [\"id\", \"droppable\"]);\n\n      const laneToRender = _react.default.createElement(_Lane.default, (0, _extends2.default)({\n        key: id,\n        boardId: this.groupName,\n        components: components,\n        id: id,\n        getCardDetails: this.getCardDetails,\n        index: index,\n        droppable: droppable === undefined ? true : droppable,\n        style: laneStyle || lane.style || {},\n        labelStyle: lane.labelStyle || {},\n        cardStyle: this.props.cardStyle || lane.cardStyle,\n        editable: editable && !lane.disallowAddingCard\n      }, otherProps, passthroughProps));\n\n      return draggable && laneDraggable ? _react.default.createElement(_Draggable.default, {\n        key: lane.id\n      }, laneToRender) : laneToRender;\n    }))), canAddLanes && _react.default.createElement(_Container.default, {\n      orientation: \"horizontal\"\n    }, editable && !addLaneMode ? _react.default.createElement(components.NewLaneSection, {\n      t: t,\n      onClick: this.showEditableLane\n    }) : addLaneMode && _react.default.createElement(components.NewLaneForm, {\n      onCancel: this.hideEditableLane,\n      onAdd: this.addNewLane,\n      t: t\n    })));\n  }\n\n}\n\nBoardContainer.propTypes = {\n  id: _propTypes.default.string,\n  components: _propTypes.default.object,\n  actions: _propTypes.default.object,\n  data: _propTypes.default.object.isRequired,\n  reducerData: _propTypes.default.object,\n  onDataChange: _propTypes.default.func,\n  eventBusHandle: _propTypes.default.func,\n  onLaneScroll: _propTypes.default.func,\n  onCardClick: _propTypes.default.func,\n  onBeforeCardDelete: _propTypes.default.func,\n  onCardDelete: _propTypes.default.func,\n  onCardAdd: _propTypes.default.func,\n  onLaneAdd: _propTypes.default.func,\n  onLaneDelete: _propTypes.default.func,\n  onLaneClick: _propTypes.default.func,\n  onLaneUpdate: _propTypes.default.func,\n  laneSortFunction: _propTypes.default.func,\n  draggable: _propTypes.default.bool,\n  collapsibleLanes: _propTypes.default.bool,\n  editable: _propTypes.default.bool,\n  canAddLanes: _propTypes.default.bool,\n  hideCardDeleteIcon: _propTypes.default.bool,\n  handleDragStart: _propTypes.default.func,\n  handleDragEnd: _propTypes.default.func,\n  handleLaneDragStart: _propTypes.default.func,\n  handleLaneDragEnd: _propTypes.default.func,\n  style: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  laneDraggable: _propTypes.default.bool,\n  cardDraggable: _propTypes.default.bool,\n  cardDragClass: _propTypes.default.string,\n  laneDragClass: _propTypes.default.string,\n  laneDropClass: _propTypes.default.string,\n  onCardMoveAcrossLanes: _propTypes.default.func.isRequired,\n  t: _propTypes.default.func.isRequired\n};\nBoardContainer.defaultProps = {\n  t: v => v,\n  onDataChange: () => {},\n  handleDragStart: () => {},\n  handleDragEnd: () => {},\n  handleLaneDragStart: () => {},\n  handleLaneDragEnd: () => {},\n  onLaneAdd: () => {},\n  onLaneDelete: () => {},\n  onCardMoveAcrossLanes: () => {},\n  onLaneUpdate: () => {},\n  editable: false,\n  canAddLanes: false,\n  hideCardDeleteIcon: false,\n  draggable: false,\n  collapsibleLanes: false,\n  laneDraggable: true,\n  cardDraggable: true,\n  cardDragClass: 'react_trello_dragClass',\n  laneDragClass: 'react_trello_dragLaneClass',\n  laneDropClass: ''\n};\n\nconst mapStateToProps = state => {\n  return state.lanes ? {\n    reducerData: state\n  } : {};\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: (0, _redux.bindActionCreators)((0, _objectSpread2.default)({}, boardActions, laneActions), dispatch)\n});\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BoardContainer);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/node_modules/react-trello/dist/controllers/BoardContainer.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_objectSpread2","_extends2","_objectWithoutProperties2","_defineProperty2","_react","_redux","_reactRedux","_Container","_Draggable","_propTypes","_pick","_isEqual","_Lane","_reactPopopo","boardActions","laneActions","BoardContainer","Component","constructor","args","addLaneMode","payload","handleLaneDragStart","props","id","removedIndex","addedIndex","_this$props","actions","handleLaneDragEnd","moveLane","oldIndex","newIndex","laneId","cardIndex","reducerData","lanes","find","lane","cards","index","_this$props2","eventBusHandle","eventBus","publish","event","type","addCard","card","updateCard","removeCard","cardId","loadBoard","data","moveCardAcrossLanes","fromLaneId","toLaneId","updateCards","updateLanes","updateLane","setState","params","hideEditableLane","addLane","onLaneAdd","componentDidMount","_this$props3","wireEventBus","componentWillReceiveProps","nextProps","_this$props4","onDataChange","groupName","concat","render","_this$props5","components","draggable","laneDraggable","laneDragClass","laneDropClass","style","onCardAdd","onCardClick","onBeforeCardDelete","onCardDelete","onLaneScroll","onLaneClick","onLaneDelete","onLaneUpdate","editable","canAddLanes","laneStyle","onCardMoveAcrossLanes","t","otherProps","state","passthroughProps","createElement","BoardWrapper","PopoverWrapper","orientation","onDragStart","dragClass","dropClass","onDrop","onLaneDrop","lockAxis","getChildPayload","getLaneDetails","map","droppable","laneToRender","key","boardId","getCardDetails","undefined","labelStyle","cardStyle","disallowAddingCard","NewLaneSection","onClick","showEditableLane","NewLaneForm","onCancel","onAdd","addNewLane","propTypes","string","object","isRequired","func","laneSortFunction","bool","collapsibleLanes","hideCardDeleteIcon","handleDragStart","handleDragEnd","tagStyle","cardDraggable","cardDragClass","defaultProps","v","mapStateToProps","mapDispatchToProps","dispatch","bindActionCreators","_default","connect"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Container = _interopRequireDefault(require(\"../dnd/Container\"));\n\nvar _Draggable = _interopRequireDefault(require(\"../dnd/Draggable\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _Lane = _interopRequireDefault(require(\"./Lane\"));\n\nvar _reactPopopo = require(\"react-popopo\");\n\nvar boardActions = _interopRequireWildcard(require(\"../actions/BoardActions\"));\n\nvar laneActions = _interopRequireWildcard(require(\"../actions/LaneActions\"));\n\nclass BoardContainer extends _react.Component {\n  constructor(...args) {\n    super(...args);\n    (0, _defineProperty2.default)(this, \"state\", {\n      addLaneMode: false\n    });\n    (0, _defineProperty2.default)(this, \"onDragStart\", ({\n      payload\n    }) => {\n      const handleLaneDragStart = this.props.handleLaneDragStart;\n      handleLaneDragStart(payload.id);\n    });\n    (0, _defineProperty2.default)(this, \"onLaneDrop\", ({\n      removedIndex,\n      addedIndex,\n      payload\n    }) => {\n      const _this$props = this.props,\n            actions = _this$props.actions,\n            handleLaneDragEnd = _this$props.handleLaneDragEnd;\n\n      if (removedIndex !== addedIndex) {\n        actions.moveLane({\n          oldIndex: removedIndex,\n          newIndex: addedIndex\n        });\n        handleLaneDragEnd(removedIndex, addedIndex, payload);\n      }\n    });\n    (0, _defineProperty2.default)(this, \"getCardDetails\", (laneId, cardIndex) => {\n      return this.props.reducerData.lanes.find(lane => lane.id === laneId).cards[cardIndex];\n    });\n    (0, _defineProperty2.default)(this, \"getLaneDetails\", index => {\n      return this.props.reducerData.lanes[index];\n    });\n    (0, _defineProperty2.default)(this, \"wireEventBus\", () => {\n      const _this$props2 = this.props,\n            actions = _this$props2.actions,\n            eventBusHandle = _this$props2.eventBusHandle;\n      let eventBus = {\n        publish: event => {\n          switch (event.type) {\n            case 'ADD_CARD':\n              return actions.addCard({\n                laneId: event.laneId,\n                card: event.card\n              });\n\n            case 'UPDATE_CARD':\n              return actions.updateCard({\n                laneId: event.laneId,\n                card: event.card\n              });\n\n            case 'REMOVE_CARD':\n              return actions.removeCard({\n                laneId: event.laneId,\n                cardId: event.cardId\n              });\n\n            case 'REFRESH_BOARD':\n              return actions.loadBoard(event.data);\n\n            case 'MOVE_CARD':\n              return actions.moveCardAcrossLanes({\n                fromLaneId: event.fromLaneId,\n                toLaneId: event.toLaneId,\n                cardId: event.cardId,\n                index: event.index\n              });\n\n            case 'UPDATE_CARDS':\n              return actions.updateCards({\n                laneId: event.laneId,\n                cards: event.cards\n              });\n\n            case 'UPDATE_LANES':\n              return actions.updateLanes(event.lanes);\n\n            case 'UPDATE_LANE':\n              return actions.updateLane(event.lane);\n          }\n        }\n      };\n      eventBusHandle(eventBus);\n    });\n    (0, _defineProperty2.default)(this, \"hideEditableLane\", () => {\n      this.setState({\n        addLaneMode: false\n      });\n    });\n    (0, _defineProperty2.default)(this, \"showEditableLane\", () => {\n      this.setState({\n        addLaneMode: true\n      });\n    });\n    (0, _defineProperty2.default)(this, \"addNewLane\", params => {\n      this.hideEditableLane();\n      this.props.actions.addLane(params);\n      this.props.onLaneAdd(params);\n    });\n  }\n\n  componentDidMount() {\n    const _this$props3 = this.props,\n          actions = _this$props3.actions,\n          eventBusHandle = _this$props3.eventBusHandle;\n    actions.loadBoard(this.props.data);\n\n    if (eventBusHandle) {\n      this.wireEventBus();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // nextProps.data changes when external Board input props change and nextProps.reducerData changes due to event bus or UI changes\n    const _this$props4 = this.props,\n          data = _this$props4.data,\n          reducerData = _this$props4.reducerData,\n          onDataChange = _this$props4.onDataChange;\n\n    if (nextProps.reducerData && !(0, _isEqual.default)(reducerData, nextProps.reducerData)) {\n      onDataChange(nextProps.reducerData);\n    }\n\n    if (nextProps.data && !(0, _isEqual.default)(nextProps.data, data)) {\n      this.props.actions.loadBoard(nextProps.data);\n      onDataChange(nextProps.data);\n    }\n  }\n\n  get groupName() {\n    const id = this.props.id;\n    return \"TrelloBoard\".concat(id);\n  }\n\n  render() {\n    const _this$props5 = this.props,\n          id = _this$props5.id,\n          components = _this$props5.components,\n          reducerData = _this$props5.reducerData,\n          draggable = _this$props5.draggable,\n          laneDraggable = _this$props5.laneDraggable,\n          laneDragClass = _this$props5.laneDragClass,\n          laneDropClass = _this$props5.laneDropClass,\n          style = _this$props5.style,\n          onDataChange = _this$props5.onDataChange,\n          onCardAdd = _this$props5.onCardAdd,\n          onCardClick = _this$props5.onCardClick,\n          onBeforeCardDelete = _this$props5.onBeforeCardDelete,\n          onCardDelete = _this$props5.onCardDelete,\n          onLaneScroll = _this$props5.onLaneScroll,\n          onLaneClick = _this$props5.onLaneClick,\n          onLaneAdd = _this$props5.onLaneAdd,\n          onLaneDelete = _this$props5.onLaneDelete,\n          onLaneUpdate = _this$props5.onLaneUpdate,\n          editable = _this$props5.editable,\n          canAddLanes = _this$props5.canAddLanes,\n          laneStyle = _this$props5.laneStyle,\n          onCardMoveAcrossLanes = _this$props5.onCardMoveAcrossLanes,\n          t = _this$props5.t,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props5, [\"id\", \"components\", \"reducerData\", \"draggable\", \"laneDraggable\", \"laneDragClass\", \"laneDropClass\", \"style\", \"onDataChange\", \"onCardAdd\", \"onCardClick\", \"onBeforeCardDelete\", \"onCardDelete\", \"onLaneScroll\", \"onLaneClick\", \"onLaneAdd\", \"onLaneDelete\", \"onLaneUpdate\", \"editable\", \"canAddLanes\", \"laneStyle\", \"onCardMoveAcrossLanes\", \"t\"]);\n    const addLaneMode = this.state.addLaneMode; // Stick to whitelisting attributes to segregate board and lane props\n\n    const passthroughProps = (0, _pick.default)(this.props, ['onCardMoveAcrossLanes', 'onLaneScroll', 'onLaneDelete', 'onLaneUpdate', 'onCardClick', 'onBeforeCardDelete', 'onCardDelete', 'onCardAdd', 'onLaneClick', 'laneSortFunction', 'draggable', 'laneDraggable', 'cardDraggable', 'collapsibleLanes', 'canAddLanes', 'hideCardDeleteIcon', 'tagStyle', 'handleDragStart', 'handleDragEnd', 'cardDragClass', 'editLaneTitle', 't']);\n    return _react.default.createElement(components.BoardWrapper, (0, _extends2.default)({\n      style: style\n    }, otherProps, {\n      draggable: false\n    }), _react.default.createElement(_reactPopopo.PopoverWrapper, null, _react.default.createElement(_Container.default, {\n      orientation: \"horizontal\",\n      onDragStart: this.onDragStart,\n      dragClass: laneDragClass,\n      dropClass: laneDropClass,\n      onDrop: this.onLaneDrop,\n      lockAxis: \"x\",\n      getChildPayload: index => this.getLaneDetails(index),\n      groupName: this.groupName\n    }, reducerData.lanes.map((lane, index) => {\n      const id = lane.id,\n            droppable = lane.droppable,\n            otherProps = (0, _objectWithoutProperties2.default)(lane, [\"id\", \"droppable\"]);\n\n      const laneToRender = _react.default.createElement(_Lane.default, (0, _extends2.default)({\n        key: id,\n        boardId: this.groupName,\n        components: components,\n        id: id,\n        getCardDetails: this.getCardDetails,\n        index: index,\n        droppable: droppable === undefined ? true : droppable,\n        style: laneStyle || lane.style || {},\n        labelStyle: lane.labelStyle || {},\n        cardStyle: this.props.cardStyle || lane.cardStyle,\n        editable: editable && !lane.disallowAddingCard\n      }, otherProps, passthroughProps));\n\n      return draggable && laneDraggable ? _react.default.createElement(_Draggable.default, {\n        key: lane.id\n      }, laneToRender) : laneToRender;\n    }))), canAddLanes && _react.default.createElement(_Container.default, {\n      orientation: \"horizontal\"\n    }, editable && !addLaneMode ? _react.default.createElement(components.NewLaneSection, {\n      t: t,\n      onClick: this.showEditableLane\n    }) : addLaneMode && _react.default.createElement(components.NewLaneForm, {\n      onCancel: this.hideEditableLane,\n      onAdd: this.addNewLane,\n      t: t\n    })));\n  }\n\n}\n\nBoardContainer.propTypes = {\n  id: _propTypes.default.string,\n  components: _propTypes.default.object,\n  actions: _propTypes.default.object,\n  data: _propTypes.default.object.isRequired,\n  reducerData: _propTypes.default.object,\n  onDataChange: _propTypes.default.func,\n  eventBusHandle: _propTypes.default.func,\n  onLaneScroll: _propTypes.default.func,\n  onCardClick: _propTypes.default.func,\n  onBeforeCardDelete: _propTypes.default.func,\n  onCardDelete: _propTypes.default.func,\n  onCardAdd: _propTypes.default.func,\n  onLaneAdd: _propTypes.default.func,\n  onLaneDelete: _propTypes.default.func,\n  onLaneClick: _propTypes.default.func,\n  onLaneUpdate: _propTypes.default.func,\n  laneSortFunction: _propTypes.default.func,\n  draggable: _propTypes.default.bool,\n  collapsibleLanes: _propTypes.default.bool,\n  editable: _propTypes.default.bool,\n  canAddLanes: _propTypes.default.bool,\n  hideCardDeleteIcon: _propTypes.default.bool,\n  handleDragStart: _propTypes.default.func,\n  handleDragEnd: _propTypes.default.func,\n  handleLaneDragStart: _propTypes.default.func,\n  handleLaneDragEnd: _propTypes.default.func,\n  style: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  laneDraggable: _propTypes.default.bool,\n  cardDraggable: _propTypes.default.bool,\n  cardDragClass: _propTypes.default.string,\n  laneDragClass: _propTypes.default.string,\n  laneDropClass: _propTypes.default.string,\n  onCardMoveAcrossLanes: _propTypes.default.func.isRequired,\n  t: _propTypes.default.func.isRequired\n};\nBoardContainer.defaultProps = {\n  t: v => v,\n  onDataChange: () => {},\n  handleDragStart: () => {},\n  handleDragEnd: () => {},\n  handleLaneDragStart: () => {},\n  handleLaneDragEnd: () => {},\n  onLaneAdd: () => {},\n  onLaneDelete: () => {},\n  onCardMoveAcrossLanes: () => {},\n  onLaneUpdate: () => {},\n  editable: false,\n  canAddLanes: false,\n  hideCardDeleteIcon: false,\n  draggable: false,\n  collapsibleLanes: false,\n  laneDraggable: true,\n  cardDraggable: true,\n  cardDragClass: 'react_trello_dragClass',\n  laneDragClass: 'react_trello_dragLaneClass',\n  laneDropClass: ''\n};\n\nconst mapStateToProps = state => {\n  return state.lanes ? {\n    reducerData: state\n  } : {};\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: (0, _redux.bindActionCreators)((0, _objectSpread2.default)({}, boardActions, laneActions), dispatch)\n});\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BoardContainer);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}