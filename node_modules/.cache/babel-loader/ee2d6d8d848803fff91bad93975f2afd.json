{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\ContactDetailCard\\\\components\\\\AddActivityModal.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { format } from \"date-fns/esm\";\nimport moment from \"moment\";\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport { AppContext } from \"../../../AppContext\";\nimport { UPDATECONTACT } from \"../../../graphQL/useMutationUpdateContact\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"&  .MuiPaper-root\": {\n      maxWidth: \"400px\",\n      padding: \"25px\"\n    }\n  },\n  dialogTitle: {\n    textAlign: \"center\"\n  },\n  dialogContentText: {\n    textAlign: \"center\"\n  },\n  inputField: {\n    marginBottom: \"15px\"\n  },\n  inputFieldDate: {\n    marginBottom: \"15px\",\n    \"& .MuiInputBase-input\": {\n      paddingTop: \"10.5px\",\n      paddingBottom: \"10.5px\"\n    }\n  },\n  progress: {\n    marginLeft: \"30px\",\n    verticalAlign: \"middle\"\n  },\n  dialogFooter: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  label: {\n    backgroundColor: \"white\"\n  }\n}));\nconst initialErrors = {\n  notes: false,\n  activityType: false,\n  dateTime: false\n};\n\nfunction AddActivityModal(props) {\n  const classes = useStyles();\n  const {\n    open,\n    onClose\n  } = props;\n  const [stateApp] = useContext(AppContext);\n  console.log(\"USER: \", stateApp);\n  const [updateContact, {\n    called,\n    loading,\n    data\n  }] = useMutation(UPDATECONTACT);\n  const [activityType, setActivityType] = useState(\"general\");\n  const [notes, setNotes] = useState(\"\");\n  const [dateTime, setDateTime] = useState(new Date());\n  const [errors, setErrors] = useState({ ...initialErrors\n  }); //   const [getCommentsByObjectId, { data: dataComments }] = useLazyQuery(\n  //     COMMENTSBYOBJECTIDQUERY\n  //   );\n  // const [upsertComment] = useMutation(UPSERTCOMMENT);\n\n  console.log(\"DATAAAA: \", data);\n  const addActivityStatus = data ? data.updateContact : null;\n\n  const clearFields = () => {\n    setNotes(\"\");\n    setActivityType(\"general\");\n    setDateTime(new Date());\n  };\n\n  const updateErrors = () => {\n    let activityTypeErr = false;\n    let notesErr = false;\n    let dateTimeErr = false;\n    if (!activityType || activityType.length === 0) activityTypeErr = true;\n    if (!notes || notes.length === 0) notesErr = true;\n    setErrors({\n      activityType: activityTypeErr,\n      notes: notesErr,\n      dateTime: dateTimeErr\n    });\n    return activityTypeErr || notesErr || dateTimeErr;\n  };\n\n  const addActivity = async () => {\n    if (updateErrors()) return;\n    let activityLog = props.activityLog ? props.activityLog.map(act => ({\n      type: act.type,\n      notes: act.notes,\n      dateTime: act.dateTime,\n      user_id: act.user_id\n    })) : [];\n    activityLog.push({\n      type: activityType,\n      notes,\n      dateTime: dateTime.toISOString(),\n      user_id: stateApp.user.email\n    });\n    console.log(\"UPDATING ACTIVITY LOG: \", {\n      _id: props.id,\n      activityLog\n    });\n    updateContact({\n      variables: {\n        contact: {\n          _id: props.id,\n          activityLog\n        }\n      },\n      refetchQueries: [\"getContact\"],\n      awaitRefetchQueries: true\n    });\n  };\n\n  useEffect(() => {\n    if (called && !loading && addActivityStatus.success === true) {\n      clearFields();\n    }\n  }, [called, loading, addActivityStatus]);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    onClose: onClose,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    className: classes.dialogTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"Activity Log\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    value: dateTime //disablePast\n    ,\n    fullWidth: true,\n    className: classes.inputFieldDate,\n    onChange: setDateTime,\n    label: \"Activity Date\",\n    showTodayButton: true,\n    disabled: loading,\n    inputVariant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.inputField,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Activity Type\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    value: activityType,\n    onChange: e => {\n      setActivityType(e.target.value);\n    },\n    fullWidth: true,\n    label: \"Activity Type\",\n    disabled: loading,\n    error: errors.activityType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"general\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"General Update\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"Phone Call\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"meeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, \"Meeting\"))), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    multiline: true,\n    rows: 4,\n    id: \"notes\",\n    label: \"Notes\",\n    type: \"text\",\n    size: \"small\",\n    fullWidth: true,\n    className: classes.inputField,\n    value: notes,\n    onChange: e => {\n      setNotes(e.target.value);\n    },\n    disabled: loading,\n    error: errors.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"large\",\n    disableElevation: true,\n    onClick: addActivity,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, \"Add\"), loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"secondary\",\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }) : called && !loading ? addActivityStatus.success ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, \"Activity added.\") : /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, \"Unable to add activity.\") : null)));\n}\n\nexport default AddActivityModal;","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/ContactDetailCard/components/AddActivityModal.js"],"names":["React","useState","useEffect","useContext","format","moment","DateTimePicker","useMutation","useLazyQuery","styled","makeStyles","Button","TextField","DialogTitle","DialogContent","Dialog","FormControl","InputLabel","CircularProgress","MenuItem","Typography","Select","AppContext","UPDATECONTACT","useStyles","theme","root","maxWidth","padding","dialogTitle","textAlign","dialogContentText","inputField","marginBottom","inputFieldDate","paddingTop","paddingBottom","progress","marginLeft","verticalAlign","dialogFooter","display","justifyContent","label","backgroundColor","initialErrors","notes","activityType","dateTime","AddActivityModal","props","classes","open","onClose","stateApp","console","log","updateContact","called","loading","data","setActivityType","setNotes","setDateTime","Date","errors","setErrors","addActivityStatus","clearFields","updateErrors","activityTypeErr","notesErr","dateTimeErr","length","addActivity","activityLog","map","act","type","user_id","push","toISOString","user","email","_id","id","variables","contact","refetchQueries","awaitRefetchQueries","success","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { format } from \"date-fns/esm\";\r\nimport moment from \"moment\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport { UPDATECONTACT } from \"../../../graphQL/useMutationUpdateContact\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"&  .MuiPaper-root\": {\r\n      maxWidth: \"400px\",\r\n      padding: \"25px\",\r\n    },\r\n  },\r\n  dialogTitle: {\r\n    textAlign: \"center\",\r\n  },\r\n  dialogContentText: {\r\n    textAlign: \"center\",\r\n  },\r\n  inputField: {\r\n    marginBottom: \"15px\",\r\n  },\r\n  inputFieldDate: {\r\n    marginBottom: \"15px\",\r\n    \"& .MuiInputBase-input\": {\r\n      paddingTop: \"10.5px\",\r\n      paddingBottom: \"10.5px\",\r\n    },\r\n  },\r\n  progress: {\r\n    marginLeft: \"30px\",\r\n    verticalAlign: \"middle\",\r\n  },\r\n  dialogFooter: { display: \"flex\", justifyContent: \"space-between\" },\r\n\r\n  label: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nconst initialErrors = {\r\n  notes: false,\r\n  activityType: false,\r\n  dateTime: false,\r\n};\r\n\r\nfunction AddActivityModal(props) {\r\n  const classes = useStyles();\r\n  const { open, onClose } = props;\r\n  const [stateApp] = useContext(AppContext);\r\n\r\n  console.log(\"USER: \", stateApp);\r\n\r\n  const [updateContact, { called, loading, data }] = useMutation(UPDATECONTACT);\r\n  const [activityType, setActivityType] = useState(\"general\");\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n  const [dateTime, setDateTime] = useState(new Date());\r\n  const [errors, setErrors] = useState({ ...initialErrors });\r\n\r\n  //   const [getCommentsByObjectId, { data: dataComments }] = useLazyQuery(\r\n  //     COMMENTSBYOBJECTIDQUERY\r\n  //   );\r\n  // const [upsertComment] = useMutation(UPSERTCOMMENT);\r\n\r\n  console.log(\"DATAAAA: \", data);\r\n\r\n  const addActivityStatus = data ? data.updateContact : null;\r\n\r\n  const clearFields = () => {\r\n    setNotes(\"\");\r\n    setActivityType(\"general\");\r\n    setDateTime(new Date());\r\n  };\r\n\r\n  const updateErrors = () => {\r\n    let activityTypeErr = false;\r\n    let notesErr = false;\r\n    let dateTimeErr = false;\r\n    if (!activityType || activityType.length === 0) activityTypeErr = true;\r\n    if (!notes || notes.length === 0) notesErr = true;\r\n    setErrors({\r\n      activityType: activityTypeErr,\r\n      notes: notesErr,\r\n      dateTime: dateTimeErr,\r\n    });\r\n    return activityTypeErr || notesErr || dateTimeErr;\r\n  };\r\n\r\n  const addActivity = async () => {\r\n    if (updateErrors()) return;\r\n\r\n    let activityLog = props.activityLog\r\n      ? props.activityLog.map((act) => ({\r\n          type: act.type,\r\n          notes: act.notes,\r\n          dateTime: act.dateTime,\r\n          user_id: act.user_id,\r\n        }))\r\n      : [];\r\n\r\n    activityLog.push({\r\n      type: activityType,\r\n      notes,\r\n      dateTime: dateTime.toISOString(),\r\n      user_id: stateApp.user.email,\r\n    });\r\n\r\n    console.log(\"UPDATING ACTIVITY LOG: \", {\r\n      _id: props.id,\r\n      activityLog,\r\n    });\r\n\r\n    updateContact({\r\n      variables: {\r\n        contact: {\r\n          _id: props.id,\r\n          activityLog,\r\n        },\r\n      },\r\n      refetchQueries: [\"getContact\"],\r\n      awaitRefetchQueries: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (called && !loading && addActivityStatus.success === true) {\r\n      clearFields();\r\n    }\r\n  }, [called, loading, addActivityStatus]);\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      onClose={onClose}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>\r\n        Activity Log\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {/* <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Activity Date\"\r\n          type=\"datetime-local\"\r\n          className={classes.inputField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          value={dateTime}\r\n          onChange={(e) => {\r\n            setDateTime(e.target.value);\r\n          }}\r\n          disabled={loading}\r\n          error={errors.dateTime}\r\n        /> */}\r\n        <DateTimePicker\r\n          value={dateTime}\r\n          //disablePast\r\n          fullWidth\r\n          className={classes.inputFieldDate}\r\n          onChange={setDateTime}\r\n          label=\"Activity Date\"\r\n          showTodayButton\r\n          disabled={loading}\r\n          inputVariant=\"outlined\"\r\n        />\r\n\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          className={classes.inputField}\r\n          size=\"small\"\r\n        >\r\n          <InputLabel\r\n            id=\"demo-simple-select-outlined-label\"\r\n            className={classes.label}\r\n          >\r\n            Activity Type\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={activityType}\r\n            onChange={(e) => {\r\n              setActivityType(e.target.value);\r\n            }}\r\n            fullWidth\r\n            label=\"Activity Type\"\r\n            disabled={loading}\r\n            error={errors.activityType}\r\n          >\r\n            <MenuItem value={\"general\"}>General Update</MenuItem>\r\n            <MenuItem value={\"phone\"}>Phone Call</MenuItem>\r\n            <MenuItem value={\"email\"}>Email</MenuItem>\r\n            <MenuItem value={\"meeting\"}>Meeting</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          multiline\r\n          rows={4}\r\n          id=\"notes\"\r\n          label=\"Notes\"\r\n          type=\"text\"\r\n          size=\"small\"\r\n          fullWidth\r\n          className={classes.inputField}\r\n          value={notes}\r\n          onChange={(e) => {\r\n            setNotes(e.target.value);\r\n          }}\r\n          disabled={loading}\r\n          error={errors.notes}\r\n        />\r\n\r\n        <div className={classes.dialogFooter}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"large\"\r\n            disableElevation\r\n            onClick={addActivity}\r\n            disabled={loading}\r\n          >\r\n            Add\r\n          </Button>\r\n          {loading ? (\r\n            <CircularProgress color=\"secondary\" className={classes.progress} />\r\n          ) : called && !loading ? (\r\n            addActivityStatus.success ? (\r\n              <Typography color=\"secondary\" variant=\"subtitle2\" gutterBottom>\r\n                Activity added.\r\n              </Typography>\r\n            ) : (\r\n              <Typography color=\"primary\" variant=\"subtitle2\" gutterBottom>\r\n                Unable to add activity.\r\n              </Typography>\r\n            )\r\n          ) : null}\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddActivityModal;\r\n"]},"metadata":{},"sourceType":"module"}