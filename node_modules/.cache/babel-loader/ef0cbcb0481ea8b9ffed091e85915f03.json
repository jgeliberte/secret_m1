{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\Shared\\\\M1nTable\\\\components\\\\SubComponents\\\\CellContentEdition.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CreateTwoToneIcon from \"@material-ui/icons/CreateTwoTone\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditionPopover from \"../../../../ContactDetailCard/components/EditionPopover\";\nimport ClearSharpIcon from \"@material-ui/icons/ClearSharp\";\nimport CheckSharpIcon from \"@material-ui/icons/CheckSharp\";\nimport Button from \"@material-ui/core/Button\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATECONTACT } from \"../../../../../graphQL/useMutationUpdateContact\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { AppContext } from \"../../../../../AppContext\";\nimport $ from \"jquery\";\nconst useStyles = makeStyles(theme => ({\n  fieldContentP: {\n    visibility: ({\n      loading,\n      edit,\n      fieldsCount\n    }) => loading || edit && fieldsCount <= 1 ? \"hidden\" : \"visible\",\n    margin: \"0\",\n    width: ({\n      noMargin\n    }) => {\n      if (noMargin) return \"fit-content\";\n    },\n    borderRadius: \"4px\",\n    whiteSpace: \"pre-wrap\"\n  },\n  pencilIcon: {\n    fontSize: \"22px\"\n  },\n  editTextField: {\n    position: ({\n      fieldsCount\n    }) => fieldsCount > 1 ? null : \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    zIndex: \"50\",\n    paddingRight: ({\n      fieldsCount\n    }) => fieldsCount > 1 ? null : \"20px\",\n    \"& .MuiInputBase-root\": {\n      backgroundColor: \"#fff\",\n      fontSize: \"0.875rem\",\n      padding: \"10px\",\n      lineHeight: \"1.43\"\n    },\n    \"& textarea\": {\n      width: \"inherit\"\n    }\n  },\n  notAvailableP: {\n    color: \"#898989b0\",\n    fontSize: \"13px\"\n  },\n  loader: {\n    top: \"calc( 50% - 11px)\",\n    left: \"10px\",\n    position: \"absolute\"\n  },\n  popoverButton: {\n    margin: \"0 0 4px 8px\",\n    padding: \"2px\",\n    minWidth: \"0\",\n    \"& .MuiButton-startIcon.MuiButton-iconSizeSmall\": {\n      margin: \"0\"\n    }\n  },\n  buttonsRow: {\n    textAlign: \"right\",\n    top: \"-2px\",\n    position: \"relative\"\n  },\n  foodText: {\n    position: \"absolute\",\n    bottom: \"0\",\n    right: \"0\",\n    fontSize: \"10px\",\n    color: \"#6e6e6e\",\n    margin: \"0 !important\",\n    textAlign: \"right\",\n    height: \"0\",\n    paddingRight: \"20px\",\n    \"& span\": {\n      fontWeight: \"bold\"\n    }\n  },\n  cellDataDiv: {\n    padding: \"10px 30px 10px 10px\",\n    position: \"relative\",\n    borderRadius: \"7px\",\n    cursor: \"text\",\n    \"&:hover\": {\n      backgroundColor: ({\n        edit\n      }) => edit ? null : \"#fff\",\n      \"& .hiddenEditIcons\": {\n        visibility: ({\n          edit\n        }) => edit ? null : \"visible\"\n      }\n    }\n  },\n  hiddenEditIcons: {\n    position: \"absolute\",\n    right: \"0\",\n    top: \"Calc(50% - 13px)\",\n    visibility: \"hidden\"\n  }\n}));\n\nfunction PencilEditIcon({\n  onClick,\n  anchorEl,\n  setAnchorEl,\n  content,\n  handleUpdating\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EditionPopover, {\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    transformOrigin: {\n      vertical: \"center\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      width: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.buttonsRow,\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    variant: \"outlined\",\n    className: classes.popoverButton,\n    startIcon: /*#__PURE__*/React.createElement(CheckSharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 26\n      }\n    }),\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      handleUpdating();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    variant: \"outlined\",\n    className: classes.popoverButton,\n    startIcon: /*#__PURE__*/React.createElement(ClearSharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 26\n      }\n    }),\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      setAnchorEl(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), content.map((textF, i) => /*#__PURE__*/React.createElement(Grid, {\n    key: i,\n    item: true,\n    xs: 12,\n    style: {\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, textF)))), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Edit\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      onClick(e);\n    },\n    className: `hiddenEditIcons ${classes.hiddenEditIcons}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateTwoToneIcon, {\n    fontSize: \"small\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst textFieldLabels = field => {\n  const fieldsOpt = [\"companyName\", \"jobTitle\", \"address2Alt\", \"address1Alt\", \"cityAlt\", \"stateAlt\", \"zipAlt\", \"countryAlt\", \"zip\"];\n  const labelsOpt = [\"Company Name\", \"Job Title\", \"Address2\", \"Address1\", \"City\", \"State\", \"ZipCode\", \"Country\", \"ZipCode\"];\n\n  if (fieldsOpt.indexOf(field) !== -1) {\n    return labelsOpt[fieldsOpt.indexOf(field)];\n  }\n\n  return field.charAt(0).toUpperCase() + field.slice(1);\n};\n\nexport default function CellContentEdition({\n  children,\n  id,\n  content,\n  childrenLeft,\n  onlyChildren,\n  name,\n  noInputFooter,\n  targetLabel\n}) {\n  //////////// id - brings the object id //////////////////////////////////////////////////////////////////////////\n  //////////// content - brings an object with fielNames and values ///////////////////////////////////////////////\n  //////////// childrenLeft - will move the chilren components to the left side of the field values//optional//////\n  ////////////              - default childrens to rigth///////////////////////////////////////////////////////////\n  //////////// onlyChildren - will show only the children components, no field values  //optional//////////////////\n  //////////// name - will be part of the Not Available text, better use in compound fiels  //optional/////////////\n  //////////// noInputFooter //optional////////////////////////////////////////////////////////////////////////////\n  //////////// targetLabel - brings the object type we are updating here //////////////////////////////////////////\n  const [stateApp] = React.useContext(AppContext);\n  const [edit, setEdit] = useState(null);\n  const [editContent, setEditContent] = useState({\n    content\n  });\n  const [cellId, setCellId] = useState(0);\n  const [fieldsCount, setFieldsCount] = useState(0);\n  const [height, setHeight] = useState(null);\n  const [width, setWidth] = useState(null);\n  const [updateContact, {\n    loading\n  }] = useMutation(UPDATECONTACT);\n  const classes = useStyles({\n    loading,\n    fieldsCount,\n    edit\n  });\n  useEffect(() => {\n    if (content) {\n      setEditContent({ ...content\n      });\n      let count = 0;\n      let cId = \"\";\n\n      for (const fieldName in content) {\n        if (content.hasOwnProperty(fieldName)) {\n          count++;\n          cId += fieldName;\n        }\n      }\n\n      setFieldsCount(count);\n      setCellId(cId);\n    }\n  }, [content]);\n  useEffect(() => {\n    if (fieldsCount <= 1) {\n      //// set focus\n      let fieldName;\n\n      for (const key in editContent) {\n        fieldName = key;\n        break;\n      }\n\n      if (document.getElementById(\"fieldContentInput\" + id + fieldName)) document.getElementById(\"fieldContentInput\" + id + fieldName).focus(); //// resize height to fit its content, using jQuery\n\n      if (edit === false) {\n        $(document).ready(function () {\n          if ($(\"#\" + id + fieldName) && $(\"#fieldContentInput\" + id + fieldName) && !$(\"#fieldContentInput\" + id + fieldName).height()) {\n            $(\"#\" + id + fieldName).css({\n              height: \"auto\"\n            });\n          }\n        });\n      }\n    }\n  }, [edit, fieldsCount]);\n\n  const handleEditClick = e => {\n    e.persist();\n    e.preventDefault();\n    setEdit(!edit ? e.currentTarget : false);\n  };\n\n  const handleUpdating = () => {\n    let trimmedEditContent = {\n      _id: id,\n      lastUpdateBy: stateApp.user.mongoId\n    };\n    let differences = false;\n\n    for (const field in editContent) {\n      if (editContent[field] !== null) {\n        trimmedEditContent[field] = editContent[field].trim();\n        if (editContent[field].trim() !== content[field]) differences = true;\n      }\n    }\n\n    if (differences) {\n      if (targetLabel === \"contact\") {\n        updateContact({\n          variables: {\n            contact: trimmedEditContent\n          },\n          refetchQueries: [\"getContacts\", \"getContactsByOwnerId\", \"getContact\"],\n          awaitRefetchQueries: true\n        });\n      } //// add here your mutation for another targetLabel\n\n    }\n\n    setEdit(false);\n  };\n\n  let inputsArray = [];\n\n  if (edit) {\n    for (const fieldName in editContent) {\n      if (editContent.hasOwnProperty(fieldName)) {\n        inputsArray.push( /*#__PURE__*/React.createElement(TextField, {\n          key: \"fieldContentInput\" + id + fieldName,\n          id: \"fieldContentInput\" + id + fieldName,\n          className: classes.editTextField,\n          variant: \"outlined\",\n          size: \"small\",\n          fullWidth: true,\n          label: fieldsCount > 1 ? textFieldLabels(fieldName) : null,\n          multiline: true,\n          value: editContent[fieldName] === null ? \"\" : editContent[fieldName],\n          onChange: e => {\n            e.persist();\n            setEditContent(editContent => ({ ...editContent,\n              [fieldName]: e.target.value\n            }));\n          },\n          onKeyDown: event => {\n            event.stopPropagation();\n\n            if (event.key === \"Escape\") {\n              if (fieldsCount <= 1) {\n                setEdit(false);\n                setEditContent(editContent => ({ ...editContent,\n                  [fieldName]: content[fieldName]\n                }));\n              }\n            }\n\n            if (event.key === \"Enter\") {\n              event.preventDefault();\n              handleUpdating();\n            }\n          },\n          onBlur: e => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (fieldsCount <= 1) {\n              setEdit(false);\n              setEditContent(editContent => ({ ...editContent,\n                [fieldName]: content[fieldName]\n              }));\n            }\n          },\n          onClick: e => {\n            e.preventDefault();\n            e.stopPropagation();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  } //// ajusting the main div height to the input heigth, using jQuery\n\n\n  if (fieldsCount <= 1) {\n    $(document).ready(function () {\n      if ($(\"#\" + id + cellId) && $(\"#fieldContentInput\" + id + cellId) && $(\"#fieldContentInput\" + id + cellId).height()) {\n        $(\"#\" + id + cellId).css({\n          height: $(\"#fieldContentInput\" + id + cellId).height() + 20\n        });\n      }\n    });\n  } //// joining all fields content\n\n\n  let textArray = [];\n\n  for (const key in content) {\n    if (content.hasOwnProperty(key) && content[key] && content[key] !== \"\") {\n      if (key === \"zip\" || key === \"country\" || key === \"zipAlt\" || key === \"countryAlt\") {\n        textArray = [[textArray.join(\", \"), content[key]].join(\" \")];\n      } else if (key === \"jobTitle\") {\n        textArray = [[textArray.join(\", \"), content[key]].join(\" - \")];\n      } else textArray.push(content[key]);\n    }\n  } //// add \"Return to save\" footer\n\n\n  const inputsArrayWithFooter = () => {\n    if (fieldsCount <= 1) {\n      return [inputsArray, noInputFooter ? null : /*#__PURE__*/React.createElement(\"p\", {\n        key: \"2\",\n        className: classes.foodText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }\n      }, \"Return\"), \" to save\")]; /////return an input if only one field\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: id + cellId,\n    className: classes.cellDataDiv,\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 5\n    }\n  }, edit && fieldsCount <= 1 && inputsArrayWithFooter(), /*#__PURE__*/React.createElement(\"p\", {\n    className: `${textArray.length === 0 ? classes.notAvailableP : \"\"} ${classes.fieldContentP}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }\n  }, childrenLeft && !onlyChildren && children ? children : \"\", textArray.length > 0 ? onlyChildren ? children ? children : \"\" : textArray.join(\", \") : `${name ? name + \" \" : \"\"} Not Available`, /*#__PURE__*/React.createElement(PencilEditIcon, {\n    handleUpdating: handleUpdating,\n    anchorEl: edit && fieldsCount > 1 ? edit : null,\n    setAnchorEl: setEdit,\n    content: inputsArray,\n    onClick: handleEditClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }\n  }), !childrenLeft && !onlyChildren && children ? children : \"\"), loading && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"0\",\n      width: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.loader,\n    size: 22,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/Shared/M1nTable/components/SubComponents/CellContentEdition.js"],"names":["React","useState","useEffect","makeStyles","Grid","IconButton","Tooltip","CreateTwoToneIcon","TextField","EditionPopover","ClearSharpIcon","CheckSharpIcon","Button","useMutation","UPDATECONTACT","CircularProgress","AppContext","$","useStyles","theme","fieldContentP","visibility","loading","edit","fieldsCount","margin","width","noMargin","borderRadius","whiteSpace","pencilIcon","fontSize","editTextField","position","top","left","zIndex","paddingRight","backgroundColor","padding","lineHeight","notAvailableP","color","loader","popoverButton","minWidth","buttonsRow","textAlign","foodText","bottom","right","height","fontWeight","cellDataDiv","cursor","hiddenEditIcons","PencilEditIcon","onClick","anchorEl","setAnchorEl","content","handleUpdating","classes","vertical","horizontal","e","preventDefault","stopPropagation","map","textF","i","marginBottom","textFieldLabels","field","fieldsOpt","labelsOpt","indexOf","charAt","toUpperCase","slice","CellContentEdition","children","id","childrenLeft","onlyChildren","name","noInputFooter","targetLabel","stateApp","useContext","setEdit","editContent","setEditContent","cellId","setCellId","setFieldsCount","setHeight","setWidth","updateContact","count","cId","fieldName","hasOwnProperty","key","document","getElementById","focus","ready","css","handleEditClick","persist","currentTarget","trimmedEditContent","_id","lastUpdateBy","user","mongoId","differences","trim","variables","contact","refetchQueries","awaitRefetchQueries","inputsArray","push","target","value","event","textArray","join","inputsArrayWithFooter","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CreateTwoToneIcon from \"@material-ui/icons/CreateTwoTone\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport EditionPopover from \"../../../../ContactDetailCard/components/EditionPopover\";\r\nimport ClearSharpIcon from \"@material-ui/icons/ClearSharp\";\r\nimport CheckSharpIcon from \"@material-ui/icons/CheckSharp\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { UPDATECONTACT } from \"../../../../../graphQL/useMutationUpdateContact\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { AppContext } from \"../../../../../AppContext\";\r\nimport $ from \"jquery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fieldContentP: {\r\n    visibility: ({ loading, edit, fieldsCount }) =>\r\n      loading || (edit && fieldsCount <= 1) ? \"hidden\" : \"visible\",\r\n    margin: \"0\",\r\n    width: ({ noMargin }) => {\r\n      if (noMargin) return \"fit-content\";\r\n    },\r\n    borderRadius: \"4px\",\r\n\r\n    whiteSpace: \"pre-wrap\",\r\n  },\r\n  pencilIcon: {\r\n    fontSize: \"22px\",\r\n  },\r\n  editTextField: {\r\n    position: ({ fieldsCount }) => (fieldsCount > 1 ? null : \"absolute\"),\r\n    top: \"0\",\r\n    left: \"0\",\r\n    zIndex: \"50\",\r\n    paddingRight: ({ fieldsCount }) => (fieldsCount > 1 ? null : \"20px\"),\r\n    \"& .MuiInputBase-root\": {\r\n      backgroundColor: \"#fff\",\r\n      fontSize: \"0.875rem\",\r\n      padding: \"10px\",\r\n      lineHeight: \"1.43\",\r\n    },\r\n    \"& textarea\": {\r\n      width: \"inherit\",\r\n    },\r\n  },\r\n  notAvailableP: { color: \"#898989b0\", fontSize: \"13px\" },\r\n  loader: {\r\n    top: \"calc( 50% - 11px)\",\r\n    left: \"10px\",\r\n    position: \"absolute\",\r\n  },\r\n  popoverButton: {\r\n    margin: \"0 0 4px 8px\",\r\n    padding: \"2px\",\r\n    minWidth: \"0\",\r\n    \"& .MuiButton-startIcon.MuiButton-iconSizeSmall\": { margin: \"0\" },\r\n  },\r\n  buttonsRow: { textAlign: \"right\", top: \"-2px\", position: \"relative\" },\r\n  foodText: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    right: \"0\",\r\n    fontSize: \"10px\",\r\n    color: \"#6e6e6e\",\r\n    margin: \"0 !important\",\r\n    textAlign: \"right\",\r\n    height: \"0\",\r\n    paddingRight: \"20px\",\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  cellDataDiv: {\r\n    padding: \"10px 30px 10px 10px\",\r\n    position: \"relative\",\r\n    borderRadius: \"7px\",\r\n    cursor: \"text\",\r\n    \"&:hover\": {\r\n      backgroundColor: ({ edit }) => (edit ? null : \"#fff\"),\r\n      \"& .hiddenEditIcons\": {\r\n        visibility: ({ edit }) => (edit ? null : \"visible\"),\r\n      },\r\n    },\r\n  },\r\n  hiddenEditIcons: {\r\n    position: \"absolute\",\r\n    right: \"0\",\r\n    top: \"Calc(50% - 13px)\",\r\n    visibility: \"hidden\",\r\n  },\r\n}));\r\n\r\nfunction PencilEditIcon({\r\n  onClick,\r\n  anchorEl,\r\n  setAnchorEl,\r\n  content,\r\n  handleUpdating,\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <EditionPopover\r\n        anchorEl={anchorEl}\r\n        setAnchorEl={setAnchorEl}\r\n        transformOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Grid container spacing={0} style={{ width: \"200px\" }}>\r\n          <Grid className={classes.buttonsRow} item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className={classes.popoverButton}\r\n              startIcon={<CheckSharpIcon />}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                handleUpdating();\r\n              }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className={classes.popoverButton}\r\n              startIcon={<ClearSharpIcon />}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                setAnchorEl(null);\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          {content.map((textF, i) => (\r\n            <Grid key={i} item xs={12} style={{ marginBottom: \"8px\" }}>\r\n              {textF}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </EditionPopover>\r\n      <Tooltip title={\"Edit\"} placement=\"top\">\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            onClick(e);\r\n          }}\r\n          className={`hiddenEditIcons ${classes.hiddenEditIcons}`}\r\n        >\r\n          <CreateTwoToneIcon fontSize=\"small\" color=\"secondary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst textFieldLabels = (field) => {\r\n  const fieldsOpt = [\r\n    \"companyName\",\r\n    \"jobTitle\",\r\n    \"address2Alt\",\r\n    \"address1Alt\",\r\n    \"cityAlt\",\r\n    \"stateAlt\",\r\n    \"zipAlt\",\r\n    \"countryAlt\",\r\n    \"zip\",\r\n  ];\r\n  const labelsOpt = [\r\n    \"Company Name\",\r\n    \"Job Title\",\r\n    \"Address2\",\r\n    \"Address1\",\r\n    \"City\",\r\n    \"State\",\r\n    \"ZipCode\",\r\n    \"Country\",\r\n    \"ZipCode\",\r\n  ];\r\n\r\n  if (fieldsOpt.indexOf(field) !== -1) {\r\n    return labelsOpt[fieldsOpt.indexOf(field)];\r\n  }\r\n\r\n  return field.charAt(0).toUpperCase() + field.slice(1);\r\n};\r\n\r\nexport default function CellContentEdition({\r\n  children,\r\n  id,\r\n  content,\r\n  childrenLeft,\r\n  onlyChildren,\r\n  name,\r\n  noInputFooter,\r\n  targetLabel,\r\n}) {\r\n  //////////// id - brings the object id //////////////////////////////////////////////////////////////////////////\r\n  //////////// content - brings an object with fielNames and values ///////////////////////////////////////////////\r\n  //////////// childrenLeft - will move the chilren components to the left side of the field values//optional//////\r\n  ////////////              - default childrens to rigth///////////////////////////////////////////////////////////\r\n  //////////// onlyChildren - will show only the children components, no field values  //optional//////////////////\r\n  //////////// name - will be part of the Not Available text, better use in compound fiels  //optional/////////////\r\n  //////////// noInputFooter //optional////////////////////////////////////////////////////////////////////////////\r\n  //////////// targetLabel - brings the object type we are updating here //////////////////////////////////////////\r\n\r\n  const [stateApp] = React.useContext(AppContext);\r\n  const [edit, setEdit] = useState(null);\r\n  const [editContent, setEditContent] = useState({ content });\r\n  const [cellId, setCellId] = useState(0);\r\n  const [fieldsCount, setFieldsCount] = useState(0);\r\n  const [height, setHeight] = useState(null);\r\n  const [width, setWidth] = useState(null);\r\n\r\n  const [updateContact, { loading }] = useMutation(UPDATECONTACT);\r\n  const classes = useStyles({ loading, fieldsCount, edit });\r\n\r\n  useEffect(() => {\r\n    if (content) {\r\n      setEditContent({ ...content });\r\n\r\n      let count = 0;\r\n      let cId = \"\";\r\n      for (const fieldName in content) {\r\n        if (content.hasOwnProperty(fieldName)) {\r\n          count++;\r\n          cId += fieldName;\r\n        }\r\n      }\r\n      setFieldsCount(count);\r\n      setCellId(cId);\r\n    }\r\n  }, [content]);\r\n\r\n  useEffect(() => {\r\n    if (fieldsCount <= 1) {\r\n      //// set focus\r\n      let fieldName;\r\n      for (const key in editContent) {\r\n        fieldName = key;\r\n        break;\r\n      }\r\n      if (document.getElementById(\"fieldContentInput\" + id + fieldName))\r\n        document.getElementById(\"fieldContentInput\" + id + fieldName).focus();\r\n\r\n      //// resize height to fit its content, using jQuery\r\n      if (edit === false) {\r\n        $(document).ready(function () {\r\n          if (\r\n            $(\"#\" + id + fieldName) &&\r\n            $(\"#fieldContentInput\" + id + fieldName) &&\r\n            !$(\"#fieldContentInput\" + id + fieldName).height()\r\n          ) {\r\n            $(\"#\" + id + fieldName).css({\r\n              height: \"auto\",\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [edit, fieldsCount]);\r\n\r\n  const handleEditClick = (e) => {\r\n    e.persist();\r\n    e.preventDefault();\r\n    setEdit(!edit ? e.currentTarget : false);\r\n  };\r\n\r\n  const handleUpdating = () => {\r\n    let trimmedEditContent = {\r\n      _id: id,\r\n      lastUpdateBy: stateApp.user.mongoId,\r\n    };\r\n    let differences = false;\r\n    for (const field in editContent) {\r\n      if (editContent[field] !== null) {\r\n        trimmedEditContent[field] = editContent[field].trim();\r\n        if (editContent[field].trim() !== content[field]) differences = true;\r\n      }\r\n    }\r\n\r\n    if (differences) {\r\n      if (targetLabel === \"contact\") {\r\n        updateContact({\r\n          variables: {\r\n            contact: trimmedEditContent,\r\n          },\r\n          refetchQueries: [\"getContacts\", \"getContactsByOwnerId\", \"getContact\"],\r\n          awaitRefetchQueries: true,\r\n        });\r\n      }\r\n      //// add here your mutation for another targetLabel\r\n    }\r\n\r\n    setEdit(false);\r\n  };\r\n\r\n  let inputsArray = [];\r\n\r\n  if (edit) {\r\n    for (const fieldName in editContent) {\r\n      if (editContent.hasOwnProperty(fieldName)) {\r\n        inputsArray.push(\r\n          <TextField\r\n            key={\"fieldContentInput\" + id + fieldName}\r\n            id={\"fieldContentInput\" + id + fieldName}\r\n            className={classes.editTextField}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            label={fieldsCount > 1 ? textFieldLabels(fieldName) : null}\r\n            multiline\r\n            value={\r\n              editContent[fieldName] === null ? \"\" : editContent[fieldName]\r\n            }\r\n            onChange={(e) => {\r\n              e.persist();\r\n              setEditContent((editContent) => ({\r\n                ...editContent,\r\n                [fieldName]: e.target.value,\r\n              }));\r\n            }}\r\n            onKeyDown={(event) => {\r\n              event.stopPropagation();\r\n              if (event.key === \"Escape\") {\r\n                if (fieldsCount <= 1) {\r\n                  setEdit(false);\r\n                  setEditContent((editContent) => ({\r\n                    ...editContent,\r\n                    [fieldName]: content[fieldName],\r\n                  }));\r\n                }\r\n              }\r\n\r\n              if (event.key === \"Enter\") {\r\n                event.preventDefault();\r\n                handleUpdating();\r\n              }\r\n            }}\r\n            onBlur={(e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              if (fieldsCount <= 1) {\r\n                setEdit(false);\r\n                setEditContent((editContent) => ({\r\n                  ...editContent,\r\n                  [fieldName]: content[fieldName],\r\n                }));\r\n              }\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //// ajusting the main div height to the input heigth, using jQuery\r\n  if (fieldsCount <= 1) {\r\n    $(document).ready(function () {\r\n      if (\r\n        $(\"#\" + id + cellId) &&\r\n        $(\"#fieldContentInput\" + id + cellId) &&\r\n        $(\"#fieldContentInput\" + id + cellId).height()\r\n      ) {\r\n        $(\"#\" + id + cellId).css({\r\n          height: $(\"#fieldContentInput\" + id + cellId).height() + 20,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //// joining all fields content\r\n  let textArray = [];\r\n  for (const key in content) {\r\n    if (content.hasOwnProperty(key) && content[key] && content[key] !== \"\") {\r\n      if (\r\n        key === \"zip\" ||\r\n        key === \"country\" ||\r\n        key === \"zipAlt\" ||\r\n        key === \"countryAlt\"\r\n      ) {\r\n        textArray = [[textArray.join(\", \"), content[key]].join(\" \")];\r\n      } else if (key === \"jobTitle\") {\r\n        textArray = [[textArray.join(\", \"), content[key]].join(\" - \")];\r\n      } else textArray.push(content[key]);\r\n    }\r\n  }\r\n\r\n  //// add \"Return to save\" footer\r\n  const inputsArrayWithFooter = () => {\r\n    if (fieldsCount <= 1) {\r\n      return [\r\n        inputsArray,\r\n        noInputFooter ? null : (\r\n          <p key=\"2\" className={classes.foodText}>\r\n            <span>Return</span> to save\r\n          </p>\r\n        ),\r\n      ]; /////return an input if only one field\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={id + cellId}\r\n      className={classes.cellDataDiv}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }}\r\n    >\r\n      {edit && fieldsCount <= 1 && inputsArrayWithFooter()}\r\n      <p\r\n        className={`${textArray.length === 0 ? classes.notAvailableP : \"\"} ${\r\n          classes.fieldContentP\r\n        }`}\r\n      >\r\n        {childrenLeft && !onlyChildren && children ? children : \"\"}\r\n        {textArray.length > 0\r\n          ? onlyChildren\r\n            ? children\r\n              ? children\r\n              : \"\"\r\n            : textArray.join(\", \")\r\n          : `${name ? name + \" \" : \"\"} Not Available`}\r\n        <PencilEditIcon\r\n          handleUpdating={handleUpdating}\r\n          anchorEl={edit && fieldsCount > 1 ? edit : null}\r\n          setAnchorEl={setEdit}\r\n          content={inputsArray}\r\n          onClick={handleEditClick}\r\n        />\r\n        {!childrenLeft && !onlyChildren && children ? children : \"\"}\r\n      </p>\r\n      {loading && (\r\n        <div style={{ height: \"0\", width: \"0\" }}>\r\n          <CircularProgress\r\n            className={classes.loader}\r\n            size={22}\r\n            color=\"secondary\"\r\n          ></CircularProgress>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}