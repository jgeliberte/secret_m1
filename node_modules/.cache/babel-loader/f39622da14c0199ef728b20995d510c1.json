{"ast":null,"code":"import { __read } from \"tslib\";\nimport { useState, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\nexport default function EditorPortal(_a) {\n  var target = _a.target,\n      children = _a.children; // Keep track of when the modal element is added to the DOM\n\n  var _b = __read(useState(false), 2),\n      isMounted = _b[0],\n      setIsMounted = _b[1];\n\n  useLayoutEffect(function () {\n    setIsMounted(true);\n  }, []); // Don't render the portal until the component has mounted,\n  // So the portal can safely access the DOM.\n\n  if (!isMounted) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(children, target);\n}","map":{"version":3,"sources":["../../../src/common/editors/EditorPortal.tsx"],"names":[],"mappings":";AAAA,SAAgB,QAAhB,EAA0B,eAA1B,QAAiD,OAAjD;AACA,OAAO,QAAP,MAAqB,WAArB;AAOA,eAAc,SAAU,YAAV,CAAuB,EAAvB,EAAkD;MAAzB,MAAA,GAAA,EAAA,CAAA,M;MAAQ,QAAA,GAAA,EAAA,CAAA,Q,CAAiB,CAC9D;;AACM,MAAA,EAAA,GAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA;AAAA,MAAC,SAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAY,YAAA,GAAA,EAAA,CAAA,CAAA,CAAZ;;AAEN,EAAA,eAAe,CAAC,YAAA;AACd,IAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFc,EAEZ,EAFY,CAAf,CAJ8D,CAQ9D;AACA;;AACA,MAAI,CAAC,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,SAAO,QAAQ,CAAC,YAAT,CAAsB,QAAtB,EAAgC,MAAhC,CAAP;AACD","sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface Props {\n  children: React.ReactNode;\n  target: Element;\n}\n\nexport default function EditorPortal({ target, children }: Props) {\n  // Keep track of when the modal element is added to the DOM\n  const [isMounted, setIsMounted] = useState(false);\n\n  useLayoutEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Don't render the portal until the component has mounted,\n  // So the portal can safely access the DOM.\n  if (!isMounted) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(children, target);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}