{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Geliberte\\\\Work\\\\freelance\\\\m1\\\\src\\\\components\\\\WellCard\\\\components\\\\CardDetailsMap.js\";\nimport React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport mapboxgl from \"mapbox-gl\";\nimport { AppContext } from \"../../../AppContext\";\nimport uid from \"uid\";\nconst useStyles = makeStyles(theme => ({\n  MSWrapper: {\n    width: \"100%\",\n    minHeight: \"419.556px !important\",\n    overflow: \"hidden !important\"\n  },\n  map: {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden !important\",\n    \"& canvas\": {\n      height: \"100% !important\"\n    },\n    \"& .mapboxgl-canvas-container\": {\n      width: \"100% !important\",\n      height: \"100% !important\"\n    },\n    \"& a.mapboxgl-ctrl-logo, .mapboxgl-ctrl.mapboxgl-ctrl-attrib\": {\n      display: \"none\"\n    }\n  },\n  footerLeftLogo: {\n    position: \"absolute\",\n    bottom: \"5px\",\n    zIndex: \"1\",\n    left: \"10px\"\n  }\n}));\nexport default function CardDetailsMap() {\n  const [stateApp] = useContext(AppContext);\n  const [map, setMap] = useState(null);\n  const [mapStyles, setMapStyles] = useState([]);\n  const mapEl = useRef(null);\n  const [flyVar1, setFlyVar1] = useState([null]);\n  mapboxgl.accessToken = stateApp.mapboxglAccessToken;\n  useEffect(() => {\n    const req = new Request(\"https://api.mapbox.com/styles/v1/m1neral?access_token=sk.eyJ1IjoibTFuZXJhbCIsImEiOiJjazdkbGg1YXAwMjVqM2VwanZzbm95Z2dvIn0.cdoQNZU42xxbybyGxlBNkw\", {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetch(req, {\n      signal: signal\n    }).then(results => results.json()).then(data => {\n      setMapStyles(data.slice(0, 5));\n    }); //clean up\n\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  function getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n\n    return -1; //to handle the case where the value doesn't exist\n  }\n\n  useEffect(() => {\n    if (flyVar1 && flyVar1 === true) {\n      map.flyTo({\n        center: [stateApp.selectedWell.longitude, stateApp.selectedWell.latitude],\n        zoom: 16,\n        speed: 0.4,\n        bearing: -10,\n        //duration: 10000,\n        easing: function (t) {\n          return Math.sin(t * Math.PI / 2);\n        }\n      });\n      setFlyVar1(false);\n      map.on(\"moveend\", function (e) {\n        if (map.getBearing() === -10 && map.getZoom() === 16 // && map.getCenter()===[\n        //                       stateApp.selectedWell.longitude,\n        //                       stateApp.selectedWell.latitude,\n        //                     ]\n        ) {\n            map.flyTo({\n              center: [stateApp.selectedWell.longitude, stateApp.selectedWell.latitude],\n              zoom: 16,\n              //speed: 0.4,\n              bearing: 540,\n              duration: 100000,\n              easing: function (t) {\n                return Math.sin(t * Math.PI / 2);\n              }\n            });\n          }\n      });\n    }\n  }, [flyVar1]);\n  useEffect(() => {\n    if (mapStyles.length > 0) {\n      const SET_INITIAL_MAP_STYLE = \"Satellite\";\n      var index = getIndex(SET_INITIAL_MAP_STYLE, mapStyles, \"name\");\n\n      const initializeMap = ({\n        setMap,\n        mapEl,\n        setStateApp\n      }) => {\n        let id = mapEl.current.id;\n        const newMap = new mapboxgl.Map({\n          container: `${id}`,\n          style: \"mapbox://styles/m1neral/\" + mapStyles[index].id,\n          center: [stateApp.selectedWell.longitude, stateApp.selectedWell.latitude],\n          zoom: 5,\n          pitch: 70,\n          bearing: 20\n        });\n        var el = document.createElement(\"div\");\n        el.style.backgroundImage = \"url(icons/favicon-inverted.png)\";\n        el.style.width = \"28px\";\n        el.style.height = \"64px\"; /// optimized interactions w/ map\n\n        newMap.scrollZoom.enable();\n        newMap.dragPan.enable();\n        newMap.dragRotate.enable();\n        newMap.keyboard.enable();\n        newMap.doubleClickZoom.disable();\n        newMap.boxZoom.enable();\n        newMap.touchZoomRotate.enable();\n        newMap.addControl(new mapboxgl.ScaleControl({\n          maxWidth: 80,\n          unit: \"imperial\"\n        }), \"bottom-right\");\n        newMap.addControl(new mapboxgl.NavigationControl(), \"bottom-right\");\n        new mapboxgl.Marker(el).setLngLat([stateApp.selectedWell.longitude, stateApp.selectedWell.latitude]).addTo(newMap);\n        newMap.on(\"load\", function (e) {\n          setMap(newMap);\n        });\n      };\n\n      if (!map) {\n        initializeMap({\n          setMap,\n          mapEl\n        });\n      } else {\n        map.setLayoutProperty(\"wellpoints\", \"visibility\", \"visible\");\n        map.setLayoutProperty(\"welllines\", \"visibility\", \"visible\");\n        map.on(\"moveend\", ({\n          originalEvent\n        }) => {\n          if (originalEvent) {\n            map.fire(\"usermoveend\");\n          } else {\n            map.fire(\"flyend\");\n          }\n        });\n        setFlyVar1(true); // map.flyTo({\n        //     center: [\n        //       stateApp.selectedWell.longitude,\n        //       stateApp.selectedWell.latitude,\n        //     ],\n        //     // zoom: 16,\n        //     // speed: 0.4,\n        //     bearing: 540,\n        //     duration: 10000,\n        //   });\n        // map.on(\"click\", function (e) {\n        //   map.rotateTo.disable()\n        // });\n        //   map.on(\"flyend\", function (e) {\n        //     // map.flyTo({\n        //     //   center: [\n        //     //     stateApp.selectedWell.longitude,\n        //     //     stateApp.selectedWell.latitude,\n        //     //   ],\n        //     //   //zoom: 16,\n        //     //   //speed: 0.0001,\n        //     //   bearing: 180,\n        //     //   screenSpeed: 0.001,\n        //     // });\n        //     map.flyTo({\n        //       // center: [\n        //       //   stateApp.selectedWell.longitude,\n        //       //   stateApp.selectedWell.latitude,\n        //       // ],\n        //       // //zoom: 16,\n        //       // //speed: 0.0001,\n        //       bearing: 540,\n        //       //duration: 10000,\n        //       //essential: false,\n        //       // screenSpeed: 0.001,\n        //     });\n        // });\n      }\n    }\n  }, [map, mapStyles]);\n  let classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.MSWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.map,\n    ref: mapEl,\n    id: `cardDetailsMap${uid()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.footerLeftLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/M1LogoWhiteTransparent.png\",\n    alt: \"logo\",\n    width: \"75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/John Geliberte/Work/freelance/m1/src/components/WellCard/components/CardDetailsMap.js"],"names":["React","useContext","useState","useRef","useEffect","makeStyles","mapboxgl","AppContext","uid","useStyles","theme","MSWrapper","width","minHeight","overflow","map","height","display","footerLeftLogo","position","bottom","zIndex","left","CardDetailsMap","stateApp","setMap","mapStyles","setMapStyles","mapEl","flyVar1","setFlyVar1","accessToken","mapboxglAccessToken","req","Request","method","mode","headers","Accept","abortController","AbortController","signal","fetch","then","results","json","data","slice","cleanup","abort","getIndex","value","arr","prop","i","length","flyTo","center","selectedWell","longitude","latitude","zoom","speed","bearing","easing","t","Math","sin","PI","on","e","getBearing","getZoom","duration","SET_INITIAL_MAP_STYLE","index","initializeMap","setStateApp","id","current","newMap","Map","container","style","pitch","el","document","createElement","backgroundImage","scrollZoom","enable","dragPan","dragRotate","keyboard","doubleClickZoom","disable","boxZoom","touchZoomRotate","addControl","ScaleControl","maxWidth","unit","NavigationControl","Marker","setLngLat","addTo","setLayoutProperty","originalEvent","fire","classes"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport uid from \"uid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  MSWrapper: {\r\n    width: \"100%\",\r\n    minHeight: \"419.556px !important\",\r\n    overflow: \"hidden !important\",\r\n  },\r\n  map: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"hidden !important\",\r\n    \"& canvas\": {\r\n      height: \"100% !important\",\r\n    },\r\n    \"& .mapboxgl-canvas-container\": {\r\n      width: \"100% !important\",\r\n      height: \"100% !important\",\r\n    },\r\n    \"& a.mapboxgl-ctrl-logo, .mapboxgl-ctrl.mapboxgl-ctrl-attrib\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  footerLeftLogo: {\r\n    position: \"absolute\",\r\n    bottom: \"5px\",\r\n    zIndex: \"1\",\r\n    left: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function CardDetailsMap() {\r\n  const [stateApp] = useContext(AppContext);\r\n  const [map, setMap] = useState(null);\r\n  const [mapStyles, setMapStyles] = useState([]);\r\n  const mapEl = useRef(null);\r\n  const [flyVar1, setFlyVar1] = useState([null]);\r\n  mapboxgl.accessToken = stateApp.mapboxglAccessToken;\r\n\r\n  useEffect(() => {\r\n    const req = new Request(\r\n      \"https://api.mapbox.com/styles/v1/m1neral?access_token=sk.eyJ1IjoibTFuZXJhbCIsImEiOiJjazdkbGg1YXAwMjVqM2VwanZzbm95Z2dvIn0.cdoQNZU42xxbybyGxlBNkw\",\r\n      {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    fetch(req, { signal: signal })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setMapStyles(data.slice(0, 5));\r\n      });\r\n\r\n    //clean up\r\n    return function cleanup() {\r\n      abortController.abort();\r\n    };\r\n  }, []);\r\n\r\n  function getIndex(value, arr, prop) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i][prop] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1; //to handle the case where the value doesn't exist\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (flyVar1 && flyVar1 === true) {\r\n      map.flyTo({\r\n        center: [\r\n          stateApp.selectedWell.longitude,\r\n          stateApp.selectedWell.latitude,\r\n        ],\r\n        zoom: 16,\r\n        speed: 0.4,\r\n        bearing: -10,\r\n        //duration: 10000,\r\n        easing: function (t) {\r\n          return Math.sin((t * Math.PI) / 2);\r\n        },\r\n      });\r\n\r\n      setFlyVar1(false);\r\n\r\n      map.on(\"moveend\", function (e) {\r\n        if (\r\n          map.getBearing() === -10 &&\r\n          map.getZoom() === 16\r\n          // && map.getCenter()===[\r\n          //                       stateApp.selectedWell.longitude,\r\n          //                       stateApp.selectedWell.latitude,\r\n          //                     ]\r\n        ) {\r\n          map.flyTo({\r\n            center: [\r\n              stateApp.selectedWell.longitude,\r\n              stateApp.selectedWell.latitude,\r\n            ],\r\n            zoom: 16,\r\n            //speed: 0.4,\r\n            bearing: 540,\r\n            duration: 100000,\r\n            easing: function (t) {\r\n              return Math.sin((t * Math.PI) / 2);\r\n            },\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [flyVar1]);\r\n\r\n  useEffect(() => {\r\n    if (mapStyles.length > 0) {\r\n      const SET_INITIAL_MAP_STYLE = \"Satellite\";\r\n      var index = getIndex(SET_INITIAL_MAP_STYLE, mapStyles, \"name\");\r\n\r\n      const initializeMap = ({ setMap, mapEl, setStateApp }) => {\r\n        let id = mapEl.current.id;\r\n\r\n        const newMap = new mapboxgl.Map({\r\n          container: `${id}`,\r\n          style: \"mapbox://styles/m1neral/\" + mapStyles[index].id,\r\n          center: [\r\n            stateApp.selectedWell.longitude,\r\n            stateApp.selectedWell.latitude,\r\n          ],\r\n          zoom: 5,\r\n          pitch: 70,\r\n          bearing: 20,\r\n        });\r\n\r\n        var el = document.createElement(\"div\");\r\n        el.style.backgroundImage = \"url(icons/favicon-inverted.png)\";\r\n        el.style.width = \"28px\";\r\n        el.style.height = \"64px\";\r\n\r\n        /// optimized interactions w/ map\r\n        newMap.scrollZoom.enable();\r\n        newMap.dragPan.enable();\r\n        newMap.dragRotate.enable();\r\n        newMap.keyboard.enable();\r\n        newMap.doubleClickZoom.disable();\r\n        newMap.boxZoom.enable();\r\n        newMap.touchZoomRotate.enable();\r\n\r\n        newMap.addControl(\r\n          new mapboxgl.ScaleControl({\r\n            maxWidth: 80,\r\n            unit: \"imperial\",\r\n          }),\r\n          \"bottom-right\"\r\n        );\r\n\r\n        newMap.addControl(new mapboxgl.NavigationControl(), \"bottom-right\");\r\n\r\n        new mapboxgl.Marker(el)\r\n          .setLngLat([\r\n            stateApp.selectedWell.longitude,\r\n            stateApp.selectedWell.latitude,\r\n          ])\r\n          .addTo(newMap);\r\n\r\n        newMap.on(\"load\", function (e) {\r\n          setMap(newMap);\r\n        });\r\n      };\r\n\r\n      if (!map) {\r\n        initializeMap({ setMap, mapEl });\r\n      } else {\r\n        map.setLayoutProperty(\"wellpoints\", \"visibility\", \"visible\");\r\n        map.setLayoutProperty(\"welllines\", \"visibility\", \"visible\");\r\n\r\n        map.on(\"moveend\", ({ originalEvent }) => {\r\n          if (originalEvent) {\r\n            map.fire(\"usermoveend\");\r\n          } else {\r\n            map.fire(\"flyend\");\r\n          }\r\n        });\r\n\r\n        setFlyVar1(true);\r\n\r\n        // map.flyTo({\r\n        //     center: [\r\n        //       stateApp.selectedWell.longitude,\r\n        //       stateApp.selectedWell.latitude,\r\n        //     ],\r\n        //     // zoom: 16,\r\n        //     // speed: 0.4,\r\n        //     bearing: 540,\r\n        //     duration: 10000,\r\n        //   });\r\n\r\n        // map.on(\"click\", function (e) {\r\n        //   map.rotateTo.disable()\r\n        // });\r\n\r\n        //   map.on(\"flyend\", function (e) {\r\n        //     // map.flyTo({\r\n        //     //   center: [\r\n        //     //     stateApp.selectedWell.longitude,\r\n        //     //     stateApp.selectedWell.latitude,\r\n        //     //   ],\r\n        //     //   //zoom: 16,\r\n        //     //   //speed: 0.0001,\r\n        //     //   bearing: 180,\r\n        //     //   screenSpeed: 0.001,\r\n        //     // });\r\n        //     map.flyTo({\r\n        //       // center: [\r\n        //       //   stateApp.selectedWell.longitude,\r\n        //       //   stateApp.selectedWell.latitude,\r\n        //       // ],\r\n        //       // //zoom: 16,\r\n        //       // //speed: 0.0001,\r\n        //       bearing: 540,\r\n        //       //duration: 10000,\r\n        //       //essential: false,\r\n        //       // screenSpeed: 0.001,\r\n        //     });\r\n        // });\r\n      }\r\n    }\r\n  }, [map, mapStyles]);\r\n\r\n  let classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.MSWrapper}>\r\n      <div className={classes.map} ref={mapEl} id={`cardDetailsMap${uid()}`}>\r\n        <div className={classes.footerLeftLogo}>\r\n          <img src=\"icons/M1LogoWhiteTransparent.png\" alt=\"logo\" width=\"75\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}